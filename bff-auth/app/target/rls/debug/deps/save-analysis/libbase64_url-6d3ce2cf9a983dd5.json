{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8","program":"/Users/moriokawataru/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","base64_url","--edition=2018","/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=6d3ce2cf9a983dd5","-C","extra-filename=-6d3ce2cf9a983dd5","--out-dir","/Users/moriokawataru/Docker/webauthn-project/bff/target/rls/debug/deps","-L","dependency=/Users/moriokawataru/Docker/webauthn-project/bff/target/rls/debug/deps","--extern","base64=/Users/moriokawataru/Docker/webauthn-project/bff/target/rls/debug/deps/libbase64-e0cd1293255a607f.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/moriokawataru/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/moriokawataru/Docker/webauthn-project/bff/target/rls/debug/deps/libbase64_url-6d3ce2cf9a983dd5.rmeta"},"prelude":{"crate_id":{"name":"base64_url","disambiguator":[8050884360235761828,12336368847788876939]},"crate_root":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src","external_crates":[{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[7138156953393190069,11167026927698897809]}},{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[11939350525270529775,5037047709352975340]}},{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[7424844044863599670,8838585625468081887]}},{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[4100565041195182675,5566087110101365955]}},{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/lib.rs","num":5,"id":{"name":"base64","disambiguator":[7651482661559370526,4605688159504484375]}},{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/lib.rs","num":6,"id":{"name":"std","disambiguator":[17709530074661319104,12336107577347767734]}},{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/lib.rs","num":7,"id":{"name":"libc","disambiguator":[12006298212829472042,4483643569962591785]}},{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[16083605182766867675,18153965418074129170]}},{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/lib.rs","num":9,"id":{"name":"cfg_if","disambiguator":[13622714777497736699,12208407265214949534]}},{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/lib.rs","num":10,"id":{"name":"hashbrown","disambiguator":[7290380455030431949,16719885876051447607]}},{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/lib.rs","num":11,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[447808001145654106,10581376888684971677]}},{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[13533970680996139336,18250961867226035502]}},{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[212669238320550075,14725093603103672492]}},{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[17611450619260455171,13049759995292817799]}},{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[2915321326152136006,11103866167427651478]}},{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/lib.rs","num":16,"id":{"name":"panic_unwind","disambiguator":[16327418871979137000,16753155218778980611]}}],"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/lib.rs","byte_start":0,"byte_end":1633,"line_start":1,"line_end":66,"column_start":1,"column_end":21}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/lib.rs","byte_start":1572,"byte_end":1573,"line_start":63,"line_end":63,"column_start":17,"column_end":18},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/lib.rs","byte_start":1591,"byte_end":1592,"line_start":64,"line_end":64,"column_start":17,"column_end":18},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/lib.rs","byte_start":1610,"byte_end":1611,"line_start":65,"line_end":65,"column_start":17,"column_end":18},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/lib.rs","byte_start":1631,"byte_end":1632,"line_start":66,"line_end":66,"column_start":19,"column_end":20},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/lib.rs","byte_start":0,"byte_end":1633,"line_start":1,"line_end":66,"column_start":1,"column_end":21},"name":"","qualname":"::","value":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":20},{"krate":0,"index":42},{"krate":0,"index":61},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84}],"decl_id":null,"docs":"# Base64 URL","sig":null,"attributes":[{"value":"*\n# Base64 URL\n\nBase64 encode, decode, escape and unescape for URL applications.\n\n## Examples\n\nEncode data to a Base64-URL string.\n\n```rust\nextern crate base64_url;\n\nassert_eq!(\"SGVsbG8sIHdvcmxkIQ\", base64_url::encode(\"Hello, world!\"));\n```\n\nDecode a Base64-URL string to data.\n\n```rust\nextern crate base64_url;\n\nassert_eq!(b\"Hello, world!\", base64_url::decode(\"SGVsbG8sIHdvcmxkIQ\").unwrap().as_slice());\n```\n\nEscape a Base64 string to a Base64-URL string. The conversion is not concerning with Base64 decoding. You need to make sure the input string is a correct Base64 string by yourself.\n\n```rust\nextern crate base64_url;\n\nassert_eq!(\"SGVsbG8sIHdvcmxkIQ\", base64_url::escape(\"SGVsbG8sIHdvcmxkIQ==\"));\n```\n\nUnescape a Base64-URL string to a Base64-URL string. The conversion is not concerning with Base64 decoding. You need to make sure the input string is a correct Base64-URL string by yourself.\n\n```rust\nextern crate base64_url;\n\nassert_eq!(\"SGVsbG8sIHdvcmxkIQ==\", base64_url::unescape(\"SGVsbG8sIHdvcmxkIQ\"));\n```\n\nBesides, you can also use other `encode_*`, `decode_*`, `escape_*`, `unescape_*` associated functions to deal with more specific cases. For example,\n\n```rust\nextern crate base64_url;\n\nlet hash = &[1, 2, 3, 4, 5, 6, 7, 8, 9];\nlet mut url = String::from(\"https://example.com/?hash=\");\n\nassert_eq!(\"AQIDBAUGBwgJ\", base64_url::encode_to_string(hash, &mut url));\nassert_eq!(\"https://example.com/?hash=AQIDBAUGBwgJ\", url);\n```\n*/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/lib.rs","byte_start":0,"byte_end":1445,"line_start":1,"line_end":51,"column_start":1,"column_end":3}},{"value":"no_std","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/lib.rs","byte_start":1447,"byte_end":1457,"line_start":53,"line_end":53,"column_start":1,"column_end":11}}]},{"kind":"Function","id":{"krate":0,"index":8},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/decode.rs","byte_start":1721,"byte_end":1727,"line_start":5,"line_end":5,"column_start":8,"column_end":14},"name":"decode","qualname":"::decode::decode","value":"pub fn decode<T: ?Sized + AsRef<[u8]>>(&T)\n-> Result<Vec<u8>, base64::DecodeError>","parent":null,"children":[],"decl_id":null,"docs":" Decode a Base64-URL string to data.\n","sig":null,"attributes":[{"value":"/ Decode a Base64-URL string to data.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/decode.rs","byte_start":1664,"byte_end":1703,"line_start":3,"line_end":3,"column_start":1,"column_end":40}},{"value":"inline","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/decode.rs","byte_start":1704,"byte_end":1713,"line_start":4,"line_end":4,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":10},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/decode.rs","byte_start":2041,"byte_end":2054,"line_start":11,"line_end":11,"column_start":8,"column_end":21},"name":"decode_to_vec","qualname":"::decode::decode_to_vec","value":"pub fn decode_to_vec<'a, T: ?Sized + AsRef<[u8]>>(&T, &'a mut Vec<u8>)\n-> Result<&'a [u8], base64::DecodeError>","parent":null,"children":[],"decl_id":null,"docs":" Decode a Base64-URL string to data and directly store into a mutable `Vec<u8>` reference by concatenating them and return the slice of the decoded data.\n","sig":null,"attributes":[{"value":"/ Decode a Base64-URL string to data and directly store into a mutable `Vec<u8>` reference by concatenating them and return the slice of the decoded data.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/decode.rs","byte_start":1867,"byte_end":2023,"line_start":9,"line_end":9,"column_start":1,"column_end":157}},{"value":"inline","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/decode.rs","byte_start":2024,"byte_end":2033,"line_start":10,"line_end":10,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":13},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/decode.rs","byte_start":2747,"byte_end":2762,"line_start":38,"line_end":38,"column_start":8,"column_end":23},"name":"decode_to_slice","qualname":"::decode::decode_to_slice","value":"pub fn decode_to_slice<'a, T: ?Sized + AsRef<[u8]>>(&T, &'a mut [u8])\n-> Result<&'a [u8], base64::DecodeError>","parent":null,"children":[],"decl_id":null,"docs":" Decode a Base64-URL string to data into a slice and return the slice with a valid length.\n","sig":null,"attributes":[{"value":"/ Decode a Base64-URL string to data into a slice and return the slice with a valid length.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/decode.rs","byte_start":2636,"byte_end":2729,"line_start":36,"line_end":36,"column_start":1,"column_end":94}},{"value":"inline","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/decode.rs","byte_start":2730,"byte_end":2739,"line_start":37,"line_end":37,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":16},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/decode.rs","byte_start":3203,"byte_end":3225,"line_start":50,"line_end":50,"column_start":8,"column_end":30},"name":"decode_and_push_to_vec","qualname":"::decode::decode_and_push_to_vec","value":"pub fn decode_and_push_to_vec<T: ?Sized + AsRef<[u8]>>(&T, Vec<u8>)\n-> Result<Vec<u8>, base64::DecodeError>","parent":null,"children":[],"decl_id":null,"docs":" Decode a Base64-URL string to data and directly store into a Vec instance by concatenating them.\n","sig":null,"attributes":[{"value":"deprecated(since = \"1.4.0\", note =\n             \"Please use the `decode_to_vec` function instead\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/decode.rs","byte_start":2996,"byte_end":3084,"line_start":47,"line_end":47,"column_start":1,"column_end":89}},{"value":"/ Decode a Base64-URL string to data and directly store into a Vec instance by concatenating them.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/decode.rs","byte_start":3085,"byte_end":3185,"line_start":48,"line_end":48,"column_start":1,"column_end":101}},{"value":"inline","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/decode.rs","byte_start":3186,"byte_end":3195,"line_start":49,"line_end":49,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":18},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/decode.rs","byte_start":3601,"byte_end":3627,"line_start":61,"line_end":61,"column_start":8,"column_end":34},"name":"decode_and_push_to_vec_mut","qualname":"::decode::decode_and_push_to_vec_mut","value":"pub fn decode_and_push_to_vec_mut<T: ?Sized + AsRef<[u8]>>(&T, &mut Vec<u8>)\n-> Result<(), base64::DecodeError>","parent":null,"children":[],"decl_id":null,"docs":" Decode a Base64-URL string to data and directly store into a mutable Vec reference by concatenating them.\n","sig":null,"attributes":[{"value":"deprecated(since = \"1.4.0\", note =\n             \"Please use the `decode_to_vec` function instead\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/decode.rs","byte_start":3395,"byte_end":3483,"line_start":59,"line_end":59,"column_start":1,"column_end":89}},{"value":"/ Decode a Base64-URL string to data and directly store into a mutable Vec reference by concatenating them.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/decode.rs","byte_start":3484,"byte_end":3593,"line_start":60,"line_end":60,"column_start":1,"column_end":110}}]},{"kind":"Function","id":{"krate":0,"index":24},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/encode.rs","byte_start":3941,"byte_end":3947,"line_start":8,"line_end":8,"column_start":8,"column_end":14},"name":"encode","qualname":"::encode::encode","value":"pub fn encode<T: ?Sized + AsRef<[u8]>>(&T) -> String","parent":null,"children":[],"decl_id":null,"docs":" Encode data to a Base64-URL string.\n","sig":null,"attributes":[{"value":"/ Encode data to a Base64-URL string.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/encode.rs","byte_start":3884,"byte_end":3923,"line_start":6,"line_end":6,"column_start":1,"column_end":40}},{"value":"inline","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/encode.rs","byte_start":3924,"byte_end":3933,"line_start":7,"line_end":7,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":26},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/encode.rs","byte_start":4269,"byte_end":4285,"line_start":14,"line_end":14,"column_start":8,"column_end":24},"name":"encode_to_string","qualname":"::encode::encode_to_string","value":"pub fn encode_to_string<'a, T: ?Sized + AsRef<[u8]>>(&T, &'a mut String)\n-> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Encode data to a Base64-URL string and directly store to a mutable `String` reference by concatenating them and return the slice of the Base64-URL string. It is usually for generating a URL.\n","sig":null,"attributes":[{"value":"/ Encode data to a Base64-URL string and directly store to a mutable `String` reference by concatenating them and return the slice of the Base64-URL string. It is usually for generating a URL.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/encode.rs","byte_start":4057,"byte_end":4251,"line_start":12,"line_end":12,"column_start":1,"column_end":195}},{"value":"inline","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/encode.rs","byte_start":4252,"byte_end":4261,"line_start":13,"line_end":13,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":29},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/encode.rs","byte_start":4696,"byte_end":4709,"line_start":22,"line_end":22,"column_start":8,"column_end":21},"name":"encode_to_vec","qualname":"::encode::encode_to_vec","value":"pub fn encode_to_vec<'a, T: ?Sized + AsRef<[u8]>>(&T, &'a mut Vec<u8>)\n-> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" Encode data to Base64-URL data and directly store to a mutable `Vec<u8>` reference by concatenating them and return the slice of the Base64-URL data. It is usually for generating a URL.\n","sig":null,"attributes":[{"value":"/ Encode data to Base64-URL data and directly store to a mutable `Vec<u8>` reference by concatenating them and return the slice of the Base64-URL data. It is usually for generating a URL.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/encode.rs","byte_start":4489,"byte_end":4678,"line_start":20,"line_end":20,"column_start":1,"column_end":190}},{"value":"inline","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/encode.rs","byte_start":4679,"byte_end":4688,"line_start":21,"line_end":21,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":32},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/encode.rs","byte_start":5333,"byte_end":5348,"line_start":46,"line_end":46,"column_start":8,"column_end":23},"name":"encode_to_slice","qualname":"::encode::encode_to_slice","value":"pub fn encode_to_slice<'a, T: ?Sized + AsRef<[u8]>>(&T, &'a mut [u8])\n-> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" Encode data to a Base64-URL string to a slice and return the slice with a valid length.\n","sig":null,"attributes":[{"value":"/ Encode data to a Base64-URL string to a slice and return the slice with a valid length.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/encode.rs","byte_start":5224,"byte_end":5315,"line_start":44,"line_end":44,"column_start":1,"column_end":92}},{"value":"inline","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/encode.rs","byte_start":5316,"byte_end":5325,"line_start":45,"line_end":45,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":35},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/encode.rs","byte_start":5726,"byte_end":5751,"line_start":55,"line_end":55,"column_start":8,"column_end":33},"name":"encode_and_store_to_slice","qualname":"::encode::encode_and_store_to_slice","value":"pub fn encode_and_store_to_slice<T: ?Sized + AsRef<[u8]>>(&T, &mut [u8])\n-> usize","parent":null,"children":[],"decl_id":null,"docs":" Encode data to a Base64-URL string into a slice and return the valid length.\n","sig":null,"attributes":[{"value":"deprecated(since = \"1.4.0\", note =\n             \"Please use the `encode_to_slice` function instead\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/encode.rs","byte_start":5537,"byte_end":5627,"line_start":52,"line_end":52,"column_start":1,"column_end":91}},{"value":"/ Encode data to a Base64-URL string into a slice and return the valid length.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/encode.rs","byte_start":5628,"byte_end":5708,"line_start":53,"line_end":53,"column_start":1,"column_end":81}},{"value":"inline","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/encode.rs","byte_start":5709,"byte_end":5718,"line_start":54,"line_end":54,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":37},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/encode.rs","byte_start":6111,"byte_end":6136,"line_start":62,"line_end":62,"column_start":8,"column_end":33},"name":"encode_and_push_to_string","qualname":"::encode::encode_and_push_to_string","value":"pub fn encode_and_push_to_string<T: ?Sized + AsRef<[u8]>,\n                                 S: Into<String>>(&T, S) -> String","parent":null,"children":[],"decl_id":null,"docs":" Encode data to a Base64-URL string and directly store into a String instance by concatenating them. It is usually for generating a URL.\n","sig":null,"attributes":[{"value":"deprecated(since = \"1.4.0\", note =\n             \"Please use the `encode_to_string` function instead\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/encode.rs","byte_start":5862,"byte_end":5953,"line_start":59,"line_end":59,"column_start":1,"column_end":92}},{"value":"/ Encode data to a Base64-URL string and directly store into a String instance by concatenating them. It is usually for generating a URL.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/encode.rs","byte_start":5954,"byte_end":6093,"line_start":60,"line_end":60,"column_start":1,"column_end":140}},{"value":"inline","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/encode.rs","byte_start":6094,"byte_end":6103,"line_start":61,"line_end":61,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":40},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/encode.rs","byte_start":6566,"byte_end":6595,"line_start":75,"line_end":75,"column_start":8,"column_end":37},"name":"encode_and_push_to_string_mut","qualname":"::encode::encode_and_push_to_string_mut","value":"pub fn encode_and_push_to_string_mut<T: ?Sized + AsRef<[u8]>>(&T, &mut String)","parent":null,"children":[],"decl_id":null,"docs":" Encode data to a Base64-URL string and directly store into a mutable String reference by concatenating them. It is usually for generating a URL.\n","sig":null,"attributes":[{"value":"deprecated(since = \"1.4.0\", note =\n             \"Please use the `encode_to_string` function instead\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/encode.rs","byte_start":6318,"byte_end":6409,"line_start":73,"line_end":73,"column_start":1,"column_end":92}},{"value":"/ Encode data to a Base64-URL string and directly store into a mutable String reference by concatenating them. It is usually for generating a URL.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/encode.rs","byte_start":6410,"byte_end":6558,"line_start":74,"line_end":74,"column_start":1,"column_end":149}}]},{"kind":"Function","id":{"krate":0,"index":47},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/escape.rs","byte_start":7028,"byte_end":7034,"line_start":9,"line_end":9,"column_start":8,"column_end":14},"name":"escape","qualname":"::escape::escape","value":"pub fn escape<S: ?Sized + AsRef<str>>(&S) -> Cow<, str>","parent":null,"children":[],"decl_id":null,"docs":" Escape a Base64 string to a Base64-URL string. The conversion is not concerning with Base64 decoding. You need to make sure the input string is a correct Base64 string by yourself.\n","sig":null,"attributes":[{"value":"/ Escape a Base64 string to a Base64-URL string. The conversion is not concerning with Base64 decoding. You need to make sure the input string is a correct Base64 string by yourself.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/escape.rs","byte_start":6826,"byte_end":7010,"line_start":7,"line_end":7,"column_start":1,"column_end":185}},{"value":"inline","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/escape.rs","byte_start":7011,"byte_end":7020,"line_start":8,"line_end":8,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":49},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/escape.rs","byte_start":7667,"byte_end":7682,"line_start":28,"line_end":28,"column_start":8,"column_end":23},"name":"escape_u8_slice","qualname":"::escape::escape_u8_slice","value":"pub fn escape_u8_slice<S: ?Sized + AsRef<[u8]>>(&S) -> Cow<, [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Escape Base64 data to Base64-URL data. The conversion is not concerning with Base64 decoding. You need to make sure the input Base64 data is correct by yourself.\n","sig":null,"attributes":[{"value":"/ Escape Base64 data to Base64-URL data. The conversion is not concerning with Base64 decoding. You need to make sure the input Base64 data is correct by yourself.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/escape.rs","byte_start":7484,"byte_end":7649,"line_start":26,"line_end":26,"column_start":1,"column_end":166}},{"value":"inline","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/escape.rs","byte_start":7650,"byte_end":7659,"line_start":27,"line_end":27,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":51},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/escape.rs","byte_start":9218,"byte_end":9233,"line_start":100,"line_end":100,"column_start":8,"column_end":23},"name":"escape_in_place","qualname":"::escape::escape_in_place","value":"pub fn escape_in_place(&mut String) -> &str","parent":null,"children":[],"decl_id":null,"docs":" In-place escape a Base64 string to a Base64-URL string. The conversion is not concerning with Base64 decoding. You need to make sure the input string is a correct Base64 string by yourself.\n","sig":null,"attributes":[{"value":"/ In-place escape a Base64 string to a Base64-URL string. The conversion is not concerning with Base64 decoding. You need to make sure the input string is a correct Base64 string by yourself.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/escape.rs","byte_start":9007,"byte_end":9200,"line_start":98,"line_end":98,"column_start":1,"column_end":194}},{"value":"inline","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/escape.rs","byte_start":9201,"byte_end":9210,"line_start":99,"line_end":99,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":52},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/escape.rs","byte_start":9554,"byte_end":9573,"line_start":110,"line_end":110,"column_start":8,"column_end":27},"name":"escape_vec_in_place","qualname":"::escape::escape_vec_in_place","value":"pub fn escape_vec_in_place(&mut Vec<u8>) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" In-place escape Base64 data to Base64-URL data. The conversion is not concerning with Base64 decoding. You need to make sure the input Base64 data is correct by yourself.\n","sig":null,"attributes":[{"value":"/ In-place escape Base64 data to Base64-URL data. The conversion is not concerning with Base64 decoding. You need to make sure the input Base64 data is correct by yourself.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/escape.rs","byte_start":9362,"byte_end":9536,"line_start":108,"line_end":108,"column_start":1,"column_end":175}},{"value":"inline","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/escape.rs","byte_start":9537,"byte_end":9546,"line_start":109,"line_end":109,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":53},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/escape.rs","byte_start":9949,"byte_end":9973,"line_start":122,"line_end":122,"column_start":8,"column_end":32},"name":"escape_u8_slice_in_place","qualname":"::escape::escape_u8_slice_in_place","value":"pub fn escape_u8_slice_in_place<S: ?Sized + AsMut<[u8]>>(&mut S) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" In-place escape Base64 data to Base64-URL data. The conversion is not concerning with Base64 decoding. You need to make sure the input Base64 data is correct by yourself.\n","sig":null,"attributes":[{"value":"/ In-place escape Base64 data to Base64-URL data. The conversion is not concerning with Base64 decoding. You need to make sure the input Base64 data is correct by yourself.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/escape.rs","byte_start":9757,"byte_end":9931,"line_start":120,"line_end":120,"column_start":1,"column_end":175}},{"value":"inline","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/escape.rs","byte_start":9932,"byte_end":9941,"line_start":121,"line_end":121,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":55},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/escape.rs","byte_start":10681,"byte_end":10694,"line_start":145,"line_end":145,"column_start":8,"column_end":21},"name":"unsafe_escape","qualname":"::escape::unsafe_escape","value":"pub fn unsafe_escape<S: Into<String>>(S) -> String","parent":null,"children":[],"decl_id":null,"docs":" Escape a Base64 string to a Base64-URL string. It is unsafe because the conversion is not concerning with Base64 decoding. You need to make sure the input string is a correct Base64 string by yourself.\n","sig":null,"attributes":[{"value":"deprecated(since = \"1.3.0\", note =\n             \"Please use the `escape_in_place` function instead\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/escape.rs","byte_start":10367,"byte_end":10457,"line_start":142,"line_end":142,"column_start":1,"column_end":91}},{"value":"/ Escape a Base64 string to a Base64-URL string. It is unsafe because the conversion is not concerning with Base64 decoding. You need to make sure the input string is a correct Base64 string by yourself.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/escape.rs","byte_start":10458,"byte_end":10663,"line_start":143,"line_end":143,"column_start":1,"column_end":206}},{"value":"inline","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/escape.rs","byte_start":10664,"byte_end":10673,"line_start":144,"line_end":144,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":57},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/escape.rs","byte_start":11144,"byte_end":11164,"line_start":156,"line_end":156,"column_start":8,"column_end":28},"name":"unsafe_escape_string","qualname":"::escape::unsafe_escape_string","value":"pub fn unsafe_escape_string(&mut String)","parent":null,"children":[],"decl_id":null,"docs":" In-place escape a Base64 string to a Base64-URL string. It is unsafe because the conversion is not concerning with Base64 decoding. You need to make sure the input string is a correct Base64 string by yourself.\n","sig":null,"attributes":[{"value":"deprecated(since = \"1.3.0\", note =\n             \"Please use the `escape_in_place` function instead\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/escape.rs","byte_start":10821,"byte_end":10911,"line_start":153,"line_end":153,"column_start":1,"column_end":91}},{"value":"/ In-place escape a Base64 string to a Base64-URL string. It is unsafe because the conversion is not concerning with Base64 decoding. You need to make sure the input string is a correct Base64 string by yourself.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/escape.rs","byte_start":10912,"byte_end":11126,"line_start":154,"line_end":154,"column_start":1,"column_end":215}},{"value":"inline","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/escape.rs","byte_start":11127,"byte_end":11136,"line_start":155,"line_end":155,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":58},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/escape.rs","byte_start":11528,"byte_end":11545,"line_start":163,"line_end":163,"column_start":8,"column_end":25},"name":"unsafe_escape_vec","qualname":"::escape::unsafe_escape_vec","value":"pub fn unsafe_escape_vec(&mut Vec<u8>)","parent":null,"children":[],"decl_id":null,"docs":" In-place escape Base64 data to Base64-URL data. It is unsafe because the conversion is not concerning with Base64 decoding. You need to make sure the input Base64 data is correct by yourself.\n","sig":null,"attributes":[{"value":"deprecated(since = \"1.3.0\", note =\n             \"Please use the `escape_vec_in_place` function instead\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/escape.rs","byte_start":11220,"byte_end":11314,"line_start":160,"line_end":160,"column_start":1,"column_end":95}},{"value":"/ In-place escape Base64 data to Base64-URL data. It is unsafe because the conversion is not concerning with Base64 decoding. You need to make sure the input Base64 data is correct by yourself.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/escape.rs","byte_start":11315,"byte_end":11510,"line_start":161,"line_end":161,"column_start":1,"column_end":196}},{"value":"inline","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/escape.rs","byte_start":11511,"byte_end":11520,"line_start":162,"line_end":162,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":59},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/escape.rs","byte_start":11919,"byte_end":11941,"line_start":170,"line_end":170,"column_start":8,"column_end":30},"name":"unsafe_escape_u8_slice","qualname":"::escape::unsafe_escape_u8_slice","value":"pub fn unsafe_escape_u8_slice<S: ?Sized + AsMut<[u8]>>(&mut S) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" In-place escape Base64 data to Base64-URL data. It is unsafe because the conversion is not concerning with Base64 decoding. You need to make sure the input Base64 data is correct by yourself.\n","sig":null,"attributes":[{"value":"deprecated(since = \"1.3.0\", note =\n             \"Please use the `escape_u8_slice_in_place` function instead\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/escape.rs","byte_start":11606,"byte_end":11705,"line_start":167,"line_end":167,"column_start":1,"column_end":100}},{"value":"/ In-place escape Base64 data to Base64-URL data. It is unsafe because the conversion is not concerning with Base64 decoding. You need to make sure the input Base64 data is correct by yourself.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/escape.rs","byte_start":11706,"byte_end":11901,"line_start":168,"line_end":168,"column_start":1,"column_end":196}},{"value":"inline","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/escape.rs","byte_start":11902,"byte_end":11911,"line_start":169,"line_end":169,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":67},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/unescape.rs","byte_start":12394,"byte_end":12402,"line_start":10,"line_end":10,"column_start":8,"column_end":16},"name":"unescape","qualname":"::unescape::unescape","value":"pub fn unescape<S: ?Sized + AsRef<str>>(&S) -> Cow<, str>","parent":null,"children":[],"decl_id":null,"docs":" Unescape a Base64-URL string to a Base64 string. The conversion is not concerning with Base64 decoding. You need to make sure the input string is a correct Base64-URL string by yourself.\n","sig":null,"attributes":[{"value":"/ Unescape a Base64-URL string to a Base64 string. The conversion is not concerning with Base64 decoding. You need to make sure the input string is a correct Base64-URL string by yourself.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/unescape.rs","byte_start":12186,"byte_end":12376,"line_start":8,"line_end":8,"column_start":1,"column_end":191}},{"value":"inline","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/unescape.rs","byte_start":12377,"byte_end":12386,"line_start":9,"line_end":9,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":69},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/unescape.rs","byte_start":13017,"byte_end":13034,"line_start":28,"line_end":28,"column_start":8,"column_end":25},"name":"unescape_u8_slice","qualname":"::unescape::unescape_u8_slice","value":"pub fn unescape_u8_slice<S: ?Sized + AsRef<[u8]>>(&S) -> Cow<, [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Unescape Base64-URL data to Base64 data. The conversion is not concerning with Base64 decoding. You need to make sure the input Base64-URL data is correct by yourself.\n","sig":null,"attributes":[{"value":"/ Unescape Base64-URL data to Base64 data. The conversion is not concerning with Base64 decoding. You need to make sure the input Base64-URL data is correct by yourself.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/unescape.rs","byte_start":12838,"byte_end":13009,"line_start":27,"line_end":27,"column_start":1,"column_end":172}}]},{"kind":"Function","id":{"krate":0,"index":71},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/unescape.rs","byte_start":15615,"byte_end":15632,"line_start":138,"line_end":138,"column_start":8,"column_end":25},"name":"unescape_in_place","qualname":"::unescape::unescape_in_place","value":"pub fn unescape_in_place(&mut String) -> &str","parent":null,"children":[],"decl_id":null,"docs":" In-place unescape a Base64-URL string to a Base64 string. It is unsafe because the conversion is not concerning with Base64 decoding. You need to make sure the input string is a correct Base64-URL string by yourself.\n","sig":null,"attributes":[{"value":"/ In-place unescape a Base64-URL string to a Base64 string. It is unsafe because the conversion is not concerning with Base64 decoding. You need to make sure the input string is a correct Base64-URL string by yourself.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/unescape.rs","byte_start":15377,"byte_end":15597,"line_start":136,"line_end":136,"column_start":1,"column_end":221}},{"value":"inline","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/unescape.rs","byte_start":15598,"byte_end":15607,"line_start":137,"line_end":137,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":72},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/unescape.rs","byte_start":15994,"byte_end":16015,"line_start":148,"line_end":148,"column_start":8,"column_end":29},"name":"unescape_vec_in_place","qualname":"::unescape::unescape_vec_in_place","value":"pub fn unescape_vec_in_place(&mut Vec<u8>) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" In-place unescape Base64-URL data to Base64 data. It is unsafe because the conversion is not concerning with Base64 decoding. You need to make sure the input Base64-URL data is correct by yourself.\n","sig":null,"attributes":[{"value":"/ In-place unescape Base64-URL data to Base64 data. It is unsafe because the conversion is not concerning with Base64 decoding. You need to make sure the input Base64-URL data is correct by yourself.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/unescape.rs","byte_start":15775,"byte_end":15976,"line_start":146,"line_end":146,"column_start":1,"column_end":202}},{"value":"inline","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/unescape.rs","byte_start":15977,"byte_end":15986,"line_start":147,"line_end":147,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":73},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/unescape.rs","byte_start":16486,"byte_end":16516,"line_start":160,"line_end":160,"column_start":8,"column_end":38},"name":"unescape_u8_slice_try_in_place","qualname":"::unescape::unescape_u8_slice_try_in_place","value":"pub fn unescape_u8_slice_try_in_place<S: ?Sized + AsMut<[u8]>>(&mut S)\n-> Cow<, [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Unescape Base64-URL data to Base64 data and try to do it in-place. It is unsafe because the conversion is not concerning with Base64 decoding. You need to make sure the input Base64-URL data is correct by yourself.\n","sig":null,"attributes":[{"value":"/ Unescape Base64-URL data to Base64 data and try to do it in-place. It is unsafe because the conversion is not concerning with Base64 decoding. You need to make sure the input Base64-URL data is correct by yourself.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/unescape.rs","byte_start":16250,"byte_end":16468,"line_start":158,"line_end":158,"column_start":1,"column_end":219}},{"value":"inline","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/unescape.rs","byte_start":16469,"byte_end":16478,"line_start":159,"line_end":159,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":75},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/unescape.rs","byte_start":17383,"byte_end":17398,"line_start":189,"line_end":189,"column_start":8,"column_end":23},"name":"unsafe_unescape","qualname":"::unescape::unsafe_unescape","value":"pub fn unsafe_unescape<S: Into<String>>(S) -> String","parent":null,"children":[],"decl_id":null,"docs":" Unescape a Base64-URL string to a Base64 string. It is unsafe because the conversion is not concerning with Base64 decoding. You need to make sure the input string is a correct Base64-URL string by yourself.\n","sig":null,"attributes":[{"value":"deprecated(since = \"1.3.0\", note =\n             \"Please use the `unescape_in_place` function instead\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/unescape.rs","byte_start":17061,"byte_end":17153,"line_start":186,"line_end":186,"column_start":1,"column_end":93}},{"value":"/ Unescape a Base64-URL string to a Base64 string. It is unsafe because the conversion is not concerning with Base64 decoding. You need to make sure the input string is a correct Base64-URL string by yourself.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/unescape.rs","byte_start":17154,"byte_end":17365,"line_start":187,"line_end":187,"column_start":1,"column_end":212}},{"value":"inline","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/unescape.rs","byte_start":17366,"byte_end":17375,"line_start":188,"line_end":188,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":77},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/unescape.rs","byte_start":17878,"byte_end":17900,"line_start":200,"line_end":200,"column_start":8,"column_end":30},"name":"unsafe_unescape_string","qualname":"::unescape::unsafe_unescape_string","value":"pub fn unsafe_unescape_string(&mut String)","parent":null,"children":[],"decl_id":null,"docs":" In-place unescape a Base64-URL string to a Base64 string. It is unsafe because the conversion is not concerning with Base64 decoding. You need to make sure the input string is a correct Base64-URL string by yourself.\n","sig":null,"attributes":[{"value":"deprecated(since = \"1.3.0\", note =\n             \"Please use the `unescape_in_place` function instead\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/unescape.rs","byte_start":17547,"byte_end":17639,"line_start":197,"line_end":197,"column_start":1,"column_end":93}},{"value":"/ In-place unescape a Base64-URL string to a Base64 string. It is unsafe because the conversion is not concerning with Base64 decoding. You need to make sure the input string is a correct Base64-URL string by yourself.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/unescape.rs","byte_start":17640,"byte_end":17860,"line_start":198,"line_end":198,"column_start":1,"column_end":221}},{"value":"inline","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/unescape.rs","byte_start":17861,"byte_end":17870,"line_start":199,"line_end":199,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":78},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/unescape.rs","byte_start":18272,"byte_end":18291,"line_start":206,"line_end":206,"column_start":8,"column_end":27},"name":"unsafe_unescape_vec","qualname":"::unescape::unsafe_unescape_vec","value":"pub fn unsafe_unescape_vec(&mut Vec<u8>)","parent":null,"children":[],"decl_id":null,"docs":" In-place unescape Base64-URL data to Base64 data. It is unsafe because the conversion is not concerning with Base64 decoding. You need to make sure the input Base64-URL data is correct by yourself.\n","sig":null,"attributes":[{"value":"deprecated(since = \"1.3.0\", note =\n             \"Please use the `unescape_vec_in_place` function instead\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/unescape.rs","byte_start":17966,"byte_end":18062,"line_start":204,"line_end":204,"column_start":1,"column_end":97}},{"value":"/ In-place unescape Base64-URL data to Base64 data. It is unsafe because the conversion is not concerning with Base64 decoding. You need to make sure the input Base64-URL data is correct by yourself.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/unescape.rs","byte_start":18063,"byte_end":18264,"line_start":205,"line_end":205,"column_start":1,"column_end":202}}]},{"kind":"Function","id":{"krate":0,"index":79},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/unescape.rs","byte_start":18678,"byte_end":18702,"line_start":215,"line_end":215,"column_start":8,"column_end":32},"name":"unsafe_unescape_u8_slice","qualname":"::unescape::unsafe_unescape_u8_slice","value":"pub fn unsafe_unescape_u8_slice<S: ?Sized + AsMut<[u8]>>(&mut S)\n-> Cow<, [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Unescape Base64-URL data to Base64 data. It is unsafe because the conversion is not concerning with Base64 decoding. You need to make sure the input Base64-URL data is correct by yourself.\n","sig":null,"attributes":[{"value":"deprecated(since = \"1.3.0\", note =\n             \"Please use the `unescape_u8_slice_try_in_place` function instead\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/unescape.rs","byte_start":18362,"byte_end":18477,"line_start":210,"line_end":213,"column_start":1,"column_end":3}},{"value":"/ Unescape Base64-URL data to Base64 data. It is unsafe because the conversion is not concerning with Base64 decoding. You need to make sure the input Base64-URL data is correct by yourself.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-url-1.4.8/src/unescape.rs","byte_start":18478,"byte_end":18670,"line_start":214,"line_end":214,"column_start":1,"column_end":193}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}