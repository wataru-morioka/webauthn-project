{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24","program":"/Users/moriokawataru/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","tokio","--edition=2018","/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"blocking\"","--cfg","feature=\"default\"","--cfg","feature=\"dns\"","--cfg","feature=\"fnv\"","--cfg","feature=\"fs\"","--cfg","feature=\"full\"","--cfg","feature=\"futures-core\"","--cfg","feature=\"io-driver\"","--cfg","feature=\"io-std\"","--cfg","feature=\"io-util\"","--cfg","feature=\"iovec\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"libc\"","--cfg","feature=\"macros\"","--cfg","feature=\"memchr\"","--cfg","feature=\"mio\"","--cfg","feature=\"mio-named-pipes\"","--cfg","feature=\"mio-uds\"","--cfg","feature=\"net\"","--cfg","feature=\"num_cpus\"","--cfg","feature=\"process\"","--cfg","feature=\"rt-core\"","--cfg","feature=\"rt-threaded\"","--cfg","feature=\"rt-util\"","--cfg","feature=\"signal\"","--cfg","feature=\"signal-hook-registry\"","--cfg","feature=\"slab\"","--cfg","feature=\"stream\"","--cfg","feature=\"sync\"","--cfg","feature=\"tcp\"","--cfg","feature=\"time\"","--cfg","feature=\"tokio-macros\"","--cfg","feature=\"udp\"","--cfg","feature=\"uds\"","--cfg","feature=\"winapi\"","-C","metadata=84cd3ef1cff8be3c","-C","extra-filename=-84cd3ef1cff8be3c","--out-dir","/Users/moriokawataru/Docker/webauthn-project/bff/app/target/rls/debug/deps","-L","dependency=/Users/moriokawataru/Docker/webauthn-project/bff/app/target/rls/debug/deps","--extern","bytes=/Users/moriokawataru/Docker/webauthn-project/bff/app/target/rls/debug/deps/libbytes-c36bc7ce34c0b3c6.rmeta","--extern","fnv=/Users/moriokawataru/Docker/webauthn-project/bff/app/target/rls/debug/deps/libfnv-f088146bf4edd47d.rmeta","--extern","futures_core=/Users/moriokawataru/Docker/webauthn-project/bff/app/target/rls/debug/deps/libfutures_core-69d302339365ae2e.rmeta","--extern","iovec=/Users/moriokawataru/Docker/webauthn-project/bff/app/target/rls/debug/deps/libiovec-f4686dfdae589d97.rmeta","--extern","lazy_static=/Users/moriokawataru/Docker/webauthn-project/bff/app/target/rls/debug/deps/liblazy_static-3013e27ea0e8d63b.rmeta","--extern","libc=/Users/moriokawataru/Docker/webauthn-project/bff/app/target/rls/debug/deps/liblibc-06e701947c33d963.rmeta","--extern","memchr=/Users/moriokawataru/Docker/webauthn-project/bff/app/target/rls/debug/deps/libmemchr-c3559f155ef56816.rmeta","--extern","mio=/Users/moriokawataru/Docker/webauthn-project/bff/app/target/rls/debug/deps/libmio-a323ba957f1f1d22.rmeta","--extern","mio_uds=/Users/moriokawataru/Docker/webauthn-project/bff/app/target/rls/debug/deps/libmio_uds-8fc04025d930bcbc.rmeta","--extern","num_cpus=/Users/moriokawataru/Docker/webauthn-project/bff/app/target/rls/debug/deps/libnum_cpus-d01ee9b85444d7be.rmeta","--extern","pin_project_lite=/Users/moriokawataru/Docker/webauthn-project/bff/app/target/rls/debug/deps/libpin_project_lite-e595e72a09c06819.rmeta","--extern","signal_hook_registry=/Users/moriokawataru/Docker/webauthn-project/bff/app/target/rls/debug/deps/libsignal_hook_registry-0b02c5d095781a2c.rmeta","--extern","slab=/Users/moriokawataru/Docker/webauthn-project/bff/app/target/rls/debug/deps/libslab-da2c2c35e0e782db.rmeta","--extern","tokio_macros=/Users/moriokawataru/Docker/webauthn-project/bff/app/target/rls/debug/deps/libtokio_macros-05a35b4530b03ae5.dylib","--cap-lints","allow","--error-format=json","--sysroot","/Users/moriokawataru/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/moriokawataru/Docker/webauthn-project/bff/app/target/rls/debug/deps/libtokio-84cd3ef1cff8be3c.rmeta"},"prelude":{"crate_id":{"name":"tokio","disambiguator":[3604328422173894371,12187695472132260103]},"crate_root":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src","external_crates":[{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17709530074661319104,12336107577347767734]}},{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/linked_list.rs","num":2,"id":{"name":"core","disambiguator":[7138156953393190069,11167026927698897809]}},{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11939350525270529775,5037047709352975340]}},{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7424844044863599670,8838585625468081887]}},{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4100565041195182675,5566087110101365955]}},{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12006298212829472042,4483643569962591785]}},{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16083605182766867675,18153965418074129170]}},{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[13622714777497736699,12208407265214949534]}},{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7290380455030431949,16719885876051447607]}},{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[447808001145654106,10581376888684971677]}},{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[13533970680996139336,18250961867226035502]}},{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[212669238320550075,14725093603103672492]}},{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[17611450619260455171,13049759995292817799]}},{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[2915321326152136006,11103866167427651478]}},{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[16327418871979137000,16753155218778980611]}},{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/try_join.rs","num":16,"id":{"name":"pin_project_lite","disambiguator":[4324067052459111737,15225610137299128607]}},{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","num":17,"id":{"name":"bytes","disambiguator":[9738740042405921887,7858898654737813135]}},{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/registry.rs","num":18,"id":{"name":"lazy_static","disambiguator":[7064805322198458713,2909941048741555990]}},{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","num":19,"id":{"name":"futures_core","disambiguator":[4409585143253549639,16923367645728171535]}},{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/driver/platform.rs","num":20,"id":{"name":"mio","disambiguator":[17189868854283577286,8943937122566462926]}},{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/driver/platform.rs","num":21,"id":{"name":"net2","disambiguator":[9954640438928987115,11397906625124724925]}},{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/ucred.rs","num":22,"id":{"name":"libc","disambiguator":[14711841281186999345,13106876178528687847]}},{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/driver/platform.rs","num":23,"id":{"name":"cfg_if","disambiguator":[1433003070283897555,6227693107394180396]}},{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","num":24,"id":{"name":"iovec","disambiguator":[8314859318158626900,17173983533184429799]}},{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/blocking/pool.rs","num":25,"id":{"name":"slab","disambiguator":[12601011045495676881,6851769991716251381]}},{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/driver/platform.rs","num":26,"id":{"name":"log","disambiguator":[18344815950302463374,5973240319160950168]}},{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","num":27,"id":{"name":"mio_uds","disambiguator":[5547105263439500249,16747010872640723938]}},{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","num":28,"id":{"name":"fnv","disambiguator":[2266817397131765997,1876337431931549651]}},{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","num":29,"id":{"name":"tokio_macros","disambiguator":[17262743971208578318,2557425733925441874]}},{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/read_until.rs","num":30,"id":{"name":"memchr","disambiguator":[9450436992443161499,5871232452916872055]}},{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/mod.rs","num":31,"id":{"name":"num_cpus","disambiguator":[13206912526124811246,17296548299137038742]}},{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","num":32,"id":{"name":"signal_hook_registry","disambiguator":[4731947239319428706,18089687411438125555]}}],"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":0,"byte_end":15866,"line_start":1,"line_end":437,"column_start":1,"column_end":27}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":93},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/support.rs","byte_start":30907,"byte_end":30917,"line_start":2,"line_end":2,"column_start":29,"column_end":39},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":118},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/support.rs","byte_start":30919,"byte_end":30926,"line_start":2,"line_end":2,"column_start":41,"column_end":48},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":824},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/support.rs","byte_start":30954,"byte_end":30966,"line_start":3,"line_end":3,"column_start":26,"column_end":38},"alias_span":null,"name":"thread_rng_n","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":2,"index":9053},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/support.rs","byte_start":30992,"byte_end":30998,"line_start":6,"line_end":6,"column_start":22,"column_end":28},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":2,"index":31876},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/support.rs","byte_start":31018,"byte_end":31021,"line_start":7,"line_end":7,"column_start":19,"column_end":22},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":2,"index":34449},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/support.rs","byte_start":31042,"byte_end":31046,"line_start":8,"line_end":8,"column_start":20,"column_end":24},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":913},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":8550430,"byte_end":8550442,"line_start":28,"line_end":28,"column_start":29,"column_end":41},"alias_span":null,"name":"canonicalize","value":"","parent":{"krate":0,"index":906}},{"kind":"Use","ref_id":{"krate":0,"index":923},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":8550487,"byte_end":8550497,"line_start":31,"line_end":31,"column_start":27,"column_end":37},"alias_span":null,"name":"create_dir","value":"","parent":{"krate":0,"index":906}},{"kind":"Use","ref_id":{"krate":0,"index":933},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":8550550,"byte_end":8550564,"line_start":34,"line_end":34,"column_start":31,"column_end":45},"alias_span":null,"name":"create_dir_all","value":"","parent":{"krate":0,"index":906}},{"kind":"Use","ref_id":{"krate":0,"index":1311},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":8550611,"byte_end":8550621,"line_start":37,"line_end":37,"column_start":28,"column_end":38},"alias_span":null,"name":"DirBuilder","value":"","parent":{"krate":0,"index":906}},{"kind":"Use","ref_id":{"krate":0,"index":977},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":8550654,"byte_end":8550658,"line_start":40,"line_end":40,"column_start":21,"column_end":25},"alias_span":null,"name":"File","value":"","parent":{"krate":0,"index":906}},{"kind":"Use","ref_id":{"krate":0,"index":1058},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":8550701,"byte_end":8550710,"line_start":43,"line_end":43,"column_start":26,"column_end":35},"alias_span":null,"name":"hard_link","value":"","parent":{"krate":0,"index":906}},{"kind":"Use","ref_id":{"krate":0,"index":1070},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":8550751,"byte_end":8550759,"line_start":46,"line_end":46,"column_start":25,"column_end":33},"alias_span":null,"name":"metadata","value":"","parent":{"krate":0,"index":906}},{"kind":"Use","ref_id":{"krate":0,"index":1339},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":8550808,"byte_end":8550819,"line_start":49,"line_end":49,"column_start":29,"column_end":40},"alias_span":null,"name":"OpenOptions","value":"","parent":{"krate":0,"index":906}},{"kind":"Use","ref_id":{"krate":0,"index":1107},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/mod.rs","byte_start":8600896,"byte_end":8600903,"line_start":4,"line_end":4,"column_start":24,"column_end":31},"alias_span":null,"name":"symlink","value":"","parent":{"krate":0,"index":1102}},{"kind":"Use","ref_id":{"krate":0,"index":1117},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/mod.rs","byte_start":8600960,"byte_end":8600974,"line_start":7,"line_end":7,"column_start":33,"column_end":47},"alias_span":null,"name":"OpenOptionsExt","value":"","parent":{"krate":0,"index":1102}},{"kind":"Use","ref_id":{"krate":0,"index":1126},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/mod.rs","byte_start":8601029,"byte_end":8601042,"line_start":10,"line_end":10,"column_start":32,"column_end":45},"alias_span":null,"name":"DirBuilderExt","value":"","parent":{"krate":0,"index":1102}},{"kind":"Use","ref_id":{"krate":0,"index":1136},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":8550865,"byte_end":8550869,"line_start":54,"line_end":54,"column_start":21,"column_end":25},"alias_span":null,"name":"read","value":"","parent":{"krate":0,"index":906}},{"kind":"Use","ref_id":{"krate":0,"index":1160},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":8550911,"byte_end":8550919,"line_start":57,"line_end":57,"column_start":26,"column_end":34},"alias_span":null,"name":"read_dir","value":"","parent":{"krate":0,"index":906}},{"kind":"Use","ref_id":{"krate":0,"index":1360},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":8550921,"byte_end":8550929,"line_start":57,"line_end":57,"column_start":36,"column_end":44},"alias_span":null,"name":"DirEntry","value":"","parent":{"krate":0,"index":906}},{"kind":"Use","ref_id":{"krate":0,"index":1346},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":8550931,"byte_end":8550938,"line_start":57,"line_end":57,"column_start":46,"column_end":53},"alias_span":null,"name":"ReadDir","value":"","parent":{"krate":0,"index":906}},{"kind":"Use","ref_id":{"krate":0,"index":1199},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":8550982,"byte_end":8550991,"line_start":60,"line_end":60,"column_start":26,"column_end":35},"alias_span":null,"name":"read_link","value":"","parent":{"krate":0,"index":906}},{"kind":"Use","ref_id":{"krate":0,"index":1210},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":8551044,"byte_end":8551058,"line_start":63,"line_end":63,"column_start":31,"column_end":45},"alias_span":null,"name":"read_to_string","value":"","parent":{"krate":0,"index":906}},{"kind":"Use","ref_id":{"krate":0,"index":1220},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":8551103,"byte_end":8551113,"line_start":66,"line_end":66,"column_start":27,"column_end":37},"alias_span":null,"name":"remove_dir","value":"","parent":{"krate":0,"index":906}},{"kind":"Use","ref_id":{"krate":0,"index":1230},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":8551166,"byte_end":8551180,"line_start":69,"line_end":69,"column_start":31,"column_end":45},"alias_span":null,"name":"remove_dir_all","value":"","parent":{"krate":0,"index":906}},{"kind":"Use","ref_id":{"krate":0,"index":1240},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":8551227,"byte_end":8551238,"line_start":72,"line_end":72,"column_start":28,"column_end":39},"alias_span":null,"name":"remove_file","value":"","parent":{"krate":0,"index":906}},{"kind":"Use","ref_id":{"krate":0,"index":1250},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":8551275,"byte_end":8551281,"line_start":75,"line_end":75,"column_start":23,"column_end":29},"alias_span":null,"name":"rename","value":"","parent":{"krate":0,"index":906}},{"kind":"Use","ref_id":{"krate":0,"index":1262},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":8551336,"byte_end":8551351,"line_start":78,"line_end":78,"column_start":32,"column_end":47},"alias_span":null,"name":"set_permissions","value":"","parent":{"krate":0,"index":906}},{"kind":"Use","ref_id":{"krate":0,"index":1273},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":8551408,"byte_end":8551424,"line_start":81,"line_end":81,"column_start":33,"column_end":49},"alias_span":null,"name":"symlink_metadata","value":"","parent":{"krate":0,"index":906}},{"kind":"Use","ref_id":{"krate":0,"index":1284},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":8551459,"byte_end":8551464,"line_start":84,"line_end":84,"column_start":22,"column_end":27},"alias_span":null,"name":"write","value":"","parent":{"krate":0,"index":906}},{"kind":"Use","ref_id":{"krate":0,"index":1294},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":8551497,"byte_end":8551501,"line_start":87,"line_end":87,"column_start":21,"column_end":25},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":906}},{"kind":"Use","ref_id":{"krate":0,"index":93},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/mod.rs","byte_start":31150,"byte_end":31160,"line_start":6,"line_end":6,"column_start":22,"column_end":32},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":83}},{"kind":"Use","ref_id":{"krate":0,"index":1365},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/mod.rs","byte_start":31162,"byte_end":31171,"line_start":6,"line_end":6,"column_start":34,"column_end":43},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":83}},{"kind":"Use","ref_id":{"krate":0,"index":118},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/mod.rs","byte_start":31205,"byte_end":31212,"line_start":9,"line_end":9,"column_start":18,"column_end":25},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":83}},{"kind":"Use","ref_id":{"krate":0,"index":186},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":45170,"byte_end":45182,"line_start":188,"line_end":188,"column_start":31,"column_end":43},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":215},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":45227,"byte_end":45236,"line_start":191,"line_end":191,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":246},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":45281,"byte_end":45290,"line_start":194,"line_end":194,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":271},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":45337,"byte_end":45347,"line_start":197,"line_end":197,"column_start":28,"column_end":38},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":1,"index":2659},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":45499,"byte_end":45504,"line_start":201,"line_end":201,"column_start":19,"column_end":24},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":1,"index":7115},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":45506,"byte_end":45515,"line_start":201,"line_end":201,"column_start":26,"column_end":35},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":1,"index":2657},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":45517,"byte_end":45523,"line_start":201,"line_end":201,"column_start":37,"column_end":43},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":1,"index":7192},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":45525,"byte_end":45533,"line_start":201,"line_end":201,"column_start":45,"column_end":53},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1742},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":45630,"byte_end":45641,"line_start":207,"line_end":207,"column_start":27,"column_end":38},"alias_span":null,"name":"PollEvented","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1746},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":45692,"byte_end":45704,"line_start":210,"line_end":210,"column_start":27,"column_end":39},"alias_span":null,"name":"Registration","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1798},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":45760,"byte_end":45766,"line_start":215,"line_end":215,"column_start":22,"column_end":28},"alias_span":null,"name":"stderr","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1799},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":45768,"byte_end":45774,"line_start":215,"line_end":215,"column_start":30,"column_end":36},"alias_span":null,"name":"Stderr","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1803},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":45813,"byte_end":45818,"line_start":218,"line_end":218,"column_start":21,"column_end":26},"alias_span":null,"name":"stdin","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1804},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":45820,"byte_end":45825,"line_start":218,"line_end":218,"column_start":28,"column_end":33},"alias_span":null,"name":"Stdin","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1808},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":45866,"byte_end":45872,"line_start":221,"line_end":221,"column_start":22,"column_end":28},"alias_span":null,"name":"stdout","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1809},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":45874,"byte_end":45880,"line_start":221,"line_end":221,"column_start":30,"column_end":36},"alias_span":null,"name":"Stdout","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1931},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":45936,"byte_end":45941,"line_start":226,"line_end":226,"column_start":21,"column_end":26},"alias_span":null,"name":"split","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1925},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":45943,"byte_end":45951,"line_start":226,"line_end":226,"column_start":28,"column_end":36},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1928},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":45953,"byte_end":45962,"line_start":226,"line_end":226,"column_start":38,"column_end":47},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1933},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":46015,"byte_end":46019,"line_start":229,"line_end":229,"column_start":25,"column_end":29},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2773},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":46075,"byte_end":46079,"line_start":233,"line_end":233,"column_start":9,"column_end":13},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2325},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":46081,"byte_end":46087,"line_start":233,"line_end":233,"column_start":15,"column_end":21},"alias_span":null,"name":"duplex","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2795},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":46089,"byte_end":46094,"line_start":233,"line_end":233,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":3035},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":46096,"byte_end":46102,"line_start":233,"line_end":233,"column_start":30,"column_end":36},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":3050},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":46104,"byte_end":46108,"line_start":233,"line_end":233,"column_start":38,"column_end":42},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2667},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":46110,"byte_end":46125,"line_start":233,"line_end":233,"column_start":44,"column_end":59},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2675},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":46127,"byte_end":46139,"line_start":233,"line_end":233,"column_start":61,"column_end":73},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2012},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":46141,"byte_end":46153,"line_start":233,"line_end":233,"column_start":75,"column_end":87},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2727},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":46155,"byte_end":46168,"line_start":233,"line_end":233,"column_start":89,"column_end":102},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":12606},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":46178,"byte_end":46187,"line_start":234,"line_end":234,"column_start":9,"column_end":18},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":12579},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":46189,"byte_end":46198,"line_start":234,"line_end":234,"column_start":20,"column_end":29},"alias_span":null,"name":"BufStream","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":12529},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":46200,"byte_end":46209,"line_start":234,"line_end":234,"column_start":31,"column_end":40},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2804},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":46211,"byte_end":46223,"line_start":234,"line_end":234,"column_start":42,"column_end":54},"alias_span":null,"name":"DuplexStream","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2777},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":46225,"byte_end":46229,"line_start":234,"line_end":234,"column_start":56,"column_end":60},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2793},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":46231,"byte_end":46236,"line_start":234,"line_end":234,"column_start":62,"column_end":67},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":12441},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":46238,"byte_end":46243,"line_start":234,"line_end":234,"column_start":69,"column_end":74},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":3036},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":46245,"byte_end":46251,"line_start":234,"line_end":234,"column_start":76,"column_end":82},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":3048},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":46253,"byte_end":46257,"line_start":234,"line_end":234,"column_start":84,"column_end":88},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":11607},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":46259,"byte_end":46264,"line_start":234,"line_end":234,"column_start":90,"column_end":95},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":11478},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":46266,"byte_end":46270,"line_start":234,"line_end":234,"column_start":97,"column_end":101},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":3066},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":46321,"byte_end":46334,"line_start":238,"line_end":238,"column_start":24,"column_end":37},"alias_span":null,"name":"stream_reader","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":11560},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":46336,"byte_end":46348,"line_start":238,"line_end":238,"column_start":39,"column_end":51},"alias_span":null,"name":"StreamReader","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":3100},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":46374,"byte_end":46387,"line_start":239,"line_end":239,"column_start":24,"column_end":37},"alias_span":null,"name":"reader_stream","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":11518},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":46389,"byte_end":46401,"line_start":239,"line_end":239,"column_start":39,"column_end":51},"alias_span":null,"name":"ReaderStream","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":324},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/mod.rs","byte_start":72848,"byte_end":72861,"line_start":26,"line_end":26,"column_start":15,"column_end":28},"alias_span":null,"name":"ToSocketAddrs","value":"","parent":{"krate":0,"index":313}},{"kind":"Use","ref_id":{"krate":0,"index":3353},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/mod.rs","byte_start":72921,"byte_end":72932,"line_start":30,"line_end":30,"column_start":26,"column_end":37},"alias_span":null,"name":"lookup_host","value":"","parent":{"krate":0,"index":313}},{"kind":"Use","ref_id":{"krate":0,"index":3625},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/mod.rs","byte_start":8865636,"byte_end":8865644,"line_start":7,"line_end":7,"column_start":19,"column_end":27},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":3358}},{"kind":"Use","ref_id":{"krate":0,"index":3631},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/mod.rs","byte_start":8865674,"byte_end":8865682,"line_start":10,"line_end":10,"column_start":17,"column_end":25},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":3358}},{"kind":"Use","ref_id":{"krate":0,"index":3638},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/mod.rs","byte_start":8865684,"byte_end":8865693,"line_start":10,"line_end":10,"column_start":27,"column_end":36},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":3358}},{"kind":"Use","ref_id":{"krate":0,"index":3645},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/mod.rs","byte_start":8865736,"byte_end":8865749,"line_start":13,"line_end":13,"column_start":23,"column_end":36},"alias_span":null,"name":"OwnedReadHalf","value":"","parent":{"krate":0,"index":3358}},{"kind":"Use","ref_id":{"krate":0,"index":3649},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/mod.rs","byte_start":8865751,"byte_end":8865765,"line_start":13,"line_end":13,"column_start":38,"column_end":52},"alias_span":null,"name":"OwnedWriteHalf","value":"","parent":{"krate":0,"index":3358}},{"kind":"Use","ref_id":{"krate":0,"index":3654},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/mod.rs","byte_start":8865767,"byte_end":8865779,"line_start":13,"line_end":13,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3358}},{"kind":"Use","ref_id":{"krate":0,"index":3655},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/mod.rs","byte_start":8865767,"byte_end":8865779,"line_start":13,"line_end":13,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3515}},{"kind":"Use","ref_id":{"krate":0,"index":3623},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/mod.rs","byte_start":72992,"byte_end":73003,"line_start":35,"line_end":35,"column_start":28,"column_end":39},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":313}},{"kind":"Use","ref_id":{"krate":0,"index":3660},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/mod.rs","byte_start":73030,"byte_end":73039,"line_start":36,"line_end":36,"column_start":26,"column_end":35},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":313}},{"kind":"Use","ref_id":{"krate":0,"index":3798},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/mod.rs","byte_start":8925963,"byte_end":8925971,"line_start":7,"line_end":7,"column_start":17,"column_end":25},"alias_span":null,"name":"RecvHalf","value":"","parent":{"krate":0,"index":3662}},{"kind":"Use","ref_id":{"krate":0,"index":3803},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/mod.rs","byte_start":8925973,"byte_end":8925985,"line_start":7,"line_end":7,"column_start":27,"column_end":39},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3662}},{"kind":"Use","ref_id":{"krate":0,"index":3804},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/mod.rs","byte_start":8925973,"byte_end":8925985,"line_start":7,"line_end":7,"column_start":27,"column_end":39},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3788}},{"kind":"Use","ref_id":{"krate":0,"index":3793},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/mod.rs","byte_start":8925987,"byte_end":8925995,"line_start":7,"line_end":7,"column_start":41,"column_end":49},"alias_span":null,"name":"SendHalf","value":"","parent":{"krate":0,"index":3662}},{"kind":"Use","ref_id":{"krate":0,"index":3791},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/mod.rs","byte_start":73097,"byte_end":73106,"line_start":41,"line_end":41,"column_start":26,"column_end":35},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":313}},{"kind":"Use","ref_id":{"krate":0,"index":4194},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/mod.rs","byte_start":8948575,"byte_end":8948583,"line_start":7,"line_end":7,"column_start":17,"column_end":25},"alias_span":null,"name":"RecvHalf","value":"","parent":{"krate":0,"index":3810}},{"kind":"Use","ref_id":{"krate":0,"index":4201},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/mod.rs","byte_start":8948585,"byte_end":8948593,"line_start":7,"line_end":7,"column_start":27,"column_end":35},"alias_span":null,"name":"SendHalf","value":"","parent":{"krate":0,"index":3810}},{"kind":"Use","ref_id":{"krate":0,"index":4213},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/mod.rs","byte_start":8948618,"byte_end":8948631,"line_start":8,"line_end":8,"column_start":23,"column_end":36},"alias_span":null,"name":"OwnedRecvHalf","value":"","parent":{"krate":0,"index":3810}},{"kind":"Use","ref_id":{"krate":0,"index":4208},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/mod.rs","byte_start":8948633,"byte_end":8948646,"line_start":8,"line_end":8,"column_start":38,"column_end":51},"alias_span":null,"name":"OwnedSendHalf","value":"","parent":{"krate":0,"index":3810}},{"kind":"Use","ref_id":{"krate":0,"index":4217},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/mod.rs","byte_start":8948648,"byte_end":8948660,"line_start":8,"line_end":8,"column_start":53,"column_end":65},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3810}},{"kind":"Use","ref_id":{"krate":0,"index":4218},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/mod.rs","byte_start":8948648,"byte_end":8948660,"line_start":8,"line_end":8,"column_start":53,"column_end":65},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3968}},{"kind":"Use","ref_id":{"krate":0,"index":4223},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/mod.rs","byte_start":8948154,"byte_end":8948162,"line_start":6,"line_end":6,"column_start":19,"column_end":27},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":3809}},{"kind":"Use","ref_id":{"krate":0,"index":4231},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/mod.rs","byte_start":8948257,"byte_end":8948265,"line_start":12,"line_end":12,"column_start":17,"column_end":25},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":3809}},{"kind":"Use","ref_id":{"krate":0,"index":4238},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/mod.rs","byte_start":8948267,"byte_end":8948276,"line_start":12,"line_end":12,"column_start":27,"column_end":36},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":3809}},{"kind":"Use","ref_id":{"krate":0,"index":4245},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/mod.rs","byte_start":8948319,"byte_end":8948332,"line_start":15,"line_end":15,"column_start":23,"column_end":36},"alias_span":null,"name":"OwnedReadHalf","value":"","parent":{"krate":0,"index":3809}},{"kind":"Use","ref_id":{"krate":0,"index":4249},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/mod.rs","byte_start":8948334,"byte_end":8948348,"line_start":15,"line_end":15,"column_start":38,"column_end":52},"alias_span":null,"name":"OwnedWriteHalf","value":"","parent":{"krate":0,"index":3809}},{"kind":"Use","ref_id":{"krate":0,"index":4254},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/mod.rs","byte_start":8948350,"byte_end":8948362,"line_start":15,"line_end":15,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3809}},{"kind":"Use","ref_id":{"krate":0,"index":4255},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/mod.rs","byte_start":8948350,"byte_end":8948362,"line_start":15,"line_end":15,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":4101}},{"kind":"Use","ref_id":{"krate":0,"index":4262},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/mod.rs","byte_start":8948451,"byte_end":8948456,"line_start":21,"line_end":21,"column_start":16,"column_end":21},"alias_span":null,"name":"UCred","value":"","parent":{"krate":0,"index":3809}},{"kind":"Use","ref_id":{"krate":0,"index":4192},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/mod.rs","byte_start":73176,"byte_end":73188,"line_start":46,"line_end":46,"column_start":37,"column_end":49},"alias_span":null,"name":"UnixDatagram","value":"","parent":{"krate":0,"index":313}},{"kind":"Use","ref_id":{"krate":0,"index":4229},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/mod.rs","byte_start":73218,"byte_end":73230,"line_start":47,"line_end":47,"column_start":29,"column_end":41},"alias_span":null,"name":"UnixListener","value":"","parent":{"krate":0,"index":313}},{"kind":"Use","ref_id":{"krate":0,"index":4260},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/mod.rs","byte_start":73258,"byte_end":73268,"line_start":48,"line_end":48,"column_start":27,"column_end":37},"alias_span":null,"name":"UnixStream","value":"","parent":{"krate":0,"index":313}},{"kind":"Use","ref_id":{"krate":0,"index":177},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/prelude.rs","byte_start":106381,"byte_end":106383,"line_start":16,"line_end":16,"column_start":16,"column_end":18},"alias_span":null,"name":"io","value":"","parent":{"krate":0,"index":564}},{"kind":"Use","ref_id":{"krate":0,"index":186},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/prelude.rs","byte_start":106392,"byte_end":106404,"line_start":16,"line_end":16,"column_start":27,"column_end":39},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":564}},{"kind":"Use","ref_id":{"krate":0,"index":215},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/prelude.rs","byte_start":106406,"byte_end":106415,"line_start":16,"line_end":16,"column_start":41,"column_end":50},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":564}},{"kind":"Use","ref_id":{"krate":0,"index":271},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/prelude.rs","byte_start":106417,"byte_end":106427,"line_start":16,"line_end":16,"column_start":52,"column_end":62},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":564}},{"kind":"Use","ref_id":{"krate":0,"index":2667},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/prelude.rs","byte_start":106492,"byte_end":106507,"line_start":20,"line_end":20,"column_start":25,"column_end":40},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":564}},{"kind":"Use","ref_id":{"krate":0,"index":2675},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/prelude.rs","byte_start":106514,"byte_end":106526,"line_start":20,"line_end":20,"column_start":47,"column_end":59},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":564}},{"kind":"Use","ref_id":{"krate":0,"index":2012},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/prelude.rs","byte_start":106533,"byte_end":106545,"line_start":20,"line_end":20,"column_start":66,"column_end":78},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":564}},{"kind":"Use","ref_id":{"krate":0,"index":2727},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/prelude.rs","byte_start":106552,"byte_end":106565,"line_start":20,"line_end":20,"column_start":85,"column_end":98},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":564}},{"kind":"Use","ref_id":{"krate":0,"index":600},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":114096,"byte_end":114103,"line_start":209,"line_end":209,"column_start":24,"column_end":31},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":570}},{"kind":"Use","ref_id":{"krate":0,"index":5552},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":114188,"byte_end":114194,"line_start":215,"line_end":215,"column_start":24,"column_end":30},"alias_span":null,"name":"Handle","value":"","parent":{"krate":0,"index":570}},{"kind":"Use","ref_id":{"krate":0,"index":678},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":114196,"byte_end":114211,"line_start":215,"line_end":215,"column_start":32,"column_end":47},"alias_span":null,"name":"TryCurrentError","value":"","parent":{"krate":0,"index":570}},{"kind":"Use","ref_id":{"krate":0,"index":6045},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","byte_start":9209635,"byte_end":9209641,"line_start":47,"line_end":47,"column_start":17,"column_end":23},"alias_span":null,"name":"ctrl_c","value":"","parent":{"krate":0,"index":6040}},{"kind":"Use","ref_id":{"krate":0,"index":6300},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9246545,"byte_end":9246555,"line_start":18,"line_end":18,"column_start":18,"column_end":28},"alias_span":null,"name":"FromStream","value":"","parent":{"krate":0,"index":6222}},{"kind":"Use","ref_id":{"krate":0,"index":6392},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9246585,"byte_end":9246590,"line_start":21,"line_end":21,"column_start":17,"column_end":22},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":6222}},{"kind":"Use","ref_id":{"krate":0,"index":6832},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9246592,"byte_end":9246597,"line_start":21,"line_end":21,"column_start":24,"column_end":29},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":6222}},{"kind":"Use","ref_id":{"krate":0,"index":6493},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9246763,"byte_end":9246767,"line_start":36,"line_end":36,"column_start":16,"column_end":20},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":6222}},{"kind":"Use","ref_id":{"krate":0,"index":6839},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9246769,"byte_end":9246773,"line_start":36,"line_end":36,"column_start":22,"column_end":26},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":6222}},{"kind":"Use","ref_id":{"krate":0,"index":6583},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9246883,"byte_end":9246887,"line_start":48,"line_end":48,"column_start":16,"column_end":20},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":6222}},{"kind":"Use","ref_id":{"krate":0,"index":6853},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9246889,"byte_end":9246893,"line_start":48,"line_end":48,"column_start":22,"column_end":26},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":6222}},{"kind":"Use","ref_id":{"krate":0,"index":6606},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9246928,"byte_end":9246935,"line_start":51,"line_end":51,"column_start":19,"column_end":26},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":6222}},{"kind":"Use","ref_id":{"krate":0,"index":6859},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9246937,"byte_end":9246944,"line_start":51,"line_end":51,"column_start":28,"column_end":35},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":6222}},{"kind":"Use","ref_id":{"krate":0,"index":6866},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9246984,"byte_end":9246993,"line_start":54,"line_end":54,"column_start":21,"column_end":30},"alias_span":null,"name":"StreamMap","value":"","parent":{"krate":0,"index":6222}},{"kind":"Use","ref_id":{"krate":19,"index":68},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9247285,"byte_end":9247291,"line_start":77,"line_end":77,"column_start":23,"column_end":29},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":6222}},{"kind":"Use","ref_id":{"krate":0,"index":8300},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9365549,"byte_end":9365556,"line_start":433,"line_end":433,"column_start":23,"column_end":30},"alias_span":null,"name":"Barrier","value":"","parent":{"krate":0,"index":6911}},{"kind":"Use","ref_id":{"krate":0,"index":8312},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9365558,"byte_end":9365575,"line_start":433,"line_end":433,"column_start":32,"column_end":49},"alias_span":null,"name":"BarrierWaitResult","value":"","parent":{"krate":0,"index":6911}},{"kind":"Use","ref_id":{"krate":0,"index":7213},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9414045,"byte_end":9414052,"line_start":70,"line_end":70,"column_start":25,"column_end":32},"alias_span":null,"name":"channel","value":"","parent":{"krate":0,"index":7112}},{"kind":"Use","ref_id":{"krate":0,"index":7207},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9414054,"byte_end":9414062,"line_start":70,"line_end":70,"column_start":34,"column_end":42},"alias_span":null,"name":"Receiver","value":"","parent":{"krate":0,"index":7112}},{"kind":"Use","ref_id":{"krate":0,"index":7198},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9414064,"byte_end":9414070,"line_start":70,"line_end":70,"column_start":44,"column_end":50},"alias_span":null,"name":"Sender","value":"","parent":{"krate":0,"index":7112}},{"kind":"Use","ref_id":{"krate":0,"index":7485},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9414148,"byte_end":9414165,"line_start":77,"line_end":77,"column_start":27,"column_end":44},"alias_span":null,"name":"unbounded_channel","value":"","parent":{"krate":0,"index":7112}},{"kind":"Use","ref_id":{"krate":0,"index":7479},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9414167,"byte_end":9414184,"line_start":77,"line_end":77,"column_start":46,"column_end":63},"alias_span":null,"name":"UnboundedReceiver","value":"","parent":{"krate":0,"index":7112}},{"kind":"Use","ref_id":{"krate":0,"index":7470},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9414186,"byte_end":9414201,"line_start":77,"line_end":77,"column_start":65,"column_end":80},"alias_span":null,"name":"UnboundedSender","value":"","parent":{"krate":0,"index":7112}},{"kind":"Use","ref_id":{"krate":0,"index":7548},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9365800,"byte_end":9365805,"line_start":445,"line_end":445,"column_start":21,"column_end":26},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":6911}},{"kind":"Use","ref_id":{"krate":0,"index":7552},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9365807,"byte_end":9365817,"line_start":445,"line_end":445,"column_start":28,"column_end":38},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":6911}},{"kind":"Use","ref_id":{"krate":0,"index":8437},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9365819,"byte_end":9365831,"line_start":445,"line_end":445,"column_start":40,"column_end":52},"alias_span":null,"name":"TryLockError","value":"","parent":{"krate":0,"index":6911}},{"kind":"Use","ref_id":{"krate":0,"index":7556},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9365833,"byte_end":9365848,"line_start":445,"line_end":445,"column_start":54,"column_end":69},"alias_span":null,"name":"OwnedMutexGuard","value":"","parent":{"krate":0,"index":6911}},{"kind":"Use","ref_id":{"krate":0,"index":8442},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9365888,"byte_end":9365894,"line_start":448,"line_end":448,"column_start":21,"column_end":27},"alias_span":null,"name":"Notify","value":"","parent":{"krate":0,"index":6911}},{"kind":"Use","ref_id":{"krate":0,"index":8575},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9366031,"byte_end":9366040,"line_start":455,"line_end":455,"column_start":25,"column_end":34},"alias_span":null,"name":"Semaphore","value":"","parent":{"krate":0,"index":6911}},{"kind":"Use","ref_id":{"krate":0,"index":8579},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9366042,"byte_end":9366057,"line_start":455,"line_end":455,"column_start":36,"column_end":51},"alias_span":null,"name":"SemaphorePermit","value":"","parent":{"krate":0,"index":6911}},{"kind":"Use","ref_id":{"krate":0,"index":8586},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9366059,"byte_end":9366079,"line_start":455,"line_end":455,"column_start":53,"column_end":73},"alias_span":null,"name":"OwnedSemaphorePermit","value":"","parent":{"krate":0,"index":6911}},{"kind":"Use","ref_id":{"krate":0,"index":8596},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9366120,"byte_end":9366126,"line_start":458,"line_end":458,"column_start":22,"column_end":28},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":6911}},{"kind":"Use","ref_id":{"krate":0,"index":8067},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9366128,"byte_end":9366143,"line_start":458,"line_end":458,"column_start":30,"column_end":45},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":6911}},{"kind":"Use","ref_id":{"krate":0,"index":8094},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9366145,"byte_end":9366161,"line_start":458,"line_end":458,"column_start":47,"column_end":63},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":6911}},{"kind":"Use","ref_id":{"krate":0,"index":8659},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9647799,"byte_end":9647813,"line_start":219,"line_end":219,"column_start":23,"column_end":37},"alias_span":null,"name":"spawn_blocking","value":"","parent":{"krate":0,"index":8651}},{"kind":"Use","ref_id":{"krate":0,"index":8656},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9647865,"byte_end":9647879,"line_start":222,"line_end":222,"column_start":27,"column_end":41},"alias_span":null,"name":"block_in_place","value":"","parent":{"krate":0,"index":8651}},{"kind":"Use","ref_id":{"krate":0,"index":5281},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9647940,"byte_end":9647949,"line_start":227,"line_end":227,"column_start":36,"column_end":45},"alias_span":null,"name":"JoinError","value":"","parent":{"krate":0,"index":8651}},{"kind":"Use","ref_id":{"krate":0,"index":5283},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9647951,"byte_end":9647961,"line_start":227,"line_end":227,"column_start":47,"column_end":57},"alias_span":null,"name":"JoinHandle","value":"","parent":{"krate":0,"index":8651}},{"kind":"Use","ref_id":{"krate":0,"index":8678},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9647999,"byte_end":9648004,"line_start":230,"line_end":230,"column_start":20,"column_end":25},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":8651}},{"kind":"Use","ref_id":{"krate":0,"index":8680},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9648049,"byte_end":9648058,"line_start":233,"line_end":233,"column_start":24,"column_end":33},"alias_span":null,"name":"yield_now","value":"","parent":{"krate":0,"index":8651}},{"kind":"Use","ref_id":{"krate":0,"index":8840},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9648113,"byte_end":9648124,"line_start":238,"line_end":238,"column_start":21,"column_end":32},"alias_span":null,"name":"spawn_local","value":"","parent":{"krate":0,"index":8651}},{"kind":"Use","ref_id":{"krate":0,"index":8831},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9648126,"byte_end":9648134,"line_start":238,"line_end":238,"column_start":34,"column_end":42},"alias_span":null,"name":"LocalSet","value":"","parent":{"krate":0,"index":8651}},{"kind":"Use","ref_id":{"krate":0,"index":8783},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9648182,"byte_end":9648190,"line_start":241,"line_end":241,"column_start":25,"column_end":33},"alias_span":null,"name":"LocalKey","value":"","parent":{"krate":0,"index":8651}},{"kind":"Use","ref_id":{"krate":0,"index":8678},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":14601,"byte_end":14606,"line_start":390,"line_end":390,"column_start":19,"column_end":24},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9348},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9687299,"byte_end":9687309,"line_start":101,"line_end":101,"column_start":22,"column_end":32},"alias_span":null,"name":"DelayQueue","value":"","parent":{"krate":0,"index":8855}},{"kind":"Use","ref_id":{"krate":0,"index":8947},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9687339,"byte_end":9687348,"line_start":104,"line_end":104,"column_start":17,"column_end":26},"alias_span":null,"name":"delay_for","value":"","parent":{"krate":0,"index":8855}},{"kind":"Use","ref_id":{"krate":0,"index":8946},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9687350,"byte_end":9687361,"line_start":104,"line_end":104,"column_start":28,"column_end":39},"alias_span":null,"name":"delay_until","value":"","parent":{"krate":0,"index":8855}},{"kind":"Use","ref_id":{"krate":0,"index":9390},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9687363,"byte_end":9687368,"line_start":104,"line_end":104,"column_start":41,"column_end":46},"alias_span":null,"name":"Delay","value":"","parent":{"krate":0,"index":8855}},{"kind":"Use","ref_id":{"krate":0,"index":9449},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9687422,"byte_end":9687427,"line_start":109,"line_end":109,"column_start":16,"column_end":21},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":8855}},{"kind":"Use","ref_id":{"krate":0,"index":9469},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9687466,"byte_end":9687473,"line_start":112,"line_end":112,"column_start":24,"column_end":31},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":8855}},{"kind":"Use","ref_id":{"krate":0,"index":9207},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9687509,"byte_end":9687517,"line_start":115,"line_end":115,"column_start":20,"column_end":28},"alias_span":null,"name":"interval","value":"","parent":{"krate":0,"index":8855}},{"kind":"Use","ref_id":{"krate":0,"index":9208},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9687519,"byte_end":9687530,"line_start":115,"line_end":115,"column_start":30,"column_end":41},"alias_span":null,"name":"interval_at","value":"","parent":{"krate":0,"index":8855}},{"kind":"Use","ref_id":{"krate":0,"index":9492},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9687532,"byte_end":9687540,"line_start":115,"line_end":115,"column_start":43,"column_end":51},"alias_span":null,"name":"Interval","value":"","parent":{"krate":0,"index":8855}},{"kind":"Use","ref_id":{"krate":0,"index":9235},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9687590,"byte_end":9687597,"line_start":119,"line_end":119,"column_start":19,"column_end":26},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":8855}},{"kind":"Use","ref_id":{"krate":0,"index":9237},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9687599,"byte_end":9687609,"line_start":119,"line_end":119,"column_start":28,"column_end":38},"alias_span":null,"name":"timeout_at","value":"","parent":{"krate":0,"index":8855}},{"kind":"Use","ref_id":{"krate":0,"index":9497},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9687611,"byte_end":9687618,"line_start":119,"line_end":119,"column_start":40,"column_end":47},"alias_span":null,"name":"Elapsed","value":"","parent":{"krate":0,"index":8855}},{"kind":"Use","ref_id":{"krate":0,"index":9943},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9687620,"byte_end":9687627,"line_start":119,"line_end":119,"column_start":49,"column_end":56},"alias_span":null,"name":"Timeout","value":"","parent":{"krate":0,"index":8855}},{"kind":"Use","ref_id":{"krate":0,"index":9519},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9687686,"byte_end":9687694,"line_start":123,"line_end":123,"column_start":24,"column_end":32},"alias_span":null,"name":"throttle","value":"","parent":{"krate":0,"index":8855}},{"kind":"Use","ref_id":{"krate":0,"index":9895},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9687696,"byte_end":9687704,"line_start":123,"line_end":123,"column_start":34,"column_end":42},"alias_span":null,"name":"Throttle","value":"","parent":{"krate":0,"index":8855}},{"kind":"Use","ref_id":{"krate":2,"index":34319},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9687813,"byte_end":9687821,"line_start":133,"line_end":133,"column_start":20,"column_end":28},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":8855}},{"kind":"Use","ref_id":{"krate":0,"index":824},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/mod.rs","byte_start":180800,"byte_end":180812,"line_start":26,"line_end":26,"column_start":15,"column_end":27},"alias_span":null,"name":"thread_rng_n","value":"","parent":{"krate":0,"index":775}},{"kind":"Use","ref_id":{"krate":29,"index":45},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":14880,"byte_end":14911,"line_start":404,"line_end":404,"column_start":27,"column_end":58},"alias_span":null,"name":"select_priv_declare_output_enum","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":29,"index":39},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":15247,"byte_end":15260,"line_start":413,"line_end":413,"column_start":35,"column_end":48},"alias_span":null,"name":"main","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":29,"index":42},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":15367,"byte_end":15380,"line_start":416,"line_end":416,"column_start":35,"column_end":48},"alias_span":null,"name":"test","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":0,"byte_end":15866,"line_start":1,"line_end":437,"column_start":1,"column_end":27},"name":"","qualname":"::","value":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":906},{"krate":0,"index":83},{"krate":0,"index":177},{"krate":0,"index":313},{"krate":0,"index":378},{"krate":0,"index":514},{"krate":0,"index":564},{"krate":0,"index":4388},{"krate":0,"index":570},{"krate":0,"index":756},{"krate":0,"index":6040},{"krate":0,"index":6222},{"krate":0,"index":6911},{"krate":0,"index":8651},{"krate":0,"index":8652},{"krate":0,"index":8855},{"krate":0,"index":775},{"krate":0,"index":9883},{"krate":0,"index":9884},{"krate":0,"index":9885}],"decl_id":null,"docs":" A runtime for writing reliable, asynchronous, and slim applications.","sig":null,"attributes":[{"value":"allow(clippy :: cognitive_complexity, clippy :: large_enum_variant, clippy\n        :: needless_doctest_main, clippy :: match_like_matches_macro, clippy\n        :: stable_sort_primitive)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":56,"byte_end":241,"line_start":2,"line_end":8,"column_start":1,"column_end":3}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":242,"byte_end":348,"line_start":9,"line_end":14,"column_start":1,"column_end":3}},{"value":"/ A runtime for writing reliable, asynchronous, and slim applications.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":557,"byte_end":629,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":630,"byte_end":633,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Tokio is an event-driven, non-blocking I/O platform for writing asynchronous","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":634,"byte_end":714,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ applications with the Rust programming language. At a high level, it","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":715,"byte_end":787,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ provides a few major components:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":788,"byte_end":824,"line_start":26,"line_end":26,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":825,"byte_end":828,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ * Tools for [working with asynchronous tasks][tasks], including","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":829,"byte_end":896,"line_start":28,"line_end":28,"column_start":1,"column_end":68}},{"value":"/   [synchronization primitives and channels][sync] and [timeouts, delays, and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":897,"byte_end":977,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"/   intervals][time].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":978,"byte_end":1001,"line_start":30,"line_end":30,"column_start":1,"column_end":24}},{"value":"/ * APIs for [performing asynchronous I/O][io], including [TCP and UDP][net] sockets,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":1002,"byte_end":1089,"line_start":31,"line_end":31,"column_start":1,"column_end":88}},{"value":"/   [filesystem][fs] operations, and [process] and [signal] management.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":1090,"byte_end":1163,"line_start":32,"line_end":32,"column_start":1,"column_end":74}},{"value":"/ * A [runtime] for executing asynchronous code, including a task scheduler,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":1164,"byte_end":1242,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/   an I/O driver backed by the operating system's event queue (epoll, kqueue,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":1243,"byte_end":1323,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/   IOCP, etc...), and a high performance timer.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":1324,"byte_end":1374,"line_start":35,"line_end":35,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":1375,"byte_end":1378,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Guide level documentation is found on the [website].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":1379,"byte_end":1435,"line_start":37,"line_end":37,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":1436,"byte_end":1439,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [tasks]: #working-with-tasks","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":1440,"byte_end":1472,"line_start":39,"line_end":39,"column_start":1,"column_end":33}},{"value":"/ [sync]: crate::sync","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":1473,"byte_end":1496,"line_start":40,"line_end":40,"column_start":1,"column_end":24}},{"value":"/ [time]: crate::time","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":1497,"byte_end":1520,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/ [io]: #asynchronous-io","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":1521,"byte_end":1547,"line_start":42,"line_end":42,"column_start":1,"column_end":27}},{"value":"/ [net]: crate::net","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":1548,"byte_end":1569,"line_start":43,"line_end":43,"column_start":1,"column_end":22}},{"value":"/ [fs]: crate::fs","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":1570,"byte_end":1589,"line_start":44,"line_end":44,"column_start":1,"column_end":20}},{"value":"/ [process]: crate::process","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":1590,"byte_end":1619,"line_start":45,"line_end":45,"column_start":1,"column_end":30}},{"value":"/ [signal]: crate::signal","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":1620,"byte_end":1647,"line_start":46,"line_end":46,"column_start":1,"column_end":28}},{"value":"/ [fs]: crate::fs","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":1648,"byte_end":1667,"line_start":47,"line_end":47,"column_start":1,"column_end":20}},{"value":"/ [runtime]: crate::runtime","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":1668,"byte_end":1697,"line_start":48,"line_end":48,"column_start":1,"column_end":30}},{"value":"/ [website]: https://tokio.rs/tokio/tutorial","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":1698,"byte_end":1744,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":1745,"byte_end":1748,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # A Tour of Tokio","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":1749,"byte_end":1770,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":1771,"byte_end":1774,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Tokio consists of a number of modules that provide a range of functionality","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":1775,"byte_end":1854,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ essential for implementing asynchronous applications in Rust. In this","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":1855,"byte_end":1928,"line_start":54,"line_end":54,"column_start":1,"column_end":74}},{"value":"/ section, we will take a brief tour of Tokio, summarizing the major APIs and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":1929,"byte_end":2008,"line_start":55,"line_end":55,"column_start":1,"column_end":80}},{"value":"/ their uses.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":2009,"byte_end":2024,"line_start":56,"line_end":56,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":2025,"byte_end":2028,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ The easiest way to get started is to enable all features. Do this by","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":2029,"byte_end":2101,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/ enabling the `full` feature flag:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":2102,"byte_end":2139,"line_start":59,"line_end":59,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":2140,"byte_end":2143,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":2144,"byte_end":2155,"line_start":61,"line_end":61,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"0.2\", features = [\"full\"] }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":2156,"byte_end":2208,"line_start":62,"line_end":62,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":2209,"byte_end":2216,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":2217,"byte_end":2220,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ## Feature flags","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":2221,"byte_end":2241,"line_start":65,"line_end":65,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":2242,"byte_end":2245,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Tokio uses a set of [feature flags] to reduce the amount of compiled code. It","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":2246,"byte_end":2327,"line_start":67,"line_end":67,"column_start":1,"column_end":82}},{"value":"/ is possible to just enable certain features over others. By default, Tokio","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":2328,"byte_end":2406,"line_start":68,"line_end":68,"column_start":1,"column_end":79}},{"value":"/ does not enable any features but allows one to enable a subset for their use","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":2407,"byte_end":2487,"line_start":69,"line_end":69,"column_start":1,"column_end":81}},{"value":"/ case. Below is a list of the available feature flags. You may also notice","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":2488,"byte_end":2565,"line_start":70,"line_end":70,"column_start":1,"column_end":78}},{"value":"/ above each function, struct and trait there is listed one or more feature flags","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":2566,"byte_end":2649,"line_start":71,"line_end":71,"column_start":1,"column_end":84}},{"value":"/ that are required for that item to be used. If you are new to Tokio it is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":2650,"byte_end":2727,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"/ recommended that you use the `full` feature flag which will enable all public APIs.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":2728,"byte_end":2815,"line_start":73,"line_end":73,"column_start":1,"column_end":88}},{"value":"/ Beware though that this will pull in many extra dependencies that you may not","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":2816,"byte_end":2897,"line_start":74,"line_end":74,"column_start":1,"column_end":82}},{"value":"/ need.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":2898,"byte_end":2907,"line_start":75,"line_end":75,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":2908,"byte_end":2911,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ - `full`: Enables all Tokio public API features listed below.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":2912,"byte_end":2977,"line_start":77,"line_end":77,"column_start":1,"column_end":66}},{"value":"/ - `rt-core`: Enables `tokio::spawn` and the basic (single-threaded) scheduler.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":2978,"byte_end":3060,"line_start":78,"line_end":78,"column_start":1,"column_end":83}},{"value":"/ - `rt-threaded`: Enables the heavier, multi-threaded, work-stealing scheduler.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":3061,"byte_end":3143,"line_start":79,"line_end":79,"column_start":1,"column_end":83}},{"value":"/ - `rt-util`: Enables non-scheduler utilities.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":3144,"byte_end":3193,"line_start":80,"line_end":80,"column_start":1,"column_end":50}},{"value":"/ - `io-driver`: Enables the `mio` based IO driver.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":3194,"byte_end":3247,"line_start":81,"line_end":81,"column_start":1,"column_end":54}},{"value":"/ - `io-util`: Enables the IO based `Ext` traits.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":3248,"byte_end":3299,"line_start":82,"line_end":82,"column_start":1,"column_end":52}},{"value":"/ - `io-std`: Enable `Stdout`, `Stdin` and `Stderr` types.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":3300,"byte_end":3360,"line_start":83,"line_end":83,"column_start":1,"column_end":61}},{"value":"/ - `net`: Enables `tokio::net` types such as `TcpStream`, `UnixStream` and `UdpSocket`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":3361,"byte_end":3451,"line_start":84,"line_end":84,"column_start":1,"column_end":91}},{"value":"/ - `tcp`: Enables all `tokio::net::tcp` types.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":3452,"byte_end":3501,"line_start":85,"line_end":85,"column_start":1,"column_end":50}},{"value":"/ - `udp`: Enables all `tokio::net::udp` types.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":3502,"byte_end":3551,"line_start":86,"line_end":86,"column_start":1,"column_end":50}},{"value":"/ - `uds`: Enables all `tokio::net::unix` types.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":3552,"byte_end":3602,"line_start":87,"line_end":87,"column_start":1,"column_end":51}},{"value":"/ - `time`: Enables `tokio::time` types and allows the schedulers to enable","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":3603,"byte_end":3680,"line_start":88,"line_end":88,"column_start":1,"column_end":78}},{"value":"/ the built in timer.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":3681,"byte_end":3704,"line_start":89,"line_end":89,"column_start":1,"column_end":24}},{"value":"/ - `process`: Enables `tokio::process` types.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":3705,"byte_end":3753,"line_start":90,"line_end":90,"column_start":1,"column_end":49}},{"value":"/ - `macros`: Enables `#[tokio::main]` and `#[tokio::test]` macros.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":3754,"byte_end":3823,"line_start":91,"line_end":91,"column_start":1,"column_end":70}},{"value":"/ - `sync`: Enables all `tokio::sync` types.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":3824,"byte_end":3870,"line_start":92,"line_end":92,"column_start":1,"column_end":47}},{"value":"/ - `stream`: Enables optional `Stream` implementations for types within Tokio.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":3871,"byte_end":3952,"line_start":93,"line_end":93,"column_start":1,"column_end":82}},{"value":"/ - `signal`: Enables all `tokio::signal` types.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":3953,"byte_end":4003,"line_start":94,"line_end":94,"column_start":1,"column_end":51}},{"value":"/ - `fs`: Enables `tokio::fs` types.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":4004,"byte_end":4042,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"/ - `dns`: Enables async `tokio::net::ToSocketAddrs`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":4043,"byte_end":4098,"line_start":96,"line_end":96,"column_start":1,"column_end":56}},{"value":"/ - `test-util`: Enables testing based infrastructure for the Tokio runtime.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":4099,"byte_end":4177,"line_start":97,"line_end":97,"column_start":1,"column_end":79}},{"value":"/ - `blocking`: Enables `block_in_place` and `spawn_blocking`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":4178,"byte_end":4242,"line_start":98,"line_end":98,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":4243,"byte_end":4246,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ _Note: `AsyncRead` and `AsyncWrite` traits do not require any features and are","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":4247,"byte_end":4329,"line_start":100,"line_end":100,"column_start":1,"column_end":83}},{"value":"/ always available._","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":4330,"byte_end":4352,"line_start":101,"line_end":101,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":4353,"byte_end":4356,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ ### Internal features","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":4357,"byte_end":4382,"line_start":103,"line_end":103,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":4383,"byte_end":4386,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ These features do not expose any new API, but influence internal","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":4387,"byte_end":4455,"line_start":105,"line_end":105,"column_start":1,"column_end":69}},{"value":"/ implementation aspects of Tokio, and can pull in additional","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":4456,"byte_end":4519,"line_start":106,"line_end":106,"column_start":1,"column_end":64}},{"value":"/ dependencies. They are not included in `full`:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":4520,"byte_end":4570,"line_start":107,"line_end":107,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":4571,"byte_end":4574,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ - `parking_lot`: As a potential optimization, use the _parking_lot_ crate's","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":4575,"byte_end":4654,"line_start":109,"line_end":109,"column_start":1,"column_end":80}},{"value":"/ synchronization primitives internally. MSRV may increase according to the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":4655,"byte_end":4732,"line_start":110,"line_end":110,"column_start":1,"column_end":78}},{"value":"/ _parking_lot_ release in use.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":4733,"byte_end":4766,"line_start":111,"line_end":111,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":4767,"byte_end":4770,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":4771,"byte_end":4868,"line_start":113,"line_end":113,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":4869,"byte_end":4872,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ### Authoring applications","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":4873,"byte_end":4903,"line_start":115,"line_end":115,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":4904,"byte_end":4907,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ Tokio is great for writing applications and most users in this case shouldn't","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":4908,"byte_end":4989,"line_start":117,"line_end":117,"column_start":1,"column_end":82}},{"value":"/ worry too much about what features they should pick. If you're unsure, we suggest","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":4990,"byte_end":5075,"line_start":118,"line_end":118,"column_start":1,"column_end":86}},{"value":"/ going with `full` to ensure that you don't run into any road blocks while you're","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":5076,"byte_end":5160,"line_start":119,"line_end":119,"column_start":1,"column_end":85}},{"value":"/ building your application.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":5161,"byte_end":5191,"line_start":120,"line_end":120,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":5192,"byte_end":5195,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":5196,"byte_end":5212,"line_start":122,"line_end":122,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":5213,"byte_end":5216,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ This example shows the quickest way to get started with Tokio.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":5217,"byte_end":5283,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":5284,"byte_end":5287,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":5288,"byte_end":5299,"line_start":126,"line_end":126,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"0.2\", features = [\"full\"] }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":5300,"byte_end":5352,"line_start":127,"line_end":127,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":5353,"byte_end":5360,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":5361,"byte_end":5364,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ ### Authoring libraries","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":5365,"byte_end":5392,"line_start":130,"line_end":130,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":5393,"byte_end":5396,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ As a library author your goal should be to provide the lighest weight crate","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":5397,"byte_end":5476,"line_start":132,"line_end":132,"column_start":1,"column_end":80}},{"value":"/ that is based on Tokio. To achieve this you should ensure that you only enable","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":5477,"byte_end":5559,"line_start":133,"line_end":133,"column_start":1,"column_end":83}},{"value":"/ the features you need. This allows users to pick up your crate without having","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":5560,"byte_end":5641,"line_start":134,"line_end":134,"column_start":1,"column_end":82}},{"value":"/ to enable unnecessary features.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":5642,"byte_end":5677,"line_start":135,"line_end":135,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":5678,"byte_end":5681,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":5682,"byte_end":5698,"line_start":137,"line_end":137,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":5699,"byte_end":5702,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ This example shows how you may want to import features for a library that just","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":5703,"byte_end":5785,"line_start":139,"line_end":139,"column_start":1,"column_end":83}},{"value":"/ needs to `tokio::spawn` and use a `TcpStream`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":5786,"byte_end":5836,"line_start":140,"line_end":140,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":5837,"byte_end":5840,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":5841,"byte_end":5852,"line_start":142,"line_end":142,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"0.2\", features = [\"rt-core\", \"tcp\"] }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":5853,"byte_end":5915,"line_start":143,"line_end":143,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":5916,"byte_end":5923,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":5924,"byte_end":5927,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ ## Working With Tasks","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":5928,"byte_end":5953,"line_start":146,"line_end":146,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":5954,"byte_end":5957,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ Asynchronous programs in Rust are based around lightweight, non-blocking","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":5958,"byte_end":6034,"line_start":148,"line_end":148,"column_start":1,"column_end":77}},{"value":"/ units of execution called [_tasks_][tasks]. The [`tokio::task`] module provides","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":6035,"byte_end":6118,"line_start":149,"line_end":149,"column_start":1,"column_end":84}},{"value":"/ important tools for working with tasks:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":6119,"byte_end":6162,"line_start":150,"line_end":150,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":6163,"byte_end":6166,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ * The [`spawn`] function and [`JoinHandle`] type, for scheduling a new task","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":6167,"byte_end":6246,"line_start":152,"line_end":152,"column_start":1,"column_end":80}},{"value":"/   on the Tokio runtime and awaiting the output of a spawned task, respectively,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":6247,"byte_end":6330,"line_start":153,"line_end":153,"column_start":1,"column_end":84}},{"value":"/ * Functions for [running blocking operations][blocking] in an asynchronous","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":6331,"byte_end":6409,"line_start":154,"line_end":154,"column_start":1,"column_end":79}},{"value":"/   task context.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":6410,"byte_end":6429,"line_start":155,"line_end":155,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":6430,"byte_end":6433,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::task`] module is present only when the \"rt-core\" feature flag","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":6434,"byte_end":6512,"line_start":157,"line_end":157,"column_start":1,"column_end":79}},{"value":"/ is enabled.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":6513,"byte_end":6528,"line_start":158,"line_end":158,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":6529,"byte_end":6532,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ [tasks]: task/index.html#what-are-tasks","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":6533,"byte_end":6576,"line_start":160,"line_end":160,"column_start":1,"column_end":44}},{"value":"/ [`tokio::task`]: crate::task","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":6577,"byte_end":6609,"line_start":161,"line_end":161,"column_start":1,"column_end":33}},{"value":"/ [`spawn`]: crate::task::spawn()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":6610,"byte_end":6645,"line_start":162,"line_end":162,"column_start":1,"column_end":36}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":6646,"byte_end":6689,"line_start":163,"line_end":163,"column_start":1,"column_end":44}},{"value":"/ [blocking]: task/index.html#blocking-and-yielding","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":6690,"byte_end":6743,"line_start":164,"line_end":164,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":6744,"byte_end":6747,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::sync`] module contains synchronization primitives to use when","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":6748,"byte_end":6826,"line_start":166,"line_end":166,"column_start":1,"column_end":79}},{"value":"/ needing to communicate or share data. These include:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":6827,"byte_end":6883,"line_start":167,"line_end":167,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":6884,"byte_end":6887,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ * channels ([`oneshot`], [`mpsc`], and [`watch`]), for sending values","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":6888,"byte_end":6961,"line_start":169,"line_end":169,"column_start":1,"column_end":74}},{"value":"/   between tasks,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":6962,"byte_end":6982,"line_start":170,"line_end":170,"column_start":1,"column_end":21}},{"value":"/ * a non-blocking [`Mutex`], for controlling access to a shared, mutable","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":6983,"byte_end":7058,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/   value,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":7059,"byte_end":7071,"line_start":172,"line_end":172,"column_start":1,"column_end":13}},{"value":"/ * an asynchronous [`Barrier`] type, for multiple tasks to synchronize before","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":7072,"byte_end":7152,"line_start":173,"line_end":173,"column_start":1,"column_end":81}},{"value":"/   beginning a computation.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":7153,"byte_end":7183,"line_start":174,"line_end":174,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":7184,"byte_end":7187,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ The `tokio::sync` module is present only when the \"sync\" feature flag is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":7188,"byte_end":7264,"line_start":176,"line_end":176,"column_start":1,"column_end":77}},{"value":"/ enabled.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":7265,"byte_end":7277,"line_start":177,"line_end":177,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":7278,"byte_end":7281,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ [`tokio::sync`]: crate::sync","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":7282,"byte_end":7314,"line_start":179,"line_end":179,"column_start":1,"column_end":33}},{"value":"/ [`Mutex`]: crate::sync::Mutex","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":7315,"byte_end":7348,"line_start":180,"line_end":180,"column_start":1,"column_end":34}},{"value":"/ [`Barrier`]: crate::sync::Barrier","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":7349,"byte_end":7386,"line_start":181,"line_end":181,"column_start":1,"column_end":38}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":7387,"byte_end":7424,"line_start":182,"line_end":182,"column_start":1,"column_end":38}},{"value":"/ [`mpsc`]: crate::sync::mpsc","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":7425,"byte_end":7456,"line_start":183,"line_end":183,"column_start":1,"column_end":32}},{"value":"/ [`watch`]: crate::sync::watch","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":7457,"byte_end":7490,"line_start":184,"line_end":184,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":7491,"byte_end":7494,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::time`] module provides utilities for tracking time and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":7495,"byte_end":7566,"line_start":186,"line_end":186,"column_start":1,"column_end":72}},{"value":"/ scheduling work. This includes functions for setting [timeouts][timeout] for","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":7567,"byte_end":7647,"line_start":187,"line_end":187,"column_start":1,"column_end":81}},{"value":"/ tasks, [delaying][delay] work to run in the future, or [repeating an operation at an","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":7648,"byte_end":7736,"line_start":188,"line_end":188,"column_start":1,"column_end":89}},{"value":"/ interval][interval].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":7737,"byte_end":7761,"line_start":189,"line_end":189,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":7762,"byte_end":7765,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ In order to use `tokio::time`, the \"time\" feature flag must be enabled.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":7766,"byte_end":7841,"line_start":191,"line_end":191,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":7842,"byte_end":7845,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ [`tokio::time`]: crate::time","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":7846,"byte_end":7878,"line_start":193,"line_end":193,"column_start":1,"column_end":33}},{"value":"/ [delay]: crate::time::delay_for()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":7879,"byte_end":7916,"line_start":194,"line_end":194,"column_start":1,"column_end":38}},{"value":"/ [interval]: crate::time::interval()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":7917,"byte_end":7956,"line_start":195,"line_end":195,"column_start":1,"column_end":40}},{"value":"/ [timeout]: crate::time::timeout()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":7957,"byte_end":7994,"line_start":196,"line_end":196,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":7995,"byte_end":7998,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ Finally, Tokio provides a _runtime_ for executing asynchronous tasks. Most","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":7999,"byte_end":8077,"line_start":198,"line_end":198,"column_start":1,"column_end":79}},{"value":"/ applications can use the [`#[tokio::main]`][main] macro to run their code on the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":8078,"byte_end":8162,"line_start":199,"line_end":199,"column_start":1,"column_end":85}},{"value":"/ Tokio runtime. In use-cases where manual control over the runtime is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":8163,"byte_end":8235,"line_start":200,"line_end":200,"column_start":1,"column_end":73}},{"value":"/ required, the [`tokio::runtime`] module provides APIs for configuring and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":8236,"byte_end":8313,"line_start":201,"line_end":201,"column_start":1,"column_end":78}},{"value":"/ managing runtimes.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":8314,"byte_end":8336,"line_start":202,"line_end":202,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":8337,"byte_end":8340,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ Using the runtime requires the \"rt-core\" or \"rt-threaded\" feature flags, to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":8341,"byte_end":8420,"line_start":204,"line_end":204,"column_start":1,"column_end":80}},{"value":"/ enable the basic [single-threaded scheduler][rt-core] and the [thread-pool","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":8421,"byte_end":8499,"line_start":205,"line_end":205,"column_start":1,"column_end":79}},{"value":"/ scheduler][rt-threaded], respectively. See the [`runtime` module","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":8500,"byte_end":8568,"line_start":206,"line_end":206,"column_start":1,"column_end":69}},{"value":"/ documentation][rt-features] for details. In addition, the \"macros\" feature","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":8569,"byte_end":8647,"line_start":207,"line_end":207,"column_start":1,"column_end":79}},{"value":"/ flag enables the `#[tokio::main]` and `#[tokio::test]` attributes.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":8648,"byte_end":8718,"line_start":208,"line_end":208,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":8719,"byte_end":8722,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ [main]: attr.main.html","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":8723,"byte_end":8749,"line_start":210,"line_end":210,"column_start":1,"column_end":27}},{"value":"/ [`tokio::runtime`]: crate::runtime","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":8750,"byte_end":8788,"line_start":211,"line_end":211,"column_start":1,"column_end":39}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":8789,"byte_end":8829,"line_start":212,"line_end":212,"column_start":1,"column_end":41}},{"value":"/ [`Runtime`]: crate::runtime::Runtime","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":8830,"byte_end":8870,"line_start":213,"line_end":213,"column_start":1,"column_end":41}},{"value":"/ [rt-core]: runtime/index.html#basic-scheduler","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":8871,"byte_end":8920,"line_start":214,"line_end":214,"column_start":1,"column_end":50}},{"value":"/ [rt-threaded]: runtime/index.html#threaded-scheduler","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":8921,"byte_end":8977,"line_start":215,"line_end":215,"column_start":1,"column_end":57}},{"value":"/ [rt-features]: runtime/index.html#runtime-scheduler","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":8978,"byte_end":9033,"line_start":216,"line_end":216,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":9034,"byte_end":9037,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## CPU-bound tasks and blocking code","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":9038,"byte_end":9078,"line_start":218,"line_end":218,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":9079,"byte_end":9082,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ Tokio is able to concurrently run many tasks on a few threads by repeatedly","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":9083,"byte_end":9162,"line_start":220,"line_end":220,"column_start":1,"column_end":80}},{"value":"/ swapping the currently running task on each thread. However, this kind of","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":9163,"byte_end":9240,"line_start":221,"line_end":221,"column_start":1,"column_end":78}},{"value":"/ swapping can only happen at `.await` points, so code that spends a long time","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":9241,"byte_end":9321,"line_start":222,"line_end":222,"column_start":1,"column_end":81}},{"value":"/ without reaching an `.await` will prevent other tasks from running. To","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":9322,"byte_end":9396,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/ combat this, Tokio provides two kinds of threads: Core threads and blocking","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":9397,"byte_end":9476,"line_start":224,"line_end":224,"column_start":1,"column_end":80}},{"value":"/ threads. The core threads are where all asynchronous code runs, and Tokio","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":9477,"byte_end":9554,"line_start":225,"line_end":225,"column_start":1,"column_end":78}},{"value":"/ will by default spawn one for each CPU core. The blocking threads are","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":9555,"byte_end":9628,"line_start":226,"line_end":226,"column_start":1,"column_end":74}},{"value":"/ spawned on demand, and can be used to run blocking code that would otherwise","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":9629,"byte_end":9709,"line_start":227,"line_end":227,"column_start":1,"column_end":81}},{"value":"/ block other tasks from running. Since it is not possible for Tokio to swap","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":9710,"byte_end":9788,"line_start":228,"line_end":228,"column_start":1,"column_end":79}},{"value":"/ out blocking tasks, like it can do with asynchronous code, the upper limit","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":9789,"byte_end":9867,"line_start":229,"line_end":229,"column_start":1,"column_end":79}},{"value":"/ on the number of blocking threads is very large. These limits can be","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":9868,"byte_end":9940,"line_start":230,"line_end":230,"column_start":1,"column_end":73}},{"value":"/ configured on the [`Builder`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":9941,"byte_end":9975,"line_start":231,"line_end":231,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":9976,"byte_end":9979,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ To spawn a blocking task, you should use the [`spawn_blocking`] function.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":9980,"byte_end":10057,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":10058,"byte_end":10061,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":10062,"byte_end":10102,"line_start":235,"line_end":235,"column_start":1,"column_end":41}},{"value":"/ [`spawn_blocking`]: crate::task::spawn_blocking()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":10103,"byte_end":10156,"line_start":236,"line_end":236,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":10157,"byte_end":10160,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":10161,"byte_end":10168,"line_start":238,"line_end":238,"column_start":1,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":10169,"byte_end":10187,"line_start":239,"line_end":239,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":10188,"byte_end":10209,"line_start":240,"line_end":240,"column_start":1,"column_end":22}},{"value":"/     // This is running on a core thread.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":10210,"byte_end":10254,"line_start":241,"line_end":241,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":10255,"byte_end":10258,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/     let blocking_task = tokio::task::spawn_blocking(|| {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":10259,"byte_end":10319,"line_start":243,"line_end":243,"column_start":1,"column_end":61}},{"value":"/         // This is running on a blocking thread.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":10320,"byte_end":10372,"line_start":244,"line_end":244,"column_start":1,"column_end":53}},{"value":"/         // Blocking here is ok.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":10373,"byte_end":10408,"line_start":245,"line_end":245,"column_start":1,"column_end":36}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":10409,"byte_end":10420,"line_start":246,"line_end":246,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":10421,"byte_end":10424,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/     // We can wait for the blocking task like this:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":10425,"byte_end":10480,"line_start":248,"line_end":248,"column_start":1,"column_end":56}},{"value":"/     // If the blocking task panics, the unwrap below will propagate the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":10481,"byte_end":10556,"line_start":249,"line_end":249,"column_start":1,"column_end":76}},{"value":"/     // panic.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":10557,"byte_end":10574,"line_start":250,"line_end":250,"column_start":1,"column_end":18}},{"value":"/     blocking_task.await.unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":10575,"byte_end":10612,"line_start":251,"line_end":251,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":10613,"byte_end":10618,"line_start":252,"line_end":252,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":10619,"byte_end":10626,"line_start":253,"line_end":253,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":10627,"byte_end":10630,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ If your code is CPU-bound and you wish to limit the number of threads used","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":10631,"byte_end":10709,"line_start":255,"line_end":255,"column_start":1,"column_end":79}},{"value":"/ to run it, you should run it on another thread pool such as [rayon]. You","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":10710,"byte_end":10786,"line_start":256,"line_end":256,"column_start":1,"column_end":77}},{"value":"/ can use an [`oneshot`] channel to send the result back to Tokio when the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":10787,"byte_end":10863,"line_start":257,"line_end":257,"column_start":1,"column_end":77}},{"value":"/ rayon task finishes.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":10864,"byte_end":10888,"line_start":258,"line_end":258,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":10889,"byte_end":10892,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ [rayon]: https://docs.rs/rayon","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":10893,"byte_end":10927,"line_start":260,"line_end":260,"column_start":1,"column_end":35}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":10928,"byte_end":10965,"line_start":261,"line_end":261,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":10966,"byte_end":10969,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Asynchronous IO","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":10970,"byte_end":10992,"line_start":263,"line_end":263,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":10993,"byte_end":10996,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ As well as scheduling and running tasks, Tokio provides everything you need","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":10997,"byte_end":11076,"line_start":265,"line_end":265,"column_start":1,"column_end":80}},{"value":"/ to perform input and output asynchronously.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":11077,"byte_end":11124,"line_start":266,"line_end":266,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":11125,"byte_end":11128,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::io`] module provides Tokio's asynchronous core I/O primitives,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":11129,"byte_end":11208,"line_start":268,"line_end":268,"column_start":1,"column_end":80}},{"value":"/ the [`AsyncRead`], [`AsyncWrite`], and [`AsyncBufRead`] traits. In addition,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":11209,"byte_end":11289,"line_start":269,"line_end":269,"column_start":1,"column_end":81}},{"value":"/ when the \"io-util\" feature flag is enabled, it also provides combinators and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":11290,"byte_end":11370,"line_start":270,"line_end":270,"column_start":1,"column_end":81}},{"value":"/ functions for working with these traits, forming as an asynchronous","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":11371,"byte_end":11442,"line_start":271,"line_end":271,"column_start":1,"column_end":72}},{"value":"/ counterpart to [`std::io`]. When the \"io-driver\" feature flag is enabled, it","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":11443,"byte_end":11523,"line_start":272,"line_end":272,"column_start":1,"column_end":81}},{"value":"/ also provides utilities for library authors implementing I/O resources.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":11524,"byte_end":11599,"line_start":273,"line_end":273,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":11600,"byte_end":11603,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ Tokio also includes APIs for performing various kinds of I/O and interacting","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":11604,"byte_end":11684,"line_start":275,"line_end":275,"column_start":1,"column_end":81}},{"value":"/ with the operating system asynchronously. These include:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":11685,"byte_end":11745,"line_start":276,"line_end":276,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":11746,"byte_end":11749,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ * [`tokio::net`], which contains non-blocking versions of [TCP], [UDP], and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":11750,"byte_end":11829,"line_start":278,"line_end":278,"column_start":1,"column_end":80}},{"value":"/   [Unix Domain Sockets][UDS] (enabled by the \"net\" feature flag),","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":11830,"byte_end":11899,"line_start":279,"line_end":279,"column_start":1,"column_end":70}},{"value":"/ * [`tokio::fs`], similar to [`std::fs`] but for performing filesystem I/O","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":11900,"byte_end":11977,"line_start":280,"line_end":280,"column_start":1,"column_end":78}},{"value":"/   asynchronously (enabled by the \"fs\" feature flag),","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":11978,"byte_end":12034,"line_start":281,"line_end":281,"column_start":1,"column_end":57}},{"value":"/ * [`tokio::signal`], for asynchronously handling Unix and Windows OS signals","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":12035,"byte_end":12115,"line_start":282,"line_end":282,"column_start":1,"column_end":81}},{"value":"/   (enabled by the \"signal\" feature flag),","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":12116,"byte_end":12161,"line_start":283,"line_end":283,"column_start":1,"column_end":46}},{"value":"/ * [`tokio::process`], for spawning and managing child processes (enabled by","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":12162,"byte_end":12241,"line_start":284,"line_end":284,"column_start":1,"column_end":80}},{"value":"/   the \"process\" feature flag).","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":12242,"byte_end":12276,"line_start":285,"line_end":285,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":12277,"byte_end":12280,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ [`tokio::io`]: crate::io","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":12281,"byte_end":12309,"line_start":287,"line_end":287,"column_start":1,"column_end":29}},{"value":"/ [`AsyncRead`]: crate::io::AsyncRead","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":12310,"byte_end":12349,"line_start":288,"line_end":288,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: crate::io::AsyncWrite","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":12350,"byte_end":12391,"line_start":289,"line_end":289,"column_start":1,"column_end":42}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":12392,"byte_end":12437,"line_start":290,"line_end":290,"column_start":1,"column_end":46}},{"value":"/ [`std::io`]: std::io","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":12438,"byte_end":12462,"line_start":291,"line_end":291,"column_start":1,"column_end":25}},{"value":"/ [`tokio::net`]: crate::net","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":12463,"byte_end":12493,"line_start":292,"line_end":292,"column_start":1,"column_end":31}},{"value":"/ [TCP]: crate::net::tcp","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":12494,"byte_end":12520,"line_start":293,"line_end":293,"column_start":1,"column_end":27}},{"value":"/ [UDP]: crate::net::udp","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":12521,"byte_end":12547,"line_start":294,"line_end":294,"column_start":1,"column_end":27}},{"value":"/ [UDS]: crate::net::unix","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":12548,"byte_end":12575,"line_start":295,"line_end":295,"column_start":1,"column_end":28}},{"value":"/ [`tokio::fs`]: crate::fs","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":12576,"byte_end":12604,"line_start":296,"line_end":296,"column_start":1,"column_end":29}},{"value":"/ [`std::fs`]: std::fs","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":12605,"byte_end":12629,"line_start":297,"line_end":297,"column_start":1,"column_end":25}},{"value":"/ [`tokio::signal`]: crate::signal","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":12630,"byte_end":12666,"line_start":298,"line_end":298,"column_start":1,"column_end":37}},{"value":"/ [`tokio::process`]: crate::process","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":12667,"byte_end":12705,"line_start":299,"line_end":299,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":12706,"byte_end":12709,"line_start":300,"line_end":300,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":12710,"byte_end":12724,"line_start":301,"line_end":301,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":12725,"byte_end":12728,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ A simple TCP echo server:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":12729,"byte_end":12758,"line_start":303,"line_end":303,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":12759,"byte_end":12762,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":12763,"byte_end":12776,"line_start":305,"line_end":305,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":12777,"byte_end":12809,"line_start":306,"line_end":306,"column_start":1,"column_end":33}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":12810,"byte_end":12836,"line_start":307,"line_end":307,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":12837,"byte_end":12840,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":12841,"byte_end":12859,"line_start":309,"line_end":309,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":12860,"byte_end":12923,"line_start":310,"line_end":310,"column_start":1,"column_end":64}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":12924,"byte_end":12994,"line_start":311,"line_end":311,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":12995,"byte_end":12998,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":12999,"byte_end":13013,"line_start":313,"line_end":313,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":13014,"byte_end":13073,"line_start":314,"line_end":314,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":13074,"byte_end":13077,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":13078,"byte_end":13115,"line_start":316,"line_end":316,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":13116,"byte_end":13156,"line_start":317,"line_end":317,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":13157,"byte_end":13160,"line_start":318,"line_end":318,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":13161,"byte_end":13241,"line_start":319,"line_end":319,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":13242,"byte_end":13264,"line_start":320,"line_end":320,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":13265,"byte_end":13328,"line_start":321,"line_end":321,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":13329,"byte_end":13369,"line_start":322,"line_end":322,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":13370,"byte_end":13420,"line_start":323,"line_end":323,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":13421,"byte_end":13456,"line_start":324,"line_end":324,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":13457,"byte_end":13492,"line_start":325,"line_end":325,"column_start":1,"column_end":36}},{"value":"/                         eprintln!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":13493,"byte_end":13576,"line_start":326,"line_end":326,"column_start":1,"column_end":84}},{"value":"/                         return;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":13577,"byte_end":13612,"line_start":327,"line_end":327,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":13613,"byte_end":13638,"line_start":328,"line_end":328,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":13639,"byte_end":13661,"line_start":329,"line_end":329,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":13662,"byte_end":13665,"line_start":330,"line_end":330,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":13666,"byte_end":13708,"line_start":331,"line_end":331,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":13709,"byte_end":13781,"line_start":332,"line_end":332,"column_start":1,"column_end":73}},{"value":"/                     eprintln!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":13782,"byte_end":13860,"line_start":333,"line_end":333,"column_start":1,"column_end":79}},{"value":"/                     return;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":13861,"byte_end":13892,"line_start":334,"line_end":334,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":13893,"byte_end":13914,"line_start":335,"line_end":335,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":13915,"byte_end":13932,"line_start":336,"line_end":336,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":13933,"byte_end":13948,"line_start":337,"line_end":337,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":13949,"byte_end":13958,"line_start":338,"line_end":338,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":13959,"byte_end":13964,"line_start":339,"line_end":339,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":13965,"byte_end":13972,"line_start":340,"line_end":340,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/mod.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":894},{"krate":0,"index":898},{"krate":0,"index":900},{"krate":0,"index":79}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":14161,"byte_end":14173,"line_start":346,"line_end":346,"column_start":1,"column_end":13}}]},{"kind":"Mod","id":{"krate":0,"index":79},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/support.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"support","qualname":"::macros::support","value":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/support.rs","parent":null,"children":[{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":906},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fs","qualname":"::fs","value":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","parent":null,"children":[{"krate":0,"index":907},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":1053},{"krate":0,"index":1054},{"krate":0,"index":1064},{"krate":0,"index":1065},{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1131},{"krate":0,"index":1141},{"krate":0,"index":1142},{"krate":0,"index":1189},{"krate":0,"index":1190},{"krate":0,"index":1191},{"krate":0,"index":1192},{"krate":0,"index":1193},{"krate":0,"index":1204},{"krate":0,"index":1205},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1225},{"krate":0,"index":1226},{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1267},{"krate":0,"index":1268},{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1290},{"krate":0,"index":1291},{"krate":0,"index":1300},{"krate":0,"index":1301},{"krate":0,"index":1302},{"krate":0,"index":1307}],"decl_id":null,"docs":" Asynchronous file and standard stream adaptation.","sig":null,"attributes":[{"value":"cfg(feature = \"fs\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":18977,"byte_end":18999,"line_start":115,"line_end":115,"column_start":13,"column_end":35}},{"value":"cfg(not(loom))","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":8549119,"byte_end":8549137,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/ Asynchronous file and standard stream adaptation.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":8549139,"byte_end":8549192,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":8549193,"byte_end":8549196,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module contains utility methods and adapter types for input/output to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":8549197,"byte_end":8549275,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ files or standard streams (`Stdin`, `Stdout`, `Stderr`), and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":8549276,"byte_end":8549340,"line_start":6,"line_end":6,"column_start":1,"column_end":65}},{"value":"/ filesystem manipulation, for use within (and only within) a Tokio runtime.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":8549341,"byte_end":8549419,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":8549420,"byte_end":8549423,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Tasks run by *worker* threads should not block, as this could delay","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":8549424,"byte_end":8549495,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"/ servicing reactor events. Portable filesystem operations are blocking,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":8549496,"byte_end":8549570,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ however. This module offers adapters which use a `blocking` annotation","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":8549571,"byte_end":8549645,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ to inform the runtime that a blocking operation is required. When","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":8549646,"byte_end":8549715,"line_start":12,"line_end":12,"column_start":1,"column_end":70}},{"value":"/ necessary, this allows the runtime to convert the current thread from a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":8549716,"byte_end":8549791,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ *worker* to a *backup* thread, where blocking is acceptable.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":8549792,"byte_end":8549856,"line_start":14,"line_end":14,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":8549857,"byte_end":8549860,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":8549861,"byte_end":8549873,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":8549874,"byte_end":8549877,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Where possible, users should prefer the provided asynchronous-specific","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":8549878,"byte_end":8549952,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ traits such as [`AsyncRead`], or methods returning a `Future` or `Poll`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":8549953,"byte_end":8550028,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/ type. Adaptions also extend to traits like `std::io::Read` where methods","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":8550029,"byte_end":8550105,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/ return `std::io::Result`. Be warned that these adapted methods may return","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":8550106,"byte_end":8550183,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ `std::io::ErrorKind::WouldBlock` if a *worker* thread can not be converted","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":8550184,"byte_end":8550262,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ to a *backup* thread immediately.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":8550263,"byte_end":8550300,"line_start":23,"line_end":23,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":8550301,"byte_end":8550304,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: https://docs.rs/tokio-io/0.1/tokio_io/trait.AsyncRead.html","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":8550305,"byte_end":8550382,"line_start":25,"line_end":25,"column_start":1,"column_end":78}}]},{"kind":"Function","id":{"krate":0,"index":913},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/canonicalize.rs","byte_start":8553662,"byte_end":8553674,"line_start":48,"line_end":48,"column_start":14,"column_end":26},"name":"canonicalize","qualname":"::fs::canonicalize::canonicalize","value":"pub async fn canonicalize<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical, absolute form of a path with all intermediate\n components normalized and symbolic links resolved.","sig":null,"attributes":[{"value":"/ Returns the canonical, absolute form of a path with all intermediate","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/canonicalize.rs","byte_start":8552156,"byte_end":8552228,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/ components normalized and symbolic links resolved.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/canonicalize.rs","byte_start":8552229,"byte_end":8552283,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/canonicalize.rs","byte_start":8552284,"byte_end":8552287,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::canonicalize`][std]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/canonicalize.rs","byte_start":8552288,"byte_end":8552350,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/canonicalize.rs","byte_start":8552351,"byte_end":8552354,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::canonicalize","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/canonicalize.rs","byte_start":8552355,"byte_end":8552387,"line_start":11,"line_end":11,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/canonicalize.rs","byte_start":8552388,"byte_end":8552391,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/canonicalize.rs","byte_start":8552392,"byte_end":8552424,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/canonicalize.rs","byte_start":8552425,"byte_end":8552428,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `realpath` function on Unix","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/canonicalize.rs","byte_start":8552429,"byte_end":8552503,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/ and the `CreateFile` and `GetFinalPathNameByHandle` functions on Windows.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/canonicalize.rs","byte_start":8552504,"byte_end":8552581,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/canonicalize.rs","byte_start":8552582,"byte_end":8552638,"line_start":17,"line_end":17,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/canonicalize.rs","byte_start":8552639,"byte_end":8552642,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ On Windows, this converts the path to use [extended length path][path]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/canonicalize.rs","byte_start":8552643,"byte_end":8552717,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ syntax, which allows your program to use longer path names, but means you","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/canonicalize.rs","byte_start":8552718,"byte_end":8552795,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ can only join backslash-delimited paths to it, and it may be incompatible","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/canonicalize.rs","byte_start":8552796,"byte_end":8552873,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ with other applications (if passed to the application on the command-line,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/canonicalize.rs","byte_start":8552874,"byte_end":8552952,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ or written to a file another application may read).","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/canonicalize.rs","byte_start":8552953,"byte_end":8553008,"line_start":23,"line_end":23,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/canonicalize.rs","byte_start":8553009,"byte_end":8553012,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/canonicalize.rs","byte_start":8553013,"byte_end":8553098,"line_start":25,"line_end":25,"column_start":1,"column_end":86}},{"value":"/ [path]: https://msdn.microsoft.com/en-us/library/windows/desktop/aa365247(v=vs.85).aspx#maxpath","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/canonicalize.rs","byte_start":8553099,"byte_end":8553198,"line_start":26,"line_end":26,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/canonicalize.rs","byte_start":8553199,"byte_end":8553202,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/canonicalize.rs","byte_start":8553203,"byte_end":8553215,"line_start":28,"line_end":28,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/canonicalize.rs","byte_start":8553216,"byte_end":8553219,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/canonicalize.rs","byte_start":8553220,"byte_end":8553298,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/canonicalize.rs","byte_start":8553299,"byte_end":8553331,"line_start":31,"line_end":31,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/canonicalize.rs","byte_start":8553332,"byte_end":8553335,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ * `path` does not exist.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/canonicalize.rs","byte_start":8553336,"byte_end":8553364,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ * A non-final component in path is not a directory.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/canonicalize.rs","byte_start":8553365,"byte_end":8553420,"line_start":34,"line_end":34,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/canonicalize.rs","byte_start":8553421,"byte_end":8553424,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/canonicalize.rs","byte_start":8553425,"byte_end":8553439,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/canonicalize.rs","byte_start":8553440,"byte_end":8553443,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/canonicalize.rs","byte_start":8553444,"byte_end":8553457,"line_start":38,"line_end":38,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/canonicalize.rs","byte_start":8553458,"byte_end":8553476,"line_start":39,"line_end":39,"column_start":1,"column_end":19}},{"value":"/ use std::io;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/canonicalize.rs","byte_start":8553477,"byte_end":8553493,"line_start":40,"line_end":40,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/canonicalize.rs","byte_start":8553494,"byte_end":8553497,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/canonicalize.rs","byte_start":8553498,"byte_end":8553516,"line_start":42,"line_end":42,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/canonicalize.rs","byte_start":8553517,"byte_end":8553556,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/     let path = fs::canonicalize(\"../a/../foo.txt\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/canonicalize.rs","byte_start":8553557,"byte_end":8553619,"line_start":44,"line_end":44,"column_start":1,"column_end":63}},{"value":"/     Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/canonicalize.rs","byte_start":8553620,"byte_end":8553634,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/canonicalize.rs","byte_start":8553635,"byte_end":8553640,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/canonicalize.rs","byte_start":8553641,"byte_end":8553648,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":923},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir.rs","byte_start":8555231,"byte_end":8555241,"line_start":49,"line_end":49,"column_start":14,"column_end":24},"name":"create_dir","qualname":"::fs::create_dir::create_dir","value":"pub async fn create_dir<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty directory at the provided path","sig":null,"attributes":[{"value":"/ Creates a new, empty directory at the provided path","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir.rs","byte_start":8553885,"byte_end":8553940,"line_start":6,"line_end":6,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir.rs","byte_start":8553941,"byte_end":8553944,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::create_dir`][std]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir.rs","byte_start":8553945,"byte_end":8554005,"line_start":8,"line_end":8,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir.rs","byte_start":8554006,"byte_end":8554009,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::create_dir","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir.rs","byte_start":8554010,"byte_end":8554040,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir.rs","byte_start":8554041,"byte_end":8554044,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir.rs","byte_start":8554045,"byte_end":8554077,"line_start":12,"line_end":12,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir.rs","byte_start":8554078,"byte_end":8554081,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `mkdir` function on Unix","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir.rs","byte_start":8554082,"byte_end":8554153,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ and the `CreateDirectory` function on Windows.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir.rs","byte_start":8554154,"byte_end":8554204,"line_start":15,"line_end":15,"column_start":1,"column_end":51}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir.rs","byte_start":8554205,"byte_end":8554261,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir.rs","byte_start":8554262,"byte_end":8554265,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir.rs","byte_start":8554266,"byte_end":8554351,"line_start":18,"line_end":18,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir.rs","byte_start":8554352,"byte_end":8554355,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ **NOTE**: If a parent of the given path doesn't exist, this function will","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir.rs","byte_start":8554356,"byte_end":8554433,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ return an error. To create a directory and all its missing parents at the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir.rs","byte_start":8554434,"byte_end":8554511,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ same time, use the [`create_dir_all`] function.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir.rs","byte_start":8554512,"byte_end":8554563,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir.rs","byte_start":8554564,"byte_end":8554567,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir.rs","byte_start":8554568,"byte_end":8554580,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir.rs","byte_start":8554581,"byte_end":8554584,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir.rs","byte_start":8554585,"byte_end":8554663,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir.rs","byte_start":8554664,"byte_end":8554696,"line_start":27,"line_end":27,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir.rs","byte_start":8554697,"byte_end":8554700,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ * User lacks permissions to create directory at `path`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir.rs","byte_start":8554701,"byte_end":8554760,"line_start":29,"line_end":29,"column_start":1,"column_end":60}},{"value":"/ * A parent of the given path doesn't exist. (To create a directory and all","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir.rs","byte_start":8554761,"byte_end":8554839,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/   its missing parents at the same time, use the [`create_dir_all`]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir.rs","byte_start":8554840,"byte_end":8554910,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/   function.)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir.rs","byte_start":8554911,"byte_end":8554927,"line_start":32,"line_end":32,"column_start":1,"column_end":17}},{"value":"/ * `path` already exists.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir.rs","byte_start":8554928,"byte_end":8554956,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir.rs","byte_start":8554957,"byte_end":8554960,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`create_dir_all`]: super::create_dir_all()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir.rs","byte_start":8554961,"byte_end":8555008,"line_start":35,"line_end":35,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir.rs","byte_start":8555009,"byte_end":8555012,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir.rs","byte_start":8555013,"byte_end":8555027,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir.rs","byte_start":8555028,"byte_end":8555031,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir.rs","byte_start":8555032,"byte_end":8555045,"line_start":39,"line_end":39,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir.rs","byte_start":8555046,"byte_end":8555064,"line_start":40,"line_end":40,"column_start":1,"column_end":19}},{"value":"/ use std::io;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir.rs","byte_start":8555065,"byte_end":8555081,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir.rs","byte_start":8555082,"byte_end":8555085,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir.rs","byte_start":8555086,"byte_end":8555104,"line_start":43,"line_end":43,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir.rs","byte_start":8555105,"byte_end":8555144,"line_start":44,"line_end":44,"column_start":1,"column_end":40}},{"value":"/     fs::create_dir(\"/some/dir\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir.rs","byte_start":8555145,"byte_end":8555188,"line_start":45,"line_end":45,"column_start":1,"column_end":44}},{"value":"/     Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir.rs","byte_start":8555189,"byte_end":8555203,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir.rs","byte_start":8555204,"byte_end":8555209,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir.rs","byte_start":8555210,"byte_end":8555217,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":933},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir_all.rs","byte_start":8556994,"byte_end":8557008,"line_start":50,"line_end":50,"column_start":14,"column_end":28},"name":"create_dir_all","qualname":"::fs::create_dir_all::create_dir_all","value":"pub async fn create_dir_all<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Recursively creates a directory and all of its parent components if they\n are missing.","sig":null,"attributes":[{"value":"/ Recursively creates a directory and all of its parent components if they","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir_all.rs","byte_start":8555445,"byte_end":8555521,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ are missing.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir_all.rs","byte_start":8555522,"byte_end":8555538,"line_start":7,"line_end":7,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir_all.rs","byte_start":8555539,"byte_end":8555542,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::create_dir_all`][std]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir_all.rs","byte_start":8555543,"byte_end":8555607,"line_start":9,"line_end":9,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir_all.rs","byte_start":8555608,"byte_end":8555611,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::create_dir_all","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir_all.rs","byte_start":8555612,"byte_end":8555646,"line_start":11,"line_end":11,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir_all.rs","byte_start":8555647,"byte_end":8555650,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir_all.rs","byte_start":8555651,"byte_end":8555683,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir_all.rs","byte_start":8555684,"byte_end":8555687,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `mkdir` function on Unix","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir_all.rs","byte_start":8555688,"byte_end":8555759,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ and the `CreateDirectory` function on Windows.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir_all.rs","byte_start":8555760,"byte_end":8555810,"line_start":16,"line_end":16,"column_start":1,"column_end":51}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir_all.rs","byte_start":8555811,"byte_end":8555867,"line_start":17,"line_end":17,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir_all.rs","byte_start":8555868,"byte_end":8555871,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir_all.rs","byte_start":8555872,"byte_end":8555957,"line_start":19,"line_end":19,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir_all.rs","byte_start":8555958,"byte_end":8555961,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir_all.rs","byte_start":8555962,"byte_end":8555974,"line_start":21,"line_end":21,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir_all.rs","byte_start":8555975,"byte_end":8555978,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir_all.rs","byte_start":8555979,"byte_end":8556057,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir_all.rs","byte_start":8556058,"byte_end":8556090,"line_start":24,"line_end":24,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir_all.rs","byte_start":8556091,"byte_end":8556094,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * If any directory in the path specified by `path` does not already exist","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir_all.rs","byte_start":8556095,"byte_end":8556172,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ and it could not be created otherwise. The specific error conditions for","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir_all.rs","byte_start":8556173,"byte_end":8556249,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/ when a directory is being created (after it is determined to not exist) are","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir_all.rs","byte_start":8556250,"byte_end":8556329,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ outlined by [`fs::create_dir`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir_all.rs","byte_start":8556330,"byte_end":8556365,"line_start":29,"line_end":29,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir_all.rs","byte_start":8556366,"byte_end":8556369,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Notable exception is made for situations where any of the directories","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir_all.rs","byte_start":8556370,"byte_end":8556443,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ specified in the `path` could not be created as it was being created concurrently.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir_all.rs","byte_start":8556444,"byte_end":8556530,"line_start":32,"line_end":32,"column_start":1,"column_end":87}},{"value":"/ Such cases are considered to be successful. That is, calling `create_dir_all`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir_all.rs","byte_start":8556531,"byte_end":8556612,"line_start":33,"line_end":33,"column_start":1,"column_end":82}},{"value":"/ concurrently from multiple threads or processes is guaranteed not to fail","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir_all.rs","byte_start":8556613,"byte_end":8556690,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ due to a race condition with itself.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir_all.rs","byte_start":8556691,"byte_end":8556731,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir_all.rs","byte_start":8556732,"byte_end":8556735,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [`fs::create_dir`]: std::fs::create_dir","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir_all.rs","byte_start":8556736,"byte_end":8556779,"line_start":37,"line_end":37,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir_all.rs","byte_start":8556780,"byte_end":8556783,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir_all.rs","byte_start":8556784,"byte_end":8556798,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir_all.rs","byte_start":8556799,"byte_end":8556802,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir_all.rs","byte_start":8556803,"byte_end":8556816,"line_start":41,"line_end":41,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir_all.rs","byte_start":8556817,"byte_end":8556835,"line_start":42,"line_end":42,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir_all.rs","byte_start":8556836,"byte_end":8556839,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir_all.rs","byte_start":8556840,"byte_end":8556858,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> std::io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir_all.rs","byte_start":8556859,"byte_end":8556903,"line_start":45,"line_end":45,"column_start":1,"column_end":45}},{"value":"/     fs::create_dir_all(\"/some/dir\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir_all.rs","byte_start":8556904,"byte_end":8556951,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/     Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir_all.rs","byte_start":8556952,"byte_end":8556966,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir_all.rs","byte_start":8556967,"byte_end":8556972,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/create_dir_all.rs","byte_start":8556973,"byte_end":8556980,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1311},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8557624,"byte_end":8557634,"line_start":17,"line_end":17,"column_start":12,"column_end":22},"name":"DirBuilder","qualname":"::fs::dir_builder::DirBuilder","value":"DirBuilder {  }","parent":null,"children":[{"krate":0,"index":1312},{"krate":0,"index":1313}],"decl_id":null,"docs":" A builder for creating directories in various manners.","sig":null,"attributes":[{"value":"/ A builder for creating directories in various manners.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8557216,"byte_end":8557274,"line_start":6,"line_end":6,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8557275,"byte_end":8557278,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Additional Unix-specific options are available via importing the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8557279,"byte_end":8557347,"line_start":8,"line_end":8,"column_start":1,"column_end":69}},{"value":"/ [`DirBuilderExt`] trait.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8557348,"byte_end":8557376,"line_start":9,"line_end":9,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8557377,"byte_end":8557380,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is a specialized version of [`std::fs::DirBuilder`] for usage on","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8557381,"byte_end":8557454,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/ the Tokio runtime.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8557455,"byte_end":8557477,"line_start":12,"line_end":12,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8557478,"byte_end":8557481,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [std::fs::DirBuilder]: std::fs::DirBuilder","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8557482,"byte_end":8557528,"line_start":14,"line_end":14,"column_start":1,"column_end":47}},{"value":"/ [`DirBuilderExt`]: crate::fs::os::unix::DirBuilderExt","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8557529,"byte_end":8557586,"line_start":15,"line_end":15,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":944},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8558273,"byte_end":8558276,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<DirBuilder>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new set of options with default mode/security settings for all\n platforms and also non-recursive.","sig":null,"attributes":[{"value":"/ Creates a new set of options with default mode/security settings for all","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8557868,"byte_end":8557944,"line_start":27,"line_end":27,"column_start":5,"column_end":81}},{"value":"/ platforms and also non-recursive.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8557949,"byte_end":8557986,"line_start":28,"line_end":28,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8557991,"byte_end":8557994,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::DirBuilder::new`][std]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8557999,"byte_end":8558064,"line_start":30,"line_end":30,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8558069,"byte_end":8558072,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::DirBuilder::new","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8558077,"byte_end":8558112,"line_start":32,"line_end":32,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8558117,"byte_end":8558120,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8558125,"byte_end":8558139,"line_start":34,"line_end":34,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8558144,"byte_end":8558147,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8558152,"byte_end":8558165,"line_start":36,"line_end":36,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::DirBuilder;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8558170,"byte_end":8558200,"line_start":37,"line_end":37,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8558205,"byte_end":8558208,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let builder = DirBuilder::new();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8558213,"byte_end":8558249,"line_start":39,"line_end":39,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8558254,"byte_end":8558261,"line_start":40,"line_end":40,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":945},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8558898,"byte_end":8558907,"line_start":62,"line_end":62,"column_start":12,"column_end":21},"name":"recursive","qualname":"<DirBuilder>::recursive","value":"pub fn recursive(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether to create directories recursively (including all parent directories).\n Parents that do not exist are created with the same security and permissions settings.","sig":null,"attributes":[{"value":"/ Indicates whether to create directories recursively (including all parent directories).","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8558327,"byte_end":8558418,"line_start":45,"line_end":45,"column_start":5,"column_end":96}},{"value":"/ Parents that do not exist are created with the same security and permissions settings.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8558423,"byte_end":8558513,"line_start":46,"line_end":46,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8558518,"byte_end":8558521,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This option defaults to `false`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8558526,"byte_end":8558562,"line_start":48,"line_end":48,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8558567,"byte_end":8558570,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::DirBuilder::recursive`][std]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8558575,"byte_end":8558646,"line_start":50,"line_end":50,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8558651,"byte_end":8558654,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::DirBuilder::recursive","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8558659,"byte_end":8558700,"line_start":52,"line_end":52,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8558705,"byte_end":8558708,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8558713,"byte_end":8558727,"line_start":54,"line_end":54,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8558732,"byte_end":8558735,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8558740,"byte_end":8558753,"line_start":56,"line_end":56,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::DirBuilder;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8558758,"byte_end":8558788,"line_start":57,"line_end":57,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8558793,"byte_end":8558796,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ let mut builder = DirBuilder::new();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8558801,"byte_end":8558841,"line_start":59,"line_end":59,"column_start":5,"column_end":45}},{"value":"/ builder.recursive(true);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8558846,"byte_end":8558874,"line_start":60,"line_end":60,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8558879,"byte_end":8558886,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":946},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8560112,"byte_end":8560118,"line_start":103,"line_end":103,"column_start":18,"column_end":24},"name":"create","qualname":"<DirBuilder>::create","value":"pub async fn create<P: AsRef<Path>, '_>(&'_ Self, P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates the specified directory with the configured options.","sig":null,"attributes":[{"value":"/ Creates the specified directory with the configured options.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8559011,"byte_end":8559075,"line_start":67,"line_end":67,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8559080,"byte_end":8559083,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ It is considered an error if the directory already exists unless","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8559088,"byte_end":8559156,"line_start":69,"line_end":69,"column_start":5,"column_end":73}},{"value":"/ recursive mode is enabled.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8559161,"byte_end":8559191,"line_start":70,"line_end":70,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8559196,"byte_end":8559199,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::DirBuilder::create`][std]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8559204,"byte_end":8559272,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8559277,"byte_end":8559280,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::DirBuilder::create","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8559285,"byte_end":8559323,"line_start":74,"line_end":74,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8559328,"byte_end":8559331,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8559336,"byte_end":8559348,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8559353,"byte_end":8559356,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ An error will be returned under the following circumstances:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8559361,"byte_end":8559425,"line_start":78,"line_end":78,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8559430,"byte_end":8559433,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ * Path already points to an existing file.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8559438,"byte_end":8559484,"line_start":80,"line_end":80,"column_start":5,"column_end":51}},{"value":"/ * Path already points to an existing directory and the mode is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8559489,"byte_end":8559555,"line_start":81,"line_end":81,"column_start":5,"column_end":71}},{"value":"/   non-recursive.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8559560,"byte_end":8559580,"line_start":82,"line_end":82,"column_start":5,"column_end":25}},{"value":"/ * The calling process doesn't have permissions to create the directory","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8559585,"byte_end":8559659,"line_start":83,"line_end":83,"column_start":5,"column_end":79}},{"value":"/   or its missing parents.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8559664,"byte_end":8559693,"line_start":84,"line_end":84,"column_start":5,"column_end":34}},{"value":"/ * Other I/O error occurred.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8559698,"byte_end":8559729,"line_start":85,"line_end":85,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8559734,"byte_end":8559737,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8559742,"byte_end":8559756,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8559761,"byte_end":8559764,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8559769,"byte_end":8559782,"line_start":89,"line_end":89,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::DirBuilder;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8559787,"byte_end":8559817,"line_start":90,"line_end":90,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8559822,"byte_end":8559838,"line_start":91,"line_end":91,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8559843,"byte_end":8559846,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8559851,"byte_end":8559869,"line_start":93,"line_end":93,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8559874,"byte_end":8559913,"line_start":94,"line_end":94,"column_start":5,"column_end":44}},{"value":"/     DirBuilder::new()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8559918,"byte_end":8559943,"line_start":95,"line_end":95,"column_start":5,"column_end":30}},{"value":"/         .recursive(true)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8559948,"byte_end":8559976,"line_start":96,"line_end":96,"column_start":5,"column_end":33}},{"value":"/         .create(\"/tmp/foo/bar/baz\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8559981,"byte_end":8560020,"line_start":97,"line_end":97,"column_start":5,"column_end":44}},{"value":"/         .await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8560025,"byte_end":8560045,"line_start":98,"line_end":98,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8560050,"byte_end":8560053,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8560058,"byte_end":8560072,"line_start":100,"line_end":100,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8560077,"byte_end":8560082,"line_start":101,"line_end":101,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8560087,"byte_end":8560094,"line_start":102,"line_end":102,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":977},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8563124,"byte_end":8563128,"line_start":81,"line_end":81,"column_start":12,"column_end":16},"name":"File","qualname":"::fs::file::File","value":"File {  }","parent":null,"children":[{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980}],"decl_id":null,"docs":" A reference to an open file on the filesystem.","sig":null,"attributes":[{"value":"/ A reference to an open file on the filesystem.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8560991,"byte_end":8561041,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8561042,"byte_end":8561045,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This is a specialized version of [`std::fs::File`][std] for usage from the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8561046,"byte_end":8561124,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ Tokio runtime.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8561125,"byte_end":8561143,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8561144,"byte_end":8561147,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ An instance of a `File` can be read and/or written depending on what options","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8561148,"byte_end":8561228,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ it was opened with. Files also implement [`AsyncSeek`] to alter the logical","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8561229,"byte_end":8561308,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/ cursor that the file contains internally.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8561309,"byte_end":8561354,"line_start":28,"line_end":28,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8561355,"byte_end":8561358,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ A file will not be closed immediately when it goes out of scope if there","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8561359,"byte_end":8561435,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ are any IO operations that have not yet completed. To ensure that a file is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8561436,"byte_end":8561515,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ closed immediately when it is dropped, you should call [`flush`] before","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8561516,"byte_end":8561591,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"/ dropping it. Note that this does not ensure that the file has been fully","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8561592,"byte_end":8561668,"line_start":33,"line_end":33,"column_start":1,"column_end":77}},{"value":"/ written to disk; the operating system might keep the changes around in an","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8561669,"byte_end":8561746,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ in-memory buffer. See the [`sync_all`] method for telling the OS to write","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8561747,"byte_end":8561824,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ the data to disk.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8561825,"byte_end":8561846,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8561847,"byte_end":8561850,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Reading and writing to a `File` is usually done using the convenience","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8561851,"byte_end":8561924,"line_start":38,"line_end":38,"column_start":1,"column_end":74}},{"value":"/ methods found on the [`AsyncReadExt`] and [`AsyncWriteExt`] traits. Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8561925,"byte_end":8562005,"line_start":39,"line_end":39,"column_start":1,"column_end":81}},{"value":"/ import these traits through [the prelude].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8562006,"byte_end":8562052,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8562053,"byte_end":8562056,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [std]: struct@std::fs::File","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8562057,"byte_end":8562088,"line_start":42,"line_end":42,"column_start":1,"column_end":32}},{"value":"/ [`AsyncSeek`]: trait@crate::io::AsyncSeek","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8562089,"byte_end":8562134,"line_start":43,"line_end":43,"column_start":1,"column_end":46}},{"value":"/ [`flush`]: fn@crate::io::AsyncWriteExt::flush","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8562135,"byte_end":8562184,"line_start":44,"line_end":44,"column_start":1,"column_end":50}},{"value":"/ [`sync_all`]: fn@crate::fs::File::sync_all","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8562185,"byte_end":8562231,"line_start":45,"line_end":45,"column_start":1,"column_end":47}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8562232,"byte_end":8562283,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8562284,"byte_end":8562337,"line_start":47,"line_end":47,"column_start":1,"column_end":54}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8562338,"byte_end":8562371,"line_start":48,"line_end":48,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8562372,"byte_end":8562375,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8562376,"byte_end":8562390,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8562391,"byte_end":8562394,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Create a new file and asynchronously write bytes to it:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8562395,"byte_end":8562454,"line_start":52,"line_end":52,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8562455,"byte_end":8562458,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8562459,"byte_end":8562472,"line_start":54,"line_end":54,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8562473,"byte_end":8562497,"line_start":55,"line_end":55,"column_start":1,"column_end":25}},{"value":"/ use tokio::prelude::*; // for write_all()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8562498,"byte_end":8562543,"line_start":56,"line_end":56,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8562544,"byte_end":8562547,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8562548,"byte_end":8562593,"line_start":58,"line_end":58,"column_start":1,"column_end":46}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8562594,"byte_end":8562644,"line_start":59,"line_end":59,"column_start":1,"column_end":51}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8562645,"byte_end":8562689,"line_start":60,"line_end":60,"column_start":1,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8562690,"byte_end":8562702,"line_start":61,"line_end":61,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8562703,"byte_end":8562710,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8562711,"byte_end":8562718,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8562719,"byte_end":8562722,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Read the contents of a file into a buffer","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8562723,"byte_end":8562768,"line_start":65,"line_end":65,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8562769,"byte_end":8562772,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8562773,"byte_end":8562786,"line_start":67,"line_end":67,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8562787,"byte_end":8562811,"line_start":68,"line_end":68,"column_start":1,"column_end":25}},{"value":"/ use tokio::prelude::*; // for read_to_end()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8562812,"byte_end":8562859,"line_start":69,"line_end":69,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8562860,"byte_end":8562863,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8562864,"byte_end":8562909,"line_start":71,"line_end":71,"column_start":1,"column_end":46}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8562910,"byte_end":8562958,"line_start":72,"line_end":72,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8562959,"byte_end":8562962,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ let mut contents = vec![];","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8562963,"byte_end":8562993,"line_start":74,"line_end":74,"column_start":1,"column_end":31}},{"value":"/ file.read_to_end(&mut contents).await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8562994,"byte_end":8563037,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8563038,"byte_end":8563041,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ println!(\"len = {}\", contents.len());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8563042,"byte_end":8563083,"line_start":77,"line_end":77,"column_start":1,"column_end":42}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8563084,"byte_end":8563096,"line_start":78,"line_end":78,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8563097,"byte_end":8563104,"line_start":79,"line_end":79,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8563105,"byte_end":8563112,"line_start":80,"line_end":80,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8564674,"byte_end":8564678,"line_start":138,"line_end":138,"column_start":18,"column_end":22},"name":"open","qualname":"<File>::open","value":"pub async fn open<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Attempts to open a file in read-only mode.","sig":null,"attributes":[{"value":"/ Attempts to open a file in read-only mode.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8563643,"byte_end":8563689,"line_start":105,"line_end":105,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8563694,"byte_end":8563697,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ See [`OpenOptions`] for more details.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8563702,"byte_end":8563743,"line_start":107,"line_end":107,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8563748,"byte_end":8563751,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ [`OpenOptions`]: super::OpenOptions","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8563756,"byte_end":8563795,"line_start":109,"line_end":109,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8563800,"byte_end":8563803,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8563808,"byte_end":8563820,"line_start":111,"line_end":111,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8563825,"byte_end":8563828,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if called from outside of the Tokio","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8563833,"byte_end":8563907,"line_start":113,"line_end":113,"column_start":5,"column_end":79}},{"value":"/ runtime or if path does not already exist. Other errors may also be","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8563912,"byte_end":8563983,"line_start":114,"line_end":114,"column_start":5,"column_end":76}},{"value":"/ returned according to OpenOptions::open.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8563988,"byte_end":8564032,"line_start":115,"line_end":115,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8564037,"byte_end":8564040,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8564045,"byte_end":8564059,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8564064,"byte_end":8564067,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8564072,"byte_end":8564085,"line_start":119,"line_end":119,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8564090,"byte_end":8564114,"line_start":120,"line_end":120,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8564119,"byte_end":8564145,"line_start":121,"line_end":121,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8564150,"byte_end":8564153,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8564158,"byte_end":8564203,"line_start":123,"line_end":123,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8564208,"byte_end":8564256,"line_start":124,"line_end":124,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8564261,"byte_end":8564264,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let mut contents = vec![];","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8564269,"byte_end":8564299,"line_start":126,"line_end":126,"column_start":5,"column_end":35}},{"value":"/ file.read_to_end(&mut contents).await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8564304,"byte_end":8564347,"line_start":127,"line_end":127,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8564352,"byte_end":8564355,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ println!(\"len = {}\", contents.len());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8564360,"byte_end":8564401,"line_start":129,"line_end":129,"column_start":5,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8564406,"byte_end":8564418,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8564423,"byte_end":8564430,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8564435,"byte_end":8564442,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8564447,"byte_end":8564450,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ The [`read_to_end`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8564455,"byte_end":8564527,"line_start":134,"line_end":134,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8564532,"byte_end":8564535,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ [`read_to_end`]: fn@crate::io::AsyncReadExt::read_to_end","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8564540,"byte_end":8564600,"line_start":136,"line_end":136,"column_start":5,"column_end":65}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8564605,"byte_end":8564656,"line_start":137,"line_end":137,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":987},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8565896,"byte_end":8565902,"line_start":178,"line_end":178,"column_start":18,"column_end":24},"name":"create","qualname":"<File>::create","value":"pub async fn create<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a file in write-only mode.","sig":null,"attributes":[{"value":"/ Opens a file in write-only mode.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8564875,"byte_end":8564911,"line_start":145,"line_end":145,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8564916,"byte_end":8564919,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This function will create a file if it does not exist, and will truncate","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8564924,"byte_end":8565000,"line_start":147,"line_end":147,"column_start":5,"column_end":81}},{"value":"/ it if it does.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8565005,"byte_end":8565023,"line_start":148,"line_end":148,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8565028,"byte_end":8565031,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ See [`OpenOptions`] for more details.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8565036,"byte_end":8565077,"line_start":150,"line_end":150,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8565082,"byte_end":8565085,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ [`OpenOptions`]: super::OpenOptions","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8565090,"byte_end":8565129,"line_start":152,"line_end":152,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8565134,"byte_end":8565137,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8565142,"byte_end":8565154,"line_start":154,"line_end":154,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8565159,"byte_end":8565162,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Results in an error if called from outside of the Tokio runtime or if","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8565167,"byte_end":8565240,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/ the underlying [`create`] call results in an error.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8565245,"byte_end":8565300,"line_start":157,"line_end":157,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8565305,"byte_end":8565308,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ [`create`]: std::fs::File::create","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8565313,"byte_end":8565350,"line_start":159,"line_end":159,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8565355,"byte_end":8565358,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8565363,"byte_end":8565377,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8565382,"byte_end":8565385,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8565390,"byte_end":8565403,"line_start":163,"line_end":163,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8565408,"byte_end":8565432,"line_start":164,"line_end":164,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8565437,"byte_end":8565463,"line_start":165,"line_end":165,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8565468,"byte_end":8565471,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8565476,"byte_end":8565521,"line_start":167,"line_end":167,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8565526,"byte_end":8565576,"line_start":168,"line_end":168,"column_start":5,"column_end":55}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8565581,"byte_end":8565625,"line_start":169,"line_end":169,"column_start":5,"column_end":49}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8565630,"byte_end":8565642,"line_start":170,"line_end":170,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8565647,"byte_end":8565654,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8565659,"byte_end":8565666,"line_start":172,"line_end":172,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8565671,"byte_end":8565674,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8565679,"byte_end":8565750,"line_start":174,"line_end":174,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8565755,"byte_end":8565758,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8565763,"byte_end":8565820,"line_start":176,"line_end":176,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8565825,"byte_end":8565878,"line_start":177,"line_end":177,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":992},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8566539,"byte_end":8566547,"line_start":197,"line_end":197,"column_start":12,"column_end":20},"name":"from_std","qualname":"<File>::from_std","value":"pub fn from_std(sys::File) -> File","parent":null,"children":[],"decl_id":null,"docs":" Converts a [`std::fs::File`][std] to a [`tokio::fs::File`][file].","sig":null,"attributes":[{"value":"/ Converts a [`std::fs::File`][std] to a [`tokio::fs::File`][file].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8566115,"byte_end":8566184,"line_start":184,"line_end":184,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8566189,"byte_end":8566192,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::File","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8566197,"byte_end":8566221,"line_start":186,"line_end":186,"column_start":5,"column_end":29}},{"value":"/ [file]: File","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8566226,"byte_end":8566242,"line_start":187,"line_end":187,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8566247,"byte_end":8566250,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8566255,"byte_end":8566269,"line_start":189,"line_end":189,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8566274,"byte_end":8566277,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8566282,"byte_end":8566295,"line_start":191,"line_end":191,"column_start":5,"column_end":18}},{"value":"/ // This line could block. It is not recommended to do this on the Tokio","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8566300,"byte_end":8566375,"line_start":192,"line_end":192,"column_start":5,"column_end":80}},{"value":"/ // runtime.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8566380,"byte_end":8566395,"line_start":193,"line_end":193,"column_start":5,"column_end":20}},{"value":"/ let std_file = std::fs::File::open(\"foo.txt\").unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8566400,"byte_end":8566459,"line_start":194,"line_end":194,"column_start":5,"column_end":64}},{"value":"/ let file = tokio::fs::File::from_std(std_file);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8566464,"byte_end":8566515,"line_start":195,"line_end":195,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8566520,"byte_end":8566527,"line_start":196,"line_end":196,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":993},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8567459,"byte_end":8567463,"line_start":229,"line_end":229,"column_start":18,"column_end":22},"name":"seek","qualname":"<File>::seek","value":"pub async fn seek<'_>(&'_ mut Self, SeekFrom) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Seeks to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Seeks to an offset, in bytes, in a stream.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8566737,"byte_end":8566783,"line_start":205,"line_end":205,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8566788,"byte_end":8566791,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8566796,"byte_end":8566810,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8566815,"byte_end":8566818,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8566823,"byte_end":8566836,"line_start":209,"line_end":209,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8566841,"byte_end":8566865,"line_start":210,"line_end":210,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8566870,"byte_end":8566896,"line_start":211,"line_end":211,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8566901,"byte_end":8566904,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ use std::io::SeekFrom;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8566909,"byte_end":8566935,"line_start":213,"line_end":213,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8566940,"byte_end":8566943,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8566948,"byte_end":8566993,"line_start":215,"line_end":215,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8566998,"byte_end":8567046,"line_start":216,"line_end":216,"column_start":5,"column_end":53}},{"value":"/ file.seek(SeekFrom::Start(6)).await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8567051,"byte_end":8567092,"line_start":217,"line_end":217,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8567097,"byte_end":8567100,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ let mut contents = vec![0u8; 10];","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8567105,"byte_end":8567142,"line_start":219,"line_end":219,"column_start":5,"column_end":42}},{"value":"/ file.read_exact(&mut contents).await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8567147,"byte_end":8567189,"line_start":220,"line_end":220,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8567194,"byte_end":8567206,"line_start":221,"line_end":221,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8567211,"byte_end":8567218,"line_start":222,"line_end":222,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8567223,"byte_end":8567230,"line_start":223,"line_end":223,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8567235,"byte_end":8567238,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ The [`read_exact`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8567243,"byte_end":8567314,"line_start":225,"line_end":225,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8567319,"byte_end":8567322,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ [`read_exact`]: fn@crate::io::AsyncReadExt::read_exact","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8567327,"byte_end":8567385,"line_start":227,"line_end":227,"column_start":5,"column_end":63}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8567390,"byte_end":8567441,"line_start":228,"line_end":228,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":997},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8569204,"byte_end":8569212,"line_start":290,"line_end":290,"column_start":18,"column_end":26},"name":"sync_all","qualname":"<File>::sync_all","value":"pub async fn sync_all<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Attempts to sync all OS-internal metadata to disk.","sig":null,"attributes":[{"value":"/ Attempts to sync all OS-internal metadata to disk.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8568448,"byte_end":8568502,"line_start":267,"line_end":267,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8568507,"byte_end":8568510,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ This function will attempt to ensure that all in-core data reaches the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8568515,"byte_end":8568589,"line_start":269,"line_end":269,"column_start":5,"column_end":79}},{"value":"/ filesystem before returning.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8568594,"byte_end":8568626,"line_start":270,"line_end":270,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8568631,"byte_end":8568634,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8568639,"byte_end":8568653,"line_start":272,"line_end":272,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8568658,"byte_end":8568661,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8568666,"byte_end":8568679,"line_start":274,"line_end":274,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8568684,"byte_end":8568708,"line_start":275,"line_end":275,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8568713,"byte_end":8568739,"line_start":276,"line_end":276,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8568744,"byte_end":8568747,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8568752,"byte_end":8568797,"line_start":278,"line_end":278,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8568802,"byte_end":8568852,"line_start":279,"line_end":279,"column_start":5,"column_end":55}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8568857,"byte_end":8568901,"line_start":280,"line_end":280,"column_start":5,"column_end":49}},{"value":"/ file.sync_all().await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8568906,"byte_end":8568933,"line_start":281,"line_end":281,"column_start":5,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8568938,"byte_end":8568950,"line_start":282,"line_end":282,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8568955,"byte_end":8568962,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8568967,"byte_end":8568974,"line_start":284,"line_end":284,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8568979,"byte_end":8568982,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8568987,"byte_end":8569058,"line_start":286,"line_end":286,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8569063,"byte_end":8569066,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8569071,"byte_end":8569128,"line_start":288,"line_end":288,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8569133,"byte_end":8569186,"line_start":289,"line_end":289,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8570353,"byte_end":8570362,"line_start":324,"line_end":324,"column_start":18,"column_end":27},"name":"sync_data","qualname":"<File>::sync_data","value":"pub async fn sync_data<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" This function is similar to `sync_all`, except that it may not\n synchronize file metadata to the filesystem.","sig":null,"attributes":[{"value":"/ This function is similar to `sync_all`, except that it may not","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8569379,"byte_end":8569445,"line_start":297,"line_end":297,"column_start":5,"column_end":71}},{"value":"/ synchronize file metadata to the filesystem.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8569450,"byte_end":8569498,"line_start":298,"line_end":298,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8569503,"byte_end":8569506,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ This is intended for use cases that must synchronize content, but don't","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8569511,"byte_end":8569586,"line_start":300,"line_end":300,"column_start":5,"column_end":80}},{"value":"/ need the metadata on disk. The goal of this method is to reduce disk","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8569591,"byte_end":8569663,"line_start":301,"line_end":301,"column_start":5,"column_end":77}},{"value":"/ operations.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8569668,"byte_end":8569683,"line_start":302,"line_end":302,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8569688,"byte_end":8569691,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ Note that some platforms may simply implement this in terms of `sync_all`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8569696,"byte_end":8569774,"line_start":304,"line_end":304,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8569779,"byte_end":8569782,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8569787,"byte_end":8569801,"line_start":306,"line_end":306,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8569806,"byte_end":8569809,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8569814,"byte_end":8569827,"line_start":308,"line_end":308,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8569832,"byte_end":8569856,"line_start":309,"line_end":309,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8569861,"byte_end":8569887,"line_start":310,"line_end":310,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8569892,"byte_end":8569895,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8569900,"byte_end":8569945,"line_start":312,"line_end":312,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8569950,"byte_end":8570000,"line_start":313,"line_end":313,"column_start":5,"column_end":55}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8570005,"byte_end":8570049,"line_start":314,"line_end":314,"column_start":5,"column_end":49}},{"value":"/ file.sync_data().await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8570054,"byte_end":8570082,"line_start":315,"line_end":315,"column_start":5,"column_end":33}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8570087,"byte_end":8570099,"line_start":316,"line_end":316,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8570104,"byte_end":8570111,"line_start":317,"line_end":317,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8570116,"byte_end":8570123,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8570128,"byte_end":8570131,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8570136,"byte_end":8570207,"line_start":320,"line_end":320,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8570212,"byte_end":8570215,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8570220,"byte_end":8570277,"line_start":322,"line_end":322,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8570282,"byte_end":8570335,"line_start":323,"line_end":323,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1005},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8571587,"byte_end":8571594,"line_start":361,"line_end":361,"column_start":18,"column_end":25},"name":"set_len","qualname":"<File>::set_len","value":"pub async fn set_len<'_>(&'_ mut Self, u64) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Truncates or extends the underlying file, updating the size of this file to become size.","sig":null,"attributes":[{"value":"/ Truncates or extends the underlying file, updating the size of this file to become size.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8570530,"byte_end":8570622,"line_start":331,"line_end":331,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8570627,"byte_end":8570630,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ If the size is less than the current file's size, then the file will be","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8570635,"byte_end":8570710,"line_start":333,"line_end":333,"column_start":5,"column_end":80}},{"value":"/ shrunk. If it is greater than the current file's size, then the file","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8570715,"byte_end":8570787,"line_start":334,"line_end":334,"column_start":5,"column_end":77}},{"value":"/ will be extended to size and have all of the intermediate data filled in","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8570792,"byte_end":8570868,"line_start":335,"line_end":335,"column_start":5,"column_end":81}},{"value":"/ with 0s.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8570873,"byte_end":8570885,"line_start":336,"line_end":336,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8570890,"byte_end":8570893,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8570898,"byte_end":8570910,"line_start":338,"line_end":338,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8570915,"byte_end":8570918,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the file is not opened for","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8570923,"byte_end":8570991,"line_start":340,"line_end":340,"column_start":5,"column_end":73}},{"value":"/ writing.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8570996,"byte_end":8571008,"line_start":341,"line_end":341,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8571013,"byte_end":8571016,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8571021,"byte_end":8571035,"line_start":343,"line_end":343,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8571040,"byte_end":8571043,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8571048,"byte_end":8571061,"line_start":345,"line_end":345,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8571066,"byte_end":8571090,"line_start":346,"line_end":346,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8571095,"byte_end":8571121,"line_start":347,"line_end":347,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8571126,"byte_end":8571129,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8571134,"byte_end":8571179,"line_start":349,"line_end":349,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8571184,"byte_end":8571234,"line_start":350,"line_end":350,"column_start":5,"column_end":55}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8571239,"byte_end":8571283,"line_start":351,"line_end":351,"column_start":5,"column_end":49}},{"value":"/ file.set_len(10).await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8571288,"byte_end":8571316,"line_start":352,"line_end":352,"column_start":5,"column_end":33}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8571321,"byte_end":8571333,"line_start":353,"line_end":353,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8571338,"byte_end":8571345,"line_start":354,"line_end":354,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8571350,"byte_end":8571357,"line_start":355,"line_end":355,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8571362,"byte_end":8571365,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8571370,"byte_end":8571441,"line_start":357,"line_end":357,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8571446,"byte_end":8571449,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8571454,"byte_end":8571511,"line_start":359,"line_end":359,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8571516,"byte_end":8571569,"line_start":360,"line_end":360,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8573080,"byte_end":8573088,"line_start":417,"line_end":417,"column_start":18,"column_end":26},"name":"metadata","qualname":"<File>::metadata","value":"pub async fn metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Queries metadata about the underlying file.","sig":null,"attributes":[{"value":"/ Queries metadata about the underlying file.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8572694,"byte_end":8572741,"line_start":402,"line_end":402,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8572746,"byte_end":8572749,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8572754,"byte_end":8572768,"line_start":404,"line_end":404,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8572773,"byte_end":8572776,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8572781,"byte_end":8572794,"line_start":406,"line_end":406,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8572799,"byte_end":8572823,"line_start":407,"line_end":407,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8572828,"byte_end":8572831,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8572836,"byte_end":8572881,"line_start":409,"line_end":409,"column_start":5,"column_end":50}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8572886,"byte_end":8572930,"line_start":410,"line_end":410,"column_start":5,"column_end":49}},{"value":"/ let metadata = file.metadata().await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8572935,"byte_end":8572977,"line_start":411,"line_end":411,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8572982,"byte_end":8572985,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", metadata);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8572990,"byte_end":8573021,"line_start":413,"line_end":413,"column_start":5,"column_end":36}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8573026,"byte_end":8573038,"line_start":414,"line_end":414,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8573043,"byte_end":8573050,"line_start":415,"line_end":415,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8573055,"byte_end":8573062,"line_start":416,"line_end":416,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8573712,"byte_end":8573721,"line_start":437,"line_end":437,"column_start":18,"column_end":27},"name":"try_clone","qualname":"<File>::try_clone","value":"pub async fn try_clone<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Create a new `File` instance that shares the same underlying file handle\n as the existing `File` instance. Reads, writes, and seeks will affect both\n File instances simultaneously.","sig":null,"attributes":[{"value":"/ Create a new `File` instance that shares the same underlying file handle","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8573216,"byte_end":8573292,"line_start":422,"line_end":422,"column_start":5,"column_end":81}},{"value":"/ as the existing `File` instance. Reads, writes, and seeks will affect both","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8573297,"byte_end":8573375,"line_start":423,"line_end":423,"column_start":5,"column_end":83}},{"value":"/ File instances simultaneously.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8573380,"byte_end":8573414,"line_start":424,"line_end":424,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8573419,"byte_end":8573422,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8573427,"byte_end":8573441,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8573446,"byte_end":8573449,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8573454,"byte_end":8573467,"line_start":428,"line_end":428,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8573472,"byte_end":8573496,"line_start":429,"line_end":429,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8573501,"byte_end":8573504,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8573509,"byte_end":8573554,"line_start":431,"line_end":431,"column_start":5,"column_end":50}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8573559,"byte_end":8573603,"line_start":432,"line_end":432,"column_start":5,"column_end":49}},{"value":"/ let file_clone = file.try_clone().await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8573608,"byte_end":8573653,"line_start":433,"line_end":433,"column_start":5,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8573658,"byte_end":8573670,"line_start":434,"line_end":434,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8573675,"byte_end":8573682,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8573687,"byte_end":8573694,"line_start":436,"line_end":436,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1020},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8574451,"byte_end":8574459,"line_start":461,"line_end":461,"column_start":18,"column_end":26},"name":"into_std","qualname":"<File>::into_std","value":"pub async fn into_std(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Destructures `File` into a [`std::fs::File`][std]. This function is\n async to allow any in-flight operations to complete.","sig":null,"attributes":[{"value":"/ Destructures `File` into a [`std::fs::File`][std]. This function is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8573900,"byte_end":8573971,"line_start":443,"line_end":443,"column_start":5,"column_end":76}},{"value":"/ async to allow any in-flight operations to complete.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8573976,"byte_end":8574032,"line_start":444,"line_end":444,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8574037,"byte_end":8574040,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ Use `File::try_into_std` to attempt conversion immediately.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8574045,"byte_end":8574108,"line_start":446,"line_end":446,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8574113,"byte_end":8574116,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::File","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8574121,"byte_end":8574145,"line_start":448,"line_end":448,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8574150,"byte_end":8574153,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8574158,"byte_end":8574172,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8574177,"byte_end":8574180,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8574185,"byte_end":8574198,"line_start":452,"line_end":452,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8574203,"byte_end":8574227,"line_start":453,"line_end":453,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8574232,"byte_end":8574235,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8574240,"byte_end":8574285,"line_start":455,"line_end":455,"column_start":5,"column_end":50}},{"value":"/ let tokio_file = File::open(\"foo.txt\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8574290,"byte_end":8574340,"line_start":456,"line_end":456,"column_start":5,"column_end":55}},{"value":"/ let std_file = tokio_file.into_std().await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8574345,"byte_end":8574392,"line_start":457,"line_end":457,"column_start":5,"column_end":52}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8574397,"byte_end":8574409,"line_start":458,"line_end":458,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8574414,"byte_end":8574421,"line_start":459,"line_end":459,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8574426,"byte_end":8574433,"line_start":460,"line_end":460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1023},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8575157,"byte_end":8575169,"line_start":486,"line_end":486,"column_start":12,"column_end":24},"name":"try_into_std","qualname":"<File>::try_into_std","value":"pub fn try_into_std(Self) -> Result<sys::File, Self>","parent":null,"children":[],"decl_id":null,"docs":" Tries to immediately destructure `File` into a [`std::fs::File`][std].","sig":null,"attributes":[{"value":"/ Tries to immediately destructure `File` into a [`std::fs::File`][std].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8574603,"byte_end":8574677,"line_start":466,"line_end":466,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8574682,"byte_end":8574685,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::File","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8574690,"byte_end":8574714,"line_start":468,"line_end":468,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8574719,"byte_end":8574722,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8574727,"byte_end":8574739,"line_start":470,"line_end":470,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8574744,"byte_end":8574747,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ This function will return an error containing the file if some","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8574752,"byte_end":8574818,"line_start":472,"line_end":472,"column_start":5,"column_end":71}},{"value":"/ operation is in-flight.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8574823,"byte_end":8574850,"line_start":473,"line_end":473,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8574855,"byte_end":8574858,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8574863,"byte_end":8574877,"line_start":475,"line_end":475,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8574882,"byte_end":8574885,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8574890,"byte_end":8574903,"line_start":477,"line_end":477,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8574908,"byte_end":8574932,"line_start":478,"line_end":478,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8574937,"byte_end":8574940,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8574945,"byte_end":8574990,"line_start":480,"line_end":480,"column_start":5,"column_end":50}},{"value":"/ let tokio_file = File::open(\"foo.txt\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8574995,"byte_end":8575045,"line_start":481,"line_end":481,"column_start":5,"column_end":55}},{"value":"/ let std_file = tokio_file.try_into_std().unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8575050,"byte_end":8575104,"line_start":482,"line_end":482,"column_start":5,"column_end":59}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8575109,"byte_end":8575121,"line_start":483,"line_end":483,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8575126,"byte_end":8575133,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8575138,"byte_end":8575145,"line_start":485,"line_end":485,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8576447,"byte_end":8576462,"line_start":525,"line_end":525,"column_start":18,"column_end":33},"name":"set_permissions","qualname":"<File>::set_permissions","value":"pub async fn set_permissions<'_>(&'_ Self, Permissions) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Changes the permissions on the underlying file.","sig":null,"attributes":[{"value":"/ Changes the permissions on the underlying file.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8575422,"byte_end":8575473,"line_start":496,"line_end":496,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8575478,"byte_end":8575481,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8575486,"byte_end":8575518,"line_start":498,"line_end":498,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8575523,"byte_end":8575526,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ This function currently corresponds to the `fchmod` function on Unix and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8575531,"byte_end":8575607,"line_start":500,"line_end":500,"column_start":5,"column_end":81}},{"value":"/ the `SetFileInformationByHandle` function on Windows. Note that, this","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8575612,"byte_end":8575685,"line_start":501,"line_end":501,"column_start":5,"column_end":78}},{"value":"/ [may change in the future][changes].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8575690,"byte_end":8575730,"line_start":502,"line_end":502,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8575735,"byte_end":8575738,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8575743,"byte_end":8575828,"line_start":504,"line_end":504,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8575833,"byte_end":8575836,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8575841,"byte_end":8575853,"line_start":506,"line_end":506,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8575858,"byte_end":8575861,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the user lacks permission change","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8575866,"byte_end":8575940,"line_start":508,"line_end":508,"column_start":5,"column_end":79}},{"value":"/ attributes on the underlying file. It may also return an error in other","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8575945,"byte_end":8576020,"line_start":509,"line_end":509,"column_start":5,"column_end":80}},{"value":"/ os-specific unspecified cases.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8576025,"byte_end":8576059,"line_start":510,"line_end":510,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8576064,"byte_end":8576067,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8576072,"byte_end":8576086,"line_start":512,"line_end":512,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8576091,"byte_end":8576094,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8576099,"byte_end":8576112,"line_start":514,"line_end":514,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8576117,"byte_end":8576141,"line_start":515,"line_end":515,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8576146,"byte_end":8576149,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8576154,"byte_end":8576199,"line_start":517,"line_end":517,"column_start":5,"column_end":50}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8576204,"byte_end":8576248,"line_start":518,"line_end":518,"column_start":5,"column_end":49}},{"value":"/ let mut perms = file.metadata().await?.permissions();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8576253,"byte_end":8576310,"line_start":519,"line_end":519,"column_start":5,"column_end":62}},{"value":"/ perms.set_readonly(true);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8576315,"byte_end":8576344,"line_start":520,"line_end":520,"column_start":5,"column_end":34}},{"value":"/ file.set_permissions(perms).await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8576349,"byte_end":8576388,"line_start":521,"line_end":521,"column_start":5,"column_end":44}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8576393,"byte_end":8576405,"line_start":522,"line_end":522,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8576410,"byte_end":8576417,"line_start":523,"line_end":523,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8576422,"byte_end":8576429,"line_start":524,"line_end":524,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":1058},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/hard_link.rs","byte_start":8586468,"byte_end":8586477,"line_start":41,"line_end":41,"column_start":14,"column_end":23},"name":"hard_link","qualname":"::fs::hard_link::hard_link","value":"pub async fn hard_link<impl AsRef<Path>: AsRef<Path>,\n                       impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>,\n                                                      impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new hard link on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a new hard link on the filesystem.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/hard_link.rs","byte_start":8585421,"byte_end":8585467,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/hard_link.rs","byte_start":8585468,"byte_end":8585471,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::hard_link`][std]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/hard_link.rs","byte_start":8585472,"byte_end":8585531,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/hard_link.rs","byte_start":8585532,"byte_end":8585535,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::hard_link","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/hard_link.rs","byte_start":8585536,"byte_end":8585565,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/hard_link.rs","byte_start":8585566,"byte_end":8585569,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a link pointing to the `src` path. Note that systems","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/hard_link.rs","byte_start":8585570,"byte_end":8585649,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ often require these two paths to both be located on the same filesystem.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/hard_link.rs","byte_start":8585650,"byte_end":8585726,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/hard_link.rs","byte_start":8585727,"byte_end":8585730,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/hard_link.rs","byte_start":8585731,"byte_end":8585763,"line_start":15,"line_end":15,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/hard_link.rs","byte_start":8585764,"byte_end":8585767,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `link` function on Unix","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/hard_link.rs","byte_start":8585768,"byte_end":8585838,"line_start":17,"line_end":17,"column_start":1,"column_end":71}},{"value":"/ and the `CreateHardLink` function on Windows.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/hard_link.rs","byte_start":8585839,"byte_end":8585888,"line_start":18,"line_end":18,"column_start":1,"column_end":50}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/hard_link.rs","byte_start":8585889,"byte_end":8585945,"line_start":19,"line_end":19,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/hard_link.rs","byte_start":8585946,"byte_end":8585949,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/hard_link.rs","byte_start":8585950,"byte_end":8586035,"line_start":21,"line_end":21,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/hard_link.rs","byte_start":8586036,"byte_end":8586039,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/hard_link.rs","byte_start":8586040,"byte_end":8586052,"line_start":23,"line_end":23,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/hard_link.rs","byte_start":8586053,"byte_end":8586056,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/hard_link.rs","byte_start":8586057,"byte_end":8586135,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/hard_link.rs","byte_start":8586136,"byte_end":8586168,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/hard_link.rs","byte_start":8586169,"byte_end":8586172,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ * The `src` path is not a file or doesn't exist.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/hard_link.rs","byte_start":8586173,"byte_end":8586225,"line_start":28,"line_end":28,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/hard_link.rs","byte_start":8586226,"byte_end":8586229,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/hard_link.rs","byte_start":8586230,"byte_end":8586244,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/hard_link.rs","byte_start":8586245,"byte_end":8586248,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/hard_link.rs","byte_start":8586249,"byte_end":8586262,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/hard_link.rs","byte_start":8586263,"byte_end":8586281,"line_start":33,"line_end":33,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/hard_link.rs","byte_start":8586282,"byte_end":8586285,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/hard_link.rs","byte_start":8586286,"byte_end":8586304,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> std::io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/hard_link.rs","byte_start":8586305,"byte_end":8586349,"line_start":36,"line_end":36,"column_start":1,"column_end":45}},{"value":"/     fs::hard_link(\"a.txt\", \"b.txt\").await?; // Hard link a.txt to b.txt","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/hard_link.rs","byte_start":8586350,"byte_end":8586425,"line_start":37,"line_end":37,"column_start":1,"column_end":76}},{"value":"/     Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/hard_link.rs","byte_start":8586426,"byte_end":8586440,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/hard_link.rs","byte_start":8586441,"byte_end":8586446,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/hard_link.rs","byte_start":8586447,"byte_end":8586454,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1070},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/metadata.rs","byte_start":8587872,"byte_end":8587880,"line_start":44,"line_end":44,"column_start":14,"column_end":22},"name":"metadata","qualname":"::fs::metadata::metadata","value":"pub async fn metadata<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Given a path, queries the file system to get information about a file,\n directory, etc.","sig":null,"attributes":[{"value":"/ Given a path, queries the file system to get information about a file,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/metadata.rs","byte_start":8586767,"byte_end":8586841,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/ directory, etc.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/metadata.rs","byte_start":8586842,"byte_end":8586861,"line_start":8,"line_end":8,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/metadata.rs","byte_start":8586862,"byte_end":8586865,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::metadata`][std]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/metadata.rs","byte_start":8586866,"byte_end":8586924,"line_start":10,"line_end":10,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/metadata.rs","byte_start":8586925,"byte_end":8586928,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/metadata.rs","byte_start":8586929,"byte_end":8587006,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ destination file.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/metadata.rs","byte_start":8587007,"byte_end":8587028,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/metadata.rs","byte_start":8587029,"byte_end":8587032,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/metadata.rs","byte_start":8587033,"byte_end":8587065,"line_start":15,"line_end":15,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/metadata.rs","byte_start":8587066,"byte_end":8587069,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `stat` function on Unix and the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/metadata.rs","byte_start":8587070,"byte_end":8587148,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ `GetFileAttributesEx` function on Windows.  Note that, this [may change in","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/metadata.rs","byte_start":8587149,"byte_end":8587227,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ the future][changes].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/metadata.rs","byte_start":8587228,"byte_end":8587253,"line_start":19,"line_end":19,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/metadata.rs","byte_start":8587254,"byte_end":8587257,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::metadata","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/metadata.rs","byte_start":8587258,"byte_end":8587286,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/metadata.rs","byte_start":8587287,"byte_end":8587372,"line_start":22,"line_end":22,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/metadata.rs","byte_start":8587373,"byte_end":8587376,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/metadata.rs","byte_start":8587377,"byte_end":8587389,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/metadata.rs","byte_start":8587390,"byte_end":8587393,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/metadata.rs","byte_start":8587394,"byte_end":8587472,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/metadata.rs","byte_start":8587473,"byte_end":8587505,"line_start":27,"line_end":27,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/metadata.rs","byte_start":8587506,"byte_end":8587509,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ * The user lacks permissions to perform `metadata` call on `path`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/metadata.rs","byte_start":8587510,"byte_end":8587580,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ * `path` does not exist.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/metadata.rs","byte_start":8587581,"byte_end":8587609,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/metadata.rs","byte_start":8587610,"byte_end":8587613,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/metadata.rs","byte_start":8587614,"byte_end":8587628,"line_start":32,"line_end":32,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/metadata.rs","byte_start":8587629,"byte_end":8587632,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/metadata.rs","byte_start":8587633,"byte_end":8587651,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/ use tokio::fs;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/metadata.rs","byte_start":8587652,"byte_end":8587670,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/metadata.rs","byte_start":8587671,"byte_end":8587674,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/metadata.rs","byte_start":8587675,"byte_end":8587693,"line_start":37,"line_end":37,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> std::io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/metadata.rs","byte_start":8587694,"byte_end":8587738,"line_start":38,"line_end":38,"column_start":1,"column_end":45}},{"value":"/     let attr = fs::metadata(\"/some/file/path.txt\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/metadata.rs","byte_start":8587739,"byte_end":8587801,"line_start":39,"line_end":39,"column_start":1,"column_end":63}},{"value":"/     // inspect attr ...","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/metadata.rs","byte_start":8587802,"byte_end":8587829,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/     Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/metadata.rs","byte_start":8587830,"byte_end":8587844,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/metadata.rs","byte_start":8587845,"byte_end":8587850,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/metadata.rs","byte_start":8587851,"byte_end":8587858,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1339},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8589976,"byte_end":8589987,"line_start":72,"line_end":72,"column_start":12,"column_end":23},"name":"OpenOptions","qualname":"::fs::open_options::OpenOptions","value":"","parent":null,"children":[],"decl_id":null,"docs":" Options and flags which can be used to configure how a file is opened.","sig":null,"attributes":[{"value":"/ Options and flags which can be used to configure how a file is opened.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8588091,"byte_end":8588165,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8588166,"byte_end":8588169,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This builder exposes the ability to configure how a [`File`] is opened and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8588170,"byte_end":8588248,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ what operations are permitted on the open file. The [`File::open`] and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8588249,"byte_end":8588323,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/ [`File::create`] methods are aliases for commonly used options using this","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8588324,"byte_end":8588401,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ builder.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8588402,"byte_end":8588414,"line_start":11,"line_end":11,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8588415,"byte_end":8588418,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Generally speaking, when using `OpenOptions`, you'll first call [`new`],","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8588419,"byte_end":8588495,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ then chain calls to methods to set each option, then call [`open`], passing","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8588496,"byte_end":8588575,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ the path of the file you're trying to open. This will give you a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8588576,"byte_end":8588644,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ [`io::Result`][result] with a [`File`] inside that you can further operate","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8588645,"byte_end":8588723,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ on.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8588724,"byte_end":8588731,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8588732,"byte_end":8588735,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This is a specialized version of [`std::fs::OpenOptions`] for usage from","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8588736,"byte_end":8588812,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ the Tokio runtime.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8588813,"byte_end":8588835,"line_start":20,"line_end":20,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8588836,"byte_end":8588839,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ `From<std::fs::OpenOptions>` is implemented for more advanced configuration","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8588840,"byte_end":8588919,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/ than the methods provided here.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8588920,"byte_end":8588955,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8588956,"byte_end":8588959,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`new`]: OpenOptions::new","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8588960,"byte_end":8588989,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ [`open`]: OpenOptions::open","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8588990,"byte_end":8589021,"line_start":26,"line_end":26,"column_start":1,"column_end":32}},{"value":"/ [result]: std::io::Result","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8589022,"byte_end":8589051,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/ [`File`]: File","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8589052,"byte_end":8589070,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ [`File::open`]: File::open","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8589071,"byte_end":8589101,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/ [`File::create`]: File::create","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8589102,"byte_end":8589136,"line_start":30,"line_end":30,"column_start":1,"column_end":35}},{"value":"/ [`std::fs::OpenOptions`]: std::fs::OpenOptions","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8589137,"byte_end":8589187,"line_start":31,"line_end":31,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8589188,"byte_end":8589191,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8589192,"byte_end":8589206,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8589207,"byte_end":8589210,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Opening a file to read:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8589211,"byte_end":8589238,"line_start":35,"line_end":35,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8589239,"byte_end":8589242,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8589243,"byte_end":8589256,"line_start":37,"line_end":37,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8589257,"byte_end":8589288,"line_start":38,"line_end":38,"column_start":1,"column_end":32}},{"value":"/ use std::io;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8589289,"byte_end":8589305,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8589306,"byte_end":8589309,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8589310,"byte_end":8589328,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8589329,"byte_end":8589368,"line_start":42,"line_end":42,"column_start":1,"column_end":40}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8589369,"byte_end":8589406,"line_start":43,"line_end":43,"column_start":1,"column_end":38}},{"value":"/         .read(true)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8589407,"byte_end":8589430,"line_start":44,"line_end":44,"column_start":1,"column_end":24}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8589431,"byte_end":8589459,"line_start":45,"line_end":45,"column_start":1,"column_end":29}},{"value":"/         .await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8589460,"byte_end":8589480,"line_start":46,"line_end":46,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8589481,"byte_end":8589484,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8589485,"byte_end":8589499,"line_start":48,"line_end":48,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8589500,"byte_end":8589505,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8589506,"byte_end":8589513,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8589514,"byte_end":8589517,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Opening a file for both reading and writing, as well as creating it if it","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8589518,"byte_end":8589595,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/ doesn't exist:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8589596,"byte_end":8589614,"line_start":53,"line_end":53,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8589615,"byte_end":8589618,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8589619,"byte_end":8589632,"line_start":55,"line_end":55,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8589633,"byte_end":8589664,"line_start":56,"line_end":56,"column_start":1,"column_end":32}},{"value":"/ use std::io;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8589665,"byte_end":8589681,"line_start":57,"line_end":57,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8589682,"byte_end":8589685,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8589686,"byte_end":8589704,"line_start":59,"line_end":59,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8589705,"byte_end":8589744,"line_start":60,"line_end":60,"column_start":1,"column_end":40}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8589745,"byte_end":8589782,"line_start":61,"line_end":61,"column_start":1,"column_end":38}},{"value":"/         .read(true)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8589783,"byte_end":8589806,"line_start":62,"line_end":62,"column_start":1,"column_end":24}},{"value":"/         .write(true)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8589807,"byte_end":8589831,"line_start":63,"line_end":63,"column_start":1,"column_end":25}},{"value":"/         .create(true)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8589832,"byte_end":8589857,"line_start":64,"line_end":64,"column_start":1,"column_end":26}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8589858,"byte_end":8589886,"line_start":65,"line_end":65,"column_start":1,"column_end":29}},{"value":"/         .await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8589887,"byte_end":8589907,"line_start":66,"line_end":66,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8589908,"byte_end":8589911,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8589912,"byte_end":8589926,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8589927,"byte_end":8589932,"line_start":69,"line_end":69,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8589933,"byte_end":8589940,"line_start":70,"line_end":70,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1083},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8590508,"byte_end":8590511,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"new","qualname":"<OpenOptions>::new","value":"pub fn new() -> OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Creates a blank new set of options ready for configuration.","sig":null,"attributes":[{"value":"/ Creates a blank new set of options ready for configuration.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8590035,"byte_end":8590098,"line_start":75,"line_end":75,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8590103,"byte_end":8590106,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ All options are initially set to `false`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8590111,"byte_end":8590156,"line_start":77,"line_end":77,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8590161,"byte_end":8590164,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::new`][std]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8590169,"byte_end":8590235,"line_start":79,"line_end":79,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8590240,"byte_end":8590243,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::new","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8590248,"byte_end":8590284,"line_start":81,"line_end":81,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8590289,"byte_end":8590292,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8590297,"byte_end":8590311,"line_start":83,"line_end":83,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8590316,"byte_end":8590319,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8590324,"byte_end":8590337,"line_start":85,"line_end":85,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8590342,"byte_end":8590373,"line_start":86,"line_end":86,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8590378,"byte_end":8590381,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ let mut options = OpenOptions::new();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8590386,"byte_end":8590427,"line_start":88,"line_end":88,"column_start":5,"column_end":46}},{"value":"/ let future = options.read(true).open(\"foo.txt\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8590432,"byte_end":8590484,"line_start":89,"line_end":89,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8590489,"byte_end":8590496,"line_start":90,"line_end":90,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1084},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8591240,"byte_end":8591244,"line_start":120,"line_end":120,"column_start":12,"column_end":16},"name":"read","qualname":"<OpenOptions>::read","value":"pub fn read(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for read access.","sig":null,"attributes":[{"value":"/ Sets the option for read access.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8590591,"byte_end":8590627,"line_start":95,"line_end":95,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8590632,"byte_end":8590635,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ This option, when true, will indicate that the file should be","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8590640,"byte_end":8590705,"line_start":97,"line_end":97,"column_start":5,"column_end":70}},{"value":"/ `read`-able if opened.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8590710,"byte_end":8590736,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8590741,"byte_end":8590744,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::read`][std]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8590749,"byte_end":8590816,"line_start":100,"line_end":100,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8590821,"byte_end":8590824,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::read","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8590829,"byte_end":8590866,"line_start":102,"line_end":102,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8590871,"byte_end":8590874,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8590879,"byte_end":8590893,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8590898,"byte_end":8590901,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8590906,"byte_end":8590919,"line_start":106,"line_end":106,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8590924,"byte_end":8590955,"line_start":107,"line_end":107,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8590960,"byte_end":8590976,"line_start":108,"line_end":108,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8590981,"byte_end":8590984,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8590989,"byte_end":8591007,"line_start":110,"line_end":110,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8591012,"byte_end":8591051,"line_start":111,"line_end":111,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8591056,"byte_end":8591093,"line_start":112,"line_end":112,"column_start":5,"column_end":42}},{"value":"/         .read(true)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8591098,"byte_end":8591121,"line_start":113,"line_end":113,"column_start":5,"column_end":28}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8591126,"byte_end":8591154,"line_start":114,"line_end":114,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8591159,"byte_end":8591179,"line_start":115,"line_end":115,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8591184,"byte_end":8591187,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8591192,"byte_end":8591206,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8591211,"byte_end":8591216,"line_start":118,"line_end":118,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8591221,"byte_end":8591228,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1085},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8591995,"byte_end":8592000,"line_start":150,"line_end":150,"column_start":12,"column_end":17},"name":"write","qualname":"<OpenOptions>::write","value":"pub fn write(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for write access.","sig":null,"attributes":[{"value":"/ Sets the option for write access.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8591341,"byte_end":8591378,"line_start":125,"line_end":125,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8591383,"byte_end":8591386,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This option, when true, will indicate that the file should be","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8591391,"byte_end":8591456,"line_start":127,"line_end":127,"column_start":5,"column_end":70}},{"value":"/ `write`-able if opened.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8591461,"byte_end":8591488,"line_start":128,"line_end":128,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8591493,"byte_end":8591496,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::write`][std]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8591501,"byte_end":8591569,"line_start":130,"line_end":130,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8591574,"byte_end":8591577,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::write","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8591582,"byte_end":8591620,"line_start":132,"line_end":132,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8591625,"byte_end":8591628,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8591633,"byte_end":8591647,"line_start":134,"line_end":134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8591652,"byte_end":8591655,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8591660,"byte_end":8591673,"line_start":136,"line_end":136,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8591678,"byte_end":8591709,"line_start":137,"line_end":137,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8591714,"byte_end":8591730,"line_start":138,"line_end":138,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8591735,"byte_end":8591738,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8591743,"byte_end":8591761,"line_start":140,"line_end":140,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8591766,"byte_end":8591805,"line_start":141,"line_end":141,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8591810,"byte_end":8591847,"line_start":142,"line_end":142,"column_start":5,"column_end":42}},{"value":"/         .write(true)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8591852,"byte_end":8591876,"line_start":143,"line_end":143,"column_start":5,"column_end":29}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8591881,"byte_end":8591909,"line_start":144,"line_end":144,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8591914,"byte_end":8591934,"line_start":145,"line_end":145,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8591939,"byte_end":8591942,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8591947,"byte_end":8591961,"line_start":147,"line_end":147,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8591966,"byte_end":8591971,"line_start":148,"line_end":148,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8591976,"byte_end":8591983,"line_start":149,"line_end":149,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1086},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8594230,"byte_end":8594236,"line_start":209,"line_end":209,"column_start":12,"column_end":18},"name":"append","qualname":"<OpenOptions>::append","value":"pub fn append(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for the append mode.","sig":null,"attributes":[{"value":"/ Sets the option for the append mode.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8592100,"byte_end":8592140,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8592145,"byte_end":8592148,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This option, when true, means that writes will append to a file instead","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8592153,"byte_end":8592228,"line_start":157,"line_end":157,"column_start":5,"column_end":80}},{"value":"/ of overwriting previous contents.  Note that setting","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8592233,"byte_end":8592289,"line_start":158,"line_end":158,"column_start":5,"column_end":61}},{"value":"/ `.write(true).append(true)` has the same effect as setting only","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8592294,"byte_end":8592361,"line_start":159,"line_end":159,"column_start":5,"column_end":72}},{"value":"/ `.append(true)`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8592366,"byte_end":8592386,"line_start":160,"line_end":160,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8592391,"byte_end":8592394,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ For most filesystems, the operating system guarantees that all writes are","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8592399,"byte_end":8592476,"line_start":162,"line_end":162,"column_start":5,"column_end":82}},{"value":"/ atomic: no writes get mangled because another process writes at the same","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8592481,"byte_end":8592557,"line_start":163,"line_end":163,"column_start":5,"column_end":81}},{"value":"/ time.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8592562,"byte_end":8592571,"line_start":164,"line_end":164,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8592576,"byte_end":8592579,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ One maybe obvious note when using append-mode: make sure that all data","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8592584,"byte_end":8592658,"line_start":166,"line_end":166,"column_start":5,"column_end":79}},{"value":"/ that belongs together is written to the file in one operation. This","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8592663,"byte_end":8592734,"line_start":167,"line_end":167,"column_start":5,"column_end":76}},{"value":"/ can be done by concatenating strings before passing them to [`write()`],","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8592739,"byte_end":8592815,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ or using a buffered writer (with a buffer of adequate size),","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8592820,"byte_end":8592884,"line_start":169,"line_end":169,"column_start":5,"column_end":69}},{"value":"/ and calling [`flush()`] when the message is complete.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8592889,"byte_end":8592946,"line_start":170,"line_end":170,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8592951,"byte_end":8592954,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ If a file is opened with both read and append access, beware that after","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8592959,"byte_end":8593034,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ opening, and after every write, the position for reading may be set at the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8593039,"byte_end":8593117,"line_start":173,"line_end":173,"column_start":5,"column_end":83}},{"value":"/ end of the file. So, before writing, save the current position (using","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8593122,"byte_end":8593195,"line_start":174,"line_end":174,"column_start":5,"column_end":78}},{"value":"/ [`seek`]`(`[`SeekFrom`]`::`[`Current`]`(0))`), and restore it before the next read.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8593200,"byte_end":8593287,"line_start":175,"line_end":175,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8593292,"byte_end":8593295,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::append`][std]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8593300,"byte_end":8593369,"line_start":177,"line_end":177,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8593374,"byte_end":8593377,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::append","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8593382,"byte_end":8593421,"line_start":179,"line_end":179,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8593426,"byte_end":8593429,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ ## Note","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8593434,"byte_end":8593445,"line_start":181,"line_end":181,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8593450,"byte_end":8593453,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ This function doesn't create the file if it doesn't exist. Use the [`create`]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8593458,"byte_end":8593539,"line_start":183,"line_end":183,"column_start":5,"column_end":86}},{"value":"/ method to do so.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8593544,"byte_end":8593564,"line_start":184,"line_end":184,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8593569,"byte_end":8593572,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ [`write()`]: crate::io::AsyncWriteExt::write","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8593577,"byte_end":8593625,"line_start":186,"line_end":186,"column_start":5,"column_end":53}},{"value":"/ [`flush()`]: crate::io::AsyncWriteExt::flush","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8593630,"byte_end":8593678,"line_start":187,"line_end":187,"column_start":5,"column_end":53}},{"value":"/ [`seek`]: crate::io::AsyncSeekExt::seek","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8593683,"byte_end":8593726,"line_start":188,"line_end":188,"column_start":5,"column_end":48}},{"value":"/ [`SeekFrom`]: std::io::SeekFrom","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8593731,"byte_end":8593766,"line_start":189,"line_end":189,"column_start":5,"column_end":40}},{"value":"/ [`Current`]: std::io::SeekFrom::Current","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8593771,"byte_end":8593814,"line_start":190,"line_end":190,"column_start":5,"column_end":48}},{"value":"/ [`create`]: OpenOptions::create","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8593819,"byte_end":8593854,"line_start":191,"line_end":191,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8593859,"byte_end":8593862,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8593867,"byte_end":8593881,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8593886,"byte_end":8593889,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8593894,"byte_end":8593907,"line_start":195,"line_end":195,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8593912,"byte_end":8593943,"line_start":196,"line_end":196,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8593948,"byte_end":8593964,"line_start":197,"line_end":197,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8593969,"byte_end":8593972,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8593977,"byte_end":8593995,"line_start":199,"line_end":199,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8594000,"byte_end":8594039,"line_start":200,"line_end":200,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8594044,"byte_end":8594081,"line_start":201,"line_end":201,"column_start":5,"column_end":42}},{"value":"/         .append(true)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8594086,"byte_end":8594111,"line_start":202,"line_end":202,"column_start":5,"column_end":30}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8594116,"byte_end":8594144,"line_start":203,"line_end":203,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8594149,"byte_end":8594169,"line_start":204,"line_end":204,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8594174,"byte_end":8594177,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8594182,"byte_end":8594196,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8594201,"byte_end":8594206,"line_start":207,"line_end":207,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8594211,"byte_end":8594218,"line_start":208,"line_end":208,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8595153,"byte_end":8595161,"line_start":242,"line_end":242,"column_start":12,"column_end":20},"name":"truncate","qualname":"<OpenOptions>::truncate","value":"pub fn truncate(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for truncating a previous file.","sig":null,"attributes":[{"value":"/ Sets the option for truncating a previous file.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8594339,"byte_end":8594390,"line_start":214,"line_end":214,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8594395,"byte_end":8594398,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ If a file is successfully opened with this option set it will truncate","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8594403,"byte_end":8594477,"line_start":216,"line_end":216,"column_start":5,"column_end":79}},{"value":"/ the file to 0 length if it already exists.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8594482,"byte_end":8594528,"line_start":217,"line_end":217,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8594533,"byte_end":8594536,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ The file must be opened with write access for truncate to work.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8594541,"byte_end":8594608,"line_start":219,"line_end":219,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8594613,"byte_end":8594616,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::truncate`][std]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8594621,"byte_end":8594692,"line_start":221,"line_end":221,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8594697,"byte_end":8594700,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::truncate","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8594705,"byte_end":8594746,"line_start":223,"line_end":223,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8594751,"byte_end":8594754,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8594759,"byte_end":8594773,"line_start":225,"line_end":225,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8594778,"byte_end":8594781,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8594786,"byte_end":8594799,"line_start":227,"line_end":227,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8594804,"byte_end":8594835,"line_start":228,"line_end":228,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8594840,"byte_end":8594856,"line_start":229,"line_end":229,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8594861,"byte_end":8594864,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8594869,"byte_end":8594887,"line_start":231,"line_end":231,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8594892,"byte_end":8594931,"line_start":232,"line_end":232,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8594936,"byte_end":8594973,"line_start":233,"line_end":233,"column_start":5,"column_end":42}},{"value":"/         .write(true)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8594978,"byte_end":8595002,"line_start":234,"line_end":234,"column_start":5,"column_end":29}},{"value":"/         .truncate(true)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8595007,"byte_end":8595034,"line_start":235,"line_end":235,"column_start":5,"column_end":32}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8595039,"byte_end":8595067,"line_start":236,"line_end":236,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8595072,"byte_end":8595092,"line_start":237,"line_end":237,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8595097,"byte_end":8595100,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8595105,"byte_end":8595119,"line_start":239,"line_end":239,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8595124,"byte_end":8595129,"line_start":240,"line_end":240,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8595134,"byte_end":8595141,"line_start":241,"line_end":241,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1088},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8596158,"byte_end":8596164,"line_start":278,"line_end":278,"column_start":12,"column_end":18},"name":"create","qualname":"<OpenOptions>::create","value":"pub fn create(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for creating a new file.","sig":null,"attributes":[{"value":"/ Sets the option for creating a new file.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8595270,"byte_end":8595314,"line_start":247,"line_end":247,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8595319,"byte_end":8595322,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This option indicates whether a new file will be created if the file","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8595327,"byte_end":8595399,"line_start":249,"line_end":249,"column_start":5,"column_end":77}},{"value":"/ does not yet already exist.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8595404,"byte_end":8595435,"line_start":250,"line_end":250,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8595440,"byte_end":8595443,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ In order for the file to be created, [`write`] or [`append`] access must","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8595448,"byte_end":8595524,"line_start":252,"line_end":252,"column_start":5,"column_end":81}},{"value":"/ be used.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8595529,"byte_end":8595541,"line_start":253,"line_end":253,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8595546,"byte_end":8595549,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::create`][std]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8595554,"byte_end":8595623,"line_start":255,"line_end":255,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8595628,"byte_end":8595631,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::create","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8595636,"byte_end":8595675,"line_start":257,"line_end":257,"column_start":5,"column_end":44}},{"value":"/ [`write`]: OpenOptions::write","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8595680,"byte_end":8595713,"line_start":258,"line_end":258,"column_start":5,"column_end":38}},{"value":"/ [`append`]: OpenOptions::append","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8595718,"byte_end":8595753,"line_start":259,"line_end":259,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8595758,"byte_end":8595761,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8595766,"byte_end":8595780,"line_start":261,"line_end":261,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8595785,"byte_end":8595788,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8595793,"byte_end":8595806,"line_start":263,"line_end":263,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8595811,"byte_end":8595842,"line_start":264,"line_end":264,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8595847,"byte_end":8595863,"line_start":265,"line_end":265,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8595868,"byte_end":8595871,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8595876,"byte_end":8595894,"line_start":267,"line_end":267,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8595899,"byte_end":8595938,"line_start":268,"line_end":268,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8595943,"byte_end":8595980,"line_start":269,"line_end":269,"column_start":5,"column_end":42}},{"value":"/         .write(true)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8595985,"byte_end":8596009,"line_start":270,"line_end":270,"column_start":5,"column_end":29}},{"value":"/         .create(true)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8596014,"byte_end":8596039,"line_start":271,"line_end":271,"column_start":5,"column_end":30}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8596044,"byte_end":8596072,"line_start":272,"line_end":272,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8596077,"byte_end":8596097,"line_start":273,"line_end":273,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8596102,"byte_end":8596105,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8596110,"byte_end":8596124,"line_start":275,"line_end":275,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8596129,"byte_end":8596134,"line_start":276,"line_end":276,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8596139,"byte_end":8596146,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1089},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8597563,"byte_end":8597573,"line_start":321,"line_end":321,"column_start":12,"column_end":22},"name":"create_new","qualname":"<OpenOptions>::create_new","value":"pub fn create_new(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option to always create a new file.","sig":null,"attributes":[{"value":"/ Sets the option to always create a new file.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8596267,"byte_end":8596315,"line_start":283,"line_end":283,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8596320,"byte_end":8596323,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ This option indicates whether a new file will be created.  No file is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8596328,"byte_end":8596401,"line_start":285,"line_end":285,"column_start":5,"column_end":78}},{"value":"/ allowed to exist at the target location, also no (dangling) symlink.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8596406,"byte_end":8596478,"line_start":286,"line_end":286,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8596483,"byte_end":8596486,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This option is useful because it is atomic. Otherwise between checking","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8596491,"byte_end":8596565,"line_start":288,"line_end":288,"column_start":5,"column_end":79}},{"value":"/ whether a file exists and creating a new one, the file may have been","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8596570,"byte_end":8596642,"line_start":289,"line_end":289,"column_start":5,"column_end":77}},{"value":"/ created by another process (a TOCTOU race condition / attack).","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8596647,"byte_end":8596713,"line_start":290,"line_end":290,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8596718,"byte_end":8596721,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ If `.create_new(true)` is set, [`.create()`] and [`.truncate()`] are","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8596726,"byte_end":8596798,"line_start":292,"line_end":292,"column_start":5,"column_end":77}},{"value":"/ ignored.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8596803,"byte_end":8596815,"line_start":293,"line_end":293,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8596820,"byte_end":8596823,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ The file must be opened with write or append access in order to create a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8596828,"byte_end":8596904,"line_start":295,"line_end":295,"column_start":5,"column_end":81}},{"value":"/ new file.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8596909,"byte_end":8596922,"line_start":296,"line_end":296,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8596927,"byte_end":8596930,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::create_new`][std]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8596935,"byte_end":8597008,"line_start":298,"line_end":298,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8597013,"byte_end":8597016,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::create_new","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8597021,"byte_end":8597064,"line_start":300,"line_end":300,"column_start":5,"column_end":48}},{"value":"/ [`.create()`]: OpenOptions::create","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8597069,"byte_end":8597107,"line_start":301,"line_end":301,"column_start":5,"column_end":43}},{"value":"/ [`.truncate()`]: OpenOptions::truncate","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8597112,"byte_end":8597154,"line_start":302,"line_end":302,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8597159,"byte_end":8597162,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8597167,"byte_end":8597181,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8597186,"byte_end":8597189,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8597194,"byte_end":8597207,"line_start":306,"line_end":306,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8597212,"byte_end":8597243,"line_start":307,"line_end":307,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8597248,"byte_end":8597264,"line_start":308,"line_end":308,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8597269,"byte_end":8597272,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8597277,"byte_end":8597295,"line_start":310,"line_end":310,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8597300,"byte_end":8597339,"line_start":311,"line_end":311,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8597344,"byte_end":8597381,"line_start":312,"line_end":312,"column_start":5,"column_end":42}},{"value":"/         .write(true)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8597386,"byte_end":8597410,"line_start":313,"line_end":313,"column_start":5,"column_end":29}},{"value":"/         .create_new(true)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8597415,"byte_end":8597444,"line_start":314,"line_end":314,"column_start":5,"column_end":34}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8597449,"byte_end":8597477,"line_start":315,"line_end":315,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8597482,"byte_end":8597502,"line_start":316,"line_end":316,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8597507,"byte_end":8597510,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8597515,"byte_end":8597529,"line_start":318,"line_end":318,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8597534,"byte_end":8597539,"line_start":319,"line_end":319,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8597544,"byte_end":8597551,"line_start":320,"line_end":320,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1090},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8600025,"byte_end":8600029,"line_start":378,"line_end":378,"column_start":18,"column_end":22},"name":"open","qualname":"<OpenOptions>::open","value":"pub async fn open<'_,\n                  impl AsRef<Path>: AsRef<Path>>(&'_ Self, impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a file at `path` with the options specified by `self`.","sig":null,"attributes":[{"value":"/ Opens a file at `path` with the options specified by `self`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8597688,"byte_end":8597752,"line_start":326,"line_end":326,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8597757,"byte_end":8597760,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::open`][std]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8597765,"byte_end":8597832,"line_start":328,"line_end":328,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8597837,"byte_end":8597840,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::open","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8597845,"byte_end":8597882,"line_start":330,"line_end":330,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8597887,"byte_end":8597890,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8597895,"byte_end":8597907,"line_start":332,"line_end":332,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8597912,"byte_end":8597915,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ This function will return an error under a number of different","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8597920,"byte_end":8597986,"line_start":334,"line_end":334,"column_start":5,"column_end":71}},{"value":"/ circumstances. Some of these error conditions are listed here, together","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8597991,"byte_end":8598066,"line_start":335,"line_end":335,"column_start":5,"column_end":80}},{"value":"/ with their [`ErrorKind`]. The mapping to [`ErrorKind`]s is not part of","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8598071,"byte_end":8598145,"line_start":336,"line_end":336,"column_start":5,"column_end":79}},{"value":"/ the compatibility contract of the function, especially the `Other` kind","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8598150,"byte_end":8598225,"line_start":337,"line_end":337,"column_start":5,"column_end":80}},{"value":"/ might change to more specific kinds in the future.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8598230,"byte_end":8598284,"line_start":338,"line_end":338,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8598289,"byte_end":8598292,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ * [`NotFound`]: The specified file does not exist and neither `create`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8598297,"byte_end":8598371,"line_start":340,"line_end":340,"column_start":5,"column_end":79}},{"value":"/   or `create_new` is set.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8598376,"byte_end":8598405,"line_start":341,"line_end":341,"column_start":5,"column_end":34}},{"value":"/ * [`NotFound`]: One of the directory components of the file path does","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8598410,"byte_end":8598483,"line_start":342,"line_end":342,"column_start":5,"column_end":78}},{"value":"/   not exist.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8598488,"byte_end":8598504,"line_start":343,"line_end":343,"column_start":5,"column_end":21}},{"value":"/ * [`PermissionDenied`]: The user lacks permission to get the specified","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8598509,"byte_end":8598583,"line_start":344,"line_end":344,"column_start":5,"column_end":79}},{"value":"/   access rights for the file.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8598588,"byte_end":8598621,"line_start":345,"line_end":345,"column_start":5,"column_end":38}},{"value":"/ * [`PermissionDenied`]: The user lacks permission to open one of the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8598626,"byte_end":8598698,"line_start":346,"line_end":346,"column_start":5,"column_end":77}},{"value":"/   directory components of the specified path.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8598703,"byte_end":8598752,"line_start":347,"line_end":347,"column_start":5,"column_end":54}},{"value":"/ * [`AlreadyExists`]: `create_new` was specified and the file already","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8598757,"byte_end":8598829,"line_start":348,"line_end":348,"column_start":5,"column_end":77}},{"value":"/   exists.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8598834,"byte_end":8598847,"line_start":349,"line_end":349,"column_start":5,"column_end":18}},{"value":"/ * [`InvalidInput`]: Invalid combinations of open options (truncate","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8598852,"byte_end":8598922,"line_start":350,"line_end":350,"column_start":5,"column_end":75}},{"value":"/   without write access, no access mode set, etc.).","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8598927,"byte_end":8598981,"line_start":351,"line_end":351,"column_start":5,"column_end":59}},{"value":"/ * [`Other`]: One of the directory components of the specified file path","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8598986,"byte_end":8599061,"line_start":352,"line_end":352,"column_start":5,"column_end":80}},{"value":"/   was not, in fact, a directory.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8599066,"byte_end":8599102,"line_start":353,"line_end":353,"column_start":5,"column_end":41}},{"value":"/ * [`Other`]: Filesystem-level errors: full disk, write permission","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8599107,"byte_end":8599176,"line_start":354,"line_end":354,"column_start":5,"column_end":74}},{"value":"/   requested on a read-only file system, exceeded disk quota, too many","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8599181,"byte_end":8599254,"line_start":355,"line_end":355,"column_start":5,"column_end":78}},{"value":"/   open files, too long filename, too many symbolic links in the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8599259,"byte_end":8599326,"line_start":356,"line_end":356,"column_start":5,"column_end":72}},{"value":"/   specified path (Unix-like systems only), etc.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8599331,"byte_end":8599382,"line_start":357,"line_end":357,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8599387,"byte_end":8599390,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8599395,"byte_end":8599409,"line_start":359,"line_end":359,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8599414,"byte_end":8599417,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8599422,"byte_end":8599435,"line_start":361,"line_end":361,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8599440,"byte_end":8599471,"line_start":362,"line_end":362,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8599476,"byte_end":8599492,"line_start":363,"line_end":363,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8599497,"byte_end":8599500,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8599505,"byte_end":8599523,"line_start":365,"line_end":365,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8599528,"byte_end":8599567,"line_start":366,"line_end":366,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new().open(\"foo.txt\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8599572,"byte_end":8599633,"line_start":367,"line_end":367,"column_start":5,"column_end":66}},{"value":"/     Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8599638,"byte_end":8599652,"line_start":368,"line_end":368,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8599657,"byte_end":8599662,"line_start":369,"line_end":369,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8599667,"byte_end":8599674,"line_start":370,"line_end":370,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8599679,"byte_end":8599682,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ [`ErrorKind`]: std::io::ErrorKind","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8599687,"byte_end":8599724,"line_start":372,"line_end":372,"column_start":5,"column_end":42}},{"value":"/ [`AlreadyExists`]: std::io::ErrorKind::AlreadyExists","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8599729,"byte_end":8599785,"line_start":373,"line_end":373,"column_start":5,"column_end":61}},{"value":"/ [`InvalidInput`]: std::io::ErrorKind::InvalidInput","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8599790,"byte_end":8599844,"line_start":374,"line_end":374,"column_start":5,"column_end":59}},{"value":"/ [`NotFound`]: std::io::ErrorKind::NotFound","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8599849,"byte_end":8599895,"line_start":375,"line_end":375,"column_start":5,"column_end":51}},{"value":"/ [`Other`]: std::io::ErrorKind::Other","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8599900,"byte_end":8599940,"line_start":376,"line_end":376,"column_start":5,"column_end":45}},{"value":"/ [`PermissionDenied`]: std::io::ErrorKind::PermissionDenied","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8599945,"byte_end":8600007,"line_start":377,"line_end":377,"column_start":5,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":1101},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"os","qualname":"::fs::os","value":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/mod.rs","parent":null,"children":[{"krate":0,"index":1102}],"decl_id":null,"docs":" OS-specific functionality.\n","sig":null,"attributes":[{"value":"/ OS-specific functionality.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/mod.rs","byte_start":8600696,"byte_end":8600726,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":1102},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::fs::os::unix","value":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/mod.rs","parent":null,"children":[{"krate":0,"index":1103},{"krate":0,"index":1113},{"krate":0,"index":1114},{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1130}],"decl_id":null,"docs":" Unix-specific extensions to primitives in the `tokio_fs` module.\n","sig":null,"attributes":[{"value":"cfg(unix)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/mod.rs","byte_start":8600728,"byte_end":8600740,"line_start":3,"line_end":3,"column_start":1,"column_end":13}},{"value":"/ Unix-specific extensions to primitives in the `tokio_fs` module.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/mod.rs","byte_start":8600790,"byte_end":8600858,"line_start":1,"line_end":1,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":1107},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/symlink.rs","byte_start":8601359,"byte_end":8601366,"line_start":13,"line_end":13,"column_start":14,"column_end":21},"name":"symlink","qualname":"::fs::os::unix::symlink::symlink","value":"pub async fn symlink<impl AsRef<Path>: AsRef<Path>,\n                     impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>,\n                                                    impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new symbolic link on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a new symbolic link on the filesystem.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/symlink.rs","byte_start":8601106,"byte_end":8601156,"line_start":6,"line_end":6,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/symlink.rs","byte_start":8601157,"byte_end":8601160,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a symbolic link pointing to the `src` path.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/symlink.rs","byte_start":8601161,"byte_end":8601231,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/symlink.rs","byte_start":8601232,"byte_end":8601235,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::os::unix::fs::symlink`][std]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/symlink.rs","byte_start":8601236,"byte_end":8601303,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/symlink.rs","byte_start":8601304,"byte_end":8601307,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [std]: std::os::unix::fs::symlink","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/symlink.rs","byte_start":8601308,"byte_end":8601345,"line_start":12,"line_end":12,"column_start":1,"column_end":38}}]},{"kind":"Trait","id":{"krate":0,"index":1117},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8601957,"byte_end":8601971,"line_start":11,"line_end":11,"column_start":11,"column_end":25},"name":"OpenOptionsExt","qualname":"::fs::os::unix::open_options_ext::OpenOptionsExt","value":"OpenOptionsExt","parent":null,"children":[{"krate":0,"index":1118},{"krate":0,"index":1119}],"decl_id":null,"docs":" Unix-specific extensions to [`fs::OpenOptions`].","sig":null,"attributes":[{"value":"/ Unix-specific extensions to [`fs::OpenOptions`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8601683,"byte_end":8601735,"line_start":4,"line_end":4,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8601736,"byte_end":8601739,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This mirrors the definition of [`std::os::unix::fs::OpenOptionsExt`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8601740,"byte_end":8601813,"line_start":6,"line_end":6,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8601814,"byte_end":8601817,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8601818,"byte_end":8601821,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`fs::OpenOptions`]: crate::fs::OpenOptions","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8601822,"byte_end":8601869,"line_start":9,"line_end":9,"column_start":1,"column_end":48}},{"value":"/ [`std::os::unix::fs::OpenOptionsExt`]: std::os::unix::fs::OpenOptionsExt","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8601870,"byte_end":8601946,"line_start":10,"line_end":10,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1118},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8602865,"byte_end":8602869,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"mode","qualname":"::fs::os::unix::open_options_ext::OpenOptionsExt::mode","value":"pub fn mode(&mut Self, u32) -> &mut Self","parent":{"krate":0,"index":1117},"children":[],"decl_id":null,"docs":" Sets the mode bits that a new file will be created with.","sig":null,"attributes":[{"value":"/ Sets the mode bits that a new file will be created with.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8601978,"byte_end":8602038,"line_start":12,"line_end":12,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8602043,"byte_end":8602046,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ If a new file is created as part of an `OpenOptions::open` call then this","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8602051,"byte_end":8602128,"line_start":14,"line_end":14,"column_start":5,"column_end":82}},{"value":"/ specified `mode` will be used as the permission bits for the new file.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8602133,"byte_end":8602207,"line_start":15,"line_end":15,"column_start":5,"column_end":79}},{"value":"/ If no `mode` is set, the default of `0o666` will be used.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8602212,"byte_end":8602273,"line_start":16,"line_end":16,"column_start":5,"column_end":66}},{"value":"/ The operating system masks out bits with the system's `umask`, to produce","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8602278,"byte_end":8602355,"line_start":17,"line_end":17,"column_start":5,"column_end":82}},{"value":"/ the final permissions.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8602360,"byte_end":8602386,"line_start":18,"line_end":18,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8602391,"byte_end":8602394,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8602399,"byte_end":8602413,"line_start":20,"line_end":20,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8602418,"byte_end":8602421,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8602426,"byte_end":8602439,"line_start":22,"line_end":22,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8602444,"byte_end":8602475,"line_start":23,"line_end":23,"column_start":5,"column_end":36}},{"value":"/ use tokio::fs::os::unix::OpenOptionsExt;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8602480,"byte_end":8602524,"line_start":24,"line_end":24,"column_start":5,"column_end":49}},{"value":"/ use std::io;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8602529,"byte_end":8602545,"line_start":25,"line_end":25,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8602550,"byte_end":8602553,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8602558,"byte_end":8602576,"line_start":27,"line_end":27,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8602581,"byte_end":8602620,"line_start":28,"line_end":28,"column_start":5,"column_end":44}},{"value":"/     let mut options = OpenOptions::new();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8602625,"byte_end":8602670,"line_start":29,"line_end":29,"column_start":5,"column_end":50}},{"value":"/     options.mode(0o644); // Give read/write for owner and read for others.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8602675,"byte_end":8602753,"line_start":30,"line_end":30,"column_start":5,"column_end":83}},{"value":"/     let file = options.open(\"foo.txt\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8602758,"byte_end":8602808,"line_start":31,"line_end":31,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8602813,"byte_end":8602816,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8602821,"byte_end":8602835,"line_start":33,"line_end":33,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8602840,"byte_end":8602845,"line_start":34,"line_end":34,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8602850,"byte_end":8602857,"line_start":35,"line_end":35,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1119},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8603834,"byte_end":8603846,"line_start":66,"line_end":66,"column_start":8,"column_end":20},"name":"custom_flags","qualname":"::fs::os::unix::open_options_ext::OpenOptionsExt::custom_flags","value":"pub fn custom_flags(&mut Self, i32) -> &mut Self","parent":{"krate":0,"index":1117},"children":[],"decl_id":null,"docs":" Pass custom flags to the `flags` argument of `open`.","sig":null,"attributes":[{"value":"/ Pass custom flags to the `flags` argument of `open`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8602911,"byte_end":8602967,"line_start":38,"line_end":38,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8602972,"byte_end":8602975,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ The bits that define the access mode are masked out with `O_ACCMODE`, to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8602980,"byte_end":8603056,"line_start":40,"line_end":40,"column_start":5,"column_end":81}},{"value":"/ ensure they do not interfere with the access mode set by Rusts options.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8603061,"byte_end":8603136,"line_start":41,"line_end":41,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8603141,"byte_end":8603144,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Custom flags can only set flags, not remove flags set by Rusts options.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8603149,"byte_end":8603224,"line_start":43,"line_end":43,"column_start":5,"column_end":80}},{"value":"/ This options overwrites any previously set custom flags.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8603229,"byte_end":8603289,"line_start":44,"line_end":44,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8603294,"byte_end":8603297,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8603302,"byte_end":8603316,"line_start":46,"line_end":46,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8603321,"byte_end":8603324,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8603329,"byte_end":8603342,"line_start":48,"line_end":48,"column_start":5,"column_end":18}},{"value":"/ use libc;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8603347,"byte_end":8603360,"line_start":49,"line_end":49,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8603365,"byte_end":8603396,"line_start":50,"line_end":50,"column_start":5,"column_end":36}},{"value":"/ use tokio::fs::os::unix::OpenOptionsExt;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8603401,"byte_end":8603445,"line_start":51,"line_end":51,"column_start":5,"column_end":49}},{"value":"/ use std::io;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8603450,"byte_end":8603466,"line_start":52,"line_end":52,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8603471,"byte_end":8603474,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8603479,"byte_end":8603497,"line_start":54,"line_end":54,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8603502,"byte_end":8603541,"line_start":55,"line_end":55,"column_start":5,"column_end":44}},{"value":"/     let mut options = OpenOptions::new();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8603546,"byte_end":8603591,"line_start":56,"line_end":56,"column_start":5,"column_end":50}},{"value":"/     options.write(true);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8603596,"byte_end":8603624,"line_start":57,"line_end":57,"column_start":5,"column_end":33}},{"value":"/     if cfg!(unix) {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8603629,"byte_end":8603652,"line_start":58,"line_end":58,"column_start":5,"column_end":28}},{"value":"/         options.custom_flags(libc::O_NOFOLLOW);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8603657,"byte_end":8603708,"line_start":59,"line_end":59,"column_start":5,"column_end":56}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8603713,"byte_end":8603722,"line_start":60,"line_end":60,"column_start":5,"column_end":14}},{"value":"/     let file = options.open(\"foo.txt\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8603727,"byte_end":8603777,"line_start":61,"line_end":61,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8603782,"byte_end":8603785,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8603790,"byte_end":8603804,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8603809,"byte_end":8603814,"line_start":64,"line_end":64,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8603819,"byte_end":8603826,"line_start":65,"line_end":65,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":1126},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/dir_builder_ext.rs","byte_start":8604322,"byte_end":8604335,"line_start":6,"line_end":6,"column_start":11,"column_end":24},"name":"DirBuilderExt","qualname":"::fs::os::unix::dir_builder_ext::DirBuilderExt","value":"DirBuilderExt","parent":null,"children":[{"krate":0,"index":1127}],"decl_id":null,"docs":" Unix-specific extensions to [`DirBuilder`].","sig":null,"attributes":[{"value":"/ Unix-specific extensions to [`DirBuilder`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/dir_builder_ext.rs","byte_start":8604218,"byte_end":8604265,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/dir_builder_ext.rs","byte_start":8604266,"byte_end":8604269,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`DirBuilder`]: crate::fs::DirBuilder","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/dir_builder_ext.rs","byte_start":8604270,"byte_end":8604311,"line_start":5,"line_end":5,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1127},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/dir_builder_ext.rs","byte_start":8604684,"byte_end":8604688,"line_start":21,"line_end":21,"column_start":8,"column_end":12},"name":"mode","qualname":"::fs::os::unix::dir_builder_ext::DirBuilderExt::mode","value":"pub fn mode(&mut Self, u32) -> &mut Self","parent":{"krate":0,"index":1126},"children":[],"decl_id":null,"docs":" Sets the mode to create new directories with.","sig":null,"attributes":[{"value":"/ Sets the mode to create new directories with.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/dir_builder_ext.rs","byte_start":8604342,"byte_end":8604391,"line_start":7,"line_end":7,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/dir_builder_ext.rs","byte_start":8604396,"byte_end":8604399,"line_start":8,"line_end":8,"column_start":5,"column_end":8}},{"value":"/ This option defaults to 0o777.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/dir_builder_ext.rs","byte_start":8604404,"byte_end":8604438,"line_start":9,"line_end":9,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/dir_builder_ext.rs","byte_start":8604443,"byte_end":8604446,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/dir_builder_ext.rs","byte_start":8604451,"byte_end":8604465,"line_start":11,"line_end":11,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/dir_builder_ext.rs","byte_start":8604470,"byte_end":8604473,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/dir_builder_ext.rs","byte_start":8604478,"byte_end":8604481,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/dir_builder_ext.rs","byte_start":8604486,"byte_end":8604499,"line_start":14,"line_end":14,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::DirBuilder;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/dir_builder_ext.rs","byte_start":8604504,"byte_end":8604534,"line_start":15,"line_end":15,"column_start":5,"column_end":35}},{"value":"/ use tokio::fs::os::unix::DirBuilderExt;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/dir_builder_ext.rs","byte_start":8604539,"byte_end":8604582,"line_start":16,"line_end":16,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/dir_builder_ext.rs","byte_start":8604587,"byte_end":8604590,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ let mut builder = DirBuilder::new();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/dir_builder_ext.rs","byte_start":8604595,"byte_end":8604635,"line_start":18,"line_end":18,"column_start":5,"column_end":45}},{"value":"/ builder.mode(0o775);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/dir_builder_ext.rs","byte_start":8604640,"byte_end":8604664,"line_start":19,"line_end":19,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/dir_builder_ext.rs","byte_start":8604669,"byte_end":8604676,"line_start":20,"line_end":20,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":1136},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read.rs","byte_start":8606245,"byte_end":8606249,"line_start":44,"line_end":44,"column_start":14,"column_end":18},"name":"read","qualname":"::fs::read::read","value":"pub async fn read<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the entire contents of a file into a bytes vector.","sig":null,"attributes":[{"value":"/ Reads the entire contents of a file into a bytes vector.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read.rs","byte_start":8604921,"byte_end":8604981,"line_start":5,"line_end":5,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read.rs","byte_start":8604982,"byte_end":8604985,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::read`][std]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read.rs","byte_start":8604986,"byte_end":8605040,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read.rs","byte_start":8605041,"byte_end":8605044,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::read","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read.rs","byte_start":8605045,"byte_end":8605069,"line_start":9,"line_end":9,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read.rs","byte_start":8605070,"byte_end":8605073,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is a convenience function for using [`File::open`] and [`read_to_end`]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read.rs","byte_start":8605074,"byte_end":8605153,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ with fewer imports and without an intermediate variable. It pre-allocates a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read.rs","byte_start":8605154,"byte_end":8605233,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ buffer based on the file size when available, so it is generally faster than","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read.rs","byte_start":8605234,"byte_end":8605314,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ reading into a vector created with `Vec::new()`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read.rs","byte_start":8605315,"byte_end":8605367,"line_start":14,"line_end":14,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read.rs","byte_start":8605368,"byte_end":8605371,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`File::open`]: super::File::open","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read.rs","byte_start":8605372,"byte_end":8605409,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"/ [`read_to_end`]: crate::io::AsyncReadExt::read_to_end","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read.rs","byte_start":8605410,"byte_end":8605467,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read.rs","byte_start":8605468,"byte_end":8605471,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read.rs","byte_start":8605472,"byte_end":8605484,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read.rs","byte_start":8605485,"byte_end":8605488,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This function will return an error if `path` does not already exist.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read.rs","byte_start":8605489,"byte_end":8605561,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ Other errors may also be returned according to [`OpenOptions::open`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read.rs","byte_start":8605562,"byte_end":8605635,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read.rs","byte_start":8605636,"byte_end":8605639,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`OpenOptions::open`]: super::OpenOptions::open","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read.rs","byte_start":8605640,"byte_end":8605691,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read.rs","byte_start":8605692,"byte_end":8605695,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ It will also return an error if it encounters while reading an error","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read.rs","byte_start":8605696,"byte_end":8605768,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ of a kind other than [`ErrorKind::Interrupted`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read.rs","byte_start":8605769,"byte_end":8605821,"line_start":27,"line_end":27,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read.rs","byte_start":8605822,"byte_end":8605825,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [`ErrorKind::Interrupted`]: std::io::ErrorKind::Interrupted","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read.rs","byte_start":8605826,"byte_end":8605889,"line_start":29,"line_end":29,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read.rs","byte_start":8605890,"byte_end":8605893,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read.rs","byte_start":8605894,"byte_end":8605908,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read.rs","byte_start":8605909,"byte_end":8605912,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read.rs","byte_start":8605913,"byte_end":8605926,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read.rs","byte_start":8605927,"byte_end":8605945,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read.rs","byte_start":8605946,"byte_end":8605975,"line_start":35,"line_end":35,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read.rs","byte_start":8605976,"byte_end":8605979,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read.rs","byte_start":8605980,"byte_end":8605998,"line_start":37,"line_end":37,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error + 'static>> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read.rs","byte_start":8605999,"byte_end":8606072,"line_start":38,"line_end":38,"column_start":1,"column_end":74}},{"value":"/     let contents = fs::read(\"address.txt\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read.rs","byte_start":8606073,"byte_end":8606127,"line_start":39,"line_end":39,"column_start":1,"column_end":55}},{"value":"/     let foo: SocketAddr = String::from_utf8_lossy(&contents).parse()?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read.rs","byte_start":8606128,"byte_end":8606202,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/     Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read.rs","byte_start":8606203,"byte_end":8606217,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read.rs","byte_start":8606218,"byte_end":8606223,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read.rs","byte_start":8606224,"byte_end":8606231,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1160},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8606835,"byte_end":8606843,"line_start":18,"line_end":18,"column_start":14,"column_end":22},"name":"read_dir","qualname":"::fs::read_dir::read_dir","value":"pub async fn read_dir<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the entries within a directory.","sig":null,"attributes":[{"value":"/ Returns a stream over the entries within a directory.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8606687,"byte_end":8606744,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8606745,"byte_end":8606748,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::read_dir`](std::fs::read_dir)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8606749,"byte_end":8606821,"line_start":17,"line_end":17,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":1346},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8607655,"byte_end":8607662,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"ReadDir","qualname":"::fs::read_dir::ReadDir","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream of the entries in a directory.","sig":null,"attributes":[{"value":"/ Stream of the entries in a directory.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8607037,"byte_end":8607078,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8607079,"byte_end":8607082,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This stream is returned from the [`read_dir`] function of this module and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8607083,"byte_end":8607160,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ will yield instances of [`DirEntry`]. Through a [`DirEntry`]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8607161,"byte_end":8607225,"line_start":28,"line_end":28,"column_start":1,"column_end":65}},{"value":"/ information like the entry's path and possibly other metadata can be","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8607226,"byte_end":8607298,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ learned.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8607299,"byte_end":8607311,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8607312,"byte_end":8607315,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8607316,"byte_end":8607328,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8607329,"byte_end":8607332,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ This [`Stream`] will return an [`Err`] if there's some sort of intermittent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8607333,"byte_end":8607412,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ IO error during iteration.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8607413,"byte_end":8607443,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8607444,"byte_end":8607447,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [`read_dir`]: read_dir","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8607448,"byte_end":8607474,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/ [`DirEntry`]: DirEntry","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8607475,"byte_end":8607501,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ [`Stream`]: crate::stream::Stream","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8607502,"byte_end":8607539,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/ [`Err`]: std::result::Result::Err","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8607540,"byte_end":8607577,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8607595,"byte_end":8607643,"line_start":42,"line_end":42,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1166},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8607916,"byte_end":8607926,"line_start":53,"line_end":53,"column_start":18,"column_end":28},"name":"next_entry","qualname":"<ReadDir>::next_entry","value":"pub async fn next_entry<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next entry in the directory stream.\n","sig":null,"attributes":[{"value":"/ Returns the next entry in the directory stream.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8607847,"byte_end":8607898,"line_start":52,"line_end":52,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1171},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8608098,"byte_end":8608113,"line_start":59,"line_end":59,"column_start":12,"column_end":27},"name":"poll_next_entry","qualname":"<ReadDir>::poll_next_entry","value":"pub fn poll_next_entry(&mut Self, &mut Context)\n-> Poll<io::Result<Option<DirEntry>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1360},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8609869,"byte_end":8609877,"line_start":111,"line_end":111,"column_start":12,"column_end":20},"name":"DirEntry","qualname":"::fs::read_dir::DirEntry","value":"","parent":null,"children":[],"decl_id":null,"docs":" Entries returned by the [`ReadDir`] stream.","sig":null,"attributes":[{"value":"/ Entries returned by the [`ReadDir`] stream.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8609418,"byte_end":8609465,"line_start":100,"line_end":100,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8609466,"byte_end":8609469,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ [`ReadDir`]: struct@ReadDir","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8609470,"byte_end":8609501,"line_start":102,"line_end":102,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8609502,"byte_end":8609505,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ This is a specialized version of [`std::fs::DirEntry`] for usage from the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8609506,"byte_end":8609583,"line_start":104,"line_end":104,"column_start":1,"column_end":78}},{"value":"/ Tokio runtime.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8609584,"byte_end":8609602,"line_start":105,"line_end":105,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8609603,"byte_end":8609606,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ An instance of `DirEntry` represents an entry inside of a directory on the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8609607,"byte_end":8609685,"line_start":107,"line_end":107,"column_start":1,"column_end":79}},{"value":"/ filesystem. Each entry can be inspected via methods to learn about the full","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8609686,"byte_end":8609765,"line_start":108,"line_end":108,"column_start":1,"column_end":80}},{"value":"/ path or possibly other metadata through per-platform extension traits.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8609766,"byte_end":8609840,"line_start":109,"line_end":109,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1177},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8610709,"byte_end":8610713,"line_start":143,"line_end":143,"column_start":12,"column_end":16},"name":"path","qualname":"<DirEntry>::path","value":"pub fn path(&Self) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Returns the full path to the file that this entry represents.","sig":null,"attributes":[{"value":"/ Returns the full path to the file that this entry represents.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8609924,"byte_end":8609989,"line_start":114,"line_end":114,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8609994,"byte_end":8609997,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ The full path is created by joining the original path to `read_dir`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8610002,"byte_end":8610073,"line_start":116,"line_end":116,"column_start":5,"column_end":76}},{"value":"/ with the filename of this entry.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8610078,"byte_end":8610114,"line_start":117,"line_end":117,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8610119,"byte_end":8610122,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8610127,"byte_end":8610141,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8610146,"byte_end":8610149,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8610154,"byte_end":8610167,"line_start":121,"line_end":121,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8610172,"byte_end":8610190,"line_start":122,"line_end":122,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8610195,"byte_end":8610198,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8610203,"byte_end":8610248,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8610253,"byte_end":8610300,"line_start":125,"line_end":125,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8610305,"byte_end":8610308,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ while let Some(entry) = entries.next_entry().await? {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8610313,"byte_end":8610370,"line_start":127,"line_end":127,"column_start":5,"column_end":62}},{"value":"/     println!(\"{:?}\", entry.path());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8610375,"byte_end":8610414,"line_start":128,"line_end":128,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8610419,"byte_end":8610424,"line_start":129,"line_end":129,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8610429,"byte_end":8610441,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8610446,"byte_end":8610453,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8610458,"byte_end":8610465,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8610470,"byte_end":8610473,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This prints output like:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8610478,"byte_end":8610506,"line_start":134,"line_end":134,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8610511,"byte_end":8610514,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8610519,"byte_end":8610530,"line_start":136,"line_end":136,"column_start":5,"column_end":16}},{"value":"/ \"./whatever.txt\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8610535,"byte_end":8610555,"line_start":137,"line_end":137,"column_start":5,"column_end":25}},{"value":"/ \"./foo.html\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8610560,"byte_end":8610576,"line_start":138,"line_end":138,"column_start":5,"column_end":21}},{"value":"/ \"./hello_world.rs\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8610581,"byte_end":8610603,"line_start":139,"line_end":139,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8610608,"byte_end":8610615,"line_start":140,"line_end":140,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8610620,"byte_end":8610623,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ The exact text, of course, depends on what files you have in `.`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8610628,"byte_end":8610697,"line_start":142,"line_end":142,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1178},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8611233,"byte_end":8611242,"line_start":164,"line_end":164,"column_start":12,"column_end":21},"name":"file_name","qualname":"<DirEntry>::file_name","value":"pub fn file_name(&Self) -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Returns the bare file name of this directory entry without any other\n leading path component.","sig":null,"attributes":[{"value":"/ Returns the bare file name of this directory entry without any other","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8610767,"byte_end":8610839,"line_start":147,"line_end":147,"column_start":5,"column_end":77}},{"value":"/ leading path component.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8610844,"byte_end":8610871,"line_start":148,"line_end":148,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8610876,"byte_end":8610879,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8610884,"byte_end":8610898,"line_start":150,"line_end":150,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8610903,"byte_end":8610906,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8610911,"byte_end":8610918,"line_start":152,"line_end":152,"column_start":5,"column_end":12}},{"value":"/ use tokio::fs;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8610923,"byte_end":8610941,"line_start":153,"line_end":153,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8610946,"byte_end":8610949,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8610954,"byte_end":8610999,"line_start":155,"line_end":155,"column_start":5,"column_end":50}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8611004,"byte_end":8611051,"line_start":156,"line_end":156,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8611056,"byte_end":8611059,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ while let Some(entry) = entries.next_entry().await? {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8611064,"byte_end":8611121,"line_start":158,"line_end":158,"column_start":5,"column_end":62}},{"value":"/     println!(\"{:?}\", entry.file_name());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8611126,"byte_end":8611170,"line_start":159,"line_end":159,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8611175,"byte_end":8611180,"line_start":160,"line_end":160,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8611185,"byte_end":8611197,"line_start":161,"line_end":161,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8611202,"byte_end":8611209,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8611214,"byte_end":8611221,"line_start":163,"line_end":163,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1179},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8612339,"byte_end":8612347,"line_start":198,"line_end":198,"column_start":18,"column_end":26},"name":"metadata","qualname":"<DirEntry>::metadata","value":"pub async fn metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the metadata for the file that this entry points at.","sig":null,"attributes":[{"value":"/ Returns the metadata for the file that this entry points at.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8611302,"byte_end":8611366,"line_start":168,"line_end":168,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8611371,"byte_end":8611374,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ This function will not traverse symlinks if this entry points at a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8611379,"byte_end":8611449,"line_start":170,"line_end":170,"column_start":5,"column_end":75}},{"value":"/ symlink.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8611454,"byte_end":8611466,"line_start":171,"line_end":171,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8611471,"byte_end":8611474,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8611479,"byte_end":8611511,"line_start":173,"line_end":173,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8611516,"byte_end":8611519,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ On Windows this function is cheap to call (no extra system calls","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8611524,"byte_end":8611592,"line_start":175,"line_end":175,"column_start":5,"column_end":73}},{"value":"/ needed), but on Unix platforms this function is the equivalent of","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8611597,"byte_end":8611666,"line_start":176,"line_end":176,"column_start":5,"column_end":74}},{"value":"/ calling `symlink_metadata` on the path.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8611671,"byte_end":8611714,"line_start":177,"line_end":177,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8611719,"byte_end":8611722,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8611727,"byte_end":8611741,"line_start":179,"line_end":179,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8611746,"byte_end":8611749,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8611754,"byte_end":8611761,"line_start":181,"line_end":181,"column_start":5,"column_end":12}},{"value":"/ use tokio::fs;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8611766,"byte_end":8611784,"line_start":182,"line_end":182,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8611789,"byte_end":8611792,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8611797,"byte_end":8611842,"line_start":184,"line_end":184,"column_start":5,"column_end":50}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8611847,"byte_end":8611894,"line_start":185,"line_end":185,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8611899,"byte_end":8611902,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ while let Some(entry) = entries.next_entry().await? {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8611907,"byte_end":8611964,"line_start":187,"line_end":187,"column_start":5,"column_end":62}},{"value":"/     if let Ok(metadata) = entry.metadata().await {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8611969,"byte_end":8612023,"line_start":188,"line_end":188,"column_start":5,"column_end":59}},{"value":"/         // Now let's show our entry's permissions!","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8612028,"byte_end":8612082,"line_start":189,"line_end":189,"column_start":5,"column_end":59}},{"value":"/         println!(\"{:?}: {:?}\", entry.path(), metadata.permissions());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8612087,"byte_end":8612160,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/     } else {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8612165,"byte_end":8612181,"line_start":191,"line_end":191,"column_start":5,"column_end":21}},{"value":"/         println!(\"Couldn't get file type for {:?}\", entry.path());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8612186,"byte_end":8612256,"line_start":192,"line_end":192,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8612261,"byte_end":8612270,"line_start":193,"line_end":193,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8612275,"byte_end":8612280,"line_start":194,"line_end":194,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8612285,"byte_end":8612297,"line_start":195,"line_end":195,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8612302,"byte_end":8612309,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8612314,"byte_end":8612321,"line_start":197,"line_end":197,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1183},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8613531,"byte_end":8613540,"line_start":233,"line_end":233,"column_start":18,"column_end":27},"name":"file_type","qualname":"<DirEntry>::file_type","value":"pub async fn file_type<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the file type for the file that this entry points at.","sig":null,"attributes":[{"value":"/ Returns the file type for the file that this entry points at.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8612473,"byte_end":8612538,"line_start":203,"line_end":203,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8612543,"byte_end":8612546,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ This function will not traverse symlinks if this entry points at a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8612551,"byte_end":8612621,"line_start":205,"line_end":205,"column_start":5,"column_end":75}},{"value":"/ symlink.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8612626,"byte_end":8612638,"line_start":206,"line_end":206,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8612643,"byte_end":8612646,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8612651,"byte_end":8612683,"line_start":208,"line_end":208,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8612688,"byte_end":8612691,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ On Windows and most Unix platforms this function is free (no extra","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8612696,"byte_end":8612766,"line_start":210,"line_end":210,"column_start":5,"column_end":75}},{"value":"/ system calls needed), but some Unix platforms may require the equivalent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8612771,"byte_end":8612847,"line_start":211,"line_end":211,"column_start":5,"column_end":81}},{"value":"/ call to `symlink_metadata` to learn about the target file type.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8612852,"byte_end":8612919,"line_start":212,"line_end":212,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8612924,"byte_end":8612927,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8612932,"byte_end":8612946,"line_start":214,"line_end":214,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8612951,"byte_end":8612954,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8612959,"byte_end":8612966,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"/ use tokio::fs;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8612971,"byte_end":8612989,"line_start":217,"line_end":217,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8612994,"byte_end":8612997,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8613002,"byte_end":8613047,"line_start":219,"line_end":219,"column_start":5,"column_end":50}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8613052,"byte_end":8613099,"line_start":220,"line_end":220,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8613104,"byte_end":8613107,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ while let Some(entry) = entries.next_entry().await? {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8613112,"byte_end":8613169,"line_start":222,"line_end":222,"column_start":5,"column_end":62}},{"value":"/     if let Ok(file_type) = entry.file_type().await {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8613174,"byte_end":8613230,"line_start":223,"line_end":223,"column_start":5,"column_end":61}},{"value":"/         // Now let's show our entry's file type!","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8613235,"byte_end":8613287,"line_start":224,"line_end":224,"column_start":5,"column_end":57}},{"value":"/         println!(\"{:?}: {:?}\", entry.path(), file_type);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8613292,"byte_end":8613352,"line_start":225,"line_end":225,"column_start":5,"column_end":65}},{"value":"/     } else {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8613357,"byte_end":8613373,"line_start":226,"line_end":226,"column_start":5,"column_end":21}},{"value":"/         println!(\"Couldn't get file type for {:?}\", entry.path());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8613378,"byte_end":8613448,"line_start":227,"line_end":227,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8613453,"byte_end":8613462,"line_start":228,"line_end":228,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8613467,"byte_end":8613472,"line_start":229,"line_end":229,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8613477,"byte_end":8613489,"line_start":230,"line_end":230,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8613494,"byte_end":8613501,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8613506,"byte_end":8613513,"line_start":232,"line_end":232,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":1199},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_link.rs","byte_start":8614021,"byte_end":8614030,"line_start":11,"line_end":11,"column_start":14,"column_end":23},"name":"read_link","qualname":"::fs::read_link::read_link","value":"pub async fn read_link<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads a symbolic link, returning the file that the link points to.","sig":null,"attributes":[{"value":"/ Reads a symbolic link, returning the file that the link points to.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_link.rs","byte_start":8613839,"byte_end":8613909,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_link.rs","byte_start":8613910,"byte_end":8613913,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::read_link`][std]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_link.rs","byte_start":8613914,"byte_end":8613973,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_link.rs","byte_start":8613974,"byte_end":8613977,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::read_link","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_link.rs","byte_start":8613978,"byte_end":8614007,"line_start":10,"line_end":10,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":1210},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_to_string.rs","byte_start":8614689,"byte_end":8614703,"line_start":21,"line_end":21,"column_start":14,"column_end":28},"name":"read_to_string","qualname":"::fs::read_to_string::read_to_string","value":"pub async fn read_to_string<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will open a file for reading and read the entire\n contents into a string and return said string.","sig":null,"attributes":[{"value":"/ Creates a future which will open a file for reading and read the entire","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_to_string.rs","byte_start":8614231,"byte_end":8614306,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ contents into a string and return said string.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_to_string.rs","byte_start":8614307,"byte_end":8614357,"line_start":6,"line_end":6,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_to_string.rs","byte_start":8614358,"byte_end":8614361,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is the async equivalent of `std::fs::read_to_string`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_to_string.rs","byte_start":8614362,"byte_end":8614424,"line_start":8,"line_end":8,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_to_string.rs","byte_start":8614425,"byte_end":8614428,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_to_string.rs","byte_start":8614429,"byte_end":8614443,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_to_string.rs","byte_start":8614444,"byte_end":8614447,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_to_string.rs","byte_start":8614448,"byte_end":8614461,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_to_string.rs","byte_start":8614462,"byte_end":8614480,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_to_string.rs","byte_start":8614481,"byte_end":8614484,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_to_string.rs","byte_start":8614485,"byte_end":8614530,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/ let contents = fs::read_to_string(\"foo.txt\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_to_string.rs","byte_start":8614531,"byte_end":8614587,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/ println!(\"foo.txt contains {} bytes\", contents.len());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_to_string.rs","byte_start":8614588,"byte_end":8614646,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_to_string.rs","byte_start":8614647,"byte_end":8614659,"line_start":18,"line_end":18,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_to_string.rs","byte_start":8614660,"byte_end":8614667,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_to_string.rs","byte_start":8614668,"byte_end":8614675,"line_start":20,"line_end":20,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1220},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/remove_dir.rs","byte_start":8615051,"byte_end":8615061,"line_start":9,"line_end":9,"column_start":14,"column_end":24},"name":"remove_dir","qualname":"::fs::remove_dir::remove_dir","value":"pub async fn remove_dir<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Removes an existing, empty directory.","sig":null,"attributes":[{"value":"/ Removes an existing, empty directory.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/remove_dir.rs","byte_start":8614915,"byte_end":8614956,"line_start":6,"line_end":6,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/remove_dir.rs","byte_start":8614957,"byte_end":8614960,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::remove_dir`](std::fs::remove_dir)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/remove_dir.rs","byte_start":8614961,"byte_end":8615037,"line_start":8,"line_end":8,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":1230},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/remove_dir_all.rs","byte_start":8615475,"byte_end":8615489,"line_start":11,"line_end":11,"column_start":14,"column_end":28},"name":"remove_dir_all","qualname":"::fs::remove_dir_all::remove_dir_all","value":"pub async fn remove_dir_all<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Removes a directory at this path, after removing all its contents. Use carefully!","sig":null,"attributes":[{"value":"/ Removes a directory at this path, after removing all its contents. Use carefully!","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/remove_dir_all.rs","byte_start":8615265,"byte_end":8615350,"line_start":6,"line_end":6,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/remove_dir_all.rs","byte_start":8615351,"byte_end":8615354,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::remove_dir_all`][std]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/remove_dir_all.rs","byte_start":8615355,"byte_end":8615419,"line_start":8,"line_end":8,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/remove_dir_all.rs","byte_start":8615420,"byte_end":8615423,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: fn@std::fs::remove_dir_all","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/remove_dir_all.rs","byte_start":8615424,"byte_end":8615461,"line_start":10,"line_end":10,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":1240},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/remove_file.rs","byte_start":8616026,"byte_end":8616037,"line_start":15,"line_end":15,"column_start":14,"column_end":25},"name":"remove_file","qualname":"::fs::remove_file::remove_file","value":"pub async fn remove_file<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Removes a file from the filesystem.","sig":null,"attributes":[{"value":"/ Removes a file from the filesystem.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/remove_file.rs","byte_start":8615697,"byte_end":8615736,"line_start":6,"line_end":6,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/remove_file.rs","byte_start":8615737,"byte_end":8615740,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Note that there is no guarantee that the file is immediately deleted (e.g.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/remove_file.rs","byte_start":8615741,"byte_end":8615819,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ depending on platform, other open file descriptors may prevent immediate","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/remove_file.rs","byte_start":8615820,"byte_end":8615896,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ removal).","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/remove_file.rs","byte_start":8615897,"byte_end":8615910,"line_start":10,"line_end":10,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/remove_file.rs","byte_start":8615911,"byte_end":8615914,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::remove_file`][std]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/remove_file.rs","byte_start":8615915,"byte_end":8615976,"line_start":12,"line_end":12,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/remove_file.rs","byte_start":8615977,"byte_end":8615980,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::remove_file","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/remove_file.rs","byte_start":8615981,"byte_end":8616012,"line_start":14,"line_end":14,"column_start":1,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":1250},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/rename.rs","byte_start":8616505,"byte_end":8616511,"line_start":12,"line_end":12,"column_start":14,"column_end":20},"name":"rename","qualname":"::fs::rename::rename","value":"pub async fn rename<impl AsRef<Path>: AsRef<Path>,\n                    impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>,\n                                                   impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Renames a file or directory to a new name, replacing the original file if\n `to` already exists.","sig":null,"attributes":[{"value":"/ Renames a file or directory to a new name, replacing the original file if","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/rename.rs","byte_start":8616242,"byte_end":8616319,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ `to` already exists.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/rename.rs","byte_start":8616320,"byte_end":8616344,"line_start":7,"line_end":7,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/rename.rs","byte_start":8616345,"byte_end":8616348,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This will not work if the new name is on a different mount point.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/rename.rs","byte_start":8616349,"byte_end":8616418,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/rename.rs","byte_start":8616419,"byte_end":8616422,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::rename`](std::fs::rename)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/rename.rs","byte_start":8616423,"byte_end":8616491,"line_start":11,"line_end":11,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":1262},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/set_permissions.rs","byte_start":8616987,"byte_end":8617002,"line_start":12,"line_end":12,"column_start":14,"column_end":29},"name":"set_permissions","qualname":"::fs::set_permissions::set_permissions","value":"pub async fn set_permissions<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>,\n                                                            Permissions)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Changes the permissions found on a file or a directory.","sig":null,"attributes":[{"value":"/ Changes the permissions found on a file or a directory.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/set_permissions.rs","byte_start":8616801,"byte_end":8616860,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/set_permissions.rs","byte_start":8616861,"byte_end":8616864,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::set_permissions`][std]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/set_permissions.rs","byte_start":8616865,"byte_end":8616930,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/set_permissions.rs","byte_start":8616931,"byte_end":8616934,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [std]: fn@std::fs::set_permissions","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/set_permissions.rs","byte_start":8616935,"byte_end":8616973,"line_start":11,"line_end":11,"column_start":1,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1273},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/symlink_metadata.rs","byte_start":8617431,"byte_end":8617447,"line_start":12,"line_end":12,"column_start":14,"column_end":30},"name":"symlink_metadata","qualname":"::fs::symlink_metadata::symlink_metadata","value":"pub async fn symlink_metadata<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Queries the file system metadata for a path.","sig":null,"attributes":[{"value":"/ Queries the file system metadata for a path.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/symlink_metadata.rs","byte_start":8617254,"byte_end":8617302,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/symlink_metadata.rs","byte_start":8617303,"byte_end":8617306,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::symlink_metadata`][std]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/symlink_metadata.rs","byte_start":8617307,"byte_end":8617373,"line_start":9,"line_end":9,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/symlink_metadata.rs","byte_start":8617374,"byte_end":8617377,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [std]: fn@std::fs::symlink_metadata","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/symlink_metadata.rs","byte_start":8617378,"byte_end":8617417,"line_start":11,"line_end":11,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1284},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/write.rs","byte_start":8618017,"byte_end":8618022,"line_start":20,"line_end":20,"column_start":14,"column_end":19},"name":"write","qualname":"::fs::write::write","value":"pub async fn write<C: AsRef<[u8]> + Unpin,\n                   impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>, C)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that will open a file for writing and write the entire\n contents of `contents` to it.","sig":null,"attributes":[{"value":"/ Creates a future that will open a file for writing and write the entire","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/write.rs","byte_start":8617651,"byte_end":8617726,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ contents of `contents` to it.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/write.rs","byte_start":8617727,"byte_end":8617760,"line_start":6,"line_end":6,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/write.rs","byte_start":8617761,"byte_end":8617764,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is the async equivalent of `std::fs::write`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/write.rs","byte_start":8617765,"byte_end":8617818,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/write.rs","byte_start":8617819,"byte_end":8617822,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/write.rs","byte_start":8617823,"byte_end":8617837,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/write.rs","byte_start":8617838,"byte_end":8617841,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/write.rs","byte_start":8617842,"byte_end":8617855,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/write.rs","byte_start":8617856,"byte_end":8617874,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/write.rs","byte_start":8617875,"byte_end":8617878,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/write.rs","byte_start":8617879,"byte_end":8617924,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/ fs::write(\"foo.txt\", b\"Hello world!\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/write.rs","byte_start":8617925,"byte_end":8617974,"line_start":16,"line_end":16,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/write.rs","byte_start":8617975,"byte_end":8617987,"line_start":17,"line_end":17,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/write.rs","byte_start":8617988,"byte_end":8617995,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/write.rs","byte_start":8617996,"byte_end":8618003,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1294},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/copy.rs","byte_start":8618749,"byte_end":8618753,"line_start":20,"line_end":20,"column_start":14,"column_end":18},"name":"copy","qualname":"::fs::copy::copy","value":"pub async fn copy<P: AsRef<Path>, Q: AsRef<Path>>(P, Q) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Copies the contents of one file to another. This function will also copy the permission bits of the original file to the destination file.\n This function will overwrite the contents of to.","sig":null,"attributes":[{"value":"/ Copies the contents of one file to another. This function will also copy the permission bits of the original file to the destination file.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/copy.rs","byte_start":8618304,"byte_end":8618446,"line_start":4,"line_end":4,"column_start":1,"column_end":143}},{"value":"/ This function will overwrite the contents of to.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/copy.rs","byte_start":8618447,"byte_end":8618499,"line_start":5,"line_end":5,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/copy.rs","byte_start":8618500,"byte_end":8618503,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is the async equivalent of `std::fs::copy`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/copy.rs","byte_start":8618504,"byte_end":8618556,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/copy.rs","byte_start":8618557,"byte_end":8618560,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/copy.rs","byte_start":8618561,"byte_end":8618575,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/copy.rs","byte_start":8618576,"byte_end":8618579,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/copy.rs","byte_start":8618580,"byte_end":8618593,"line_start":11,"line_end":11,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/copy.rs","byte_start":8618594,"byte_end":8618612,"line_start":12,"line_end":12,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/copy.rs","byte_start":8618613,"byte_end":8618616,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/copy.rs","byte_start":8618617,"byte_end":8618662,"line_start":14,"line_end":14,"column_start":1,"column_end":46}},{"value":"/ fs::copy(\"foo.txt\", \"bar.txt\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/copy.rs","byte_start":8618663,"byte_end":8618705,"line_start":15,"line_end":15,"column_start":1,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/copy.rs","byte_start":8618706,"byte_end":8618718,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/copy.rs","byte_start":8618719,"byte_end":8618726,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/copy.rs","byte_start":8618727,"byte_end":8618734,"line_start":18,"line_end":18,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":83},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":176}],"decl_id":null,"docs":" Asynchronous values.\n","sig":null,"attributes":[{"value":"allow(unused_imports, dead_code)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/mod.rs","byte_start":31049,"byte_end":31085,"line_start":1,"line_end":1,"column_start":1,"column_end":37}},{"value":"/ Asynchronous values.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/mod.rs","byte_start":31087,"byte_end":31111,"line_start":3,"line_end":3,"column_start":1,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1367},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/maybe_done.rs","byte_start":31576,"byte_end":31582,"line_start":12,"line_end":12,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":1365},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/maybe_done.rs","byte_start":31541,"byte_end":31571,"line_start":11,"line_end":11,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1370},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/maybe_done.rs","byte_start":31636,"byte_end":31640,"line_start":14,"line_end":14,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":1365},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/maybe_done.rs","byte_start":31593,"byte_end":31631,"line_start":13,"line_end":13,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1373},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/maybe_done.rs","byte_start":31802,"byte_end":31806,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":1365},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/maybe_done.rs","byte_start":31659,"byte_end":31725,"line_start":15,"line_end":15,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/maybe_done.rs","byte_start":31730,"byte_end":31797,"line_start":16,"line_end":16,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":1365},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/maybe_done.rs","byte_start":31512,"byte_end":31521,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"pub enum MaybeDone<Fut: Future> {\n\n    /// A not-yet-completed future\n    Future(Fut),\n\n    /// The output of the completed future\n    Done(Fut::Output),\n\n    /// The empty variant after the result of a [`MaybeDone`] has been\n    /// taken using the [`take_output`](MaybeDone::take_output) method.\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":1367},{"krate":0,"index":1370},{"krate":0,"index":1373}],"decl_id":null,"docs":" A future that may have completed.\n","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/maybe_done.rs","byte_start":31448,"byte_end":31485,"line_start":8,"line_end":8,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":93},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/maybe_done.rs","byte_start":31969,"byte_end":31979,"line_start":24,"line_end":24,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"pub fn maybe_done<Fut: Future>(Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/maybe_done.rs","byte_start":31924,"byte_end":31961,"line_start":23,"line_end":23,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/maybe_done.rs","byte_start":32382,"byte_end":32392,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/maybe_done.rs","byte_start":32098,"byte_end":32183,"line_start":29,"line_end":29,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/maybe_done.rs","byte_start":32188,"byte_end":32259,"line_start":30,"line_end":30,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/maybe_done.rs","byte_start":32264,"byte_end":32337,"line_start":31,"line_end":31,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/maybe_done.rs","byte_start":32342,"byte_end":32370,"line_start":32,"line_end":32,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/maybe_done.rs","byte_start":32770,"byte_end":32781,"line_start":46,"line_end":46,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempts to take the output of a `MaybeDone` without driving it","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/maybe_done.rs","byte_start":32649,"byte_end":32716,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/ towards completion.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/maybe_done.rs","byte_start":32721,"byte_end":32744,"line_start":44,"line_end":44,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/maybe_done.rs","byte_start":32749,"byte_end":32758,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":113},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/poll_fn.rs","byte_start":33993,"byte_end":33999,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":115}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/poll_fn.rs","byte_start":33941,"byte_end":33981,"line_start":8,"line_end":8,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":118},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/poll_fn.rs","byte_start":34129,"byte_end":34136,"line_start":16,"line_end":16,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].\n","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/poll_fn.rs","byte_start":34050,"byte_end":34121,"line_start":15,"line_end":15,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1378},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/ready.rs","byte_start":34901,"byte_end":34906,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ok`](ok()) function.","sig":null,"attributes":[{"value":"/ Future for the [`ok`](ok()) function.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/ready.rs","byte_start":34672,"byte_end":34713,"line_start":5,"line_end":5,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/ready.rs","byte_start":34714,"byte_end":34717,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `pub` in order to use the future as an associated type in a sealed trait.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/ready.rs","byte_start":34718,"byte_end":34795,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"allow(unreachable_pub)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/ready.rs","byte_start":34864,"byte_end":34889,"line_start":10,"line_end":10,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":177},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":1442},{"krate":0,"index":178},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":1531},{"krate":0,"index":1628},{"krate":0,"index":1679},{"krate":0,"index":1680},{"krate":0,"index":1715},{"krate":0,"index":1751},{"krate":0,"index":1764},{"krate":0,"index":1765},{"krate":0,"index":1766},{"krate":0,"index":1767},{"krate":0,"index":1779},{"krate":0,"index":1780},{"krate":0,"index":1781},{"krate":0,"index":1782},{"krate":0,"index":1795},{"krate":0,"index":1796},{"krate":0,"index":1797},{"krate":0,"index":1813},{"krate":0,"index":1882},{"krate":0,"index":1883},{"krate":0,"index":1884},{"krate":0,"index":1885},{"krate":0,"index":1886},{"krate":0,"index":1902},{"krate":0,"index":1903},{"krate":0,"index":1904},{"krate":0,"index":1905},{"krate":0,"index":1906},{"krate":0,"index":1907},{"krate":0,"index":1908},{"krate":0,"index":1909},{"krate":0,"index":1910},{"krate":0,"index":1911},{"krate":0,"index":1912},{"krate":0,"index":1913},{"krate":0,"index":1914},{"krate":0,"index":1915},{"krate":0,"index":1916},{"krate":0,"index":1917},{"krate":0,"index":1918},{"krate":0,"index":1919},{"krate":0,"index":1920},{"krate":0,"index":1921},{"krate":0,"index":1922},{"krate":0,"index":1923},{"krate":0,"index":1924},{"krate":0,"index":3281},{"krate":0,"index":3282},{"krate":0,"index":3283},{"krate":0,"index":3284},{"krate":0,"index":3285},{"krate":0,"index":3286},{"krate":0,"index":3287}],"decl_id":null,"docs":" Traits, helpers, and type definitions for asynchronous I/O functionality.","sig":null,"attributes":[{"value":"/ Traits, helpers, and type definitions for asynchronous I/O functionality.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":37661,"byte_end":37738,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":37739,"byte_end":37742,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module is the asynchronous version of `std::io`. Primarily, it","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":37743,"byte_end":37814,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"/ defines two traits, [`AsyncRead`] and [`AsyncWrite`], which are asynchronous","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":37815,"byte_end":37895,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ versions of the [`Read`] and [`Write`] traits in the standard library.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":37896,"byte_end":37970,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":37971,"byte_end":37974,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # AsyncRead and AsyncWrite","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":37975,"byte_end":38005,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":38006,"byte_end":38009,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Like the standard library's [`Read`] and [`Write`] traits, [`AsyncRead`] and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":38010,"byte_end":38090,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`] provide the most general interface for reading and writing","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":38091,"byte_end":38168,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ input and output. Unlike the standard library's traits, however, they are","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":38169,"byte_end":38246,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ _asynchronous_ &mdash; meaning that reading from or writing to a `tokio::io`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":38247,"byte_end":38327,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ type will _yield_ to the Tokio scheduler when IO is not ready, rather than","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":38328,"byte_end":38406,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ blocking. This allows other tasks to run while waiting on IO.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":38407,"byte_end":38472,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":38473,"byte_end":38476,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Another difference is that `AsyncRead` and `AsyncWrite` only contain","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":38477,"byte_end":38549,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ core methods needed to provide asynchronous reading and writing","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":38550,"byte_end":38617,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"/ functionality. Instead, utility methods are defined in the [`AsyncReadExt`]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":38618,"byte_end":38697,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ and [`AsyncWriteExt`] extension traits. These traits are automatically","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":38698,"byte_end":38772,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ implemented for all values that implement `AsyncRead` and `AsyncWrite`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":38773,"byte_end":38847,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ respectively.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":38848,"byte_end":38865,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":38866,"byte_end":38869,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ End users will rarely interact directly with `AsyncRead` and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":38870,"byte_end":38934,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `AsyncWrite`. Instead, they will use the async functions defined in the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":38935,"byte_end":39010,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/ extension traits. Library authors are expected to implement `AsyncRead`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":39011,"byte_end":39086,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ and `AsyncWrite` in order to provide types that behave like byte streams.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":39087,"byte_end":39164,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":39165,"byte_end":39168,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Even with these differences, Tokio's `AsyncRead` and `AsyncWrite` traits","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":39169,"byte_end":39245,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ can be used in almost exactly the same manner as the standard library's","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":39246,"byte_end":39321,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ `Read` and `Write`. Most types in the standard library that implement `Read`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":39322,"byte_end":39402,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ and `Write` have asynchronous equivalents in `tokio` that implement","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":39403,"byte_end":39474,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"/ `AsyncRead` and `AsyncWrite`, such as [`File`] and [`TcpStream`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":39475,"byte_end":39544,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":39545,"byte_end":39548,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ For example, the standard library documentation introduces `Read` by","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":39549,"byte_end":39621,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ [demonstrating][std_example] reading some bytes from a [`std::fs::File`]. We","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":39622,"byte_end":39702,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ can do the same with [`tokio::fs::File`][`File`]:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":39703,"byte_end":39756,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":39757,"byte_end":39760,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":39761,"byte_end":39774,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncReadExt};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":39775,"byte_end":39815,"line_start":41,"line_end":41,"column_start":1,"column_end":41}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":39816,"byte_end":39840,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":39841,"byte_end":39844,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":39845,"byte_end":39863,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":39864,"byte_end":39903,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/     let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":39904,"byte_end":39953,"line_start":46,"line_end":46,"column_start":1,"column_end":50}},{"value":"/     let mut buffer = [0; 10];","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":39954,"byte_end":39987,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":39988,"byte_end":39991,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     // read up to 10 bytes","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":39992,"byte_end":40022,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"/     let n = f.read(&mut buffer).await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":40023,"byte_end":40066,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":40067,"byte_end":40070,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/     println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":40071,"byte_end":40121,"line_start":52,"line_end":52,"column_start":1,"column_end":51}},{"value":"/     Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":40122,"byte_end":40136,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":40137,"byte_end":40142,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":40143,"byte_end":40150,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":40151,"byte_end":40154,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`File`]: crate::fs::File","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":40155,"byte_end":40184,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"/ [`TcpStream`]: crate::net::TcpStream","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":40185,"byte_end":40225,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/ [`std::fs::File`]: std::fs::File","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":40226,"byte_end":40262,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/ [std_example]: std::io#read-and-write","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":40263,"byte_end":40304,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":40305,"byte_end":40308,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## Buffered Readers and Writers","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":40309,"byte_end":40344,"line_start":62,"line_end":62,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":40345,"byte_end":40348,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Byte-based interfaces are unwieldy and can be inefficient, as we'd need to be","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":40349,"byte_end":40430,"line_start":64,"line_end":64,"column_start":1,"column_end":82}},{"value":"/ making near-constant calls to the operating system. To help with this,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":40431,"byte_end":40505,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"/ `std::io` comes with [support for _buffered_ readers and writers][stdbuf],","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":40506,"byte_end":40584,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ and therefore, `tokio::io` does as well.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":40585,"byte_end":40629,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":40630,"byte_end":40633,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Tokio provides an async version of the [`std::io::BufRead`] trait,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":40634,"byte_end":40704,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"/ [`AsyncBufRead`]; and async [`BufReader`] and [`BufWriter`] structs, which","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":40705,"byte_end":40783,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/ wrap readers and writers. These wrappers use a buffer, reducing the number","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":40784,"byte_end":40862,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/ of calls and providing nicer methods for accessing exactly what you want.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":40863,"byte_end":40940,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":40941,"byte_end":40944,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ For example, [`BufReader`] works with the [`AsyncBufRead`] trait to add","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":40945,"byte_end":41020,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ extra methods to any async reader:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":41021,"byte_end":41059,"line_start":75,"line_end":75,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":41060,"byte_end":41063,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":41064,"byte_end":41077,"line_start":77,"line_end":77,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufReader, AsyncBufReadExt};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":41078,"byte_end":41132,"line_start":78,"line_end":78,"column_start":1,"column_end":55}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":41133,"byte_end":41157,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":41158,"byte_end":41161,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":41162,"byte_end":41180,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":41181,"byte_end":41220,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"/     let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":41221,"byte_end":41266,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"/     let mut reader = BufReader::new(f);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":41267,"byte_end":41310,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/     let mut buffer = String::new();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":41311,"byte_end":41350,"line_start":85,"line_end":85,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":41351,"byte_end":41354,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     // read a line into buffer","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":41355,"byte_end":41389,"line_start":87,"line_end":87,"column_start":1,"column_end":35}},{"value":"/     reader.read_line(&mut buffer).await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":41390,"byte_end":41435,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":41436,"byte_end":41439,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/     println!(\"{}\", buffer);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":41440,"byte_end":41471,"line_start":90,"line_end":90,"column_start":1,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":41472,"byte_end":41486,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":41487,"byte_end":41492,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":41493,"byte_end":41500,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":41501,"byte_end":41504,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ [`BufWriter`] doesn't add any new ways of writing; it just buffers every call","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":41505,"byte_end":41586,"line_start":95,"line_end":95,"column_start":1,"column_end":82}},{"value":"/ to [`write`](crate::io::AsyncWriteExt::write). However, you **must** flush","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":41587,"byte_end":41665,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"/ [`BufWriter`] to ensure that any buffered data is written.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":41666,"byte_end":41728,"line_start":97,"line_end":97,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":41729,"byte_end":41732,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":41733,"byte_end":41746,"line_start":99,"line_end":99,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufWriter, AsyncWriteExt};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":41747,"byte_end":41799,"line_start":100,"line_end":100,"column_start":1,"column_end":53}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":41800,"byte_end":41824,"line_start":101,"line_end":101,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":41825,"byte_end":41828,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":41829,"byte_end":41847,"line_start":103,"line_end":103,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":41848,"byte_end":41887,"line_start":104,"line_end":104,"column_start":1,"column_end":40}},{"value":"/     let f = File::create(\"foo.txt\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":41888,"byte_end":41935,"line_start":105,"line_end":105,"column_start":1,"column_end":48}},{"value":"/     {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":41936,"byte_end":41945,"line_start":106,"line_end":106,"column_start":1,"column_end":10}},{"value":"/         let mut writer = BufWriter::new(f);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":41946,"byte_end":41993,"line_start":107,"line_end":107,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":41994,"byte_end":41997,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/         // Write a byte to the buffer.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":41998,"byte_end":42040,"line_start":109,"line_end":109,"column_start":1,"column_end":43}},{"value":"/         writer.write(&[42u8]).await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":42041,"byte_end":42082,"line_start":110,"line_end":110,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":42083,"byte_end":42086,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/         // Flush the buffer before it goes out of scope.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":42087,"byte_end":42147,"line_start":112,"line_end":112,"column_start":1,"column_end":61}},{"value":"/         writer.flush().await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":42148,"byte_end":42182,"line_start":113,"line_end":113,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":42183,"byte_end":42186,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/     } // Unless flushed or shut down, the contents of the buffer is discarded on drop.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":42187,"byte_end":42277,"line_start":115,"line_end":115,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":42278,"byte_end":42281,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":42282,"byte_end":42296,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":42297,"byte_end":42302,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":42303,"byte_end":42310,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":42311,"byte_end":42314,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ [stdbuf]: std::io#bufreader-and-bufwriter","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":42315,"byte_end":42360,"line_start":121,"line_end":121,"column_start":1,"column_end":46}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":42361,"byte_end":42403,"line_start":122,"line_end":122,"column_start":1,"column_end":43}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":42404,"byte_end":42449,"line_start":123,"line_end":123,"column_start":1,"column_end":46}},{"value":"/ [`BufReader`]: crate::io::BufReader","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":42450,"byte_end":42489,"line_start":124,"line_end":124,"column_start":1,"column_end":40}},{"value":"/ [`BufWriter`]: crate::io::BufWriter","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":42490,"byte_end":42529,"line_start":125,"line_end":125,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":42530,"byte_end":42533,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ ## Implementing AsyncRead and AsyncWrite","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":42534,"byte_end":42578,"line_start":127,"line_end":127,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":42579,"byte_end":42582,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ Because they are traits, we can implement [`AsyncRead`] and [`AsyncWrite`] for","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":42583,"byte_end":42665,"line_start":129,"line_end":129,"column_start":1,"column_end":83}},{"value":"/ our own types, as well. Note that these traits must only be implemented for","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":42666,"byte_end":42745,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"/ non-blocking I/O types that integrate with the futures type system. In","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":42746,"byte_end":42820,"line_start":131,"line_end":131,"column_start":1,"column_end":75}},{"value":"/ other words, these types must never block the thread, and instead the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":42821,"byte_end":42894,"line_start":132,"line_end":132,"column_start":1,"column_end":74}},{"value":"/ current task is notified when the I/O resource is ready.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":42895,"byte_end":42955,"line_start":133,"line_end":133,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":42956,"byte_end":42959,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ ## Conversion to and from Sink/Stream","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":42960,"byte_end":43001,"line_start":135,"line_end":135,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":43002,"byte_end":43005,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ It is often convenient to encapsulate the reading and writing of","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":43006,"byte_end":43074,"line_start":137,"line_end":137,"column_start":1,"column_end":69}},{"value":"/ bytes and instead work with a [`Sink`] or [`Stream`] of some data","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":43075,"byte_end":43144,"line_start":138,"line_end":138,"column_start":1,"column_end":70}},{"value":"/ type that is encoded as bytes and/or decoded from bytes. Tokio","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":43145,"byte_end":43211,"line_start":139,"line_end":139,"column_start":1,"column_end":67}},{"value":"/ provides some utility traits in the [tokio-util] crate that","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":43212,"byte_end":43275,"line_start":140,"line_end":140,"column_start":1,"column_end":64}},{"value":"/ abstract the asynchronous buffering that is required and allows","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":43276,"byte_end":43343,"line_start":141,"line_end":141,"column_start":1,"column_end":68}},{"value":"/ you to write [`Encoder`] and [`Decoder`] functions working with a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":43344,"byte_end":43413,"line_start":142,"line_end":142,"column_start":1,"column_end":70}},{"value":"/ buffer of bytes, and then use that [\"codec\"] to transform anything","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":43414,"byte_end":43484,"line_start":143,"line_end":143,"column_start":1,"column_end":71}},{"value":"/ that implements [`AsyncRead`] and [`AsyncWrite`] into a `Sink`/`Stream` of","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":43485,"byte_end":43563,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"/ your structured data.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":43564,"byte_end":43589,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":43590,"byte_end":43593,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ [tokio-util]: https://docs.rs/tokio-util/0.3/tokio_util/codec/index.html","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":43594,"byte_end":43670,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":43671,"byte_end":43674,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ # Standard input and output","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":43675,"byte_end":43706,"line_start":149,"line_end":149,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":43707,"byte_end":43710,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ Tokio provides asynchronous APIs to standard [input], [output], and [error].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":43711,"byte_end":43791,"line_start":151,"line_end":151,"column_start":1,"column_end":81}},{"value":"/ These APIs are very similar to the ones provided by `std`, but they also","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":43792,"byte_end":43868,"line_start":152,"line_end":152,"column_start":1,"column_end":77}},{"value":"/ implement [`AsyncRead`] and [`AsyncWrite`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":43869,"byte_end":43916,"line_start":153,"line_end":153,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":43917,"byte_end":43920,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ Note that the standard input / output APIs  **must** be used from the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":43921,"byte_end":43994,"line_start":155,"line_end":155,"column_start":1,"column_end":74}},{"value":"/ context of the Tokio runtime, as they require Tokio-specific features to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":43995,"byte_end":44071,"line_start":156,"line_end":156,"column_start":1,"column_end":77}},{"value":"/ function. Calling these functions outside of a Tokio runtime will panic.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":44072,"byte_end":44148,"line_start":157,"line_end":157,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":44149,"byte_end":44152,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ [input]: fn@stdin","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":44153,"byte_end":44174,"line_start":159,"line_end":159,"column_start":1,"column_end":22}},{"value":"/ [output]: fn@stdout","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":44175,"byte_end":44198,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"/ [error]: fn@stderr","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":44199,"byte_end":44221,"line_start":161,"line_end":161,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":44222,"byte_end":44225,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ # `std` re-exports","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":44226,"byte_end":44248,"line_start":163,"line_end":163,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":44249,"byte_end":44252,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ Additionally, [`Error`], [`ErrorKind`], [`Result`], and [`SeekFrom`] are","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":44253,"byte_end":44329,"line_start":165,"line_end":165,"column_start":1,"column_end":77}},{"value":"/ re-exported from `std::io` for ease of use.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":44330,"byte_end":44377,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":44378,"byte_end":44381,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: trait@AsyncRead","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":44382,"byte_end":44416,"line_start":168,"line_end":168,"column_start":1,"column_end":35}},{"value":"/ [`AsyncWrite`]: trait@AsyncWrite","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":44417,"byte_end":44453,"line_start":169,"line_end":169,"column_start":1,"column_end":37}},{"value":"/ [`AsyncReadExt`]: trait@AsyncReadExt","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":44454,"byte_end":44494,"line_start":170,"line_end":170,"column_start":1,"column_end":41}},{"value":"/ [`AsyncWriteExt`]: trait@AsyncWriteExt","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":44495,"byte_end":44537,"line_start":171,"line_end":171,"column_start":1,"column_end":43}},{"value":"/ [\"codec\"]: https://docs.rs/tokio-util/0.3/tokio_util/codec/index.html","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":44538,"byte_end":44611,"line_start":172,"line_end":172,"column_start":1,"column_end":74}},{"value":"/ [`Encoder`]: https://docs.rs/tokio-util/0.3/tokio_util/codec/trait.Encoder.html","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":44612,"byte_end":44695,"line_start":173,"line_end":173,"column_start":1,"column_end":84}},{"value":"/ [`Decoder`]: https://docs.rs/tokio-util/0.3/tokio_util/codec/trait.Decoder.html","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":44696,"byte_end":44779,"line_start":174,"line_end":174,"column_start":1,"column_end":84}},{"value":"/ [`Error`]: struct@Error","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":44780,"byte_end":44807,"line_start":175,"line_end":175,"column_start":1,"column_end":28}},{"value":"/ [`ErrorKind`]: enum@ErrorKind","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":44808,"byte_end":44841,"line_start":176,"line_end":176,"column_start":1,"column_end":34}},{"value":"/ [`Result`]: type@Result","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":44842,"byte_end":44869,"line_start":177,"line_end":177,"column_start":1,"column_end":28}},{"value":"/ [`Read`]: std::io::Read","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":44870,"byte_end":44897,"line_start":178,"line_end":178,"column_start":1,"column_end":28}},{"value":"/ [`SeekFrom`]: enum@SeekFrom","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":44898,"byte_end":44929,"line_start":179,"line_end":179,"column_start":1,"column_end":32}},{"value":"/ [`Sink`]: https://docs.rs/futures/0.3/futures/sink/trait.Sink.html","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":44930,"byte_end":45000,"line_start":180,"line_end":180,"column_start":1,"column_end":71}},{"value":"/ [`Stream`]: crate::stream::Stream","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":45001,"byte_end":45038,"line_start":181,"line_end":181,"column_start":1,"column_end":38}},{"value":"/ [`Write`]: std::io::Write","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/mod.rs","byte_start":45039,"byte_end":45068,"line_start":182,"line_end":182,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":186},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":47533,"byte_end":47545,"line_start":23,"line_end":23,"column_start":11,"column_end":23},"name":"AsyncBufRead","qualname":"::io::async_buf_read::AsyncBufRead","value":"AsyncBufRead: AsyncRead","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188}],"decl_id":null,"docs":" Reads bytes asynchronously.","sig":null,"attributes":[{"value":"/ Reads bytes asynchronously.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":46856,"byte_end":46887,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":46888,"byte_end":46891,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to [`std::io::BufRead`], but integrates with","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":46892,"byte_end":46964,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ the asynchronous task system. In particular, the [`poll_fill_buf`] method,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":46965,"byte_end":47043,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ unlike [`BufRead::fill_buf`], will automatically queue the current task for wakeup","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":47044,"byte_end":47130,"line_start":12,"line_end":12,"column_start":1,"column_end":87}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":47131,"byte_end":47208,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":47209,"byte_end":47220,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":47221,"byte_end":47224,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncBufRead` values are provided by","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":47225,"byte_end":47293,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ [`AsyncBufReadExt`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":47294,"byte_end":47318,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":47319,"byte_end":47322,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":47323,"byte_end":47365,"line_start":19,"line_end":19,"column_start":1,"column_end":43}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":47366,"byte_end":47416,"line_start":20,"line_end":20,"column_start":1,"column_end":51}},{"value":"/ [`BufRead::fill_buf`]: std::io::BufRead::fill_buf","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":47417,"byte_end":47470,"line_start":21,"line_end":21,"column_start":1,"column_end":54}},{"value":"/ [`AsyncBufReadExt`]: crate::io::AsyncBufReadExt","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":47471,"byte_end":47522,"line_start":22,"line_end":22,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":48643,"byte_end":48656,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"::io::async_buf_read::AsyncBufRead::poll_fill_buf","value":"pub fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<io::Result<&[u8]>>","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":" Attempts to return the contents of the internal buffer, filling it with more data\n from the inner reader if it is empty.","sig":null,"attributes":[{"value":"/ Attempts to return the contents of the internal buffer, filling it with more data","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":47563,"byte_end":47648,"line_start":24,"line_end":24,"column_start":5,"column_end":90}},{"value":"/ from the inner reader if it is empty.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":47653,"byte_end":47694,"line_start":25,"line_end":25,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":47699,"byte_end":47702,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(buf))`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":47707,"byte_end":47754,"line_start":27,"line_end":27,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":47759,"byte_end":47762,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":47767,"byte_end":47826,"line_start":29,"line_end":29,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":47831,"byte_end":47889,"line_start":30,"line_end":30,"column_start":5,"column_end":63}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":47894,"byte_end":47975,"line_start":31,"line_end":31,"column_start":5,"column_end":86}},{"value":"/ readable or is closed.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":47980,"byte_end":48006,"line_start":32,"line_end":32,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":48011,"byte_end":48014,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":48019,"byte_end":48090,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ [`consume`] method to function properly. When calling this","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":48095,"byte_end":48157,"line_start":35,"line_end":35,"column_start":5,"column_end":67}},{"value":"/ method, none of the contents will be \"read\" in the sense that later","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":48162,"byte_end":48233,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"/ calling [`poll_read`] may return the same contents. As such, [`consume`] must","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":48238,"byte_end":48319,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ be called with the number of bytes that are consumed from this buffer to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":48324,"byte_end":48400,"line_start":38,"line_end":38,"column_start":5,"column_end":81}},{"value":"/ ensure that the bytes are never returned twice.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":48405,"byte_end":48456,"line_start":39,"line_end":39,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":48461,"byte_end":48464,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ An empty buffer returned indicates that the stream has reached EOF.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":48469,"byte_end":48540,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":48545,"byte_end":48548,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":48553,"byte_end":48592,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ [`consume`]: AsyncBufRead::consume","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":48597,"byte_end":48635,"line_start":44,"line_end":44,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":49559,"byte_end":49566,"line_start":62,"line_end":62,"column_start":8,"column_end":15},"name":"consume","qualname":"::io::async_buf_read::AsyncBufRead::consume","value":"pub fn consume(Pin<&mut Self>, usize)","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":" Tells this buffer that `amt` bytes have been consumed from the buffer,\n so they should no longer be returned in calls to [`poll_read`].","sig":null,"attributes":[{"value":"/ Tells this buffer that `amt` bytes have been consumed from the buffer,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":48734,"byte_end":48808,"line_start":47,"line_end":47,"column_start":5,"column_end":79}},{"value":"/ so they should no longer be returned in calls to [`poll_read`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":48813,"byte_end":48880,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":48885,"byte_end":48888,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":48893,"byte_end":48964,"line_start":50,"line_end":50,"column_start":5,"column_end":76}},{"value":"/ [`poll_fill_buf`] method to function properly. This function does","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":48969,"byte_end":49038,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ not perform any I/O, it simply informs this object that some amount of","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":49043,"byte_end":49117,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ its buffer, returned from [`poll_fill_buf`], has been consumed and should","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":49122,"byte_end":49199,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/ no longer be returned. As such, this function may do odd things if","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":49204,"byte_end":49274,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ [`poll_fill_buf`] isn't called before calling it.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":49279,"byte_end":49332,"line_start":55,"line_end":55,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":49337,"byte_end":49340,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The `amt` must be `<=` the number of bytes in the buffer returned by","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":49345,"byte_end":49417,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ [`poll_fill_buf`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":49422,"byte_end":49444,"line_start":58,"line_end":58,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":49449,"byte_end":49452,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":49457,"byte_end":49496,"line_start":60,"line_end":60,"column_start":5,"column_end":44}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":49501,"byte_end":49551,"line_start":61,"line_end":61,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":215},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":52800,"byte_end":52809,"line_start":43,"line_end":43,"column_start":11,"column_end":20},"name":"AsyncRead","qualname":"::io::async_read::AsyncRead","value":"AsyncRead","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"/ Reads bytes from a source.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":51219,"byte_end":51249,"line_start":8,"line_end":8,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":51250,"byte_end":51253,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Read`] trait, but integrates with","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":51254,"byte_end":51333,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ the asynchronous task system. In particular, the [`poll_read`] method,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":51334,"byte_end":51408,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ unlike [`Read::read`], will automatically queue the current task for wakeup","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":51409,"byte_end":51488,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":51489,"byte_end":51566,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":51567,"byte_end":51578,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":51579,"byte_end":51582,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the `poll_read` function will return one of","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":51583,"byte_end":51660,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ the following:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":51661,"byte_end":51679,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":51680,"byte_end":51683,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately read","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":51684,"byte_end":51760,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/   and placed into the output buffer, where `n` == 0 implies that EOF has","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":51761,"byte_end":51837,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/   been reached.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":51838,"byte_end":51857,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":51858,"byte_end":51861,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was read into the buffer","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":51862,"byte_end":51927,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"/   provided. The I/O object is not currently readable but may become readable","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":51928,"byte_end":52008,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":52009,"byte_end":52088,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is readable**. This means that like","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":52089,"byte_end":52162,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":52163,"byte_end":52236,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/   readable again.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":52237,"byte_end":52258,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":52259,"byte_end":52262,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":52263,"byte_end":52347,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":52348,"byte_end":52372,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":52373,"byte_end":52376,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the `read` method only works in the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":52377,"byte_end":52450,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":52451,"byte_end":52530,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":52531,"byte_end":52534,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncRead` values are provided by","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":52535,"byte_end":52600,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/ [`AsyncReadExt`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":52601,"byte_end":52622,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":52623,"byte_end":52626,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":52627,"byte_end":52666,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ [`std::io::Read`]: std::io::Read","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":52667,"byte_end":52703,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/ [`Read::read`]: std::io::Read::read","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":52704,"byte_end":52743,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"/ [`AsyncReadExt`]: crate::io::AsyncReadExt","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":52744,"byte_end":52789,"line_start":42,"line_end":42,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":54453,"byte_end":54481,"line_start":77,"line_end":77,"column_start":15,"column_end":43},"name":"prepare_uninitialized_buffer","qualname":"::io::async_read::AsyncRead::prepare_uninitialized_buffer","value":"pub unsafe fn prepare_uninitialized_buffer(&Self, &mut [MaybeUninit<u8>])\n-> bool","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":" Prepares an uninitialized buffer to be safe to pass to `read`. Returns\n `true` if the supplied buffer was zeroed out.","sig":null,"attributes":[{"value":"/ Prepares an uninitialized buffer to be safe to pass to `read`. Returns","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":52816,"byte_end":52890,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ `true` if the supplied buffer was zeroed out.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":52895,"byte_end":52944,"line_start":45,"line_end":45,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":52949,"byte_end":52952,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ While it would be highly unusual, implementations of [`io::Read`] are","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":52957,"byte_end":53030,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ able to read data from the buffer passed as an argument. Because of","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":53035,"byte_end":53106,"line_start":48,"line_end":48,"column_start":5,"column_end":76}},{"value":"/ this, the buffer passed to [`io::Read`] must be initialized memory. In","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":53111,"byte_end":53185,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"/ situations where large numbers of buffers are used, constantly having to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":53190,"byte_end":53266,"line_start":50,"line_end":50,"column_start":5,"column_end":81}},{"value":"/ zero out buffers can be expensive.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":53271,"byte_end":53309,"line_start":51,"line_end":51,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":53314,"byte_end":53317,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This function does any necessary work to prepare an uninitialized buffer","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":53322,"byte_end":53398,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/ to be safe to pass to `read`. If `read` guarantees to never attempt to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":53403,"byte_end":53477,"line_start":54,"line_end":54,"column_start":5,"column_end":79}},{"value":"/ read data out of the supplied buffer, then `prepare_uninitialized_buffer`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":53482,"byte_end":53559,"line_start":55,"line_end":55,"column_start":5,"column_end":82}},{"value":"/ doesn't need to do any work.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":53564,"byte_end":53596,"line_start":56,"line_end":56,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":53601,"byte_end":53604,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ If this function returns `true`, then the memory has been zeroed out.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":53609,"byte_end":53682,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/ This allows implementations of `AsyncRead` which are composed of","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":53687,"byte_end":53755,"line_start":59,"line_end":59,"column_start":5,"column_end":73}},{"value":"/ multiple subimplementations to efficiently implement","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":53760,"byte_end":53816,"line_start":60,"line_end":60,"column_start":5,"column_end":61}},{"value":"/ `prepare_uninitialized_buffer`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":53821,"byte_end":53856,"line_start":61,"line_end":61,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":53861,"byte_end":53864,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function isn't actually `unsafe` to call but `unsafe` to implement.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":53869,"byte_end":53945,"line_start":63,"line_end":63,"column_start":5,"column_end":81}},{"value":"/ The implementer must ensure that either the whole `buf` has been zeroed","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":53950,"byte_end":54025,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ or `poll_read_buf()` overwrites the buffer without reading it and returns","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":54030,"byte_end":54107,"line_start":65,"line_end":65,"column_start":5,"column_end":82}},{"value":"/ correct value.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":54112,"byte_end":54130,"line_start":66,"line_end":66,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":54135,"byte_end":54138,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This function is called from [`poll_read_buf`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":54143,"byte_end":54194,"line_start":68,"line_end":68,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":54199,"byte_end":54202,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":54207,"byte_end":54219,"line_start":70,"line_end":70,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":54224,"byte_end":54227,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ Implementations that return `false` must never read from data slices","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":54232,"byte_end":54304,"line_start":72,"line_end":72,"column_start":5,"column_end":77}},{"value":"/ that they did not write to.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":54309,"byte_end":54340,"line_start":73,"line_end":73,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":54345,"byte_end":54348,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ [`io::Read`]: std::io::Read","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":54353,"byte_end":54384,"line_start":75,"line_end":75,"column_start":5,"column_end":36}},{"value":"/ [`poll_read_buf`]: method@Self::poll_read_buf","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":54389,"byte_end":54438,"line_start":76,"line_end":76,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":54994,"byte_end":55003,"line_start":93,"line_end":93,"column_start":8,"column_end":17},"name":"poll_read","qualname":"::io::async_read::AsyncRead::poll_read","value":"pub fn poll_read(Pin<&mut Self>, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":" Attempts to read from the `AsyncRead` into `buf`.","sig":null,"attributes":[{"value":"/ Attempts to read from the `AsyncRead` into `buf`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":54624,"byte_end":54677,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":54682,"byte_end":54685,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_read))`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":54690,"byte_end":54748,"line_start":87,"line_end":87,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":54753,"byte_end":54756,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":54761,"byte_end":54820,"line_start":89,"line_end":89,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":54825,"byte_end":54883,"line_start":90,"line_end":90,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":54888,"byte_end":54955,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/ readable or is closed.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":54960,"byte_end":54986,"line_start":92,"line_end":92,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":55464,"byte_end":55477,"line_start":105,"line_end":105,"column_start":8,"column_end":21},"name":"poll_read_buf","qualname":"::io::async_read::AsyncRead::poll_read_buf","value":"pub fn poll_read_buf<B: BufMut>(Pin<&mut Self>, &mut Context, &mut B)\n-> Poll<io::Result<usize>> where Self: Sized","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified `BufMut`, returning\n how many bytes were read.","sig":null,"attributes":[{"value":"/ Pulls some bytes from this source into the specified `BufMut`, returning","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":55128,"byte_end":55204,"line_start":99,"line_end":99,"column_start":5,"column_end":81}},{"value":"/ how many bytes were read.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":55209,"byte_end":55238,"line_start":100,"line_end":100,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":55243,"byte_end":55246,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ The `buf` provided will have bytes read into it and the internal cursor","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":55251,"byte_end":55326,"line_start":102,"line_end":102,"column_start":5,"column_end":80}},{"value":"/ will be advanced if any bytes were read. Note that this method typically","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":55331,"byte_end":55407,"line_start":103,"line_end":103,"column_start":5,"column_end":81}},{"value":"/ will not reallocate the buffer provided.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":55412,"byte_end":55456,"line_start":104,"line_end":104,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":246},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_seek.rs","byte_start":58632,"byte_end":58641,"line_start":18,"line_end":18,"column_start":11,"column_end":20},"name":"AsyncSeek","qualname":"::io::async_seek::AsyncSeek","value":"AsyncSeek","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":248}],"decl_id":null,"docs":" Seek bytes asynchronously.","sig":null,"attributes":[{"value":"/ Seek bytes asynchronously.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_seek.rs","byte_start":58150,"byte_end":58180,"line_start":6,"line_end":6,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_seek.rs","byte_start":58181,"byte_end":58184,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Seek`] trait, but integrates","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_seek.rs","byte_start":58185,"byte_end":58259,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ with the asynchronous task system. In particular, the `start_seek`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_seek.rs","byte_start":58260,"byte_end":58330,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ method, unlike [`Seek::seek`], will not block the calling thread.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_seek.rs","byte_start":58331,"byte_end":58400,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_seek.rs","byte_start":58401,"byte_end":58404,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncSeek` values are provided by","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_seek.rs","byte_start":58405,"byte_end":58470,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"/ [`AsyncSeekExt`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_seek.rs","byte_start":58471,"byte_end":58492,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_seek.rs","byte_start":58493,"byte_end":58496,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Seek`]: std::io::Seek","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_seek.rs","byte_start":58497,"byte_end":58533,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ [`Seek::seek`]: std::io::Seek::seek()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_seek.rs","byte_start":58534,"byte_end":58575,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/ [`AsyncSeekExt`]: crate::io::AsyncSeekExt","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_seek.rs","byte_start":58576,"byte_end":58621,"line_start":17,"line_end":17,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_seek.rs","byte_start":58979,"byte_end":58989,"line_start":26,"line_end":26,"column_start":8,"column_end":18},"name":"start_seek","qualname":"::io::async_seek::AsyncSeek::start_seek","value":"pub fn start_seek(Pin<&mut Self>, &mut Context, SeekFrom)\n-> Poll<io::Result<()>>","parent":{"krate":0,"index":246},"children":[],"decl_id":null,"docs":" Attempts to seek to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Attempts to seek to an offset, in bytes, in a stream.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_seek.rs","byte_start":58648,"byte_end":58705,"line_start":19,"line_end":19,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_seek.rs","byte_start":58710,"byte_end":58713,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ A seek beyond the end of a stream is allowed, but behavior is defined","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_seek.rs","byte_start":58718,"byte_end":58791,"line_start":21,"line_end":21,"column_start":5,"column_end":78}},{"value":"/ by the implementation.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_seek.rs","byte_start":58796,"byte_end":58822,"line_start":22,"line_end":22,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_seek.rs","byte_start":58827,"byte_end":58830,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ If this function returns successfully, then the job has been submitted.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_seek.rs","byte_start":58835,"byte_end":58910,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/ To find out when it completes, call `poll_complete`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_seek.rs","byte_start":58915,"byte_end":58971,"line_start":25,"line_end":25,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_seek.rs","byte_start":59572,"byte_end":59585,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_complete","qualname":"::io::async_seek::AsyncSeek::poll_complete","value":"pub fn poll_complete(Pin<&mut Self>, &mut Context) -> Poll<io::Result<u64>>","parent":{"krate":0,"index":246},"children":[],"decl_id":null,"docs":" Waits for a seek operation to complete.","sig":null,"attributes":[{"value":"/ Waits for a seek operation to complete.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_seek.rs","byte_start":59115,"byte_end":59158,"line_start":32,"line_end":32,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_seek.rs","byte_start":59163,"byte_end":59166,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ If the seek operation completed successfully,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_seek.rs","byte_start":59171,"byte_end":59220,"line_start":34,"line_end":34,"column_start":5,"column_end":54}},{"value":"/ this method returns the new position from the start of the stream.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_seek.rs","byte_start":59225,"byte_end":59295,"line_start":35,"line_end":35,"column_start":5,"column_end":75}},{"value":"/ That position can be used later with [`SeekFrom::Start`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_seek.rs","byte_start":59300,"byte_end":59361,"line_start":36,"line_end":36,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_seek.rs","byte_start":59366,"byte_end":59369,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_seek.rs","byte_start":59374,"byte_end":59386,"line_start":38,"line_end":38,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_seek.rs","byte_start":59391,"byte_end":59394,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Seeking to a negative offset is considered an error.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_seek.rs","byte_start":59399,"byte_end":59455,"line_start":40,"line_end":40,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_seek.rs","byte_start":59460,"byte_end":59463,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_seek.rs","byte_start":59468,"byte_end":59480,"line_start":42,"line_end":42,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_seek.rs","byte_start":59485,"byte_end":59488,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Calling this method without calling `start_seek` first is an error.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_seek.rs","byte_start":59493,"byte_end":59564,"line_start":44,"line_end":44,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":271},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":63088,"byte_end":63098,"line_start":46,"line_end":46,"column_start":11,"column_end":21},"name":"AsyncWrite","qualname":"::io::async_write::AsyncWrite","value":"AsyncWrite","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275}],"decl_id":null,"docs":" Writes bytes asynchronously.","sig":null,"attributes":[{"value":"/ Writes bytes asynchronously.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":61225,"byte_end":61257,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":61258,"byte_end":61261,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The trait inherits from [`std::io::Write`] and indicates that an I/O object is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":61262,"byte_end":61344,"line_start":9,"line_end":9,"column_start":1,"column_end":83}},{"value":"/ **nonblocking**. All non-blocking I/O objects must return an error when","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":61345,"byte_end":61420,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ bytes cannot be written instead of blocking the current thread.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":61421,"byte_end":61488,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":61489,"byte_end":61492,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the [`poll_write`] function will return one of","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":61493,"byte_end":61573,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ the following:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":61574,"byte_end":61592,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":61593,"byte_end":61596,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":61597,"byte_end":61668,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/   written.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":61669,"byte_end":61683,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":61684,"byte_end":61687,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was written from the buffer","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":61688,"byte_end":61756,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/   provided. The I/O object is not currently writable but may become writable","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":61757,"byte_end":61837,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":61838,"byte_end":61917,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is writable**. This means that like","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":61918,"byte_end":61991,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":61992,"byte_end":62065,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/   writable again.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":62066,"byte_end":62087,"line_start":24,"line_end":24,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":62088,"byte_end":62091,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":62092,"byte_end":62176,"line_start":26,"line_end":26,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":62177,"byte_end":62201,"line_start":27,"line_end":27,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":62202,"byte_end":62205,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the [`write`][stdwrite] method only works in","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":62206,"byte_end":62288,"line_start":29,"line_end":29,"column_start":1,"column_end":83}},{"value":"/ the context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":62289,"byte_end":62372,"line_start":30,"line_end":30,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":62373,"byte_end":62376,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Note that this trait also represents that the  [`Write::flush`][stdflush] method","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":62377,"byte_end":62461,"line_start":32,"line_end":32,"column_start":1,"column_end":85}},{"value":"/ works very similarly to the `write` method, notably that `Ok(())` means that the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":62462,"byte_end":62546,"line_start":33,"line_end":33,"column_start":1,"column_end":85}},{"value":"/ writer has successfully been flushed, a \"would block\" error means that the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":62547,"byte_end":62625,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ current task is ready to receive a notification when flushing can make more","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":62626,"byte_end":62705,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/ progress, and otherwise normal errors can happen as well.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":62706,"byte_end":62767,"line_start":36,"line_end":36,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":62768,"byte_end":62771,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncWrite` values are provided by","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":62772,"byte_end":62838,"line_start":38,"line_end":38,"column_start":1,"column_end":67}},{"value":"/ [`AsyncWriteExt`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":62839,"byte_end":62861,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":62862,"byte_end":62865,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Write`]: std::io::Write","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":62866,"byte_end":62904,"line_start":41,"line_end":41,"column_start":1,"column_end":39}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":62905,"byte_end":62949,"line_start":42,"line_end":42,"column_start":1,"column_end":45}},{"value":"/ [stdwrite]: std::io::Write::write()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":62950,"byte_end":62989,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/ [stdflush]: std::io::Write::flush()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":62990,"byte_end":63029,"line_start":44,"line_end":44,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWriteExt`]: crate::io::AsyncWriteExt","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":63030,"byte_end":63077,"line_start":45,"line_end":45,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":63482,"byte_end":63492,"line_start":55,"line_end":55,"column_start":8,"column_end":18},"name":"poll_write","qualname":"::io::async_write::AsyncWrite::poll_write","value":"pub fn poll_write(Pin<&mut Self>, &mut Context, &[u8])\n-> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Attempt to write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Attempt to write bytes from `buf` into the object.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":63105,"byte_end":63159,"line_start":47,"line_end":47,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":63164,"byte_end":63167,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":63172,"byte_end":63233,"line_start":49,"line_end":49,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":63238,"byte_end":63241,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":63246,"byte_end":63308,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":63313,"byte_end":63371,"line_start":52,"line_end":52,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":63376,"byte_end":63443,"line_start":53,"line_end":53,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":63448,"byte_end":63474,"line_start":54,"line_end":54,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":64033,"byte_end":64043,"line_start":70,"line_end":70,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"::io::async_write::AsyncWrite::poll_flush","value":"pub fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Attempts to flush the object, ensuring that any buffered data reach\n their destination.","sig":null,"attributes":[{"value":"/ Attempts to flush the object, ensuring that any buffered data reach","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":63620,"byte_end":63691,"line_start":61,"line_end":61,"column_start":5,"column_end":76}},{"value":"/ their destination.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":63696,"byte_end":63718,"line_start":62,"line_end":62,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":63723,"byte_end":63726,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":63731,"byte_end":63777,"line_start":64,"line_end":64,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":63782,"byte_end":63785,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ If flushing cannot immediately complete, this method returns","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":63790,"byte_end":63854,"line_start":66,"line_end":66,"column_start":5,"column_end":69}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":63859,"byte_end":63917,"line_start":67,"line_end":67,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object can make","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":63922,"byte_end":63990,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/ progress towards flushing.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":63995,"byte_end":64025,"line_start":69,"line_end":69,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":67329,"byte_end":67342,"line_start":130,"line_end":130,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"::io::async_write::AsyncWrite::poll_shutdown","value":"pub fn poll_shutdown(Pin<&mut Self>, &mut Context)\n-> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Initiates or attempts to shut down this writer, returning success when\n the I/O connection has completely shut down.","sig":null,"attributes":[{"value":"/ Initiates or attempts to shut down this writer, returning success when","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":64125,"byte_end":64199,"line_start":72,"line_end":72,"column_start":5,"column_end":79}},{"value":"/ the I/O connection has completely shut down.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":64204,"byte_end":64252,"line_start":73,"line_end":73,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":64257,"byte_end":64260,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This method is intended to be used for asynchronous shutdown of I/O","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":64265,"byte_end":64336,"line_start":75,"line_end":75,"column_start":5,"column_end":76}},{"value":"/ connections. For example this is suitable for implementing shutdown of a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":64341,"byte_end":64417,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ TLS connection or calling `TcpStream::shutdown` on a proxied connection.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":64422,"byte_end":64498,"line_start":77,"line_end":77,"column_start":5,"column_end":81}},{"value":"/ Protocols sometimes need to flush out final pieces of data or otherwise","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":64503,"byte_end":64578,"line_start":78,"line_end":78,"column_start":5,"column_end":80}},{"value":"/ perform a graceful shutdown handshake, reading/writing more data as","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":64583,"byte_end":64654,"line_start":79,"line_end":79,"column_start":5,"column_end":76}},{"value":"/ appropriate. This method is the hook for such protocols to implement the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":64659,"byte_end":64735,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/ graceful shutdown logic.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":64740,"byte_end":64768,"line_start":81,"line_end":81,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":64773,"byte_end":64776,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This `shutdown` method is required by implementers of the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":64781,"byte_end":64842,"line_start":83,"line_end":83,"column_start":5,"column_end":66}},{"value":"/ `AsyncWrite` trait. Wrappers typically just want to proxy this call","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":64847,"byte_end":64918,"line_start":84,"line_end":84,"column_start":5,"column_end":76}},{"value":"/ through to the wrapped type, and base types will typically implement","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":64923,"byte_end":64995,"line_start":85,"line_end":85,"column_start":5,"column_end":77}},{"value":"/ shutdown logic here or just return `Ok(().into())`. Note that if you're","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":65000,"byte_end":65075,"line_start":86,"line_end":86,"column_start":5,"column_end":80}},{"value":"/ wrapping an underlying `AsyncWrite` a call to `shutdown` implies that","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":65080,"byte_end":65153,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ transitively the entire stream has been shut down. After your wrapper's","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":65158,"byte_end":65233,"line_start":88,"line_end":88,"column_start":5,"column_end":80}},{"value":"/ shutdown logic has been executed you should shut down the underlying","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":65238,"byte_end":65310,"line_start":89,"line_end":89,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":65315,"byte_end":65326,"line_start":90,"line_end":90,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":65331,"byte_end":65334,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Invocation of a `shutdown` implies an invocation of `flush`. Once this","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":65339,"byte_end":65413,"line_start":92,"line_end":92,"column_start":5,"column_end":79}},{"value":"/ method returns `Ready` it implies that a flush successfully happened","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":65418,"byte_end":65490,"line_start":93,"line_end":93,"column_start":5,"column_end":77}},{"value":"/ before the shutdown happened. That is, callers don't need to call","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":65495,"byte_end":65564,"line_start":94,"line_end":94,"column_start":5,"column_end":74}},{"value":"/ `flush` before calling `shutdown`. They can rely that by calling","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":65569,"byte_end":65637,"line_start":95,"line_end":95,"column_start":5,"column_end":73}},{"value":"/ `shutdown` any pending buffered data will be written out.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":65642,"byte_end":65703,"line_start":96,"line_end":96,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":65708,"byte_end":65711,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":65716,"byte_end":65734,"line_start":98,"line_end":98,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":65739,"byte_end":65742,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This function returns a `Poll<io::Result<()>>` classified as such:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":65747,"byte_end":65817,"line_start":100,"line_end":100,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":65822,"byte_end":65825,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(()))` - indicates that the connection was","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":65830,"byte_end":65893,"line_start":102,"line_end":102,"column_start":5,"column_end":68}},{"value":"/   successfully shut down and is now safe to deallocate/drop/close","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":65898,"byte_end":65967,"line_start":103,"line_end":103,"column_start":5,"column_end":74}},{"value":"/   resources associated with it. This method means that the current task","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":65972,"byte_end":66047,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/   will no longer receive any notifications due to this method and the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":66052,"byte_end":66125,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/   I/O object itself is likely no longer usable.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":66130,"byte_end":66181,"line_start":106,"line_end":106,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":66186,"byte_end":66189,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` - indicates that shutdown is initiated but could","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":66194,"byte_end":66264,"line_start":108,"line_end":108,"column_start":5,"column_end":75}},{"value":"/   not complete just yet. This may mean that more I/O needs to happen to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":66269,"byte_end":66344,"line_start":109,"line_end":109,"column_start":5,"column_end":80}},{"value":"/   continue this shutdown operation. The current task is scheduled to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":66349,"byte_end":66421,"line_start":110,"line_end":110,"column_start":5,"column_end":77}},{"value":"/   receive a notification when it's otherwise ready to continue the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":66426,"byte_end":66496,"line_start":111,"line_end":111,"column_start":5,"column_end":75}},{"value":"/   shutdown operation. When woken up this method should be called again.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":66501,"byte_end":66576,"line_start":112,"line_end":112,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":66581,"byte_end":66584,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(e))` - indicates a fatal error has happened with shutdown,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":66589,"byte_end":66670,"line_start":114,"line_end":114,"column_start":5,"column_end":86}},{"value":"/   indicating that the shutdown operation did not complete successfully.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":66675,"byte_end":66750,"line_start":115,"line_end":115,"column_start":5,"column_end":80}},{"value":"/   This typically means that the I/O object is no longer usable.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":66755,"byte_end":66822,"line_start":116,"line_end":116,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":66827,"byte_end":66830,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":66835,"byte_end":66847,"line_start":118,"line_end":118,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":66852,"byte_end":66855,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This function can return normal I/O errors through `Err`, described","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":66860,"byte_end":66931,"line_start":120,"line_end":120,"column_start":5,"column_end":76}},{"value":"/ above. Additionally this method may also render the underlying","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":66936,"byte_end":67002,"line_start":121,"line_end":121,"column_start":5,"column_end":71}},{"value":"/ `Write::write` method no longer usable (e.g. will return errors in the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":67007,"byte_end":67081,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"/ future). It's recommended that once `shutdown` is called the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":67086,"byte_end":67150,"line_start":123,"line_end":123,"column_start":5,"column_end":69}},{"value":"/ `write` method is no longer called.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":67155,"byte_end":67194,"line_start":124,"line_end":124,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":67199,"byte_end":67202,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":67207,"byte_end":67219,"line_start":126,"line_end":126,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":67224,"byte_end":67227,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context of a future's","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":67232,"byte_end":67307,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/ task.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":67312,"byte_end":67321,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":67630,"byte_end":67644,"line_start":136,"line_end":136,"column_start":8,"column_end":22},"name":"poll_write_buf","qualname":"::io::async_write::AsyncWrite::poll_write_buf","value":"pub fn poll_write_buf<B: Buf>(Pin<&mut Self>, &mut Context, &mut B)\n-> Poll<Result<usize, io::Error>> where Self: Sized","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Writes a `Buf` into this value, returning how many bytes were written.","sig":null,"attributes":[{"value":"/ Writes a `Buf` into this value, returning how many bytes were written.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":67424,"byte_end":67498,"line_start":132,"line_end":132,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":67503,"byte_end":67506,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Note that this method will advance the `buf` provided automatically by","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":67511,"byte_end":67585,"line_start":134,"line_end":134,"column_start":5,"column_end":79}},{"value":"/ the number of bytes written.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":67590,"byte_end":67622,"line_start":135,"line_end":135,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1742},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8646832,"byte_end":8646843,"line_start":104,"line_end":104,"column_start":16,"column_end":27},"name":"PollEvented","qualname":"::io::poll_evented::PollEvented","value":"PollEvented {  }","parent":null,"children":[{"krate":0,"index":1744},{"krate":0,"index":1745}],"decl_id":null,"docs":" Associates an I/O resource that implements the [`std::io::Read`] and/or\n [`std::io::Write`] traits with the reactor that drives it.","sig":null,"attributes":[{"value":"cfg(feature = \"io-driver\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":19308,"byte_end":19337,"line_start":131,"line_end":131,"column_start":13,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1654},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8649089,"byte_end":8649092,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"name":"new","qualname":"<PollEvented<E>>::new","value":"pub fn new(E) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollEvented` associated with the default reactor.","sig":null,"attributes":[{"value":"/ Creates a new `PollEvented` associated with the default reactor.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8648667,"byte_end":8648735,"line_start":168,"line_end":168,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8648740,"byte_end":8648743,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8648748,"byte_end":8648760,"line_start":170,"line_end":170,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8648765,"byte_end":8648768,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8648773,"byte_end":8648833,"line_start":172,"line_end":172,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8648838,"byte_end":8648841,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8648846,"byte_end":8648916,"line_start":174,"line_end":174,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8648921,"byte_end":8648994,"line_start":175,"line_end":175,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8648999,"byte_end":8649077,"line_start":176,"line_end":176,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1655},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8650296,"byte_end":8650310,"line_start":205,"line_end":205,"column_start":12,"column_end":26},"name":"new_with_ready","qualname":"<PollEvented<E>>::new_with_ready","value":"pub fn new_with_ready(E, mio::Ready) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollEvented` associated with the default reactor, for specific `mio::Ready`\n state. `new_with_ready` should be used over `new` when you need control over the readiness\n state, such as when a file descriptor only allows reads. This does not add `hup` or `error`\n so if you are interested in those states, you will need to add them to the readiness state\n passed to this function.","sig":null,"attributes":[{"value":"/ Creates a new `PollEvented` associated with the default reactor, for specific `mio::Ready`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8649192,"byte_end":8649286,"line_start":181,"line_end":181,"column_start":5,"column_end":99}},{"value":"/ state. `new_with_ready` should be used over `new` when you need control over the readiness","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8649291,"byte_end":8649385,"line_start":182,"line_end":182,"column_start":5,"column_end":99}},{"value":"/ state, such as when a file descriptor only allows reads. This does not add `hup` or `error`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8649390,"byte_end":8649485,"line_start":183,"line_end":183,"column_start":5,"column_end":100}},{"value":"/ so if you are interested in those states, you will need to add them to the readiness state","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8649490,"byte_end":8649584,"line_start":184,"line_end":184,"column_start":5,"column_end":99}},{"value":"/ passed to this function.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8649589,"byte_end":8649617,"line_start":185,"line_end":185,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8649622,"byte_end":8649625,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ An example to listen to read only","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8649630,"byte_end":8649667,"line_start":187,"line_end":187,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8649672,"byte_end":8649675,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8649680,"byte_end":8649691,"line_start":189,"line_end":189,"column_start":5,"column_end":16}},{"value":"/ ##[cfg(unix)]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8649696,"byte_end":8649713,"line_start":190,"line_end":190,"column_start":5,"column_end":22}},{"value":"/     mio::Ready::from_usize(","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8649718,"byte_end":8649749,"line_start":191,"line_end":191,"column_start":5,"column_end":36}},{"value":"/         mio::Ready::readable().as_usize()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8649754,"byte_end":8649799,"line_start":192,"line_end":192,"column_start":5,"column_end":50}},{"value":"/         | mio::unix::UnixReady::error().as_usize()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8649804,"byte_end":8649858,"line_start":193,"line_end":193,"column_start":5,"column_end":59}},{"value":"/         | mio::unix::UnixReady::hup().as_usize()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8649863,"byte_end":8649915,"line_start":194,"line_end":194,"column_start":5,"column_end":57}},{"value":"/     );","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8649920,"byte_end":8649930,"line_start":195,"line_end":195,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8649935,"byte_end":8649942,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8649947,"byte_end":8649950,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8649955,"byte_end":8649967,"line_start":198,"line_end":198,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8649972,"byte_end":8649975,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8649980,"byte_end":8650040,"line_start":200,"line_end":200,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8650045,"byte_end":8650048,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8650053,"byte_end":8650123,"line_start":202,"line_end":202,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8650128,"byte_end":8650201,"line_start":203,"line_end":203,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8650206,"byte_end":8650284,"line_start":204,"line_end":204,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1656},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8650788,"byte_end":8650795,"line_start":219,"line_end":219,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<PollEvented<E>>::get_ref","value":"pub fn get_ref(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the underlying I/O object this readiness\n stream is wrapping.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the underlying I/O object this readiness","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8650674,"byte_end":8650748,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ stream is wrapping.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8650753,"byte_end":8650776,"line_start":218,"line_end":218,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1657},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8650971,"byte_end":8650978,"line_start":225,"line_end":225,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<PollEvented<E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O object this readiness\n stream is wrapping.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O object this readiness","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8650856,"byte_end":8650931,"line_start":223,"line_end":223,"column_start":5,"column_end":80}},{"value":"/ stream is wrapping.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8650936,"byte_end":8650959,"line_start":224,"line_end":224,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1658},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8651514,"byte_end":8651524,"line_start":237,"line_end":237,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollEvented<E>>::into_inner","value":"pub fn into_inner(Self) -> io::Result<E>","parent":null,"children":[],"decl_id":null,"docs":" Consumes self, returning the inner I/O object","sig":null,"attributes":[{"value":"/ Consumes self, returning the inner I/O object","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8651047,"byte_end":8651096,"line_start":229,"line_end":229,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8651101,"byte_end":8651104,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ This function will deregister the I/O resource from the reactor before","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8651109,"byte_end":8651183,"line_start":231,"line_end":231,"column_start":5,"column_end":79}},{"value":"/ returning. If the deregistration operation fails, an error is returned.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8651188,"byte_end":8651263,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8651268,"byte_end":8651271,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ Note that deregistering does not guarantee that the I/O resource can be","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8651276,"byte_end":8651351,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ registered with a different reactor. Some I/O resource types can only be","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8651356,"byte_end":8651432,"line_start":235,"line_end":235,"column_start":5,"column_end":81}},{"value":"/ associated with a single reactor instance for their lifetime.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8651437,"byte_end":8651502,"line_start":236,"line_end":236,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1659},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8652681,"byte_end":8652696,"line_start":269,"line_end":269,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<PollEvented<E>>::poll_read_ready","value":"pub fn poll_read_ready(&Self, &mut Context, mio::Ready)\n-> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Checks the I/O resource's read readiness state.","sig":null,"attributes":[{"value":"/ Checks the I/O resource's read readiness state.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8651672,"byte_end":8651723,"line_start":243,"line_end":243,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8651728,"byte_end":8651731,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ The mask argument allows specifying what readiness to notify on. This","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8651736,"byte_end":8651809,"line_start":245,"line_end":245,"column_start":5,"column_end":78}},{"value":"/ can be any value, including platform specific readiness, **except**","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8651814,"byte_end":8651885,"line_start":246,"line_end":246,"column_start":5,"column_end":76}},{"value":"/ `writable`. HUP is always implicitly included on platforms that support","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8651890,"byte_end":8651965,"line_start":247,"line_end":247,"column_start":5,"column_end":80}},{"value":"/ it.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8651970,"byte_end":8651977,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8651982,"byte_end":8651985,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ If the resource is not ready for a read then `Poll::Pending` is returned","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8651990,"byte_end":8652066,"line_start":250,"line_end":250,"column_start":5,"column_end":81}},{"value":"/ and the current task is notified once a new event is received.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8652071,"byte_end":8652137,"line_start":251,"line_end":251,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8652142,"byte_end":8652145,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ The I/O resource will remain in a read-ready state until readiness is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8652150,"byte_end":8652223,"line_start":253,"line_end":253,"column_start":5,"column_end":78}},{"value":"/ cleared by calling [`clear_read_ready`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8652228,"byte_end":8652272,"line_start":254,"line_end":254,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8652277,"byte_end":8652280,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ [`clear_read_ready`]: method@Self::clear_read_ready","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8652285,"byte_end":8652340,"line_start":256,"line_end":256,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8652345,"byte_end":8652348,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8652353,"byte_end":8652365,"line_start":258,"line_end":258,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8652370,"byte_end":8652373,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8652378,"byte_end":8652406,"line_start":260,"line_end":260,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8652411,"byte_end":8652414,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ * `ready` includes writable.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8652419,"byte_end":8652451,"line_start":262,"line_end":262,"column_start":5,"column_end":37}},{"value":"/ * called from outside of a task context.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8652456,"byte_end":8652500,"line_start":263,"line_end":263,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8652505,"byte_end":8652508,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8652513,"byte_end":8652526,"line_start":265,"line_end":265,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8652531,"byte_end":8652534,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ This method may not be called concurrently. It takes `&self` to allow","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8652539,"byte_end":8652612,"line_start":267,"line_end":267,"column_start":5,"column_end":78}},{"value":"/ calling it concurrently with `poll_write_ready`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8652617,"byte_end":8652669,"line_start":268,"line_end":268,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1660},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8653672,"byte_end":8653688,"line_start":299,"line_end":299,"column_start":12,"column_end":28},"name":"clear_read_ready","qualname":"<PollEvented<E>>::clear_read_ready","value":"pub fn clear_read_ready(&Self, &mut Context, mio::Ready) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Clears the I/O resource's read readiness state and registers the current\n task to be notified once a read readiness event is received.","sig":null,"attributes":[{"value":"/ Clears the I/O resource's read readiness state and registers the current","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8653073,"byte_end":8653149,"line_start":284,"line_end":284,"column_start":5,"column_end":81}},{"value":"/ task to be notified once a read readiness event is received.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8653154,"byte_end":8653218,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8653223,"byte_end":8653226,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ After calling this function, `poll_read_ready` will return","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8653231,"byte_end":8653293,"line_start":287,"line_end":287,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` until a new read readiness event has been received.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8653298,"byte_end":8653369,"line_start":288,"line_end":288,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8653374,"byte_end":8653377,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ The `mask` argument specifies the readiness bits to clear. This may not","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8653382,"byte_end":8653457,"line_start":290,"line_end":290,"column_start":5,"column_end":80}},{"value":"/ include `writable` or `hup`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8653462,"byte_end":8653494,"line_start":291,"line_end":291,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8653499,"byte_end":8653502,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8653507,"byte_end":8653519,"line_start":293,"line_end":293,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8653524,"byte_end":8653527,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8653532,"byte_end":8653560,"line_start":295,"line_end":295,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8653565,"byte_end":8653568,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ * `ready` includes writable or HUP","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8653573,"byte_end":8653611,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/ * called from outside of a task context.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8653616,"byte_end":8653660,"line_start":298,"line_end":298,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1661},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8655128,"byte_end":8655144,"line_start":340,"line_end":340,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<PollEvented<E>>::poll_write_ready","value":"pub fn poll_write_ready(&Self, &mut Context) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Checks the I/O resource's write readiness state.","sig":null,"attributes":[{"value":"/ Checks the I/O resource's write readiness state.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8654213,"byte_end":8654265,"line_start":316,"line_end":316,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8654270,"byte_end":8654273,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ This always checks for writable readiness and also checks for HUP","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8654278,"byte_end":8654347,"line_start":318,"line_end":318,"column_start":5,"column_end":74}},{"value":"/ readiness on platforms that support it.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8654352,"byte_end":8654395,"line_start":319,"line_end":319,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8654400,"byte_end":8654403,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ If the resource is not ready for a write then `Poll::Pending` is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8654408,"byte_end":8654476,"line_start":321,"line_end":321,"column_start":5,"column_end":73}},{"value":"/ returned and the current task is notified once a new event is received.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8654481,"byte_end":8654556,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8654561,"byte_end":8654564,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ The I/O resource will remain in a write-ready state until readiness is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8654569,"byte_end":8654643,"line_start":324,"line_end":324,"column_start":5,"column_end":79}},{"value":"/ cleared by calling [`clear_write_ready`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8654648,"byte_end":8654693,"line_start":325,"line_end":325,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8654698,"byte_end":8654701,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ [`clear_write_ready`]: method@Self::clear_write_ready","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8654706,"byte_end":8654763,"line_start":327,"line_end":327,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8654768,"byte_end":8654771,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8654776,"byte_end":8654788,"line_start":329,"line_end":329,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8654793,"byte_end":8654796,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8654801,"byte_end":8654829,"line_start":331,"line_end":331,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8654834,"byte_end":8654837,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ * `ready` contains bits besides `writable` and `hup`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8654842,"byte_end":8654899,"line_start":333,"line_end":333,"column_start":5,"column_end":62}},{"value":"/ * called from outside of a task context.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8654904,"byte_end":8654948,"line_start":334,"line_end":334,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8654953,"byte_end":8654956,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8654961,"byte_end":8654974,"line_start":336,"line_end":336,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8654979,"byte_end":8654982,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ This method may not be called concurrently. It takes `&self` to allow","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8654987,"byte_end":8655060,"line_start":338,"line_end":338,"column_start":5,"column_end":78}},{"value":"/ calling it concurrently with `poll_read_ready`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8655065,"byte_end":8655116,"line_start":339,"line_end":339,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1662},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8655993,"byte_end":8656010,"line_start":362,"line_end":362,"column_start":12,"column_end":29},"name":"clear_write_ready","qualname":"<PollEvented<E>>::clear_write_ready","value":"pub fn clear_write_ready(&Self, &mut Context) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Resets the I/O resource's write readiness state and registers the current\n task to be notified once a write readiness event is received.","sig":null,"attributes":[{"value":"/ Resets the I/O resource's write readiness state and registers the current","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8655420,"byte_end":8655497,"line_start":350,"line_end":350,"column_start":5,"column_end":82}},{"value":"/ task to be notified once a write readiness event is received.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8655502,"byte_end":8655567,"line_start":351,"line_end":351,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8655572,"byte_end":8655575,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ This only clears writable readiness. HUP (on platforms that support HUP)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8655580,"byte_end":8655656,"line_start":353,"line_end":353,"column_start":5,"column_end":81}},{"value":"/ cannot be cleared as it is a final state.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8655661,"byte_end":8655706,"line_start":354,"line_end":354,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8655711,"byte_end":8655714,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ After calling this function, `poll_write_ready(Ready::writable())` will","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8655719,"byte_end":8655794,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ return `NotReady` until a new write readiness event has been received.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8655799,"byte_end":8655873,"line_start":357,"line_end":357,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8655878,"byte_end":8655881,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8655886,"byte_end":8655898,"line_start":359,"line_end":359,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8655903,"byte_end":8655906,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8655911,"byte_end":8655981,"line_start":361,"line_end":361,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1746},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8660252,"byte_end":8660264,"line_start":41,"line_end":41,"column_start":16,"column_end":28},"name":"Registration","qualname":"::io::registration::Registration","value":"Registration {  }","parent":null,"children":[{"krate":0,"index":1747},{"krate":0,"index":1748}],"decl_id":null,"docs":" Associates an I/O resource with the reactor instance that drives it.","sig":null,"attributes":[{"value":"cfg(feature = \"io-driver\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":19308,"byte_end":19337,"line_start":131,"line_end":131,"column_start":13,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1694},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8660956,"byte_end":8660959,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Registration>::new","value":"pub fn new<T>(&T) -> io::Result<Registration> where T: Evented","parent":null,"children":[],"decl_id":null,"docs":" Registers the I/O resource with the default reactor.","sig":null,"attributes":[{"value":"/ Registers the I/O resource with the default reactor.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8660384,"byte_end":8660440,"line_start":50,"line_end":50,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8660445,"byte_end":8660448,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8660453,"byte_end":8660465,"line_start":52,"line_end":52,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8660470,"byte_end":8660473,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ - `Ok` if the registration happened successfully","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8660478,"byte_end":8660530,"line_start":54,"line_end":54,"column_start":5,"column_end":57}},{"value":"/ - `Err` if an error was encountered during registration","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8660535,"byte_end":8660594,"line_start":55,"line_end":55,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8660599,"byte_end":8660602,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8660607,"byte_end":8660610,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8660615,"byte_end":8660627,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8660632,"byte_end":8660635,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8660640,"byte_end":8660700,"line_start":60,"line_end":60,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8660705,"byte_end":8660708,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8660713,"byte_end":8660783,"line_start":62,"line_end":62,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8660788,"byte_end":8660861,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8660866,"byte_end":8660944,"line_start":64,"line_end":64,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1696},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8662362,"byte_end":8662376,"line_start":102,"line_end":102,"column_start":12,"column_end":26},"name":"new_with_ready","qualname":"<Registration>::new_with_ready","value":"pub fn new_with_ready<T>(&T, mio::Ready) -> io::Result<Registration> where\nT: Evented","parent":null,"children":[],"decl_id":null,"docs":" Registers the I/O resource with the default reactor, for a specific `mio::Ready` state.\n `new_with_ready` should be used over `new` when you need control over the readiness state,\n such as when a file descriptor only allows reads. This does not add `hup` or `error` so if\n you are interested in those states, you will need to add them to the readiness state passed\n to this function.","sig":null,"attributes":[{"value":"/ Registers the I/O resource with the default reactor, for a specific `mio::Ready` state.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8661106,"byte_end":8661197,"line_start":72,"line_end":72,"column_start":5,"column_end":96}},{"value":"/ `new_with_ready` should be used over `new` when you need control over the readiness state,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8661202,"byte_end":8661296,"line_start":73,"line_end":73,"column_start":5,"column_end":99}},{"value":"/ such as when a file descriptor only allows reads. This does not add `hup` or `error` so if","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8661301,"byte_end":8661395,"line_start":74,"line_end":74,"column_start":5,"column_end":99}},{"value":"/ you are interested in those states, you will need to add them to the readiness state passed","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8661400,"byte_end":8661495,"line_start":75,"line_end":75,"column_start":5,"column_end":100}},{"value":"/ to this function.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8661500,"byte_end":8661521,"line_start":76,"line_end":76,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8661526,"byte_end":8661529,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ An example to listen to read only","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8661534,"byte_end":8661571,"line_start":78,"line_end":78,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8661576,"byte_end":8661579,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8661584,"byte_end":8661595,"line_start":80,"line_end":80,"column_start":5,"column_end":16}},{"value":"/ ##[cfg(unix)]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8661600,"byte_end":8661617,"line_start":81,"line_end":81,"column_start":5,"column_end":22}},{"value":"/     mio::Ready::from_usize(","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8661622,"byte_end":8661653,"line_start":82,"line_end":82,"column_start":5,"column_end":36}},{"value":"/         mio::Ready::readable().as_usize()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8661658,"byte_end":8661703,"line_start":83,"line_end":83,"column_start":5,"column_end":50}},{"value":"/         | mio::unix::UnixReady::error().as_usize()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8661708,"byte_end":8661762,"line_start":84,"line_end":84,"column_start":5,"column_end":59}},{"value":"/         | mio::unix::UnixReady::hup().as_usize()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8661767,"byte_end":8661819,"line_start":85,"line_end":85,"column_start":5,"column_end":57}},{"value":"/     );","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8661824,"byte_end":8661834,"line_start":86,"line_end":86,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8661839,"byte_end":8661846,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8661851,"byte_end":8661854,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8661859,"byte_end":8661871,"line_start":89,"line_end":89,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8661876,"byte_end":8661879,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ - `Ok` if the registration happened successfully","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8661884,"byte_end":8661936,"line_start":91,"line_end":91,"column_start":5,"column_end":57}},{"value":"/ - `Err` if an error was encountered during registration","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8661941,"byte_end":8662000,"line_start":92,"line_end":92,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8662005,"byte_end":8662008,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8662013,"byte_end":8662016,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8662021,"byte_end":8662033,"line_start":95,"line_end":95,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8662038,"byte_end":8662041,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8662046,"byte_end":8662106,"line_start":97,"line_end":97,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8662111,"byte_end":8662114,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8662119,"byte_end":8662189,"line_start":99,"line_end":99,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8662194,"byte_end":8662267,"line_start":100,"line_end":100,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8662272,"byte_end":8662350,"line_start":101,"line_end":101,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1698},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8663611,"byte_end":8663621,"line_start":135,"line_end":135,"column_start":12,"column_end":22},"name":"deregister","qualname":"<Registration>::deregister","value":"pub fn deregister<T>(&mut Self, &T) -> io::Result<()> where T: Evented","parent":null,"children":[],"decl_id":null,"docs":" Deregisters the I/O resource from the reactor it is associated with.","sig":null,"attributes":[{"value":"/ Deregisters the I/O resource from the reactor it is associated with.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8662835,"byte_end":8662907,"line_start":119,"line_end":119,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8662912,"byte_end":8662915,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ This function must be called before the I/O resource associated with the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8662920,"byte_end":8662996,"line_start":121,"line_end":121,"column_start":5,"column_end":81}},{"value":"/ registration is dropped.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8663001,"byte_end":8663029,"line_start":122,"line_end":122,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8663034,"byte_end":8663037,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ Note that deregistering does not guarantee that the I/O resource can be","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8663042,"byte_end":8663117,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ registered with a different reactor. Some I/O resource types can only be","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8663122,"byte_end":8663198,"line_start":125,"line_end":125,"column_start":5,"column_end":81}},{"value":"/ associated with a single reactor instance for their lifetime.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8663203,"byte_end":8663268,"line_start":126,"line_end":126,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8663273,"byte_end":8663276,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8663281,"byte_end":8663293,"line_start":128,"line_end":128,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8663298,"byte_end":8663301,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ If the deregistration was successful, `Ok` is returned. Any calls to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8663306,"byte_end":8663378,"line_start":130,"line_end":130,"column_start":5,"column_end":77}},{"value":"/ `Reactor::turn` that happen after a successful call to `deregister` will","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8663383,"byte_end":8663459,"line_start":131,"line_end":131,"column_start":5,"column_end":81}},{"value":"/ no longer result in notifications getting sent for this registration.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8663464,"byte_end":8663537,"line_start":132,"line_end":132,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8663542,"byte_end":8663545,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ `Err` is returned if an error is encountered.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8663550,"byte_end":8663599,"line_start":134,"line_end":134,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1700},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8665172,"byte_end":8665187,"line_start":174,"line_end":174,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<Registration>::poll_read_ready","value":"pub fn poll_read_ready(&Self, &mut Context) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for events on the I/O resource's read readiness stream.","sig":null,"attributes":[{"value":"/ Polls for events on the I/O resource's read readiness stream.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8663924,"byte_end":8663989,"line_start":146,"line_end":146,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8663994,"byte_end":8663997,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ If the I/O resource receives a new read readiness event since the last","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8664002,"byte_end":8664076,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ call to `poll_read_ready`, it is returned. If it has not, the current","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8664081,"byte_end":8664154,"line_start":149,"line_end":149,"column_start":5,"column_end":78}},{"value":"/ task is notified once a new event is received.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8664159,"byte_end":8664209,"line_start":150,"line_end":150,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8664214,"byte_end":8664217,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ All events except `HUP` are [edge-triggered]. Once `HUP` is returned,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8664222,"byte_end":8664295,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ the function will always return `Ready(HUP)`. This should be treated as","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8664300,"byte_end":8664375,"line_start":153,"line_end":153,"column_start":5,"column_end":80}},{"value":"/ the end of the readiness stream.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8664380,"byte_end":8664416,"line_start":154,"line_end":154,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8664421,"byte_end":8664424,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8664429,"byte_end":8664447,"line_start":156,"line_end":156,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8664452,"byte_end":8664455,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ There are several possible return values:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8664460,"byte_end":8664505,"line_start":158,"line_end":158,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8664510,"byte_end":8664513,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(readiness))` means that the I/O resource has received","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8664518,"byte_end":8664593,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/   a new readiness event. The readiness value is included.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8664598,"byte_end":8664659,"line_start":161,"line_end":161,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8664664,"byte_end":8664667,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` means that no new readiness events have been received","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8664672,"byte_end":8664747,"line_start":163,"line_end":163,"column_start":5,"column_end":80}},{"value":"/   since the last call to `poll_read_ready`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8664752,"byte_end":8664799,"line_start":164,"line_end":164,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8664804,"byte_end":8664807,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(err))` means that the registration has encountered an","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8664812,"byte_end":8664888,"line_start":166,"line_end":166,"column_start":5,"column_end":81}},{"value":"/   error. This could represent a permanent internal error for example.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8664893,"byte_end":8664966,"line_start":167,"line_end":167,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8664971,"byte_end":8664974,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ [edge-triggered]: struct@mio::Poll#edge-triggered-and-level-triggered","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8664979,"byte_end":8665052,"line_start":169,"line_end":169,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8665057,"byte_end":8665060,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8665065,"byte_end":8665077,"line_start":171,"line_end":171,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8665082,"byte_end":8665085,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8665090,"byte_end":8665160,"line_start":173,"line_end":173,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1702},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8666028,"byte_end":8666043,"line_start":198,"line_end":198,"column_start":12,"column_end":27},"name":"take_read_ready","qualname":"<Registration>::take_read_ready","value":"pub fn take_read_ready(&Self) -> io::Result<Option<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Consume any pending read readiness event.","sig":null,"attributes":[{"value":"/ Consume any pending read readiness event.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8665667,"byte_end":8665712,"line_start":191,"line_end":191,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8665717,"byte_end":8665720,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ This function is identical to [`poll_read_ready`] **except** that it","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8665725,"byte_end":8665797,"line_start":193,"line_end":193,"column_start":5,"column_end":77}},{"value":"/ will not notify the current task when a new event is received. As such,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8665802,"byte_end":8665877,"line_start":194,"line_end":194,"column_start":5,"column_end":80}},{"value":"/ it is safe to call this function from outside of a task context.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8665882,"byte_end":8665950,"line_start":195,"line_end":195,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8665955,"byte_end":8665958,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ [`poll_read_ready`]: method@Self::poll_read_ready","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8665963,"byte_end":8666016,"line_start":197,"line_end":197,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1703},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8667397,"byte_end":8667413,"line_start":230,"line_end":230,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<Registration>::poll_write_ready","value":"pub fn poll_write_ready(&Self, &mut Context) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for events on the I/O resource's write readiness stream.","sig":null,"attributes":[{"value":"/ Polls for events on the I/O resource's write readiness stream.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8666145,"byte_end":8666211,"line_start":202,"line_end":202,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8666216,"byte_end":8666219,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ If the I/O resource receives a new write readiness event since the last","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8666224,"byte_end":8666299,"line_start":204,"line_end":204,"column_start":5,"column_end":80}},{"value":"/ call to `poll_write_ready`, it is returned. If it has not, the current","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8666304,"byte_end":8666378,"line_start":205,"line_end":205,"column_start":5,"column_end":79}},{"value":"/ task is notified once a new event is received.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8666383,"byte_end":8666433,"line_start":206,"line_end":206,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8666438,"byte_end":8666441,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ All events except `HUP` are [edge-triggered]. Once `HUP` is returned,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8666446,"byte_end":8666519,"line_start":208,"line_end":208,"column_start":5,"column_end":78}},{"value":"/ the function will always return `Ready(HUP)`. This should be treated as","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8666524,"byte_end":8666599,"line_start":209,"line_end":209,"column_start":5,"column_end":80}},{"value":"/ the end of the readiness stream.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8666604,"byte_end":8666640,"line_start":210,"line_end":210,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8666645,"byte_end":8666648,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8666653,"byte_end":8666671,"line_start":212,"line_end":212,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8666676,"byte_end":8666679,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ There are several possible return values:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8666684,"byte_end":8666729,"line_start":214,"line_end":214,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8666734,"byte_end":8666737,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(readiness))` means that the I/O resource has received","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8666742,"byte_end":8666817,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/   a new readiness event. The readiness value is included.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8666822,"byte_end":8666883,"line_start":217,"line_end":217,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8666888,"byte_end":8666891,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` means that no new readiness events have been received","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8666896,"byte_end":8666971,"line_start":219,"line_end":219,"column_start":5,"column_end":80}},{"value":"/   since the last call to `poll_write_ready`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8666976,"byte_end":8667024,"line_start":220,"line_end":220,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8667029,"byte_end":8667032,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(err))` means that the registration has encountered an","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8667037,"byte_end":8667113,"line_start":222,"line_end":222,"column_start":5,"column_end":81}},{"value":"/   error. This could represent a permanent internal error for example.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8667118,"byte_end":8667191,"line_start":223,"line_end":223,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8667196,"byte_end":8667199,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ [edge-triggered]: struct@mio::Poll#edge-triggered-and-level-triggered","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8667204,"byte_end":8667277,"line_start":225,"line_end":225,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8667282,"byte_end":8667285,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8667290,"byte_end":8667302,"line_start":227,"line_end":227,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8667307,"byte_end":8667310,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8667315,"byte_end":8667385,"line_start":229,"line_end":229,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1705},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8668260,"byte_end":8668276,"line_start":254,"line_end":254,"column_start":12,"column_end":28},"name":"take_write_ready","qualname":"<Registration>::take_write_ready","value":"pub fn take_write_ready(&Self) -> io::Result<Option<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes any pending write readiness event.","sig":null,"attributes":[{"value":"/ Consumes any pending write readiness event.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8667894,"byte_end":8667941,"line_start":247,"line_end":247,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8667946,"byte_end":8667949,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This function is identical to [`poll_write_ready`] **except** that it","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8667954,"byte_end":8668027,"line_start":249,"line_end":249,"column_start":5,"column_end":78}},{"value":"/ will not notify the current task when a new event is received. As such,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8668032,"byte_end":8668107,"line_start":250,"line_end":250,"column_start":5,"column_end":80}},{"value":"/ it is safe to call this function from outside of a task context.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8668112,"byte_end":8668180,"line_start":251,"line_end":251,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8668185,"byte_end":8668188,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ [`poll_write_ready`]: method@Self::poll_write_ready","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8668193,"byte_end":8668248,"line_start":253,"line_end":253,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1799},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/stderr.rs","byte_start":8672656,"byte_end":8672662,"line_start":37,"line_end":37,"column_start":16,"column_end":22},"name":"Stderr","qualname":"::io::stderr::Stderr","value":"Stderr {  }","parent":null,"children":[{"krate":0,"index":1800}],"decl_id":null,"docs":" A handle to the standard error stream of a process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":19671,"byte_end":19697,"line_start":150,"line_end":150,"column_start":13,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1798},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/stderr.rs","byte_start":8673711,"byte_end":8673717,"line_start":67,"line_end":67,"column_start":12,"column_end":18},"name":"stderr","qualname":"::io::stderr::stderr","value":"pub fn stderr() -> Stderr","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard error of the current process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":19671,"byte_end":19697,"line_start":150,"line_end":150,"column_start":13,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1804},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/stdin.rs","byte_start":8675781,"byte_end":8675786,"line_start":29,"line_end":29,"column_start":16,"column_end":21},"name":"Stdin","qualname":"::io::stdin::Stdin","value":"Stdin {  }","parent":null,"children":[{"krate":0,"index":1805}],"decl_id":null,"docs":" A handle to the standard input stream of a process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":19671,"byte_end":19697,"line_start":150,"line_end":150,"column_start":13,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1803},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/stdin.rs","byte_start":8676443,"byte_end":8676448,"line_start":43,"line_end":43,"column_start":12,"column_end":17},"name":"stdin","qualname":"::io::stdin::stdin","value":"pub fn stdin() -> Stdin","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard input of the current process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":19671,"byte_end":19697,"line_start":150,"line_end":150,"column_start":13,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1809},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/stdout.rs","byte_start":8678492,"byte_end":8678498,"line_start":37,"line_end":37,"column_start":16,"column_end":22},"name":"Stdout","qualname":"::io::stdout::Stdout","value":"Stdout {  }","parent":null,"children":[{"krate":0,"index":1810}],"decl_id":null,"docs":" A handle to the standard output stream of a process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":19671,"byte_end":19697,"line_start":150,"line_end":150,"column_start":13,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1808},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/stdout.rs","byte_start":8679536,"byte_end":8679542,"line_start":67,"line_end":67,"column_start":12,"column_end":18},"name":"stdout","qualname":"::io::stdout::stdout","value":"pub fn stdout() -> Stdout","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard output of the current process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":19671,"byte_end":19697,"line_start":150,"line_end":150,"column_start":13,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1925},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/split.rs","byte_start":8681181,"byte_end":8681189,"line_start":21,"line_end":21,"column_start":16,"column_end":24},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":1927}],"decl_id":null,"docs":" The readable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1928},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/split.rs","byte_start":8681318,"byte_end":8681327,"line_start":26,"line_end":26,"column_start":16,"column_end":25},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":1930}],"decl_id":null,"docs":" The writable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1931},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/split.rs","byte_start":8681641,"byte_end":8681646,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"split","qualname":"::io::split::split","value":"pub fn split<T>(T) -> (ReadHalf<T>, WriteHalf<T>) where T: AsyncRead +\nAsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Splits a single value implementing `AsyncRead + AsyncWrite` into separate\n `AsyncRead` and `AsyncWrite` handles.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1842},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/split.rs","byte_start":8682272,"byte_end":8682282,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<ReadHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &WriteHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if this `ReadHalf` and some `WriteHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Checks if this `ReadHalf` and some `WriteHalf` were split from the same","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/split.rs","byte_start":8682169,"byte_end":8682244,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ stream.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/split.rs","byte_start":8682249,"byte_end":8682260,"line_start":65,"line_end":65,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1843},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/split.rs","byte_start":8682689,"byte_end":8682696,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"unsplit","qualname":"<ReadHalf<T>>::unsplit","value":"pub fn unsplit(Self, WriteHalf<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Reunites with a previously split `WriteHalf`.","sig":null,"attributes":[{"value":"/ Reunites with a previously split `WriteHalf`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/split.rs","byte_start":8682365,"byte_end":8682414,"line_start":70,"line_end":70,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/split.rs","byte_start":8682419,"byte_end":8682422,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/split.rs","byte_start":8682427,"byte_end":8682439,"line_start":72,"line_end":72,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/split.rs","byte_start":8682444,"byte_end":8682447,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ If this `ReadHalf` and the given `WriteHalf` do not originate from the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/split.rs","byte_start":8682452,"byte_end":8682526,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ same `split` operation this method will panic.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/split.rs","byte_start":8682531,"byte_end":8682581,"line_start":75,"line_end":75,"column_start":5,"column_end":55}},{"value":"/ This can be checked ahead of time by comparing the stream ID","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/split.rs","byte_start":8682586,"byte_end":8682650,"line_start":76,"line_end":76,"column_start":5,"column_end":69}},{"value":"/ of the two halves.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/split.rs","byte_start":8682655,"byte_end":8682677,"line_start":77,"line_end":77,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1846},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/split.rs","byte_start":8683197,"byte_end":8683207,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<WriteHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &ReadHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this `WriteHalf` and some `ReadHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Check if this `WriteHalf` and some `ReadHalf` were split from the same","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/split.rs","byte_start":8683095,"byte_end":8683169,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ stream.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/split.rs","byte_start":8683174,"byte_end":8683185,"line_start":95,"line_end":95,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1933},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/seek.rs","byte_start":8686444,"byte_end":8686448,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":1936},{"krate":0,"index":1937}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/seek.rs","byte_start":8686281,"byte_end":8686347,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/seek.rs","byte_start":8686365,"byte_end":8686432,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":2667},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_buf_read_ext.rs","byte_start":8689752,"byte_end":8689767,"line_start":11,"line_end":11,"column_start":15,"column_end":30},"name":"AsyncBufReadExt","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":2668},{"krate":0,"index":2670},{"krate":0,"index":2672},{"krate":0,"index":2673}],"decl_id":null,"docs":" An extension trait which adds utility methods to [`AsyncBufRead`] types.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2668},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_buf_read_ext.rs","byte_start":8692467,"byte_end":8692477,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"read_until","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_until","value":"pub fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntil where\nSelf: Unpin","parent":{"krate":0,"index":2667},"children":[],"decl_id":null,"docs":" Reads all bytes into `buf` until the delimiter `byte` or EOF is reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2670},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_buf_read_ext.rs","byte_start":8695368,"byte_end":8695377,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"read_line","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_line","value":"pub fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLine where\nSelf: Unpin","parent":{"krate":0,"index":2667},"children":[],"decl_id":null,"docs":" Reads all bytes until a newline (the 0xA byte) is reached, and append\n them to the provided buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2672},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_buf_read_ext.rs","byte_start":8696777,"byte_end":8696782,"line_start":200,"line_end":200,"column_start":12,"column_end":17},"name":"split","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::split","value":"pub fn split(Self, u8) -> Split<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":2667},"children":[],"decl_id":null,"docs":" Returns a stream of the contents of this reader split on the byte\n `byte`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2673},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_buf_read_ext.rs","byte_start":8698632,"byte_end":8698637,"line_start":249,"line_end":249,"column_start":12,"column_end":17},"name":"lines","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::lines","value":"pub fn lines(Self) -> Lines<Self> where Self: Sized","parent":{"krate":0,"index":2667},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2675},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_read_ext.rs","byte_start":8700816,"byte_end":8700828,"line_start":64,"line_end":64,"column_start":15,"column_end":27},"name":"AsyncReadExt","qualname":"::io::util::async_read_ext::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":2676},{"krate":0,"index":2678},{"krate":0,"index":2680},{"krate":0,"index":2683},{"krate":0,"index":2690},{"krate":0,"index":2692},{"krate":0,"index":2694},{"krate":0,"index":2696},{"krate":0,"index":2698},{"krate":0,"index":2700},{"krate":0,"index":2702},{"krate":0,"index":2704},{"krate":0,"index":2706},{"krate":0,"index":2708},{"krate":0,"index":2710},{"krate":0,"index":2712},{"krate":0,"index":2714},{"krate":0,"index":2716},{"krate":0,"index":2718},{"krate":0,"index":2720},{"krate":0,"index":2722},{"krate":0,"index":2724},{"krate":0,"index":2685},{"krate":0,"index":2687},{"krate":0,"index":2689}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2676},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_read_ext.rs","byte_start":8701948,"byte_end":8701953,"line_start":94,"line_end":94,"column_start":12,"column_end":17},"name":"chain","qualname":"::io::util::async_read_ext::AsyncReadExt::chain","value":"pub fn chain<R>(Self, R) -> Chain<Self, R> where Self: Sized, R: AsyncRead","parent":{"krate":0,"index":2675},"children":[],"decl_id":null,"docs":" Creates a new `AsyncRead` instance that chains this stream with\n `next`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2678},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_read_ext.rs","byte_start":8704782,"byte_end":8704786,"line_start":162,"line_end":162,"column_start":12,"column_end":16},"name":"read","qualname":"::io::util::async_read_ext::AsyncReadExt::read","value":"pub fn read<'a>(&'a mut Self, &'a mut [u8]) -> Read where Self: Unpin","parent":{"krate":0,"index":2675},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n returning how many bytes were read.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2680},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_read_ext.rs","byte_start":8707088,"byte_end":8707096,"line_start":226,"line_end":226,"column_start":12,"column_end":20},"name":"read_buf","qualname":"::io::util::async_read_ext::AsyncReadExt::read_buf","value":"pub fn read_buf<'a, B>(&'a mut Self, &'a mut B) -> ReadBuf where Self: Sized +\nUnpin, B: BufMut","parent":{"krate":0,"index":2675},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n advancing the buffer's internal cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2683},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_read_ext.rs","byte_start":8708993,"byte_end":8709003,"line_start":280,"line_end":280,"column_start":12,"column_end":22},"name":"read_exact","qualname":"::io::util::async_read_ext::AsyncReadExt::read_exact","value":"pub fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExact where\nSelf: Unpin","parent":{"krate":0,"index":2675},"children":[],"decl_id":null,"docs":" Reads the exact number of bytes required to fill `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2690},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_read_ext.rs","byte_start":8710440,"byte_end":8710447,"line_start":324,"line_end":324,"column_start":16,"column_end":23},"name":"read_u8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u8","value":"pub fn read_u8<'a>(&'a mut Self) -> ReadU8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2675},"children":[],"decl_id":null,"docs":" Reads an unsigned 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2692},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_read_ext.rs","byte_start":8711736,"byte_end":8711743,"line_start":362,"line_end":362,"column_start":16,"column_end":23},"name":"read_i8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i8","value":"pub fn read_i8<'a>(&'a mut Self) -> ReadI8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2675},"children":[],"decl_id":null,"docs":" Reads a signed 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2694},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_read_ext.rs","byte_start":8713074,"byte_end":8713082,"line_start":400,"line_end":400,"column_start":16,"column_end":24},"name":"read_u16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16","value":"pub fn read_u16<'a>(&'a mut Self) -> ReadU16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2675},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2696},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_read_ext.rs","byte_start":8714422,"byte_end":8714430,"line_start":438,"line_end":438,"column_start":16,"column_end":24},"name":"read_i16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16","value":"pub fn read_i16<'a>(&'a mut Self) -> ReadI16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2675},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2698},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_read_ext.rs","byte_start":8715711,"byte_end":8715719,"line_start":475,"line_end":475,"column_start":16,"column_end":24},"name":"read_u32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32","value":"pub fn read_u32<'a>(&'a mut Self) -> ReadU32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2675},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2700},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_read_ext.rs","byte_start":8717014,"byte_end":8717022,"line_start":513,"line_end":513,"column_start":16,"column_end":24},"name":"read_i32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32","value":"pub fn read_i32<'a>(&'a mut Self) -> ReadI32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2675},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2702},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_read_ext.rs","byte_start":8718385,"byte_end":8718393,"line_start":552,"line_end":552,"column_start":16,"column_end":24},"name":"read_u64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64","value":"pub fn read_u64<'a>(&'a mut Self) -> ReadU64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2675},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2704},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_read_ext.rs","byte_start":8719686,"byte_end":8719694,"line_start":589,"line_end":589,"column_start":16,"column_end":24},"name":"read_i64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64","value":"pub fn read_i64<'a>(&'a mut Self) -> ReadI64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2675},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2706},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_read_ext.rs","byte_start":8721154,"byte_end":8721163,"line_start":629,"line_end":629,"column_start":16,"column_end":25},"name":"read_u128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128","value":"pub fn read_u128<'a>(&'a mut Self) -> ReadU128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2675},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2708},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_read_ext.rs","byte_start":8722557,"byte_end":8722566,"line_start":669,"line_end":669,"column_start":16,"column_end":25},"name":"read_i128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128","value":"pub fn read_i128<'a>(&'a mut Self) -> ReadI128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2675},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2710},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_read_ext.rs","byte_start":8723913,"byte_end":8723924,"line_start":707,"line_end":707,"column_start":16,"column_end":27},"name":"read_u16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16_le","value":"pub fn read_u16_le<'a>(&'a mut Self) -> ReadU16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2675},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2712},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_read_ext.rs","byte_start":8725285,"byte_end":8725296,"line_start":745,"line_end":745,"column_start":16,"column_end":27},"name":"read_i16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16_le","value":"pub fn read_i16_le<'a>(&'a mut Self) -> ReadI16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2675},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2714},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_read_ext.rs","byte_start":8726597,"byte_end":8726608,"line_start":782,"line_end":782,"column_start":16,"column_end":27},"name":"read_u32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32_le","value":"pub fn read_u32_le<'a>(&'a mut Self) -> ReadU32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2675},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2716},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_read_ext.rs","byte_start":8727920,"byte_end":8727931,"line_start":820,"line_end":820,"column_start":16,"column_end":27},"name":"read_i32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32_le","value":"pub fn read_i32_le<'a>(&'a mut Self) -> ReadI32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2675},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2718},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_read_ext.rs","byte_start":8729312,"byte_end":8729323,"line_start":859,"line_end":859,"column_start":16,"column_end":27},"name":"read_u64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64_le","value":"pub fn read_u64_le<'a>(&'a mut Self) -> ReadU64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2675},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2720},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_read_ext.rs","byte_start":8730617,"byte_end":8730628,"line_start":896,"line_end":896,"column_start":16,"column_end":27},"name":"read_i64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64_le","value":"pub fn read_i64_le<'a>(&'a mut Self) -> ReadI64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2675},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2722},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_read_ext.rs","byte_start":8732106,"byte_end":8732118,"line_start":936,"line_end":936,"column_start":16,"column_end":28},"name":"read_u128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128_le","value":"pub fn read_u128_le<'a>(&'a mut Self) -> ReadU128Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2675},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2724},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_read_ext.rs","byte_start":8733512,"byte_end":8733524,"line_start":976,"line_end":976,"column_start":16,"column_end":28},"name":"read_i128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128_le","value":"pub fn read_i128_le<'a>(&'a mut Self) -> ReadI128Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2675},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2685},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_read_ext.rs","byte_start":8735183,"byte_end":8735194,"line_start":1024,"line_end":1024,"column_start":12,"column_end":23},"name":"read_to_end","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_end","value":"pub fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEnd where\nSelf: Unpin","parent":{"krate":0,"index":2675},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, placing them into `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2687},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_read_ext.rs","byte_start":8736749,"byte_end":8736763,"line_start":1071,"line_end":1071,"column_start":12,"column_end":26},"name":"read_to_string","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_string","value":"pub fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToString where\nSelf: Unpin","parent":{"krate":0,"index":2675},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, appending them to `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2689},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_read_ext.rs","byte_start":8738055,"byte_end":8738059,"line_start":1109,"line_end":1109,"column_start":12,"column_end":16},"name":"take","qualname":"::io::util::async_read_ext::AsyncReadExt::take","value":"pub fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":2675},"children":[],"decl_id":null,"docs":" Creates an adaptor which reads at most `limit` bytes from it.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2012},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8739101,"byte_end":8739113,"line_start":35,"line_end":35,"column_start":11,"column_end":23},"name":"AsyncSeekExt","qualname":"::io::util::async_seek_ext::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":2013}],"decl_id":null,"docs":" An extension trait which adds utility methods to [`AsyncSeek`] types.","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to [`AsyncSeek`] types.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8738326,"byte_end":8738399,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8738400,"byte_end":8738403,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ As a convenience, this trait may be imported using the [`prelude`]:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8738404,"byte_end":8738475,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8738476,"byte_end":8738479,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8738480,"byte_end":8738494,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8738495,"byte_end":8738498,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8738499,"byte_end":8738506,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ use std::io::{Cursor, SeekFrom};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8738507,"byte_end":8738543,"line_start":12,"line_end":12,"column_start":1,"column_end":37}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8738544,"byte_end":8738570,"line_start":13,"line_end":13,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8738571,"byte_end":8738574,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8738575,"byte_end":8738593,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8738594,"byte_end":8738633,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/     let mut cursor = Cursor::new(b\"abcdefg\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8738634,"byte_end":8738683,"line_start":17,"line_end":17,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8738684,"byte_end":8738687,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/     // the `seek` method is defined by this trait","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8738688,"byte_end":8738741,"line_start":19,"line_end":19,"column_start":1,"column_end":54}},{"value":"/     cursor.seek(SeekFrom::Start(3)).await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8738742,"byte_end":8738789,"line_start":20,"line_end":20,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8738790,"byte_end":8738793,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/     let mut buf = [0; 1];","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8738794,"byte_end":8738823,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/     let n = cursor.read(&mut buf).await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8738824,"byte_end":8738869,"line_start":23,"line_end":23,"column_start":1,"column_end":46}},{"value":"/     assert_eq!(n, 1);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8738870,"byte_end":8738895,"line_start":24,"line_end":24,"column_start":1,"column_end":26}},{"value":"/     assert_eq!(buf, [b'd']);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8738896,"byte_end":8738928,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8738929,"byte_end":8738932,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8738933,"byte_end":8738947,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8738948,"byte_end":8738953,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8738954,"byte_end":8738961,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8738962,"byte_end":8738965,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ See [module][crate::io] documentation for more details.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8738966,"byte_end":8739025,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8739026,"byte_end":8739029,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`AsyncSeek`]: AsyncSeek","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8739030,"byte_end":8739058,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ [`prelude`]: crate::prelude","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8739059,"byte_end":8739090,"line_start":34,"line_end":34,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2013},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8739830,"byte_end":8739834,"line_start":59,"line_end":59,"column_start":8,"column_end":12},"name":"seek","qualname":"::io::util::async_seek_ext::AsyncSeekExt::seek","value":"pub fn seek(&mut Self, SeekFrom) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":2012},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[{"value":"/ Creates a future which will seek an IO object, and then yield the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8739131,"byte_end":8739200,"line_start":36,"line_end":36,"column_start":5,"column_end":74}},{"value":"/ new position in the object and the object itself.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8739205,"byte_end":8739258,"line_start":37,"line_end":37,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8739263,"byte_end":8739266,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8739271,"byte_end":8739348,"line_start":39,"line_end":39,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8739353,"byte_end":8739375,"line_start":40,"line_end":40,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8739380,"byte_end":8739383,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8739388,"byte_end":8739402,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8739407,"byte_end":8739410,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8739415,"byte_end":8739428,"line_start":44,"line_end":44,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8739433,"byte_end":8739457,"line_start":45,"line_end":45,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8739462,"byte_end":8739488,"line_start":46,"line_end":46,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8739493,"byte_end":8739496,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ use std::io::SeekFrom;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8739501,"byte_end":8739527,"line_start":48,"line_end":48,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8739532,"byte_end":8739535,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8739540,"byte_end":8739585,"line_start":50,"line_end":50,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8739590,"byte_end":8739638,"line_start":51,"line_end":51,"column_start":5,"column_end":53}},{"value":"/ file.seek(SeekFrom::Start(6)).await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8739643,"byte_end":8739684,"line_start":52,"line_end":52,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8739689,"byte_end":8739692,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ let mut contents = vec![0u8; 10];","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8739697,"byte_end":8739734,"line_start":54,"line_end":54,"column_start":5,"column_end":42}},{"value":"/ file.read_exact(&mut contents).await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8739739,"byte_end":8739781,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8739786,"byte_end":8739798,"line_start":56,"line_end":56,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8739803,"byte_end":8739810,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8739815,"byte_end":8739822,"line_start":58,"line_end":58,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":2727},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_write_ext.rs","byte_start":8742037,"byte_end":8742050,"line_start":68,"line_end":68,"column_start":15,"column_end":28},"name":"AsyncWriteExt","qualname":"::io::util::async_write_ext::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":2728},{"krate":0,"index":2730},{"krate":0,"index":2733},{"krate":0,"index":2737},{"krate":0,"index":2739},{"krate":0,"index":2741},{"krate":0,"index":2743},{"krate":0,"index":2745},{"krate":0,"index":2747},{"krate":0,"index":2749},{"krate":0,"index":2751},{"krate":0,"index":2753},{"krate":0,"index":2755},{"krate":0,"index":2757},{"krate":0,"index":2759},{"krate":0,"index":2761},{"krate":0,"index":2763},{"krate":0,"index":2765},{"krate":0,"index":2767},{"krate":0,"index":2769},{"krate":0,"index":2771},{"krate":0,"index":2735},{"krate":0,"index":2736}],"decl_id":null,"docs":" Writes bytes to a sink.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2728},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_write_ext.rs","byte_start":8743892,"byte_end":8743897,"line_start":115,"line_end":115,"column_start":12,"column_end":17},"name":"write","qualname":"::io::util::async_write_ext::AsyncWriteExt::write","value":"pub fn write<'a>(&'a mut Self, &'a [u8]) -> Write where Self: Unpin","parent":{"krate":0,"index":2727},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, returning how many bytes were\n written.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2730},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_write_ext.rs","byte_start":8746699,"byte_end":8746708,"line_start":187,"line_end":187,"column_start":12,"column_end":21},"name":"write_buf","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_buf","value":"pub fn write_buf<'a, B>(&'a mut Self, &'a mut B) -> WriteBuf where\nSelf: Sized + Unpin, B: Buf","parent":{"krate":0,"index":2727},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, advancing the buffer's internal\n cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2733},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_write_ext.rs","byte_start":8748050,"byte_end":8748059,"line_start":228,"line_end":228,"column_start":12,"column_end":21},"name":"write_all","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_all","value":"pub fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAll where Self: Unpin","parent":{"krate":0,"index":2727},"children":[],"decl_id":null,"docs":" Attempts to write an entire buffer into this writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2737},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_write_ext.rs","byte_start":8749459,"byte_end":8749467,"line_start":271,"line_end":271,"column_start":16,"column_end":24},"name":"write_u8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u8","value":"pub fn write_u8<'a>(&'a mut Self, u8) -> WriteU8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2727},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2739},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_write_ext.rs","byte_start":8750728,"byte_end":8750736,"line_start":308,"line_end":308,"column_start":16,"column_end":24},"name":"write_i8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i8","value":"pub fn write_i8<'a>(&'a mut Self, i8) -> WriteI8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2727},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2741},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_write_ext.rs","byte_start":8752051,"byte_end":8752060,"line_start":346,"line_end":346,"column_start":16,"column_end":25},"name":"write_u16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16","value":"pub fn write_u16<'a>(&'a mut Self, u16) -> WriteU16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2727},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2743},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_write_ext.rs","byte_start":8753373,"byte_end":8753382,"line_start":384,"line_end":384,"column_start":16,"column_end":25},"name":"write_i16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16","value":"pub fn write_i16<'a>(&'a mut Self, i16) -> WriteI16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2727},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2745},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_write_ext.rs","byte_start":8754722,"byte_end":8754731,"line_start":422,"line_end":422,"column_start":16,"column_end":25},"name":"write_u32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32","value":"pub fn write_u32<'a>(&'a mut Self, u32) -> WriteU32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2727},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2747},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_write_ext.rs","byte_start":8756066,"byte_end":8756075,"line_start":460,"line_end":460,"column_start":16,"column_end":25},"name":"write_i32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32","value":"pub fn write_i32<'a>(&'a mut Self, i32) -> WriteI32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2727},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2749},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_write_ext.rs","byte_start":8757452,"byte_end":8757461,"line_start":498,"line_end":498,"column_start":16,"column_end":25},"name":"write_u64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64","value":"pub fn write_u64<'a>(&'a mut Self, u64) -> WriteU64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2727},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2751},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_write_ext.rs","byte_start":8758848,"byte_end":8758857,"line_start":536,"line_end":536,"column_start":16,"column_end":25},"name":"write_i64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64","value":"pub fn write_i64<'a>(&'a mut Self, i64) -> WriteI64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2727},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2753},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_write_ext.rs","byte_start":8760312,"byte_end":8760322,"line_start":576,"line_end":576,"column_start":16,"column_end":26},"name":"write_u128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128","value":"pub fn write_u128<'a>(&'a mut Self, u128) -> WriteU128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2727},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2755},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_write_ext.rs","byte_start":8761712,"byte_end":8761722,"line_start":616,"line_end":616,"column_start":16,"column_end":26},"name":"write_i128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128","value":"pub fn write_i128<'a>(&'a mut Self, i128) -> WriteI128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2727},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2757},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_write_ext.rs","byte_start":8763054,"byte_end":8763066,"line_start":655,"line_end":655,"column_start":16,"column_end":28},"name":"write_u16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16_le","value":"pub fn write_u16_le<'a>(&'a mut Self, u16) -> WriteU16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2727},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2759},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_write_ext.rs","byte_start":8764393,"byte_end":8764405,"line_start":693,"line_end":693,"column_start":16,"column_end":28},"name":"write_i16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16_le","value":"pub fn write_i16_le<'a>(&'a mut Self, i16) -> WriteI16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2727},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2761},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_write_ext.rs","byte_start":8765759,"byte_end":8765771,"line_start":731,"line_end":731,"column_start":16,"column_end":28},"name":"write_u32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32_le","value":"pub fn write_u32_le<'a>(&'a mut Self, u32) -> WriteU32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2727},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2763},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_write_ext.rs","byte_start":8767120,"byte_end":8767132,"line_start":769,"line_end":769,"column_start":16,"column_end":28},"name":"write_i32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32_le","value":"pub fn write_i32_le<'a>(&'a mut Self, i32) -> WriteI32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2727},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2765},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_write_ext.rs","byte_start":8768523,"byte_end":8768535,"line_start":807,"line_end":807,"column_start":16,"column_end":28},"name":"write_u64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64_le","value":"pub fn write_u64_le<'a>(&'a mut Self, u64) -> WriteU64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2727},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2767},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_write_ext.rs","byte_start":8769936,"byte_end":8769948,"line_start":845,"line_end":845,"column_start":16,"column_end":28},"name":"write_i64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64_le","value":"pub fn write_i64_le<'a>(&'a mut Self, i64) -> WriteI64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2727},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2769},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_write_ext.rs","byte_start":8771415,"byte_end":8771428,"line_start":885,"line_end":885,"column_start":16,"column_end":29},"name":"write_u128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128_le","value":"pub fn write_u128_le<'a>(&'a mut Self, u128) -> WriteU128Le<&'a mut Self>\nwhere Self: Unpin","parent":{"krate":0,"index":2727},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2771},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_write_ext.rs","byte_start":8772830,"byte_end":8772843,"line_start":925,"line_end":925,"column_start":16,"column_end":29},"name":"write_i128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128_le","value":"pub fn write_i128_le<'a>(&'a mut Self, i128) -> WriteI128Le<&'a mut Self>\nwhere Self: Unpin","parent":{"krate":0,"index":2727},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2735},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_write_ext.rs","byte_start":8773863,"byte_end":8773868,"line_start":958,"line_end":958,"column_start":12,"column_end":17},"name":"flush","qualname":"::io::util::async_write_ext::AsyncWriteExt::flush","value":"pub fn flush(&mut Self) -> Flush<, Self> where Self: Unpin","parent":{"krate":0,"index":2727},"children":[],"decl_id":null,"docs":" Flushes this output stream, ensuring that all intermediately buffered\n contents reach their destination.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2736},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_write_ext.rs","byte_start":8775158,"byte_end":8775166,"line_start":997,"line_end":997,"column_start":12,"column_end":20},"name":"shutdown","qualname":"::io::util::async_write_ext::AsyncWriteExt::shutdown","value":"pub fn shutdown(&mut Self) -> Shutdown<, Self> where Self: Unpin","parent":{"krate":0,"index":2727},"children":[],"decl_id":null,"docs":" Shuts down the output stream, ensuring that the value can be dropped\n cleanly.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12606},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_reader.rs","byte_start":8776575,"byte_end":8776584,"line_start":29,"line_end":29,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::util::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":12608},{"krate":0,"index":12609},{"krate":0,"index":12610},{"krate":0,"index":12611}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2079},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_reader.rs","byte_start":8776920,"byte_end":8776923,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_reader.rs","byte_start":8776778,"byte_end":8776870,"line_start":39,"line_end":39,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_reader.rs","byte_start":8776875,"byte_end":8776908,"line_start":40,"line_end":40,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2080},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_reader.rs","byte_start":8777085,"byte_end":8777098,"line_start":46,"line_end":46,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"pub fn with_capacity(usize, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_reader.rs","byte_start":8777008,"byte_end":8777073,"line_start":45,"line_end":45,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2081},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_reader.rs","byte_start":8777774,"byte_end":8777781,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufReader<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_reader.rs","byte_start":8777637,"byte_end":8777683,"line_start":65,"line_end":65,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_reader.rs","byte_start":8777688,"byte_end":8777691,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_reader.rs","byte_start":8777696,"byte_end":8777762,"line_start":67,"line_end":67,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2082},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_reader.rs","byte_start":8777973,"byte_end":8777980,"line_start":75,"line_end":75,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufReader<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_reader.rs","byte_start":8777828,"byte_end":8777882,"line_start":72,"line_end":72,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_reader.rs","byte_start":8777887,"byte_end":8777890,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_reader.rs","byte_start":8777895,"byte_end":8777961,"line_start":74,"line_end":74,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2083},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_reader.rs","byte_start":8778191,"byte_end":8778202,"line_start":82,"line_end":82,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufReader<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_reader.rs","byte_start":8778039,"byte_end":8778100,"line_start":79,"line_end":79,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_reader.rs","byte_start":8778105,"byte_end":8778108,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_reader.rs","byte_start":8778113,"byte_end":8778179,"line_start":81,"line_end":81,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2084},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_reader.rs","byte_start":8778433,"byte_end":8778443,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufReader`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this `BufReader`, returning the underlying reader.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_reader.rs","byte_start":8778282,"byte_end":8778345,"line_start":86,"line_end":86,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_reader.rs","byte_start":8778350,"byte_end":8778353,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_reader.rs","byte_start":8778358,"byte_end":8778421,"line_start":88,"line_end":88,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2085},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_reader.rs","byte_start":8778647,"byte_end":8778653,"line_start":96,"line_end":96,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_reader.rs","byte_start":8778487,"byte_end":8778543,"line_start":93,"line_end":93,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_reader.rs","byte_start":8778548,"byte_end":8778551,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_reader.rs","byte_start":8778556,"byte_end":8778635,"line_start":95,"line_end":95,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":12579},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_stream.rs","byte_start":8782899,"byte_end":8782908,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"name":"BufStream","qualname":"::io::util::buf_stream::BufStream","value":"BufStream {  }","parent":null,"children":[{"krate":0,"index":12581}],"decl_id":null,"docs":" Wraps a type that is [`AsyncWrite`] and [`AsyncRead`], and buffers its input and output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2123},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_stream.rs","byte_start":8783187,"byte_end":8783190,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<BufStream<RW>>::new","value":"pub fn new(RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a type in both [`BufWriter`] and [`BufReader`].","sig":null,"attributes":[{"value":"/ Wraps a type in both [`BufWriter`] and [`BufReader`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_stream.rs","byte_start":8783033,"byte_end":8783090,"line_start":27,"line_end":27,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_stream.rs","byte_start":8783095,"byte_end":8783098,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_stream.rs","byte_start":8783103,"byte_end":8783175,"line_start":29,"line_end":29,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2124},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_stream.rs","byte_start":8783522,"byte_end":8783535,"line_start":40,"line_end":40,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufStream<RW>>::with_capacity","value":"pub fn with_capacity(usize, usize, RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]\n capacity.","sig":null,"attributes":[{"value":"/ Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_stream.rs","byte_start":8783322,"byte_end":8783407,"line_start":36,"line_end":36,"column_start":5,"column_end":90}},{"value":"/ capacity.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_stream.rs","byte_start":8783412,"byte_end":8783425,"line_start":37,"line_end":37,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_stream.rs","byte_start":8783430,"byte_end":8783433,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_stream.rs","byte_start":8783438,"byte_end":8783510,"line_start":39,"line_end":39,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2125},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_stream.rs","byte_start":8783992,"byte_end":8783999,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufStream<RW>>::get_ref","value":"pub fn get_ref(&Self) -> &RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying I/O object.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_stream.rs","byte_start":8783847,"byte_end":8783897,"line_start":53,"line_end":53,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_stream.rs","byte_start":8783902,"byte_end":8783905,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_stream.rs","byte_start":8783910,"byte_end":8783980,"line_start":55,"line_end":55,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2126},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_stream.rs","byte_start":8784219,"byte_end":8784226,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufStream<RW>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying I/O object.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_stream.rs","byte_start":8784066,"byte_end":8784124,"line_start":60,"line_end":60,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_stream.rs","byte_start":8784129,"byte_end":8784132,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_stream.rs","byte_start":8784137,"byte_end":8784207,"line_start":62,"line_end":62,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2127},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_stream.rs","byte_start":8784461,"byte_end":8784472,"line_start":70,"line_end":70,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufStream<RW>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut RW>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying I/O object.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_stream.rs","byte_start":8784301,"byte_end":8784366,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_stream.rs","byte_start":8784371,"byte_end":8784374,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_stream.rs","byte_start":8784379,"byte_end":8784449,"line_start":69,"line_end":69,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2128},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_stream.rs","byte_start":8784736,"byte_end":8784746,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufStream<RW>>::into_inner","value":"pub fn into_inner(Self) -> RW","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufStream`, returning the underlying I/O object.","sig":null,"attributes":[{"value":"/ Consumes this `BufStream`, returning the underlying I/O object.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_stream.rs","byte_start":8784581,"byte_end":8784648,"line_start":74,"line_end":74,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_stream.rs","byte_start":8784653,"byte_end":8784656,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_stream.rs","byte_start":8784661,"byte_end":8784724,"line_start":76,"line_end":76,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":12529},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_writer.rs","byte_start":8788565,"byte_end":8788574,"line_start":33,"line_end":33,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::util::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":12531},{"krate":0,"index":12532},{"krate":0,"index":12533}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2167},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_writer.rs","byte_start":8788882,"byte_end":8788885,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_writer.rs","byte_start":8788740,"byte_end":8788832,"line_start":42,"line_end":42,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_writer.rs","byte_start":8788837,"byte_end":8788870,"line_start":43,"line_end":43,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2168},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_writer.rs","byte_start":8789047,"byte_end":8789060,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_writer.rs","byte_start":8788970,"byte_end":8789035,"line_start":48,"line_end":48,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2170},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_writer.rs","byte_start":8790142,"byte_end":8790149,"line_start":86,"line_end":86,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufWriter<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_writer.rs","byte_start":8790084,"byte_end":8790130,"line_start":85,"line_end":85,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2171},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_writer.rs","byte_start":8790340,"byte_end":8790347,"line_start":93,"line_end":93,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufWriter<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying writer.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_writer.rs","byte_start":8790196,"byte_end":8790250,"line_start":90,"line_end":90,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_writer.rs","byte_start":8790255,"byte_end":8790258,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_writer.rs","byte_start":8790263,"byte_end":8790328,"line_start":92,"line_end":92,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2172},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_writer.rs","byte_start":8790557,"byte_end":8790568,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufWriter<W>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut W>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying writer.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_writer.rs","byte_start":8790406,"byte_end":8790467,"line_start":97,"line_end":97,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_writer.rs","byte_start":8790472,"byte_end":8790475,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_writer.rs","byte_start":8790480,"byte_end":8790545,"line_start":99,"line_end":99,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2173},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_writer.rs","byte_start":8790799,"byte_end":8790809,"line_start":107,"line_end":107,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufWriter<W>>::into_inner","value":"pub fn into_inner(Self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying writer.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying writer.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_writer.rs","byte_start":8790648,"byte_end":8790711,"line_start":104,"line_end":104,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_writer.rs","byte_start":8790716,"byte_end":8790719,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_writer.rs","byte_start":8790724,"byte_end":8790787,"line_start":106,"line_end":106,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2174},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_writer.rs","byte_start":8790921,"byte_end":8790927,"line_start":112,"line_end":112,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_writer.rs","byte_start":8790853,"byte_end":8790909,"line_start":111,"line_end":111,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":12480},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/chain.rs","byte_start":8793560,"byte_end":8793565,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::util::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":12483},{"krate":0,"index":12484},{"krate":0,"index":12485}],"decl_id":null,"docs":" Stream for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.11/src/lib.rs","byte_start":8332164,"byte_end":8332173,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2209},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/chain.rs","byte_start":8794006,"byte_end":8794013,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/chain.rs","byte_start":8793932,"byte_end":8793994,"line_start":39,"line_end":39,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2210},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/chain.rs","byte_start":8794345,"byte_end":8794352,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/chain.rs","byte_start":8794082,"byte_end":8794152,"line_start":44,"line_end":44,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/chain.rs","byte_start":8794157,"byte_end":8794160,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/chain.rs","byte_start":8794165,"byte_end":8794238,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/chain.rs","byte_start":8794243,"byte_end":8794316,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/chain.rs","byte_start":8794321,"byte_end":8794333,"line_start":48,"line_end":48,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2211},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/chain.rs","byte_start":8794711,"byte_end":8794722,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/chain.rs","byte_start":8794441,"byte_end":8794518,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/chain.rs","byte_start":8794523,"byte_end":8794526,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/chain.rs","byte_start":8794531,"byte_end":8794604,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/chain.rs","byte_start":8794609,"byte_end":8794682,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/chain.rs","byte_start":8794687,"byte_end":8794699,"line_start":57,"line_end":57,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2212},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/chain.rs","byte_start":8794919,"byte_end":8794929,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/chain.rs","byte_start":8794851,"byte_end":8794907,"line_start":63,"line_end":63,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":2777},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/copy.rs","byte_start":8797505,"byte_end":8797509,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"Copy","qualname":"::io::util::copy::Copy","value":"Copy {  }","parent":null,"children":[{"krate":0,"index":2781},{"krate":0,"index":2782},{"krate":0,"index":2783},{"krate":0,"index":2784},{"krate":0,"index":2785},{"krate":0,"index":2786},{"krate":0,"index":2787}],"decl_id":null,"docs":" A future that asynchronously copies the entire contents of a reader into a\n writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/copy.rs","byte_start":8797422,"byte_end":8797489,"line_start":17,"line_end":17,"column_start":5,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":2773},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/copy.rs","byte_start":8798774,"byte_end":8798778,"line_start":61,"line_end":61,"column_start":12,"column_end":16},"name":"copy","qualname":"::io::util::copy::copy","value":"pub fn copy<'a, R: ?Sized, W: ?Sized>(&'a mut R, &'a mut W) -> Copy where\nR: AsyncRead + Unpin, W: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2793},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/empty.rs","byte_start":8801535,"byte_end":8801540,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"name":"Empty","qualname":"::io::util::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":2794}],"decl_id":null,"docs":" An async reader which is always at EOF.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2795},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/empty.rs","byte_start":8802219,"byte_end":8802224,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"empty","qualname":"::io::util::empty::empty","value":"pub fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty async reader.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2796},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/flush.rs","byte_start":8803441,"byte_end":8803446,"line_start":14,"line_end":14,"column_start":16,"column_end":21},"name":"Flush","qualname":"::io::util::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":2799}],"decl_id":null,"docs":" A future used to fully flush an I/O object.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":12441},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/lines.rs","byte_start":8804562,"byte_end":8804567,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::util::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":12443},{"krate":0,"index":12444},{"krate":0,"index":12445},{"krate":0,"index":12446}],"decl_id":null,"docs":" Stream for the [`lines`](crate::io::AsyncBufReadExt::lines) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.11/src/lib.rs","byte_start":8332164,"byte_end":8332173,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2294},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/lines.rs","byte_start":8805414,"byte_end":8805423,"line_start":57,"line_end":57,"column_start":18,"column_end":27},"name":"next_line","qualname":"<Lines<R>>::next_line","value":"pub async fn next_line<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next line in the stream.","sig":null,"attributes":[{"value":"/ Returns the next line in the stream.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/lines.rs","byte_start":8804924,"byte_end":8804964,"line_start":40,"line_end":40,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/lines.rs","byte_start":8804969,"byte_end":8804972,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/lines.rs","byte_start":8804977,"byte_end":8804991,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/lines.rs","byte_start":8804996,"byte_end":8804999,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/lines.rs","byte_start":8805004,"byte_end":8805011,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/lines.rs","byte_start":8805016,"byte_end":8805050,"line_start":45,"line_end":45,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/lines.rs","byte_start":8805055,"byte_end":8805090,"line_start":46,"line_end":46,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/lines.rs","byte_start":8805095,"byte_end":8805098,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/lines.rs","byte_start":8805103,"byte_end":8805186,"line_start":48,"line_end":48,"column_start":5,"column_end":88}},{"value":"/ let mut lines = my_buf_read.lines();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/lines.rs","byte_start":8805191,"byte_end":8805231,"line_start":49,"line_end":49,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/lines.rs","byte_start":8805236,"byte_end":8805239,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ while let Some(line) = lines.next_line().await? {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/lines.rs","byte_start":8805244,"byte_end":8805297,"line_start":51,"line_end":51,"column_start":5,"column_end":58}},{"value":"/     println!(\"length = {}\", line.len())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/lines.rs","byte_start":8805302,"byte_end":8805345,"line_start":52,"line_end":52,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/lines.rs","byte_start":8805350,"byte_end":8805355,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/lines.rs","byte_start":8805360,"byte_end":8805372,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/lines.rs","byte_start":8805377,"byte_end":8805384,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/lines.rs","byte_start":8805389,"byte_end":8805396,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2299},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/lines.rs","byte_start":8805650,"byte_end":8805657,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Lines<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a mutable reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a mutable reference to the underlying reader","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/lines.rs","byte_start":8805583,"byte_end":8805638,"line_start":63,"line_end":63,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2300},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/lines.rs","byte_start":8805776,"byte_end":8805783,"line_start":69,"line_end":69,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Lines<R>>::get_ref","value":"pub fn get_ref(&mut Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a reference to the underlying reader","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/lines.rs","byte_start":8805717,"byte_end":8805764,"line_start":68,"line_end":68,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2301},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/lines.rs","byte_start":8806070,"byte_end":8806080,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Lines<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `Lines<R>`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps this `Lines<R>`, returning the underlying reader.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/lines.rs","byte_start":8805835,"byte_end":8805896,"line_start":73,"line_end":73,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/lines.rs","byte_start":8805901,"byte_end":8805904,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/lines.rs","byte_start":8805909,"byte_end":8805972,"line_start":75,"line_end":75,"column_start":5,"column_end":68}},{"value":"/ Therefore, a following read from the underlying reader may lead to data loss.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/lines.rs","byte_start":8805977,"byte_end":8806058,"line_start":76,"line_end":76,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":2304},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/lines.rs","byte_start":8806199,"byte_end":8806213,"line_start":87,"line_end":87,"column_start":12,"column_end":26},"name":"poll_next_line","qualname":"<Lines<R>>::poll_next_line","value":"pub fn poll_next_line(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<String>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2804},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/mem.rs","byte_start":8808342,"byte_end":8808354,"line_start":40,"line_end":40,"column_start":12,"column_end":24},"name":"DuplexStream","qualname":"::io::util::mem::DuplexStream","value":"DuplexStream {  }","parent":null,"children":[{"krate":0,"index":2805},{"krate":0,"index":2806}],"decl_id":null,"docs":" A bidirectional pipe to read and write bytes in memory.","sig":null,"attributes":[{"value":"/ A bidirectional pipe to read and write bytes in memory.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/mem.rs","byte_start":8807554,"byte_end":8807613,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/mem.rs","byte_start":8807614,"byte_end":8807617,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ A pair of `DuplexStream`s are created together, and they act as a \"channel\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/mem.rs","byte_start":8807618,"byte_end":8807697,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ that can be used as in-memory IO types. Writing to one of the pairs will","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/mem.rs","byte_start":8807698,"byte_end":8807774,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ allow that data to be read from the other, and vice versa.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/mem.rs","byte_start":8807775,"byte_end":8807837,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/mem.rs","byte_start":8807838,"byte_end":8807841,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/mem.rs","byte_start":8807842,"byte_end":8807855,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/mem.rs","byte_start":8807856,"byte_end":8807859,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/mem.rs","byte_start":8807860,"byte_end":8807867,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # async fn ex() -> std::io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/mem.rs","byte_start":8807868,"byte_end":8807912,"line_start":22,"line_end":22,"column_start":1,"column_end":45}},{"value":"/ # use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/mem.rs","byte_start":8807913,"byte_end":8807964,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ let (mut client, mut server) = tokio::io::duplex(64);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/mem.rs","byte_start":8807965,"byte_end":8808022,"line_start":24,"line_end":24,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/mem.rs","byte_start":8808023,"byte_end":8808026,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ client.write_all(b\"ping\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/mem.rs","byte_start":8808027,"byte_end":8808064,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/mem.rs","byte_start":8808065,"byte_end":8808068,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let mut buf = [0u8; 4];","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/mem.rs","byte_start":8808069,"byte_end":8808096,"line_start":28,"line_end":28,"column_start":1,"column_end":28}},{"value":"/ server.read_exact(&mut buf).await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/mem.rs","byte_start":8808097,"byte_end":8808136,"line_start":29,"line_end":29,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(&buf, b\"ping\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/mem.rs","byte_start":8808137,"byte_end":8808167,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/mem.rs","byte_start":8808168,"byte_end":8808171,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ server.write_all(b\"pong\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/mem.rs","byte_start":8808172,"byte_end":8808209,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/mem.rs","byte_start":8808210,"byte_end":8808213,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ client.read_exact(&mut buf).await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/mem.rs","byte_start":8808214,"byte_end":8808253,"line_start":34,"line_end":34,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(&buf, b\"pong\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/mem.rs","byte_start":8808254,"byte_end":8808284,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/mem.rs","byte_start":8808285,"byte_end":8808297,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/mem.rs","byte_start":8808298,"byte_end":8808305,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/mem.rs","byte_start":8808306,"byte_end":8808313,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2325},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/mem.rs","byte_start":8809651,"byte_end":8809657,"line_start":75,"line_end":75,"column_start":8,"column_end":14},"name":"duplex","qualname":"::io::util::mem::duplex","value":"pub fn duplex(usize) -> (DuplexStream, DuplexStream)","parent":null,"children":[],"decl_id":null,"docs":" Create a new pair of `DuplexStream`s that act like a pair of connected sockets.","sig":null,"attributes":[{"value":"/ Create a new pair of `DuplexStream`s that act like a pair of connected sockets.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/mem.rs","byte_start":8809417,"byte_end":8809500,"line_start":71,"line_end":71,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/mem.rs","byte_start":8809501,"byte_end":8809504,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ The `max_buf_size` argument is the maximum amount of bytes that can be","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/mem.rs","byte_start":8809505,"byte_end":8809579,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ written to a side before the write returns `Poll::Pending`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/mem.rs","byte_start":8809580,"byte_end":8809643,"line_start":74,"line_end":74,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":2817},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/read.rs","byte_start":8814586,"byte_end":8814590,"line_start":28,"line_end":28,"column_start":16,"column_end":20},"name":"Read","qualname":"::io::util::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":2820},{"krate":0,"index":2821}],"decl_id":null,"docs":" A future which can be used to easily read available number of bytes to fill\n a buffer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/read.rs","byte_start":8814503,"byte_end":8814570,"line_start":27,"line_end":27,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2826},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/read_buf.rs","byte_start":8815653,"byte_end":8815660,"line_start":21,"line_end":21,"column_start":16,"column_end":23},"name":"ReadBuf","qualname":"::io::util::read_buf::ReadBuf","value":"ReadBuf {  }","parent":null,"children":[{"krate":0,"index":2830},{"krate":0,"index":2831}],"decl_id":null,"docs":" Future returned by [`read_buf`](crate::io::AsyncReadExt::read_buf).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/read_buf.rs","byte_start":8815570,"byte_end":8815637,"line_start":20,"line_end":20,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2837},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/read_exact.rs","byte_start":8816909,"byte_end":8816918,"line_start":32,"line_end":32,"column_start":16,"column_end":25},"name":"ReadExact","qualname":"::io::util::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":2840},{"krate":0,"index":2841},{"krate":0,"index":2842}],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if EOF is hit sooner.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/read_exact.rs","byte_start":8816826,"byte_end":8816893,"line_start":31,"line_end":31,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":12399},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/read_int.rs","byte_start":8821242,"byte_end":8821248,"line_start":112,"line_end":112,"column_start":10,"column_end":16},"name":"ReadU8","qualname":"::io::util::read_int::ReadU8","value":"ReadU8 {  }","parent":null,"children":[{"krate":0,"index":12401}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12366},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/read_int.rs","byte_start":8821264,"byte_end":8821270,"line_start":113,"line_end":113,"column_start":10,"column_end":16},"name":"ReadI8","qualname":"::io::util::read_int::ReadI8","value":"ReadI8 {  }","parent":null,"children":[{"krate":0,"index":12368}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12321},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/read_int.rs","byte_start":8821286,"byte_end":8821293,"line_start":115,"line_end":115,"column_start":9,"column_end":16},"name":"ReadU16","qualname":"::io::util::read_int::ReadU16","value":"ReadU16 {  }","parent":null,"children":[{"krate":0,"index":12323},{"krate":0,"index":12324},{"krate":0,"index":12326}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12276},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/read_int.rs","byte_start":8821318,"byte_end":8821325,"line_start":116,"line_end":116,"column_start":9,"column_end":16},"name":"ReadU32","qualname":"::io::util::read_int::ReadU32","value":"ReadU32 {  }","parent":null,"children":[{"krate":0,"index":12278},{"krate":0,"index":12279},{"krate":0,"index":12281}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12231},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/read_int.rs","byte_start":8821350,"byte_end":8821357,"line_start":117,"line_end":117,"column_start":9,"column_end":16},"name":"ReadU64","qualname":"::io::util::read_int::ReadU64","value":"ReadU64 {  }","parent":null,"children":[{"krate":0,"index":12233},{"krate":0,"index":12234},{"krate":0,"index":12236}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12186},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/read_int.rs","byte_start":8821382,"byte_end":8821390,"line_start":118,"line_end":118,"column_start":9,"column_end":17},"name":"ReadU128","qualname":"::io::util::read_int::ReadU128","value":"ReadU128 {  }","parent":null,"children":[{"krate":0,"index":12188},{"krate":0,"index":12189},{"krate":0,"index":12191}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12141},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/read_int.rs","byte_start":8821418,"byte_end":8821425,"line_start":120,"line_end":120,"column_start":9,"column_end":16},"name":"ReadI16","qualname":"::io::util::read_int::ReadI16","value":"ReadI16 {  }","parent":null,"children":[{"krate":0,"index":12143},{"krate":0,"index":12144},{"krate":0,"index":12146}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12096},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/read_int.rs","byte_start":8821450,"byte_end":8821457,"line_start":121,"line_end":121,"column_start":9,"column_end":16},"name":"ReadI32","qualname":"::io::util::read_int::ReadI32","value":"ReadI32 {  }","parent":null,"children":[{"krate":0,"index":12098},{"krate":0,"index":12099},{"krate":0,"index":12101}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12051},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/read_int.rs","byte_start":8821482,"byte_end":8821489,"line_start":122,"line_end":122,"column_start":9,"column_end":16},"name":"ReadI64","qualname":"::io::util::read_int::ReadI64","value":"ReadI64 {  }","parent":null,"children":[{"krate":0,"index":12053},{"krate":0,"index":12054},{"krate":0,"index":12056}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12006},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/read_int.rs","byte_start":8821514,"byte_end":8821522,"line_start":123,"line_end":123,"column_start":9,"column_end":17},"name":"ReadI128","qualname":"::io::util::read_int::ReadI128","value":"ReadI128 {  }","parent":null,"children":[{"krate":0,"index":12008},{"krate":0,"index":12009},{"krate":0,"index":12011}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11961},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/read_int.rs","byte_start":8821550,"byte_end":8821559,"line_start":125,"line_end":125,"column_start":9,"column_end":18},"name":"ReadU16Le","qualname":"::io::util::read_int::ReadU16Le","value":"ReadU16Le {  }","parent":null,"children":[{"krate":0,"index":11963},{"krate":0,"index":11964},{"krate":0,"index":11966}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11916},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/read_int.rs","byte_start":8821587,"byte_end":8821596,"line_start":126,"line_end":126,"column_start":9,"column_end":18},"name":"ReadU32Le","qualname":"::io::util::read_int::ReadU32Le","value":"ReadU32Le {  }","parent":null,"children":[{"krate":0,"index":11918},{"krate":0,"index":11919},{"krate":0,"index":11921}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11871},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/read_int.rs","byte_start":8821624,"byte_end":8821633,"line_start":127,"line_end":127,"column_start":9,"column_end":18},"name":"ReadU64Le","qualname":"::io::util::read_int::ReadU64Le","value":"ReadU64Le {  }","parent":null,"children":[{"krate":0,"index":11873},{"krate":0,"index":11874},{"krate":0,"index":11876}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11826},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/read_int.rs","byte_start":8821661,"byte_end":8821671,"line_start":128,"line_end":128,"column_start":9,"column_end":19},"name":"ReadU128Le","qualname":"::io::util::read_int::ReadU128Le","value":"ReadU128Le {  }","parent":null,"children":[{"krate":0,"index":11828},{"krate":0,"index":11829},{"krate":0,"index":11831}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11781},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/read_int.rs","byte_start":8821702,"byte_end":8821711,"line_start":130,"line_end":130,"column_start":9,"column_end":18},"name":"ReadI16Le","qualname":"::io::util::read_int::ReadI16Le","value":"ReadI16Le {  }","parent":null,"children":[{"krate":0,"index":11783},{"krate":0,"index":11784},{"krate":0,"index":11786}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11736},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/read_int.rs","byte_start":8821739,"byte_end":8821748,"line_start":131,"line_end":131,"column_start":9,"column_end":18},"name":"ReadI32Le","qualname":"::io::util::read_int::ReadI32Le","value":"ReadI32Le {  }","parent":null,"children":[{"krate":0,"index":11738},{"krate":0,"index":11739},{"krate":0,"index":11741}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11691},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/read_int.rs","byte_start":8821776,"byte_end":8821785,"line_start":132,"line_end":132,"column_start":9,"column_end":18},"name":"ReadI64Le","qualname":"::io::util::read_int::ReadI64Le","value":"ReadI64Le {  }","parent":null,"children":[{"krate":0,"index":11693},{"krate":0,"index":11694},{"krate":0,"index":11696}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11646},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/read_int.rs","byte_start":8821813,"byte_end":8821823,"line_start":133,"line_end":133,"column_start":9,"column_end":19},"name":"ReadI128Le","qualname":"::io::util::read_int::ReadI128Le","value":"ReadI128Le {  }","parent":null,"children":[{"krate":0,"index":11648},{"krate":0,"index":11649},{"krate":0,"index":11651}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2991},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/read_line.rs","byte_start":8822273,"byte_end":8822281,"line_start":15,"line_end":15,"column_start":16,"column_end":24},"name":"ReadLine","qualname":"::io::util::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":2994},{"krate":0,"index":2995},{"krate":0,"index":2996},{"krate":0,"index":2997}],"decl_id":null,"docs":" Future for the [`read_line`](crate::io::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/read_line.rs","byte_start":8822190,"byte_end":8822257,"line_start":14,"line_end":14,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":3002},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/read_to_end.rs","byte_start":8826236,"byte_end":8826245,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadToEnd","qualname":"::io::util::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":3005},{"krate":0,"index":3006},{"krate":0,"index":3007}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/read_to_end.rs","byte_start":8826106,"byte_end":8826173,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3013},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/read_to_string.rs","byte_start":8832380,"byte_end":8832392,"line_start":14,"line_end":14,"column_start":16,"column_end":28},"name":"ReadToString","qualname":"::io::util::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":3016},{"krate":0,"index":3017},{"krate":0,"index":3018},{"krate":0,"index":3019}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/read_to_string.rs","byte_start":8832297,"byte_end":8832364,"line_start":13,"line_end":13,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":3024},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/read_until.rs","byte_start":8835157,"byte_end":8835166,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"ReadUntil","qualname":"::io::util::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":3027},{"krate":0,"index":3028},{"krate":0,"index":3029},{"krate":0,"index":3030}],"decl_id":null,"docs":" Future for the [`read_until`](crate::io::AsyncBufReadExt::read_until) method.\n The delimeter is included in the resulting vector.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/read_until.rs","byte_start":8835074,"byte_end":8835141,"line_start":13,"line_end":13,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":3036},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/repeat.rs","byte_start":8837612,"byte_end":8837618,"line_start":19,"line_end":19,"column_start":16,"column_end":22},"name":"Repeat","qualname":"::io::util::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":3037}],"decl_id":null,"docs":" An async reader which yields one byte over and over and over and over and\n over and...","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":3035},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/repeat.rs","byte_start":8838304,"byte_end":8838310,"line_start":44,"line_end":44,"column_start":12,"column_end":18},"name":"repeat","qualname":"::io::util::repeat::repeat","value":"pub fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3040},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/shutdown.rs","byte_start":8839259,"byte_end":8839267,"line_start":14,"line_end":14,"column_start":16,"column_end":24},"name":"Shutdown","qualname":"::io::util::shutdown::Shutdown","value":"Shutdown {  }","parent":null,"children":[{"krate":0,"index":3043}],"decl_id":null,"docs":" A future used to shutdown an I/O object.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3048},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/sink.rs","byte_start":8840439,"byte_end":8840443,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"Sink","qualname":"::io::util::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":3049}],"decl_id":null,"docs":" An async writer which will move data into the void.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":3050},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/sink.rs","byte_start":8841284,"byte_end":8841288,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"sink","qualname":"::io::util::sink::sink","value":"pub fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async writer which will successfully consume all\n data.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":11607},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/split.rs","byte_start":8842533,"byte_end":8842538,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Split","qualname":"::io::util::split::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":11609},{"krate":0,"index":11610},{"krate":0,"index":11611},{"krate":0,"index":11612}],"decl_id":null,"docs":" Stream for the [`split`](crate::io::AsyncBufReadExt::split) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.11/src/lib.rs","byte_start":8332164,"byte_end":8332173,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2559},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/split.rs","byte_start":8843399,"byte_end":8843411,"line_start":57,"line_end":57,"column_start":18,"column_end":30},"name":"next_segment","qualname":"<Split<R>>::next_segment","value":"pub async fn next_segment<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next segment in the stream.","sig":null,"attributes":[{"value":"/ Returns the next segment in the stream.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/split.rs","byte_start":8842887,"byte_end":8842930,"line_start":40,"line_end":40,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/split.rs","byte_start":8842935,"byte_end":8842938,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/split.rs","byte_start":8842943,"byte_end":8842957,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/split.rs","byte_start":8842962,"byte_end":8842965,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/split.rs","byte_start":8842970,"byte_end":8842977,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/split.rs","byte_start":8842982,"byte_end":8843016,"line_start":45,"line_end":45,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/split.rs","byte_start":8843021,"byte_end":8843056,"line_start":46,"line_end":46,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/split.rs","byte_start":8843061,"byte_end":8843064,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/split.rs","byte_start":8843069,"byte_end":8843152,"line_start":48,"line_end":48,"column_start":5,"column_end":88}},{"value":"/ let mut segments = my_buf_read.split(b'f');","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/split.rs","byte_start":8843157,"byte_end":8843204,"line_start":49,"line_end":49,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/split.rs","byte_start":8843209,"byte_end":8843212,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ while let Some(segment) = segments.next_segment().await? {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/split.rs","byte_start":8843217,"byte_end":8843279,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/     println!(\"length = {}\", segment.len())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/split.rs","byte_start":8843284,"byte_end":8843330,"line_start":52,"line_end":52,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/split.rs","byte_start":8843335,"byte_end":8843340,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/split.rs","byte_start":8843345,"byte_end":8843357,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/split.rs","byte_start":8843362,"byte_end":8843369,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/split.rs","byte_start":8843374,"byte_end":8843381,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2566},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/split.rs","byte_start":8843649,"byte_end":8843666,"line_start":69,"line_end":69,"column_start":12,"column_end":29},"name":"poll_next_segment","qualname":"<Split<R>>::poll_next_segment","value":"pub fn poll_next_segment(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<Vec<u8>>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11560},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/stream_reader.rs","byte_start":8856460,"byte_end":8856472,"line_start":20,"line_end":20,"column_start":16,"column_end":28},"name":"StreamReader","qualname":"::io::util::stream_reader::StreamReader","value":"StreamReader {  }","parent":null,"children":[{"krate":0,"index":11563},{"krate":0,"index":11564}],"decl_id":null,"docs":" Convert a stream of byte chunks into an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3066},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/stream_reader.rs","byte_start":8857748,"byte_end":8857761,"line_start":68,"line_end":68,"column_start":8,"column_end":21},"name":"stream_reader","qualname":"::io::util::stream_reader::stream_reader","value":"pub fn stream_reader<S, B>(S) -> StreamReader<S, B> where S: Stream<Item =\nResult<B, io::Error>>, B: Buf","parent":null,"children":[],"decl_id":null,"docs":" Convert a stream of byte chunks into an [`AsyncRead`](crate::io::AsyncRead).","sig":null,"attributes":[{"value":"/ Convert a stream of byte chunks into an [`AsyncRead`](crate::io::AsyncRead).","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/stream_reader.rs","byte_start":8856549,"byte_end":8856629,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/stream_reader.rs","byte_start":8856630,"byte_end":8856633,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/stream_reader.rs","byte_start":8856634,"byte_end":8856647,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/stream_reader.rs","byte_start":8856648,"byte_end":8856651,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/stream_reader.rs","byte_start":8856652,"byte_end":8856659,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/stream_reader.rs","byte_start":8856660,"byte_end":8856681,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/ use tokio::io::{stream_reader, AsyncReadExt};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/stream_reader.rs","byte_start":8856682,"byte_end":8856731,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/stream_reader.rs","byte_start":8856732,"byte_end":8856752,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/ # async fn main() -> std::io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/stream_reader.rs","byte_start":8856753,"byte_end":8856799,"line_start":35,"line_end":35,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/stream_reader.rs","byte_start":8856800,"byte_end":8856803,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // Create a stream from an iterator.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/stream_reader.rs","byte_start":8856804,"byte_end":8856844,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/ let stream = tokio::stream::iter(vec![","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/stream_reader.rs","byte_start":8856845,"byte_end":8856887,"line_start":38,"line_end":38,"column_start":1,"column_end":43}},{"value":"/     Ok(Bytes::from_static(&[0, 1, 2, 3])),","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/stream_reader.rs","byte_start":8856888,"byte_end":8856934,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/     Ok(Bytes::from_static(&[4, 5, 6, 7])),","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/stream_reader.rs","byte_start":8856935,"byte_end":8856981,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/     Ok(Bytes::from_static(&[8, 9, 10, 11])),","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/stream_reader.rs","byte_start":8856982,"byte_end":8857030,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ ]);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/stream_reader.rs","byte_start":8857031,"byte_end":8857038,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/stream_reader.rs","byte_start":8857039,"byte_end":8857042,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // Convert it to an AsyncRead.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/stream_reader.rs","byte_start":8857043,"byte_end":8857077,"line_start":44,"line_end":44,"column_start":1,"column_end":35}},{"value":"/ let mut read = stream_reader(stream);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/stream_reader.rs","byte_start":8857078,"byte_end":8857119,"line_start":45,"line_end":45,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/stream_reader.rs","byte_start":8857120,"byte_end":8857123,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ // Read five bytes from the stream.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/stream_reader.rs","byte_start":8857124,"byte_end":8857163,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/ let mut buf = [0; 5];","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/stream_reader.rs","byte_start":8857164,"byte_end":8857189,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"/ read.read_exact(&mut buf).await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/stream_reader.rs","byte_start":8857190,"byte_end":8857227,"line_start":49,"line_end":49,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(buf, [0, 1, 2, 3, 4]);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/stream_reader.rs","byte_start":8857228,"byte_end":8857265,"line_start":50,"line_end":50,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/stream_reader.rs","byte_start":8857266,"byte_end":8857269,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ // Read the rest of the current chunk.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/stream_reader.rs","byte_start":8857270,"byte_end":8857312,"line_start":52,"line_end":52,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 3);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/stream_reader.rs","byte_start":8857313,"byte_end":8857359,"line_start":53,"line_end":53,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(&buf[..3], [5, 6, 7]);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/stream_reader.rs","byte_start":8857360,"byte_end":8857397,"line_start":54,"line_end":54,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/stream_reader.rs","byte_start":8857398,"byte_end":8857401,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // Read the next chunk.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/stream_reader.rs","byte_start":8857402,"byte_end":8857429,"line_start":56,"line_end":56,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 4);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/stream_reader.rs","byte_start":8857430,"byte_end":8857476,"line_start":57,"line_end":57,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(&buf[..4], [8, 9, 10, 11]);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/stream_reader.rs","byte_start":8857477,"byte_end":8857519,"line_start":58,"line_end":58,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/stream_reader.rs","byte_start":8857520,"byte_end":8857523,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ // We have now reached the end.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/stream_reader.rs","byte_start":8857524,"byte_end":8857559,"line_start":60,"line_end":60,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 0);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/stream_reader.rs","byte_start":8857560,"byte_end":8857606,"line_start":61,"line_end":61,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/stream_reader.rs","byte_start":8857607,"byte_end":8857610,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/stream_reader.rs","byte_start":8857611,"byte_end":8857623,"line_start":63,"line_end":63,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/stream_reader.rs","byte_start":8857624,"byte_end":8857631,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/stream_reader.rs","byte_start":8857632,"byte_end":8857639,"line_start":65,"line_end":65,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":11518},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/reader_stream.rs","byte_start":8862150,"byte_end":8862162,"line_start":25,"line_end":25,"column_start":16,"column_end":28},"name":"ReaderStream","qualname":"::io::util::reader_stream::ReaderStream","value":"ReaderStream {  }","parent":null,"children":[{"krate":0,"index":11520},{"krate":0,"index":11521}],"decl_id":null,"docs":" Convert an [`AsyncRead`] implementor into a\n [`Stream`] of Result<[`Bytes`], std::io::Error>.\n After first error it will stop.\n Additionally, this stream is fused: after it returns None at some\n moment, it is guaranteed that further `next()`, `poll_next()` and\n similar functions will instantly return None.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3100},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/reader_stream.rs","byte_start":8863307,"byte_end":8863320,"line_start":63,"line_end":63,"column_start":8,"column_end":21},"name":"reader_stream","qualname":"::io::util::reader_stream::reader_stream","value":"pub fn reader_stream<R>(R) -> ReaderStream<R> where R: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Convert an [`AsyncRead`] implementor into a\n [`Stream`] of Result<[`Bytes`], std::io::Error>.","sig":null,"attributes":[{"value":"/ Convert an [`AsyncRead`] implementor into a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/reader_stream.rs","byte_start":8862635,"byte_end":8862682,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/ [`Stream`] of Result<[`Bytes`], std::io::Error>.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/reader_stream.rs","byte_start":8862683,"byte_end":8862735,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/reader_stream.rs","byte_start":8862736,"byte_end":8862739,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/reader_stream.rs","byte_start":8862740,"byte_end":8862753,"line_start":42,"line_end":42,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/reader_stream.rs","byte_start":8862754,"byte_end":8862757,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/reader_stream.rs","byte_start":8862758,"byte_end":8862765,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/reader_stream.rs","byte_start":8862766,"byte_end":8862786,"line_start":45,"line_end":45,"column_start":1,"column_end":21}},{"value":"/ # async fn main() -> std::io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/reader_stream.rs","byte_start":8862787,"byte_end":8862833,"line_start":46,"line_end":46,"column_start":1,"column_end":47}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/reader_stream.rs","byte_start":8862834,"byte_end":8862867,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/reader_stream.rs","byte_start":8862868,"byte_end":8862871,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ let data: &[u8] = b\"hello, world!\";","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/reader_stream.rs","byte_start":8862872,"byte_end":8862911,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/ let mut stream = tokio::io::reader_stream(data);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/reader_stream.rs","byte_start":8862912,"byte_end":8862964,"line_start":50,"line_end":50,"column_start":1,"column_end":53}},{"value":"/ let mut stream_contents = Vec::new();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/reader_stream.rs","byte_start":8862965,"byte_end":8863006,"line_start":51,"line_end":51,"column_start":1,"column_end":42}},{"value":"/ while let Some(chunk) = stream.next().await {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/reader_stream.rs","byte_start":8863007,"byte_end":8863056,"line_start":52,"line_end":52,"column_start":1,"column_end":50}},{"value":"/    stream_contents.extend_from_slice(chunk?.as_ref());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/reader_stream.rs","byte_start":8863057,"byte_end":8863115,"line_start":53,"line_end":53,"column_start":1,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/reader_stream.rs","byte_start":8863116,"byte_end":8863121,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(stream_contents, data);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/reader_stream.rs","byte_start":8863122,"byte_end":8863160,"line_start":55,"line_end":55,"column_start":1,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/reader_stream.rs","byte_start":8863161,"byte_end":8863173,"line_start":56,"line_end":56,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/reader_stream.rs","byte_start":8863174,"byte_end":8863181,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/reader_stream.rs","byte_start":8863182,"byte_end":8863189,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/reader_stream.rs","byte_start":8863190,"byte_end":8863193,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: crate::io::AsyncRead","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/reader_stream.rs","byte_start":8863194,"byte_end":8863233,"line_start":60,"line_end":60,"column_start":1,"column_end":40}},{"value":"/ [`Stream`]: crate::stream::Stream","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/reader_stream.rs","byte_start":8863234,"byte_end":8863271,"line_start":61,"line_end":61,"column_start":1,"column_end":38}},{"value":"/ [`Bytes`]: bytes::Bytes","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/reader_stream.rs","byte_start":8863272,"byte_end":8863299,"line_start":62,"line_end":62,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":11478},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/take.rs","byte_start":8845261,"byte_end":8845265,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::util::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":11480},{"krate":0,"index":11481}],"decl_id":null,"docs":" Stream for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.11/src/lib.rs","byte_start":8332164,"byte_end":8332173,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2589},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/take.rs","byte_start":8845855,"byte_end":8845860,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"pub fn limit(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/take.rs","byte_start":8845552,"byte_end":8845605,"line_start":30,"line_end":30,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/take.rs","byte_start":8845610,"byte_end":8845656,"line_start":31,"line_end":31,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/take.rs","byte_start":8845661,"byte_end":8845664,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/take.rs","byte_start":8845669,"byte_end":8845679,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/take.rs","byte_start":8845684,"byte_end":8845687,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/take.rs","byte_start":8845692,"byte_end":8845769,"line_start":35,"line_end":35,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/take.rs","byte_start":8845774,"byte_end":8845843,"line_start":36,"line_end":36,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2590},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/take.rs","byte_start":8846179,"byte_end":8846188,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"pub fn set_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.\n","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/take.rs","byte_start":8845908,"byte_end":8845979,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/take.rs","byte_start":8845984,"byte_end":8846058,"line_start":42,"line_end":42,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/take.rs","byte_start":8846063,"byte_end":8846138,"line_start":43,"line_end":43,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/take.rs","byte_start":8846143,"byte_end":8846167,"line_start":44,"line_end":44,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2591},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/take.rs","byte_start":8846311,"byte_end":8846318,"line_start":50,"line_end":50,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/take.rs","byte_start":8846253,"byte_end":8846299,"line_start":49,"line_end":49,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2592},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/take.rs","byte_start":8846610,"byte_end":8846617,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/take.rs","byte_start":8846365,"byte_end":8846419,"line_start":54,"line_end":54,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/take.rs","byte_start":8846424,"byte_end":8846427,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/take.rs","byte_start":8846432,"byte_end":8846505,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/take.rs","byte_start":8846510,"byte_end":8846582,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/take.rs","byte_start":8846587,"byte_end":8846598,"line_start":58,"line_end":58,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2593},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/take.rs","byte_start":8846928,"byte_end":8846939,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Take<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/take.rs","byte_start":8846676,"byte_end":8846737,"line_start":63,"line_end":63,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/take.rs","byte_start":8846742,"byte_end":8846745,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/take.rs","byte_start":8846750,"byte_end":8846823,"line_start":65,"line_end":65,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/take.rs","byte_start":8846828,"byte_end":8846900,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/take.rs","byte_start":8846905,"byte_end":8846916,"line_start":67,"line_end":67,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2594},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/take.rs","byte_start":8847085,"byte_end":8847095,"line_start":73,"line_end":73,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Take`, returning the wrapped reader.\n","sig":null,"attributes":[{"value":"/ Consumes the `Take`, returning the wrapped reader.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/take.rs","byte_start":8847019,"byte_end":8847073,"line_start":72,"line_end":72,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":3110},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/write.rs","byte_start":8849025,"byte_end":8849030,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Write","qualname":"::io::util::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":3113},{"krate":0,"index":3114}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/write.rs","byte_start":8848942,"byte_end":8849009,"line_start":11,"line_end":11,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":3119},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/write_all.rs","byte_start":8849926,"byte_end":8849934,"line_start":12,"line_end":12,"column_start":16,"column_end":24},"name":"WriteAll","qualname":"::io::util::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":3122},{"krate":0,"index":3123}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/write_all.rs","byte_start":8849843,"byte_end":8849910,"line_start":11,"line_end":11,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":3128},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/write_buf.rs","byte_start":8851317,"byte_end":8851325,"line_start":13,"line_end":13,"column_start":16,"column_end":24},"name":"WriteBuf","qualname":"::io::util::write_buf::WriteBuf","value":"WriteBuf {  }","parent":null,"children":[{"krate":0,"index":3132},{"krate":0,"index":3133}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/write_buf.rs","byte_start":8851234,"byte_end":8851301,"line_start":12,"line_end":12,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":11432},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/write_int.rs","byte_start":8855206,"byte_end":8855213,"line_start":111,"line_end":111,"column_start":10,"column_end":17},"name":"WriteU8","qualname":"::io::util::write_int::WriteU8","value":"WriteU8 {  }","parent":null,"children":[{"krate":0,"index":11434},{"krate":0,"index":11435}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11395},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/write_int.rs","byte_start":8855229,"byte_end":8855236,"line_start":112,"line_end":112,"column_start":10,"column_end":17},"name":"WriteI8","qualname":"::io::util::write_int::WriteI8","value":"WriteI8 {  }","parent":null,"children":[{"krate":0,"index":11397},{"krate":0,"index":11398}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11350},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/write_int.rs","byte_start":8855252,"byte_end":8855260,"line_start":114,"line_end":114,"column_start":9,"column_end":17},"name":"WriteU16","qualname":"::io::util::write_int::WriteU16","value":"WriteU16 {  }","parent":null,"children":[{"krate":0,"index":11352},{"krate":0,"index":11353},{"krate":0,"index":11355}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11305},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/write_int.rs","byte_start":8855285,"byte_end":8855293,"line_start":115,"line_end":115,"column_start":9,"column_end":17},"name":"WriteU32","qualname":"::io::util::write_int::WriteU32","value":"WriteU32 {  }","parent":null,"children":[{"krate":0,"index":11307},{"krate":0,"index":11308},{"krate":0,"index":11310}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11260},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/write_int.rs","byte_start":8855318,"byte_end":8855326,"line_start":116,"line_end":116,"column_start":9,"column_end":17},"name":"WriteU64","qualname":"::io::util::write_int::WriteU64","value":"WriteU64 {  }","parent":null,"children":[{"krate":0,"index":11262},{"krate":0,"index":11263},{"krate":0,"index":11265}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11215},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/write_int.rs","byte_start":8855351,"byte_end":8855360,"line_start":117,"line_end":117,"column_start":9,"column_end":18},"name":"WriteU128","qualname":"::io::util::write_int::WriteU128","value":"WriteU128 {  }","parent":null,"children":[{"krate":0,"index":11217},{"krate":0,"index":11218},{"krate":0,"index":11220}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11170},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/write_int.rs","byte_start":8855388,"byte_end":8855396,"line_start":119,"line_end":119,"column_start":9,"column_end":17},"name":"WriteI16","qualname":"::io::util::write_int::WriteI16","value":"WriteI16 {  }","parent":null,"children":[{"krate":0,"index":11172},{"krate":0,"index":11173},{"krate":0,"index":11175}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11125},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/write_int.rs","byte_start":8855421,"byte_end":8855429,"line_start":120,"line_end":120,"column_start":9,"column_end":17},"name":"WriteI32","qualname":"::io::util::write_int::WriteI32","value":"WriteI32 {  }","parent":null,"children":[{"krate":0,"index":11127},{"krate":0,"index":11128},{"krate":0,"index":11130}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11080},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/write_int.rs","byte_start":8855454,"byte_end":8855462,"line_start":121,"line_end":121,"column_start":9,"column_end":17},"name":"WriteI64","qualname":"::io::util::write_int::WriteI64","value":"WriteI64 {  }","parent":null,"children":[{"krate":0,"index":11082},{"krate":0,"index":11083},{"krate":0,"index":11085}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11035},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/write_int.rs","byte_start":8855487,"byte_end":8855496,"line_start":122,"line_end":122,"column_start":9,"column_end":18},"name":"WriteI128","qualname":"::io::util::write_int::WriteI128","value":"WriteI128 {  }","parent":null,"children":[{"krate":0,"index":11037},{"krate":0,"index":11038},{"krate":0,"index":11040}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10990},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/write_int.rs","byte_start":8855524,"byte_end":8855534,"line_start":124,"line_end":124,"column_start":9,"column_end":19},"name":"WriteU16Le","qualname":"::io::util::write_int::WriteU16Le","value":"WriteU16Le {  }","parent":null,"children":[{"krate":0,"index":10992},{"krate":0,"index":10993},{"krate":0,"index":10995}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10945},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/write_int.rs","byte_start":8855562,"byte_end":8855572,"line_start":125,"line_end":125,"column_start":9,"column_end":19},"name":"WriteU32Le","qualname":"::io::util::write_int::WriteU32Le","value":"WriteU32Le {  }","parent":null,"children":[{"krate":0,"index":10947},{"krate":0,"index":10948},{"krate":0,"index":10950}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10900},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/write_int.rs","byte_start":8855600,"byte_end":8855610,"line_start":126,"line_end":126,"column_start":9,"column_end":19},"name":"WriteU64Le","qualname":"::io::util::write_int::WriteU64Le","value":"WriteU64Le {  }","parent":null,"children":[{"krate":0,"index":10902},{"krate":0,"index":10903},{"krate":0,"index":10905}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10855},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/write_int.rs","byte_start":8855638,"byte_end":8855649,"line_start":127,"line_end":127,"column_start":9,"column_end":20},"name":"WriteU128Le","qualname":"::io::util::write_int::WriteU128Le","value":"WriteU128Le {  }","parent":null,"children":[{"krate":0,"index":10857},{"krate":0,"index":10858},{"krate":0,"index":10860}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10810},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/write_int.rs","byte_start":8855680,"byte_end":8855690,"line_start":129,"line_end":129,"column_start":9,"column_end":19},"name":"WriteI16Le","qualname":"::io::util::write_int::WriteI16Le","value":"WriteI16Le {  }","parent":null,"children":[{"krate":0,"index":10812},{"krate":0,"index":10813},{"krate":0,"index":10815}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10765},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/write_int.rs","byte_start":8855718,"byte_end":8855728,"line_start":130,"line_end":130,"column_start":9,"column_end":19},"name":"WriteI32Le","qualname":"::io::util::write_int::WriteI32Le","value":"WriteI32Le {  }","parent":null,"children":[{"krate":0,"index":10767},{"krate":0,"index":10768},{"krate":0,"index":10770}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10720},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/write_int.rs","byte_start":8855756,"byte_end":8855766,"line_start":131,"line_end":131,"column_start":9,"column_end":19},"name":"WriteI64Le","qualname":"::io::util::write_int::WriteI64Le","value":"WriteI64Le {  }","parent":null,"children":[{"krate":0,"index":10722},{"krate":0,"index":10723},{"krate":0,"index":10725}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10675},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/write_int.rs","byte_start":8855794,"byte_end":8855805,"line_start":132,"line_end":132,"column_start":9,"column_end":20},"name":"WriteI128Le","qualname":"::io::util::write_int::WriteI128Le","value":"WriteI128Le {  }","parent":null,"children":[{"krate":0,"index":10677},{"krate":0,"index":10678},{"krate":0,"index":10680}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":313},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/mod.rs","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":377},{"krate":0,"index":3348},{"krate":0,"index":3349},{"krate":0,"index":3358},{"krate":0,"index":3621},{"krate":0,"index":3622},{"krate":0,"index":3662},{"krate":0,"index":3790},{"krate":0,"index":3809},{"krate":0,"index":4189},{"krate":0,"index":4190},{"krate":0,"index":4191}],"decl_id":null,"docs":" TCP/UDP/Unix bindings for `tokio`.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/mod.rs","byte_start":71949,"byte_end":71967,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/ TCP/UDP/Unix bindings for `tokio`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/mod.rs","byte_start":71969,"byte_end":72007,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/mod.rs","byte_start":72008,"byte_end":72011,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module contains the TCP/UDP/Unix networking types, similar to the standard","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/mod.rs","byte_start":72012,"byte_end":72095,"line_start":5,"line_end":5,"column_start":1,"column_end":84}},{"value":"/ library, which can be used to implement networking protocols.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/mod.rs","byte_start":72096,"byte_end":72161,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/mod.rs","byte_start":72162,"byte_end":72165,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/mod.rs","byte_start":72166,"byte_end":72184,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/mod.rs","byte_start":72185,"byte_end":72188,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * [`TcpListener`] and [`TcpStream`] provide functionality for communication over TCP","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/mod.rs","byte_start":72189,"byte_end":72277,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/ * [`UdpSocket`] provides functionality for communication over UDP","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/mod.rs","byte_start":72278,"byte_end":72347,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ * [`UnixListener`] and [`UnixStream`] provide functionality for communication over a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/mod.rs","byte_start":72348,"byte_end":72436,"line_start":12,"line_end":12,"column_start":1,"column_end":89}},{"value":"/ Unix Domain Stream Socket **(available on Unix only)**","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/mod.rs","byte_start":72437,"byte_end":72495,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"/ * [`UnixDatagram`] provides functionality for communication","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/mod.rs","byte_start":72496,"byte_end":72559,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/ over Unix Domain Datagram Socket **(available on Unix only)**","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/mod.rs","byte_start":72560,"byte_end":72625,"line_start":15,"line_end":15,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/mod.rs","byte_start":72627,"byte_end":72630,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`TcpListener`]: TcpListener","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/mod.rs","byte_start":72631,"byte_end":72663,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/mod.rs","byte_start":72664,"byte_end":72692,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ [`UdpSocket`]: UdpSocket","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/mod.rs","byte_start":72693,"byte_end":72721,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ [`UnixListener`]: UnixListener","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/mod.rs","byte_start":72722,"byte_end":72756,"line_start":21,"line_end":21,"column_start":1,"column_end":35}},{"value":"/ [`UnixStream`]: UnixStream","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/mod.rs","byte_start":72757,"byte_end":72787,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`UnixDatagram`]: UnixDatagram","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/mod.rs","byte_start":72788,"byte_end":72822,"line_start":23,"line_end":23,"column_start":1,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":324},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":74079,"byte_end":74092,"line_start":22,"line_end":22,"column_start":11,"column_end":24},"name":"ToSocketAddrs","qualname":"::net::addr::ToSocketAddrs","value":"ToSocketAddrs: sealed::ToSocketAddrsPriv","parent":null,"children":[],"decl_id":null,"docs":" Converts or resolves without blocking to one or more `SocketAddr` values.","sig":null,"attributes":[{"value":"/ Converts or resolves without blocking to one or more `SocketAddr` values.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":73391,"byte_end":73468,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":73469,"byte_end":73472,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # DNS","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":73473,"byte_end":73482,"line_start":8,"line_end":8,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":73483,"byte_end":73486,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Implementations of `ToSocketAddrs` for string types require a DNS lookup.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":73487,"byte_end":73564,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ These implementations are only provided when Tokio is used with the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":73565,"byte_end":73636,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ **`dns`** feature flag.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":73637,"byte_end":73664,"line_start":12,"line_end":12,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":73665,"byte_end":73668,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Calling","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":73669,"byte_end":73682,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":73683,"byte_end":73686,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait is only used as an argument to Tokio functions that","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":73687,"byte_end":73764,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ need to reference a target socket address. To perform a `SocketAddr`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":73765,"byte_end":73837,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ conversion directly, use [`lookup_host()`](super::lookup_host()).","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":73838,"byte_end":73907,"line_start":18,"line_end":18,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":73908,"byte_end":73911,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and is intended to be opaque. The details of the trait","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":73912,"byte_end":73991,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ will change. Stabilization is pending enhancements to the Rust language.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":73992,"byte_end":74068,"line_start":21,"line_end":21,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":373},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":80099,"byte_end":80116,"line_start":250,"line_end":250,"column_start":15,"column_end":32},"name":"ToSocketAddrsPriv","qualname":"::net::addr::sealed::ToSocketAddrsPriv","value":"ToSocketAddrsPriv","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":374},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":80132,"byte_end":80136,"line_start":251,"line_end":251,"column_start":14,"column_end":18},"name":"Iter","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Iter","value":"type Iter: Iterator<Item = SocketAddr> + Send + 'static;","parent":{"krate":0,"index":373},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":375},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":80197,"byte_end":80203,"line_start":252,"line_end":252,"column_start":14,"column_end":20},"name":"Future","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Future","value":"type Future: Future<Output = io::Result<Self::Iter>> + Send + 'static;","parent":{"krate":0,"index":373},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":80275,"byte_end":80290,"line_start":254,"line_end":254,"column_start":12,"column_end":27},"name":"to_socket_addrs","qualname":"::net::addr::sealed::ToSocketAddrsPriv::to_socket_addrs","value":"pub fn to_socket_addrs(&Self) -> Self::Future","parent":{"krate":0,"index":373},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3331},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":80427,"byte_end":80432,"line_start":261,"line_end":261,"column_start":13,"column_end":18},"name":"Ready","qualname":"::net::addr::sealed::MaybeReady::Ready","value":"MaybeReady::Ready(Option<SocketAddr>)","parent":{"krate":0,"index":3330},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3334},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":80466,"byte_end":80474,"line_start":262,"line_end":262,"column_start":13,"column_end":21},"name":"Blocking","qualname":"::net::addr::sealed::MaybeReady::Blocking","value":"MaybeReady::Blocking(JoinHandle<io::Result<vec::IntoIter<SocketAddr>>>)","parent":{"krate":0,"index":3330},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3330},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":80402,"byte_end":80412,"line_start":260,"line_end":260,"column_start":18,"column_end":28},"name":"MaybeReady","qualname":"::net::addr::sealed::MaybeReady","value":"pub enum MaybeReady {\n    Ready(Option<SocketAddr>),\n    Blocking(JoinHandle<io::Result<vec::IntoIter<SocketAddr>>>),\n}","parent":null,"children":[{"krate":0,"index":3331},{"krate":0,"index":3334}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"dns\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":18785,"byte_end":18808,"line_start":105,"line_end":105,"column_start":13,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3340},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":80627,"byte_end":80630,"line_start":268,"line_end":268,"column_start":13,"column_end":16},"name":"One","qualname":"::net::addr::sealed::OneOrMore::One","value":"OneOrMore::One(option::IntoIter<SocketAddr>)","parent":{"krate":0,"index":3339},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3343},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":80674,"byte_end":80678,"line_start":269,"line_end":269,"column_start":13,"column_end":17},"name":"More","qualname":"::net::addr::sealed::OneOrMore::More","value":"OneOrMore::More(vec::IntoIter<SocketAddr>)","parent":{"krate":0,"index":3339},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3339},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":80603,"byte_end":80612,"line_start":267,"line_end":267,"column_start":18,"column_end":27},"name":"OneOrMore","qualname":"::net::addr::sealed::OneOrMore","value":"pub enum OneOrMore {\n    One(option::IntoIter<SocketAddr>),\n    More(vec::IntoIter<SocketAddr>),\n}","parent":null,"children":[{"krate":0,"index":3340},{"krate":0,"index":3343}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"dns\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":18785,"byte_end":18808,"line_start":105,"line_end":105,"column_start":13,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":3353},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/lookup_host.rs","byte_start":8865358,"byte_end":8865369,"line_start":32,"line_end":32,"column_start":18,"column_end":29},"name":"lookup_host","qualname":"::net::lookup_host::lookup_host","value":"pub async fn lookup_host<T>(T) -> /*impl Trait*/ where T: ToSocketAddrs","parent":null,"children":[],"decl_id":null,"docs":" Performs a DNS resolution.","sig":null,"attributes":[{"value":"cfg(feature = \"dns\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":18785,"byte_end":18808,"line_start":105,"line_end":105,"column_start":13,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":3358},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tcp","qualname":"::net::tcp","value":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/mod.rs","parent":null,"children":[{"krate":0,"index":3359},{"krate":0,"index":3410},{"krate":0,"index":3411},{"krate":0,"index":3426},{"krate":0,"index":3427},{"krate":0,"index":3461},{"krate":0,"index":3462},{"krate":0,"index":3463},{"krate":0,"index":3464},{"krate":0,"index":3512},{"krate":0,"index":3513},{"krate":0,"index":3514},{"krate":0,"index":3515},{"krate":0,"index":14137},{"krate":0,"index":3516},{"krate":0,"index":3620}],"decl_id":null,"docs":" TCP utility types\n","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":22609,"byte_end":22632,"line_start":298,"line_end":298,"column_start":13,"column_end":36}},{"value":"/ TCP utility types","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/mod.rs","byte_start":8865517,"byte_end":8865538,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":3623},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8868138,"byte_end":8868149,"line_start":69,"line_end":69,"column_start":16,"column_end":27},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":3624}],"decl_id":null,"docs":" A TCP socket server, listening for connections.","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":22609,"byte_end":22632,"line_start":298,"line_end":298,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3376},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8870118,"byte_end":8870122,"line_start":132,"line_end":132,"column_start":18,"column_end":22},"name":"bind","qualname":"<TcpListener>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TcpListener, which will be bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new TcpListener, which will be bound to the specified address.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8868232,"byte_end":8868308,"line_start":75,"line_end":75,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8868313,"byte_end":8868316,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ The returned listener is ready for accepting connections.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8868321,"byte_end":8868382,"line_start":77,"line_end":77,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8868387,"byte_end":8868390,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8868395,"byte_end":8868470,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ to this listener. The port allocated can be queried via the `local_addr`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8868475,"byte_end":8868551,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/ method.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8868556,"byte_end":8868567,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8868572,"byte_end":8868575,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ The address type can be any implementor of the [`ToSocketAddrs`] trait.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8868580,"byte_end":8868655,"line_start":83,"line_end":83,"column_start":5,"column_end":80}},{"value":"/ Note that strings only implement this trait when the **`dns`** feature","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8868660,"byte_end":8868734,"line_start":84,"line_end":84,"column_start":5,"column_end":79}},{"value":"/ is enabled, as strings may contain domain names that need to be resolved.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8868739,"byte_end":8868816,"line_start":85,"line_end":85,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8868821,"byte_end":8868824,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, bind will be attempted with each of","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8868829,"byte_end":8868905,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ the addresses until one succeeds and returns the listener. If none of","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8868910,"byte_end":8868983,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ the addresses succeed in creating a listener, the error returned from","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8868988,"byte_end":8869061,"line_start":89,"line_end":89,"column_start":5,"column_end":78}},{"value":"/ the last attempt (the last address) is returned.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8869066,"byte_end":8869118,"line_start":90,"line_end":90,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8869123,"byte_end":8869126,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ This function sets the `SO_REUSEADDR` option on the socket.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8869131,"byte_end":8869194,"line_start":92,"line_end":92,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8869199,"byte_end":8869202,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8869207,"byte_end":8869261,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8869266,"byte_end":8869269,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8869274,"byte_end":8869288,"line_start":96,"line_end":96,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8869293,"byte_end":8869296,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8869301,"byte_end":8869314,"line_start":98,"line_end":98,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8869319,"byte_end":8869351,"line_start":99,"line_end":99,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8869356,"byte_end":8869359,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8869364,"byte_end":8869380,"line_start":101,"line_end":101,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8869385,"byte_end":8869388,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8869393,"byte_end":8869411,"line_start":103,"line_end":103,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8869416,"byte_end":8869455,"line_start":104,"line_end":104,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:2345\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8869460,"byte_end":8869526,"line_start":105,"line_end":105,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8869531,"byte_end":8869534,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/     // use the listener","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8869539,"byte_end":8869566,"line_start":107,"line_end":107,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8869571,"byte_end":8869574,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/     # let _ = listener;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8869579,"byte_end":8869606,"line_start":109,"line_end":109,"column_start":5,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8869611,"byte_end":8869625,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8869630,"byte_end":8869635,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8869640,"byte_end":8869647,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8869652,"byte_end":8869655,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Without the `dns` feature:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8869660,"byte_end":8869690,"line_start":114,"line_end":114,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8869695,"byte_end":8869698,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8869703,"byte_end":8869716,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8869721,"byte_end":8869753,"line_start":117,"line_end":117,"column_start":5,"column_end":37}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8869758,"byte_end":8869785,"line_start":118,"line_end":118,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8869790,"byte_end":8869793,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8869798,"byte_end":8869814,"line_start":120,"line_end":120,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8869819,"byte_end":8869822,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8869827,"byte_end":8869845,"line_start":122,"line_end":122,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8869850,"byte_end":8869889,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind((Ipv4Addr::new(127, 0, 0, 1), 2345)).await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8869894,"byte_end":8869979,"line_start":124,"line_end":124,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8869984,"byte_end":8869987,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/     // use the listener","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8869992,"byte_end":8870019,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8870024,"byte_end":8870027,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/     # let _ = listener;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8870032,"byte_end":8870059,"line_start":128,"line_end":128,"column_start":5,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8870064,"byte_end":8870078,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8870083,"byte_end":8870088,"line_start":130,"line_end":130,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8870093,"byte_end":8870100,"line_start":131,"line_end":131,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3382},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8871694,"byte_end":8871700,"line_start":184,"line_end":184,"column_start":18,"column_end":24},"name":"accept","qualname":"<TcpListener>::accept","value":"pub async fn accept<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection from this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection from this listener.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8870835,"byte_end":8870892,"line_start":157,"line_end":157,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8870897,"byte_end":8870900,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ This function will yield once a new TCP connection is established. When","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8870905,"byte_end":8870980,"line_start":159,"line_end":159,"column_start":5,"column_end":80}},{"value":"/ established, the corresponding [`TcpStream`] and the remote peer's","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8870985,"byte_end":8871055,"line_start":160,"line_end":160,"column_start":5,"column_end":75}},{"value":"/ address will be returned.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8871060,"byte_end":8871089,"line_start":161,"line_end":161,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8871094,"byte_end":8871097,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8871102,"byte_end":8871149,"line_start":163,"line_end":163,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8871154,"byte_end":8871157,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8871162,"byte_end":8871176,"line_start":165,"line_end":165,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8871181,"byte_end":8871184,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8871189,"byte_end":8871202,"line_start":167,"line_end":167,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8871207,"byte_end":8871239,"line_start":168,"line_end":168,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8871244,"byte_end":8871247,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8871252,"byte_end":8871268,"line_start":170,"line_end":170,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8871273,"byte_end":8871276,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8871281,"byte_end":8871299,"line_start":172,"line_end":172,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8871304,"byte_end":8871343,"line_start":173,"line_end":173,"column_start":5,"column_end":44}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8871348,"byte_end":8871418,"line_start":174,"line_end":174,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8871423,"byte_end":8871426,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/     match listener.accept().await {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8871431,"byte_end":8871470,"line_start":176,"line_end":176,"column_start":5,"column_end":44}},{"value":"/         Ok((_socket, addr)) => println!(\"new client: {:?}\", addr),","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8871475,"byte_end":8871545,"line_start":177,"line_end":177,"column_start":5,"column_end":75}},{"value":"/         Err(e) => println!(\"couldn't get client: {:?}\", e),","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8871550,"byte_end":8871613,"line_start":178,"line_end":178,"column_start":5,"column_end":68}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8871618,"byte_end":8871627,"line_start":179,"line_end":179,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8871632,"byte_end":8871635,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8871640,"byte_end":8871654,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8871659,"byte_end":8871664,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8871669,"byte_end":8871676,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3386},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8872027,"byte_end":8872038,"line_start":192,"line_end":192,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<TcpListener>::poll_accept","value":"pub fn poll_accept(&mut Self, &mut Context)\n-> Poll<io::Result<(TcpStream, SocketAddr)>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to accept a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Polls to accept a new incoming connection to this listener.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8871813,"byte_end":8871876,"line_start":188,"line_end":188,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8871881,"byte_end":8871884,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ If there is no connection to accept, `Poll::Pending` is returned and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8871889,"byte_end":8871961,"line_start":190,"line_end":190,"column_start":5,"column_end":77}},{"value":"/ the current task will be notified by a waker.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8871966,"byte_end":8872015,"line_start":191,"line_end":191,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3388},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8874900,"byte_end":8874908,"line_start":266,"line_end":266,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpListener>::from_std","value":"pub fn from_std(net::TcpListener) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TCP listener from the standard library's TCP listener.","sig":null,"attributes":[{"value":"/ Creates a new TCP listener from the standard library's TCP listener.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8872885,"byte_end":8872957,"line_start":220,"line_end":220,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8872962,"byte_end":8872965,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ This method can be used when the `Handle::tcp_listen` method isn't","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8872970,"byte_end":8873040,"line_start":222,"line_end":222,"column_start":5,"column_end":75}},{"value":"/ sufficient because perhaps some more configuration is needed in terms of","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8873045,"byte_end":8873121,"line_start":223,"line_end":223,"column_start":5,"column_end":81}},{"value":"/ before the calls to `bind` and `listen`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8873126,"byte_end":8873170,"line_start":224,"line_end":224,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8873175,"byte_end":8873178,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ This API is typically paired with the `net2` crate and the `TcpBuilder`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8873183,"byte_end":8873258,"line_start":226,"line_end":226,"column_start":5,"column_end":80}},{"value":"/ type to build up and customize a listener before it's shipped off to the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8873263,"byte_end":8873339,"line_start":227,"line_end":227,"column_start":5,"column_end":81}},{"value":"/ backing event loop. This allows configuration of options like","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8873344,"byte_end":8873409,"line_start":228,"line_end":228,"column_start":5,"column_end":70}},{"value":"/ `SO_REUSEPORT`, binding to multiple addresses, etc.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8873414,"byte_end":8873469,"line_start":229,"line_end":229,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8873474,"byte_end":8873477,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ The `addr` argument here is one of the addresses that `listener` is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8873482,"byte_end":8873553,"line_start":231,"line_end":231,"column_start":5,"column_end":76}},{"value":"/ bound to and the listener will only be guaranteed to accept connections","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8873558,"byte_end":8873633,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/ of the same address type currently.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8873638,"byte_end":8873677,"line_start":233,"line_end":233,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8873682,"byte_end":8873685,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ The platform specific behavior of this function looks like:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8873690,"byte_end":8873753,"line_start":235,"line_end":235,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8873758,"byte_end":8873761,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ * On Unix, the socket is placed into nonblocking mode and connections","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8873766,"byte_end":8873839,"line_start":237,"line_end":237,"column_start":5,"column_end":78}},{"value":"/   can be accepted as normal","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8873844,"byte_end":8873875,"line_start":238,"line_end":238,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8873880,"byte_end":8873883,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ * On Windows, the address is stored internally and all future accepts","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8873888,"byte_end":8873961,"line_start":240,"line_end":240,"column_start":5,"column_end":78}},{"value":"/   will only be for the same IP version as `addr` specified. That is, if","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8873966,"byte_end":8874041,"line_start":241,"line_end":241,"column_start":5,"column_end":80}},{"value":"/   `addr` is an IPv4 address then all sockets accepted will be IPv4 as","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8874046,"byte_end":8874119,"line_start":242,"line_end":242,"column_start":5,"column_end":78}},{"value":"/   well (same for IPv6).","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8874124,"byte_end":8874151,"line_start":243,"line_end":243,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8874156,"byte_end":8874159,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8874164,"byte_end":8874178,"line_start":245,"line_end":245,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8874183,"byte_end":8874186,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8874191,"byte_end":8874209,"line_start":247,"line_end":247,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8874214,"byte_end":8874240,"line_start":248,"line_end":248,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8874245,"byte_end":8874277,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8874282,"byte_end":8874285,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8874290,"byte_end":8874308,"line_start":251,"line_end":251,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8874313,"byte_end":8874364,"line_start":252,"line_end":252,"column_start":5,"column_end":56}},{"value":"/     let std_listener = std::net::TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8874369,"byte_end":8874440,"line_start":253,"line_end":253,"column_start":5,"column_end":76}},{"value":"/     let listener = TcpListener::from_std(std_listener)?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8874445,"byte_end":8874505,"line_start":254,"line_end":254,"column_start":5,"column_end":65}},{"value":"/     Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8874510,"byte_end":8874524,"line_start":255,"line_end":255,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8874529,"byte_end":8874534,"line_start":256,"line_end":256,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8874539,"byte_end":8874546,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8874551,"byte_end":8874554,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8874559,"byte_end":8874571,"line_start":259,"line_end":259,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8874576,"byte_end":8874579,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8874584,"byte_end":8874644,"line_start":261,"line_end":261,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8874649,"byte_end":8874652,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8874657,"byte_end":8874727,"line_start":263,"line_end":263,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8874732,"byte_end":8874805,"line_start":264,"line_end":264,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8874810,"byte_end":8874888,"line_start":265,"line_end":265,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3390},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8875992,"byte_end":8876002,"line_start":300,"line_end":300,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8875266,"byte_end":8875327,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8875332,"byte_end":8875335,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when binding to port 0 to figure out","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8875340,"byte_end":8875413,"line_start":279,"line_end":279,"column_start":5,"column_end":78}},{"value":"/ which port was actually bound.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8875418,"byte_end":8875452,"line_start":280,"line_end":280,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8875457,"byte_end":8875460,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8875465,"byte_end":8875479,"line_start":282,"line_end":282,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8875484,"byte_end":8875487,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8875492,"byte_end":8875510,"line_start":284,"line_end":284,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8875515,"byte_end":8875547,"line_start":285,"line_end":285,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8875552,"byte_end":8875555,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8875560,"byte_end":8875576,"line_start":287,"line_end":287,"column_start":5,"column_end":21}},{"value":"/ use std::net::{Ipv4Addr, SocketAddr, SocketAddrV4};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8875581,"byte_end":8875636,"line_start":288,"line_end":288,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8875641,"byte_end":8875644,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8875649,"byte_end":8875667,"line_start":290,"line_end":290,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8875672,"byte_end":8875711,"line_start":291,"line_end":291,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8875716,"byte_end":8875782,"line_start":292,"line_end":292,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8875787,"byte_end":8875790,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(listener.local_addr()?,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8875795,"byte_end":8875837,"line_start":294,"line_end":294,"column_start":5,"column_end":47}},{"value":"/                SocketAddr::V4(SocketAddrV4::new(Ipv4Addr::new(127, 0, 0, 1), 8080)));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8875842,"byte_end":8875931,"line_start":295,"line_end":295,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8875936,"byte_end":8875939,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8875944,"byte_end":8875958,"line_start":297,"line_end":297,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8875963,"byte_end":8875968,"line_start":298,"line_end":298,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8875973,"byte_end":8875980,"line_start":299,"line_end":299,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3391},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8877433,"byte_end":8877441,"line_start":340,"line_end":340,"column_start":12,"column_end":20},"name":"incoming","qualname":"<TcpListener>::incoming","value":"pub fn incoming(&mut Self) -> Incoming","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the connections being received on this listener.","sig":null,"attributes":[{"value":"/ Returns a stream over the connections being received on this listener.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8876088,"byte_end":8876162,"line_start":304,"line_end":304,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8876167,"byte_end":8876170,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ Note that `TcpListener` also directly implements `Stream`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8876175,"byte_end":8876237,"line_start":306,"line_end":306,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8876242,"byte_end":8876245,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ The returned stream will never return `None` and will also not yield the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8876250,"byte_end":8876326,"line_start":308,"line_end":308,"column_start":5,"column_end":81}},{"value":"/ peer's `SocketAddr` structure. Iterating over it is equivalent to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8876331,"byte_end":8876400,"line_start":309,"line_end":309,"column_start":5,"column_end":74}},{"value":"/ calling accept in a loop.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8876405,"byte_end":8876434,"line_start":310,"line_end":310,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8876439,"byte_end":8876442,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8876447,"byte_end":8876459,"line_start":312,"line_end":312,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8876464,"byte_end":8876467,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ Note that accepting a connection can lead to various errors and not all","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8876472,"byte_end":8876547,"line_start":314,"line_end":314,"column_start":5,"column_end":80}},{"value":"/ of them are necessarily fatal ‒ for example having too many open file","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8876552,"byte_end":8876627,"line_start":315,"line_end":315,"column_start":5,"column_end":78}},{"value":"/ descriptors or the other side closing the connection while it waits in","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8876632,"byte_end":8876706,"line_start":316,"line_end":316,"column_start":5,"column_end":79}},{"value":"/ an accept queue. These would terminate the stream if not handled in any","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8876711,"byte_end":8876786,"line_start":317,"line_end":317,"column_start":5,"column_end":80}},{"value":"/ way.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8876791,"byte_end":8876799,"line_start":318,"line_end":318,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8876804,"byte_end":8876807,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8876812,"byte_end":8876826,"line_start":320,"line_end":320,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8876831,"byte_end":8876834,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8876839,"byte_end":8876852,"line_start":322,"line_end":322,"column_start":5,"column_end":18}},{"value":"/ use tokio::{net::TcpListener, stream::StreamExt};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8876857,"byte_end":8876910,"line_start":323,"line_end":323,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8876915,"byte_end":8876918,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8876923,"byte_end":8876941,"line_start":325,"line_end":325,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8876946,"byte_end":8876967,"line_start":326,"line_end":326,"column_start":5,"column_end":26}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await.unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8876972,"byte_end":8877050,"line_start":327,"line_end":327,"column_start":5,"column_end":83}},{"value":"/     let mut incoming = listener.incoming();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8877055,"byte_end":8877102,"line_start":328,"line_end":328,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8877107,"byte_end":8877110,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/     while let Some(stream) = incoming.next().await {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8877115,"byte_end":8877171,"line_start":330,"line_end":330,"column_start":5,"column_end":61}},{"value":"/         match stream {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8877176,"byte_end":8877202,"line_start":331,"line_end":331,"column_start":5,"column_end":31}},{"value":"/             Ok(stream) => {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8877207,"byte_end":8877238,"line_start":332,"line_end":332,"column_start":5,"column_end":36}},{"value":"/                 println!(\"new client!\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8877243,"byte_end":8877287,"line_start":333,"line_end":333,"column_start":5,"column_end":49}},{"value":"/             }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8877292,"byte_end":8877309,"line_start":334,"line_end":334,"column_start":5,"column_end":22}},{"value":"/             Err(e) => { /* connection failed */ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8877314,"byte_end":8877367,"line_start":335,"line_end":335,"column_start":5,"column_end":58}},{"value":"/         }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8877372,"byte_end":8877385,"line_start":336,"line_end":336,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8877390,"byte_end":8877399,"line_start":337,"line_end":337,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8877404,"byte_end":8877409,"line_start":338,"line_end":338,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8877414,"byte_end":8877421,"line_start":339,"line_end":339,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3392},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8878127,"byte_end":8878130,"line_start":367,"line_end":367,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpListener>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8877510,"byte_end":8877568,"line_start":344,"line_end":344,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8877573,"byte_end":8877576,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8877581,"byte_end":8877641,"line_start":346,"line_end":346,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8877646,"byte_end":8877649,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: method@Self::set_ttl","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8877654,"byte_end":8877691,"line_start":348,"line_end":348,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8877696,"byte_end":8877699,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8877704,"byte_end":8877718,"line_start":350,"line_end":350,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8877723,"byte_end":8877726,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8877731,"byte_end":8877744,"line_start":352,"line_end":352,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8877749,"byte_end":8877781,"line_start":353,"line_end":353,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8877786,"byte_end":8877789,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8877794,"byte_end":8877810,"line_start":355,"line_end":355,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8877815,"byte_end":8877818,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8877823,"byte_end":8877841,"line_start":357,"line_end":357,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8877846,"byte_end":8877885,"line_start":358,"line_end":358,"column_start":5,"column_end":44}},{"value":"/    let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8877890,"byte_end":8877952,"line_start":359,"line_end":359,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8877957,"byte_end":8877960,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/    listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8877965,"byte_end":8878022,"line_start":361,"line_end":361,"column_start":5,"column_end":62}},{"value":"/    assert_eq!(listener.ttl()?, 100);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8878027,"byte_end":8878067,"line_start":362,"line_end":362,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8878072,"byte_end":8878075,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/    Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8878080,"byte_end":8878093,"line_start":364,"line_end":364,"column_start":5,"column_end":18}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8878098,"byte_end":8878103,"line_start":365,"line_end":365,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8878108,"byte_end":8878115,"line_start":366,"line_end":366,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3393},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8878769,"byte_end":8878776,"line_start":392,"line_end":392,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpListener>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8878202,"byte_end":8878260,"line_start":371,"line_end":371,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8878265,"byte_end":8878268,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8878273,"byte_end":8878349,"line_start":373,"line_end":373,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8878354,"byte_end":8878375,"line_start":374,"line_end":374,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8878380,"byte_end":8878383,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8878388,"byte_end":8878402,"line_start":376,"line_end":376,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8878407,"byte_end":8878410,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8878415,"byte_end":8878428,"line_start":378,"line_end":378,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8878433,"byte_end":8878465,"line_start":379,"line_end":379,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8878470,"byte_end":8878473,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8878478,"byte_end":8878494,"line_start":381,"line_end":381,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8878499,"byte_end":8878502,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8878507,"byte_end":8878525,"line_start":383,"line_end":383,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8878530,"byte_end":8878569,"line_start":384,"line_end":384,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8878574,"byte_end":8878637,"line_start":385,"line_end":385,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8878642,"byte_end":8878645,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/     listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8878650,"byte_end":8878708,"line_start":387,"line_end":387,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8878713,"byte_end":8878716,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8878721,"byte_end":8878735,"line_start":389,"line_end":389,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8878740,"byte_end":8878745,"line_start":390,"line_end":390,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8878750,"byte_end":8878757,"line_start":391,"line_end":391,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3625},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/incoming.rs","byte_start":8881049,"byte_end":8881057,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::net::tcp::incoming::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":3627}],"decl_id":null,"docs":" Stream returned by the `TcpListener::incoming` function representing the\n stream of sockets received from a listener.\n","sig":null,"attributes":[{"value":"/ Stream returned by the `TcpListener::incoming` function representing the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/incoming.rs","byte_start":8880847,"byte_end":8880923,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ stream of sockets received from a listener.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/incoming.rs","byte_start":8880924,"byte_end":8880971,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/incoming.rs","byte_start":8880972,"byte_end":8881020,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3422},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/incoming.rs","byte_start":8881472,"byte_end":8881483,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<Incoming>::poll_accept","value":"pub fn poll_accept(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<TcpStream>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to poll `TcpStream` by polling inner `TcpListener` to accept\n connection.","sig":null,"attributes":[{"value":"/ Attempts to poll `TcpStream` by polling inner `TcpListener` to accept","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/incoming.rs","byte_start":8881235,"byte_end":8881308,"line_start":20,"line_end":20,"column_start":5,"column_end":78}},{"value":"/ connection.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/incoming.rs","byte_start":8881313,"byte_end":8881328,"line_start":21,"line_end":21,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/incoming.rs","byte_start":8881333,"byte_end":8881336,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ If `TcpListener` isn't ready yet, `Poll::Pending` is returned and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/incoming.rs","byte_start":8881341,"byte_end":8881410,"line_start":23,"line_end":23,"column_start":5,"column_end":74}},{"value":"/ current task will be notified by a waker.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/incoming.rs","byte_start":8881415,"byte_end":8881460,"line_start":24,"line_end":24,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":3631},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8883051,"byte_end":8883059,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::net::tcp::split::ReadHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed read half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed read half of a [`TcpStream`], created by [`split`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8882634,"byte_end":8882698,"line_start":22,"line_end":22,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8882699,"byte_end":8882702,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Reading from a `ReadHalf` is usually done using the convenience methods found on the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8882703,"byte_end":8882791,"line_start":24,"line_end":24,"column_start":1,"column_end":89}},{"value":"/ [`AsyncReadExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8882792,"byte_end":8882869,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8882870,"byte_end":8882873,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8882874,"byte_end":8882902,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8882903,"byte_end":8882936,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8882937,"byte_end":8882988,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8882989,"byte_end":8883022,"line_start":30,"line_end":30,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3638},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8883757,"byte_end":8883766,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::net::tcp::split::WriteHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed write half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed write half of a [`TcpStream`], created by [`split`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8883081,"byte_end":8883146,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8883147,"byte_end":8883150,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implemenation of this type, [`poll_shutdown`] will","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8883151,"byte_end":8883237,"line_start":36,"line_end":36,"column_start":1,"column_end":87}},{"value":"/ shut down the TCP stream in the write direction.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8883238,"byte_end":8883290,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8883291,"byte_end":8883294,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Writing to an `WriteHalf` is usually done using the convenience methods found","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8883295,"byte_end":8883376,"line_start":39,"line_end":39,"column_start":1,"column_end":82}},{"value":"/ on the [`AsyncWriteExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8883377,"byte_end":8883462,"line_start":40,"line_end":40,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8883463,"byte_end":8883466,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8883467,"byte_end":8883495,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8883496,"byte_end":8883529,"line_start":43,"line_end":43,"column_start":1,"column_end":34}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8883530,"byte_end":8883577,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8883578,"byte_end":8883640,"line_start":45,"line_end":45,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8883641,"byte_end":8883694,"line_start":46,"line_end":46,"column_start":1,"column_end":54}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8883695,"byte_end":8883728,"line_start":47,"line_end":47,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3443},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8884823,"byte_end":8884832,"line_start":85,"line_end":85,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<ReadHalf>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8883940,"byte_end":8884014,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8884019,"byte_end":8884092,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8884097,"byte_end":8884111,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8884116,"byte_end":8884119,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8884124,"byte_end":8884197,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8884202,"byte_end":8884205,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8884210,"byte_end":8884224,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8884229,"byte_end":8884232,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8884237,"byte_end":8884250,"line_start":64,"line_end":64,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8884255,"byte_end":8884273,"line_start":65,"line_end":65,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8884278,"byte_end":8884308,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8884313,"byte_end":8884316,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8884321,"byte_end":8884354,"line_start":68,"line_end":68,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8884359,"byte_end":8884362,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8884367,"byte_end":8884385,"line_start":70,"line_end":70,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8884390,"byte_end":8884429,"line_start":71,"line_end":71,"column_start":5,"column_end":44}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8884434,"byte_end":8884503,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8884508,"byte_end":8884556,"line_start":73,"line_end":73,"column_start":5,"column_end":53}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8884561,"byte_end":8884591,"line_start":74,"line_end":74,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8884596,"byte_end":8884599,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8884604,"byte_end":8884626,"line_start":76,"line_end":76,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8884631,"byte_end":8884676,"line_start":77,"line_end":77,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8884681,"byte_end":8884699,"line_start":78,"line_end":78,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8884704,"byte_end":8884707,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8884712,"byte_end":8884726,"line_start":80,"line_end":80,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8884731,"byte_end":8884736,"line_start":81,"line_end":81,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8884741,"byte_end":8884748,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8884753,"byte_end":8884756,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8884761,"byte_end":8884811,"line_start":84,"line_end":84,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3444},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8886249,"byte_end":8886253,"line_start":128,"line_end":128,"column_start":18,"column_end":22},"name":"peek","qualname":"<ReadHalf>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8884957,"byte_end":8885027,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8885032,"byte_end":8885101,"line_start":90,"line_end":90,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8885106,"byte_end":8885145,"line_start":91,"line_end":91,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8885150,"byte_end":8885153,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8885158,"byte_end":8885226,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8885231,"byte_end":8885234,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8885239,"byte_end":8885279,"line_start":95,"line_end":95,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8885284,"byte_end":8885287,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8885292,"byte_end":8885306,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8885311,"byte_end":8885314,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8885319,"byte_end":8885332,"line_start":99,"line_end":99,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8885337,"byte_end":8885367,"line_start":100,"line_end":100,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8885372,"byte_end":8885398,"line_start":101,"line_end":101,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8885403,"byte_end":8885429,"line_start":102,"line_end":102,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8885434,"byte_end":8885437,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8885442,"byte_end":8885460,"line_start":104,"line_end":104,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8885465,"byte_end":8885516,"line_start":105,"line_end":105,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8885521,"byte_end":8885549,"line_start":106,"line_end":106,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8885554,"byte_end":8885623,"line_start":107,"line_end":107,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8885628,"byte_end":8885676,"line_start":108,"line_end":108,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8885681,"byte_end":8885684,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8885689,"byte_end":8885718,"line_start":110,"line_end":110,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8885723,"byte_end":8885752,"line_start":111,"line_end":111,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8885757,"byte_end":8885760,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8885765,"byte_end":8885792,"line_start":113,"line_end":113,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8885797,"byte_end":8885844,"line_start":114,"line_end":114,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8885849,"byte_end":8885852,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8885857,"byte_end":8885881,"line_start":116,"line_end":116,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8885886,"byte_end":8885945,"line_start":117,"line_end":117,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8885950,"byte_end":8885989,"line_start":118,"line_end":118,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8885994,"byte_end":8885997,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8886002,"byte_end":8886016,"line_start":120,"line_end":120,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8886021,"byte_end":8886026,"line_start":121,"line_end":121,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8886031,"byte_end":8886038,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8886043,"byte_end":8886046,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8886051,"byte_end":8886116,"line_start":124,"line_end":124,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8886121,"byte_end":8886124,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8886129,"byte_end":8886175,"line_start":126,"line_end":126,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8886180,"byte_end":8886231,"line_start":127,"line_end":127,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":3645},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8888855,"byte_end":8888868,"line_start":34,"line_end":34,"column_start":12,"column_end":25},"name":"OwnedReadHalf","qualname":"::net::tcp::split_owned::OwnedReadHalf","value":"OwnedReadHalf {  }","parent":null,"children":[{"krate":0,"index":3646}],"decl_id":null,"docs":" Owned read half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned read half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8888420,"byte_end":8888486,"line_start":24,"line_end":24,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8888487,"byte_end":8888490,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Reading from an `OwnedReadHalf` is usually done using the convenience methods found","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8888491,"byte_end":8888578,"line_start":26,"line_end":26,"column_start":1,"column_end":88}},{"value":"/ on the [`AsyncReadExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8888579,"byte_end":8888663,"line_start":27,"line_end":27,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8888664,"byte_end":8888667,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8888668,"byte_end":8888696,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8888697,"byte_end":8888740,"line_start":30,"line_end":30,"column_start":1,"column_end":44}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8888741,"byte_end":8888792,"line_start":31,"line_end":31,"column_start":1,"column_end":52}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8888793,"byte_end":8888826,"line_start":32,"line_end":32,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3649},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8889678,"byte_end":8889692,"line_start":54,"line_end":54,"column_start":12,"column_end":26},"name":"OwnedWriteHalf","qualname":"::net::tcp::split_owned::OwnedWriteHalf","value":"OwnedWriteHalf {  }","parent":null,"children":[{"krate":0,"index":3650},{"krate":0,"index":3651}],"decl_id":null,"docs":" Owned write half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned write half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8888901,"byte_end":8888968,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8888969,"byte_end":8888972,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implementation of this type, [`poll_shutdown`] will","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8888973,"byte_end":8889060,"line_start":40,"line_end":40,"column_start":1,"column_end":88}},{"value":"/ shut down the TCP stream in the write direction.  Dropping the write half","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8889061,"byte_end":8889138,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/ will also shut down the write half of the TCP stream.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8889139,"byte_end":8889196,"line_start":42,"line_end":42,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8889197,"byte_end":8889200,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Writing to an `OwnedWriteHalf` is usually done using the convenience methods found","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8889201,"byte_end":8889287,"line_start":44,"line_end":44,"column_start":1,"column_end":87}},{"value":"/ on the [`AsyncWriteExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8889288,"byte_end":8889373,"line_start":45,"line_end":45,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8889374,"byte_end":8889377,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8889378,"byte_end":8889406,"line_start":47,"line_end":47,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8889407,"byte_end":8889450,"line_start":48,"line_end":48,"column_start":1,"column_end":44}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8889451,"byte_end":8889498,"line_start":49,"line_end":49,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8889499,"byte_end":8889561,"line_start":50,"line_end":50,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8889562,"byte_end":8889615,"line_start":51,"line_end":51,"column_start":1,"column_end":54}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8889616,"byte_end":8889649,"line_start":52,"line_end":52,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3654},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8890657,"byte_end":8890669,"line_start":88,"line_end":88,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::tcp::split_owned::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating that two halves were not from the same socket, and thus could\n not be reunited.\n","sig":null,"attributes":[{"value":"/ Error indicating that two halves were not from the same socket, and thus could","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8890525,"byte_end":8890607,"line_start":85,"line_end":85,"column_start":1,"column_end":83}},{"value":"/ not be reunited.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8890608,"byte_end":8890628,"line_start":86,"line_end":86,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":3656},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8890670,"byte_end":8890687,"line_start":88,"line_end":88,"column_start":25,"column_end":42},"name":"0","qualname":"::net::tcp::split_owned::ReuniteError::0","value":"net::tcp::split_owned::OwnedReadHalf","parent":{"krate":0,"index":3654},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3657},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8890689,"byte_end":8890707,"line_start":88,"line_end":88,"column_start":44,"column_end":62},"name":"1","qualname":"::net::tcp::split_owned::ReuniteError::1","value":"net::tcp::split_owned::OwnedWriteHalf","parent":{"krate":0,"index":3654},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3488},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8891253,"byte_end":8891260,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedReadHalf>::reunite","value":"pub fn reunite(Self, OwnedWriteHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8890990,"byte_end":8891059,"line_start":102,"line_end":102,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8891064,"byte_end":8891128,"line_start":103,"line_end":103,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8891133,"byte_end":8891185,"line_start":104,"line_end":104,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8891190,"byte_end":8891193,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8891198,"byte_end":8891241,"line_start":106,"line_end":106,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3489},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8892251,"byte_end":8892260,"line_start":140,"line_end":140,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<OwnedReadHalf>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8891367,"byte_end":8891441,"line_start":111,"line_end":111,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8891446,"byte_end":8891519,"line_start":112,"line_end":112,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8891524,"byte_end":8891538,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8891543,"byte_end":8891546,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8891551,"byte_end":8891624,"line_start":115,"line_end":115,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8891629,"byte_end":8891632,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8891637,"byte_end":8891651,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8891656,"byte_end":8891659,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8891664,"byte_end":8891677,"line_start":119,"line_end":119,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8891682,"byte_end":8891700,"line_start":120,"line_end":120,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8891705,"byte_end":8891735,"line_start":121,"line_end":121,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8891740,"byte_end":8891743,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8891748,"byte_end":8891781,"line_start":123,"line_end":123,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8891786,"byte_end":8891789,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8891794,"byte_end":8891812,"line_start":125,"line_end":125,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8891817,"byte_end":8891856,"line_start":126,"line_end":126,"column_start":5,"column_end":44}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8891861,"byte_end":8891926,"line_start":127,"line_end":127,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8891931,"byte_end":8891984,"line_start":128,"line_end":128,"column_start":5,"column_end":58}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8891989,"byte_end":8892019,"line_start":129,"line_end":129,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8892024,"byte_end":8892027,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8892032,"byte_end":8892054,"line_start":131,"line_end":131,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8892059,"byte_end":8892104,"line_start":132,"line_end":132,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8892109,"byte_end":8892127,"line_start":133,"line_end":133,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8892132,"byte_end":8892135,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8892140,"byte_end":8892154,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8892159,"byte_end":8892164,"line_start":136,"line_end":136,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8892169,"byte_end":8892176,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8892181,"byte_end":8892184,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8892189,"byte_end":8892239,"line_start":139,"line_end":139,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3490},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8893682,"byte_end":8893686,"line_start":183,"line_end":183,"column_start":18,"column_end":22},"name":"peek","qualname":"<OwnedReadHalf>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8892389,"byte_end":8892459,"line_start":144,"line_end":144,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8892464,"byte_end":8892533,"line_start":145,"line_end":145,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8892538,"byte_end":8892577,"line_start":146,"line_end":146,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8892582,"byte_end":8892585,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8892590,"byte_end":8892658,"line_start":148,"line_end":148,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8892663,"byte_end":8892666,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8892671,"byte_end":8892711,"line_start":150,"line_end":150,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8892716,"byte_end":8892719,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8892724,"byte_end":8892738,"line_start":152,"line_end":152,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8892743,"byte_end":8892746,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8892751,"byte_end":8892764,"line_start":154,"line_end":154,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8892769,"byte_end":8892799,"line_start":155,"line_end":155,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8892804,"byte_end":8892830,"line_start":156,"line_end":156,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8892835,"byte_end":8892861,"line_start":157,"line_end":157,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8892866,"byte_end":8892869,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8892874,"byte_end":8892892,"line_start":159,"line_end":159,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8892897,"byte_end":8892948,"line_start":160,"line_end":160,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8892953,"byte_end":8892981,"line_start":161,"line_end":161,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8892986,"byte_end":8893051,"line_start":162,"line_end":162,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8893056,"byte_end":8893109,"line_start":163,"line_end":163,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8893114,"byte_end":8893117,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8893122,"byte_end":8893151,"line_start":165,"line_end":165,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8893156,"byte_end":8893185,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8893190,"byte_end":8893193,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8893198,"byte_end":8893225,"line_start":168,"line_end":168,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8893230,"byte_end":8893277,"line_start":169,"line_end":169,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8893282,"byte_end":8893285,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8893290,"byte_end":8893314,"line_start":171,"line_end":171,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8893319,"byte_end":8893378,"line_start":172,"line_end":172,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8893383,"byte_end":8893422,"line_start":173,"line_end":173,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8893427,"byte_end":8893430,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8893435,"byte_end":8893449,"line_start":175,"line_end":175,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8893454,"byte_end":8893459,"line_start":176,"line_end":176,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8893464,"byte_end":8893471,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8893476,"byte_end":8893479,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8893484,"byte_end":8893549,"line_start":179,"line_end":179,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8893554,"byte_end":8893557,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8893562,"byte_end":8893608,"line_start":181,"line_end":181,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8893613,"byte_end":8893664,"line_start":182,"line_end":182,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3498},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8894419,"byte_end":8894426,"line_start":208,"line_end":208,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedWriteHalf>::reunite","value":"pub fn reunite(Self, OwnedReadHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8894156,"byte_end":8894225,"line_start":203,"line_end":203,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8894230,"byte_end":8894294,"line_start":204,"line_end":204,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8894299,"byte_end":8894351,"line_start":205,"line_end":205,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8894356,"byte_end":8894359,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8894364,"byte_end":8894407,"line_start":207,"line_end":207,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3499},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8894731,"byte_end":8894737,"line_start":215,"line_end":215,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedWriteHalf>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Destroy the write half, but don't close the write half of the stream\n until the read half is dropped. If the read half has already been\n dropped, this closes the stream.\n","sig":null,"attributes":[{"value":"/ Destroy the write half, but don't close the write half of the stream","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8894532,"byte_end":8894604,"line_start":212,"line_end":212,"column_start":5,"column_end":77}},{"value":"/ until the read half is dropped. If the read half has already been","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8894609,"byte_end":8894678,"line_start":213,"line_end":213,"column_start":5,"column_end":74}},{"value":"/ dropped, this closes the stream.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8894683,"byte_end":8894719,"line_start":214,"line_end":214,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":3660},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8898145,"byte_end":8898154,"line_start":58,"line_end":58,"column_start":16,"column_end":25},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":3661}],"decl_id":null,"docs":" A TCP stream between a local and a remote socket.","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":22609,"byte_end":22632,"line_start":298,"line_end":298,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3550},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8900235,"byte_end":8900242,"line_start":121,"line_end":121,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpStream>::connect","value":"pub async fn connect<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a TCP connection to a remote host.","sig":null,"attributes":[{"value":"/ Opens a TCP connection to a remote host.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8898233,"byte_end":8898277,"line_start":64,"line_end":64,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8898282,"byte_end":8898285,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ `addr` is an address of the remote host. Anything which implements the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8898290,"byte_end":8898364,"line_start":66,"line_end":66,"column_start":5,"column_end":79}},{"value":"/ [`ToSocketAddrs`] trait can be supplied as the address. Note that","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8898369,"byte_end":8898438,"line_start":67,"line_end":67,"column_start":5,"column_end":74}},{"value":"/ strings only implement this trait when the **`dns`** feature is enabled,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8898443,"byte_end":8898519,"line_start":68,"line_end":68,"column_start":5,"column_end":81}},{"value":"/ as strings may contain domain names that need to be resolved.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8898524,"byte_end":8898589,"line_start":69,"line_end":69,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8898594,"byte_end":8898597,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, connect will be attempted with each","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8898602,"byte_end":8898678,"line_start":71,"line_end":71,"column_start":5,"column_end":81}},{"value":"/ of the addresses until a connection is successful. If none of the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8898683,"byte_end":8898752,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"/ addresses result in a successful connection, the error returned from the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8898757,"byte_end":8898833,"line_start":73,"line_end":73,"column_start":5,"column_end":81}},{"value":"/ last connection attempt (the last address) is returned.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8898838,"byte_end":8898897,"line_start":74,"line_end":74,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8898902,"byte_end":8898905,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8898910,"byte_end":8898964,"line_start":76,"line_end":76,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8898969,"byte_end":8898972,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8898977,"byte_end":8898991,"line_start":78,"line_end":78,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8898996,"byte_end":8898999,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8899004,"byte_end":8899017,"line_start":80,"line_end":80,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8899022,"byte_end":8899052,"line_start":81,"line_end":81,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8899057,"byte_end":8899083,"line_start":82,"line_end":82,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8899088,"byte_end":8899114,"line_start":83,"line_end":83,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8899119,"byte_end":8899122,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8899127,"byte_end":8899145,"line_start":85,"line_end":85,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8899150,"byte_end":8899201,"line_start":86,"line_end":86,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8899206,"byte_end":8899234,"line_start":87,"line_end":87,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8899239,"byte_end":8899308,"line_start":88,"line_end":88,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8899313,"byte_end":8899316,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/     // Write some data.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8899321,"byte_end":8899348,"line_start":90,"line_end":90,"column_start":5,"column_end":32}},{"value":"/     stream.write_all(b\"hello world!\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8899353,"byte_end":8899402,"line_start":91,"line_end":91,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8899407,"byte_end":8899410,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8899415,"byte_end":8899429,"line_start":93,"line_end":93,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8899434,"byte_end":8899439,"line_start":94,"line_end":94,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8899444,"byte_end":8899451,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8899456,"byte_end":8899459,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ Without the `dns` feature:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8899464,"byte_end":8899494,"line_start":97,"line_end":97,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8899499,"byte_end":8899502,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8899507,"byte_end":8899520,"line_start":99,"line_end":99,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8899525,"byte_end":8899555,"line_start":100,"line_end":100,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8899560,"byte_end":8899586,"line_start":101,"line_end":101,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8899591,"byte_end":8899617,"line_start":102,"line_end":102,"column_start":5,"column_end":31}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8899622,"byte_end":8899649,"line_start":103,"line_end":103,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8899654,"byte_end":8899657,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8899662,"byte_end":8899680,"line_start":105,"line_end":105,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8899685,"byte_end":8899736,"line_start":106,"line_end":106,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8899741,"byte_end":8899769,"line_start":107,"line_end":107,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect((Ipv4Addr::new(127, 0, 0, 1), 8080)).await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8899774,"byte_end":8899862,"line_start":108,"line_end":108,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8899867,"byte_end":8899870,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/     // Write some data.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8899875,"byte_end":8899902,"line_start":110,"line_end":110,"column_start":5,"column_end":32}},{"value":"/     stream.write_all(b\"hello world!\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8899907,"byte_end":8899956,"line_start":111,"line_end":111,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8899961,"byte_end":8899964,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8899969,"byte_end":8899983,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8899988,"byte_end":8899993,"line_start":114,"line_end":114,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8899998,"byte_end":8900005,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8900010,"byte_end":8900013,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8900018,"byte_end":8900089,"line_start":117,"line_end":117,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8900094,"byte_end":8900097,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8900102,"byte_end":8900159,"line_start":119,"line_end":119,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8900164,"byte_end":8900217,"line_start":120,"line_end":120,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3560},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8902675,"byte_end":8902683,"line_start":192,"line_end":192,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpStream>::from_std","value":"pub fn from_std(net::TcpStream) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `TcpStream` from a `std::net::TcpStream`.","sig":null,"attributes":[{"value":"/ Creates new `TcpStream` from a `std::net::TcpStream`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8901708,"byte_end":8901765,"line_start":166,"line_end":166,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8901770,"byte_end":8901773,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ This function will convert a TCP stream created by the standard library","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8901778,"byte_end":8901853,"line_start":168,"line_end":168,"column_start":5,"column_end":80}},{"value":"/ to a TCP stream ready to be used with the provided event loop handle.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8901858,"byte_end":8901931,"line_start":169,"line_end":169,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8901936,"byte_end":8901939,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8901944,"byte_end":8901958,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8901963,"byte_end":8901966,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8901971,"byte_end":8901989,"line_start":173,"line_end":173,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8901994,"byte_end":8902020,"line_start":174,"line_end":174,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8902025,"byte_end":8902055,"line_start":175,"line_end":175,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8902060,"byte_end":8902063,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8902068,"byte_end":8902086,"line_start":177,"line_end":177,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8902091,"byte_end":8902142,"line_start":178,"line_end":178,"column_start":5,"column_end":56}},{"value":"/     let std_stream = std::net::TcpStream::connect(\"127.0.0.1:34254\")?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8902147,"byte_end":8902221,"line_start":179,"line_end":179,"column_start":5,"column_end":79}},{"value":"/     let stream = TcpStream::from_std(std_stream)?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8902226,"byte_end":8902280,"line_start":180,"line_end":180,"column_start":5,"column_end":59}},{"value":"/     Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8902285,"byte_end":8902299,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8902304,"byte_end":8902309,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8902314,"byte_end":8902321,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8902326,"byte_end":8902329,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8902334,"byte_end":8902346,"line_start":185,"line_end":185,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8902351,"byte_end":8902354,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8902359,"byte_end":8902419,"line_start":187,"line_end":187,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8902424,"byte_end":8902427,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8902432,"byte_end":8902502,"line_start":189,"line_end":189,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8902507,"byte_end":8902580,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8902585,"byte_end":8902663,"line_start":191,"line_end":191,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3561},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8903080,"byte_end":8903091,"line_start":202,"line_end":202,"column_start":18,"column_end":29},"name":"connect_std","qualname":"<TcpStream>::connect_std","value":"pub async fn connect_std<'_>(net::TcpStream, &'_ SocketAddr) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3565},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8904239,"byte_end":8904249,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this stream is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this stream is bound to.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8903840,"byte_end":8903899,"line_start":222,"line_end":222,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8903904,"byte_end":8903907,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8903912,"byte_end":8903926,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8903931,"byte_end":8903934,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8903939,"byte_end":8903952,"line_start":226,"line_end":226,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8903957,"byte_end":8903987,"line_start":227,"line_end":227,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8903992,"byte_end":8903995,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8904000,"byte_end":8904064,"line_start":229,"line_end":229,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8904069,"byte_end":8904130,"line_start":230,"line_end":230,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8904135,"byte_end":8904138,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.local_addr()?);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8904143,"byte_end":8904186,"line_start":232,"line_end":232,"column_start":5,"column_end":48}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8904191,"byte_end":8904203,"line_start":233,"line_end":233,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8904208,"byte_end":8904215,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8904220,"byte_end":8904227,"line_start":235,"line_end":235,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3566},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8904738,"byte_end":8904747,"line_start":254,"line_end":254,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the remote address that this stream is connected to.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8904335,"byte_end":8904399,"line_start":240,"line_end":240,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8904404,"byte_end":8904407,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8904412,"byte_end":8904426,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8904431,"byte_end":8904434,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8904439,"byte_end":8904452,"line_start":244,"line_end":244,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8904457,"byte_end":8904487,"line_start":245,"line_end":245,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8904492,"byte_end":8904495,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8904500,"byte_end":8904564,"line_start":247,"line_end":247,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8904569,"byte_end":8904630,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8904635,"byte_end":8904638,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.peer_addr()?);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8904643,"byte_end":8904685,"line_start":250,"line_end":250,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8904690,"byte_end":8904702,"line_start":251,"line_end":251,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8904707,"byte_end":8904714,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8904719,"byte_end":8904726,"line_start":253,"line_end":253,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3567},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8905905,"byte_end":8905914,"line_start":294,"line_end":294,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<TcpStream>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempts to receive data on the socket, without removing that data from","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8904832,"byte_end":8904907,"line_start":258,"line_end":258,"column_start":5,"column_end":80}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8904912,"byte_end":8904985,"line_start":259,"line_end":259,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8904990,"byte_end":8905004,"line_start":260,"line_end":260,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8905009,"byte_end":8905012,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8905017,"byte_end":8905035,"line_start":262,"line_end":262,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8905040,"byte_end":8905043,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8905048,"byte_end":8905073,"line_start":264,"line_end":264,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8905078,"byte_end":8905081,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if data is not yet available.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8905086,"byte_end":8905137,"line_start":266,"line_end":266,"column_start":5,"column_end":56}},{"value":"/ * `Poll::Ready(Ok(n))` if data is available. `n` is the number of bytes peeked.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8905142,"byte_end":8905225,"line_start":267,"line_end":267,"column_start":5,"column_end":88}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8905230,"byte_end":8905285,"line_start":268,"line_end":268,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8905290,"byte_end":8905293,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8905298,"byte_end":8905310,"line_start":270,"line_end":270,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8905315,"byte_end":8905318,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8905323,"byte_end":8905398,"line_start":272,"line_end":272,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8905403,"byte_end":8905406,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8905411,"byte_end":8905425,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8905430,"byte_end":8905433,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8905438,"byte_end":8905451,"line_start":276,"line_end":276,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8905456,"byte_end":8905474,"line_start":277,"line_end":277,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8905479,"byte_end":8905509,"line_start":278,"line_end":278,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8905514,"byte_end":8905517,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8905522,"byte_end":8905555,"line_start":280,"line_end":280,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8905560,"byte_end":8905563,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8905568,"byte_end":8905586,"line_start":282,"line_end":282,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8905591,"byte_end":8905630,"line_start":283,"line_end":283,"column_start":5,"column_end":44}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8905635,"byte_end":8905704,"line_start":284,"line_end":284,"column_start":5,"column_end":74}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8905709,"byte_end":8905739,"line_start":285,"line_end":285,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8905744,"byte_end":8905747,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8905752,"byte_end":8905774,"line_start":287,"line_end":287,"column_start":5,"column_end":27}},{"value":"/         stream.poll_peek(cx, &mut buf)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8905779,"byte_end":8905821,"line_start":288,"line_end":288,"column_start":5,"column_end":47}},{"value":"/     }).await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8905826,"byte_end":8905844,"line_start":289,"line_end":289,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8905849,"byte_end":8905852,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8905857,"byte_end":8905871,"line_start":291,"line_end":291,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8905876,"byte_end":8905881,"line_start":292,"line_end":292,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8905886,"byte_end":8905893,"line_start":293,"line_end":293,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3569},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8907826,"byte_end":8907830,"line_start":352,"line_end":352,"column_start":18,"column_end":22},"name":"peek","qualname":"<TcpStream>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8906575,"byte_end":8906645,"line_start":315,"line_end":315,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8906650,"byte_end":8906719,"line_start":316,"line_end":316,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8906724,"byte_end":8906763,"line_start":317,"line_end":317,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8906768,"byte_end":8906771,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8906776,"byte_end":8906850,"line_start":319,"line_end":319,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying recv system call.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8906855,"byte_end":8906915,"line_start":320,"line_end":320,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8906920,"byte_end":8906923,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8906928,"byte_end":8906942,"line_start":322,"line_end":322,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8906947,"byte_end":8906950,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8906955,"byte_end":8906968,"line_start":324,"line_end":324,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8906973,"byte_end":8907003,"line_start":325,"line_end":325,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8907008,"byte_end":8907034,"line_start":326,"line_end":326,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8907039,"byte_end":8907065,"line_start":327,"line_end":327,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8907070,"byte_end":8907073,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8907078,"byte_end":8907096,"line_start":329,"line_end":329,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8907101,"byte_end":8907152,"line_start":330,"line_end":330,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8907157,"byte_end":8907185,"line_start":331,"line_end":331,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8907190,"byte_end":8907259,"line_start":332,"line_end":332,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8907264,"byte_end":8907267,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8907272,"byte_end":8907301,"line_start":334,"line_end":334,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8907306,"byte_end":8907335,"line_start":335,"line_end":335,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8907340,"byte_end":8907343,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8907348,"byte_end":8907375,"line_start":337,"line_end":337,"column_start":5,"column_end":32}},{"value":"/     let n = stream.peek(&mut b1).await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8907380,"byte_end":8907424,"line_start":338,"line_end":338,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8907429,"byte_end":8907432,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8907437,"byte_end":8907461,"line_start":340,"line_end":340,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, stream.read(&mut b2[..n]).await?);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8907466,"byte_end":8907522,"line_start":341,"line_end":341,"column_start":5,"column_end":61}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8907527,"byte_end":8907566,"line_start":342,"line_end":342,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8907571,"byte_end":8907574,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8907579,"byte_end":8907593,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8907598,"byte_end":8907603,"line_start":345,"line_end":345,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8907608,"byte_end":8907615,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8907620,"byte_end":8907623,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8907628,"byte_end":8907693,"line_start":348,"line_end":348,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8907698,"byte_end":8907701,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8907706,"byte_end":8907752,"line_start":350,"line_end":350,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8907757,"byte_end":8907808,"line_start":351,"line_end":351,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3573},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8908699,"byte_end":8908707,"line_start":380,"line_end":380,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<TcpStream>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8907944,"byte_end":8908010,"line_start":356,"line_end":356,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8908015,"byte_end":8908018,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O on the specified","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8908023,"byte_end":8908095,"line_start":358,"line_end":358,"column_start":5,"column_end":77}},{"value":"/ portions to return immediately with an appropriate value (see the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8908100,"byte_end":8908169,"line_start":359,"line_end":359,"column_start":5,"column_end":74}},{"value":"/ documentation of `Shutdown`).","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8908174,"byte_end":8908207,"line_start":360,"line_end":360,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8908212,"byte_end":8908215,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8908220,"byte_end":8908234,"line_start":362,"line_end":362,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8908239,"byte_end":8908242,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8908247,"byte_end":8908260,"line_start":364,"line_end":364,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8908265,"byte_end":8908295,"line_start":365,"line_end":365,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8908300,"byte_end":8908326,"line_start":366,"line_end":366,"column_start":5,"column_end":31}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8908331,"byte_end":8908358,"line_start":367,"line_end":367,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8908363,"byte_end":8908366,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8908371,"byte_end":8908389,"line_start":369,"line_end":369,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8908394,"byte_end":8908445,"line_start":370,"line_end":370,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8908450,"byte_end":8908478,"line_start":371,"line_end":371,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8908483,"byte_end":8908548,"line_start":372,"line_end":372,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8908553,"byte_end":8908556,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/     // Shutdown the stream","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8908561,"byte_end":8908591,"line_start":374,"line_end":374,"column_start":5,"column_end":35}},{"value":"/     stream.shutdown(Shutdown::Write)?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8908596,"byte_end":8908638,"line_start":375,"line_end":375,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8908643,"byte_end":8908646,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8908651,"byte_end":8908665,"line_start":377,"line_end":377,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8908670,"byte_end":8908675,"line_start":378,"line_end":378,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8908680,"byte_end":8908687,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3574},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8909333,"byte_end":8909340,"line_start":402,"line_end":402,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"pub fn nodelay(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8908801,"byte_end":8908863,"line_start":384,"line_end":384,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8908868,"byte_end":8908871,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8908876,"byte_end":8908940,"line_start":386,"line_end":386,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8908945,"byte_end":8908948,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ [`set_nodelay`]: TcpStream::set_nodelay","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8908953,"byte_end":8908996,"line_start":388,"line_end":388,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8909001,"byte_end":8909004,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8909009,"byte_end":8909023,"line_start":390,"line_end":390,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8909028,"byte_end":8909031,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8909036,"byte_end":8909049,"line_start":392,"line_end":392,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8909054,"byte_end":8909084,"line_start":393,"line_end":393,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8909089,"byte_end":8909092,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8909097,"byte_end":8909161,"line_start":395,"line_end":395,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8909166,"byte_end":8909227,"line_start":396,"line_end":396,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8909232,"byte_end":8909235,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.nodelay()?);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8909240,"byte_end":8909280,"line_start":398,"line_end":398,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8909285,"byte_end":8909297,"line_start":399,"line_end":399,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8909302,"byte_end":8909309,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8909314,"byte_end":8909321,"line_start":401,"line_end":401,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3575},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8910147,"byte_end":8910158,"line_start":426,"line_end":426,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"pub fn set_nodelay(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8909417,"byte_end":8909479,"line_start":406,"line_end":406,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8909484,"byte_end":8909487,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8909492,"byte_end":8909561,"line_start":408,"line_end":408,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8909566,"byte_end":8909639,"line_start":409,"line_end":409,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8909644,"byte_end":8909717,"line_start":410,"line_end":410,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8909722,"byte_end":8909797,"line_start":411,"line_end":411,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8909802,"byte_end":8909820,"line_start":412,"line_end":412,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8909825,"byte_end":8909828,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8909833,"byte_end":8909847,"line_start":414,"line_end":414,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8909852,"byte_end":8909855,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8909860,"byte_end":8909873,"line_start":416,"line_end":416,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8909878,"byte_end":8909908,"line_start":417,"line_end":417,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8909913,"byte_end":8909916,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8909921,"byte_end":8909985,"line_start":419,"line_end":419,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8909990,"byte_end":8910051,"line_start":420,"line_end":420,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8910056,"byte_end":8910059,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8910064,"byte_end":8910094,"line_start":422,"line_end":422,"column_start":5,"column_end":35}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8910099,"byte_end":8910111,"line_start":423,"line_end":423,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8910116,"byte_end":8910123,"line_start":424,"line_end":424,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8910128,"byte_end":8910135,"line_start":425,"line_end":425,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3576},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8910825,"byte_end":8910841,"line_start":448,"line_end":448,"column_start":12,"column_end":28},"name":"recv_buffer_size","qualname":"<TcpStream>::recv_buffer_size","value":"pub fn recv_buffer_size(&Self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_RCVBUF` option on this socket.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8910259,"byte_end":8910319,"line_start":430,"line_end":430,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8910324,"byte_end":8910327,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_recv_buffer_size`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8910332,"byte_end":8910405,"line_start":432,"line_end":432,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8910410,"byte_end":8910413,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ [`set_recv_buffer_size`]: TcpStream::set_recv_buffer_size","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8910418,"byte_end":8910479,"line_start":434,"line_end":434,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8910484,"byte_end":8910487,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8910492,"byte_end":8910506,"line_start":436,"line_end":436,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8910511,"byte_end":8910514,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8910519,"byte_end":8910532,"line_start":438,"line_end":438,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8910537,"byte_end":8910567,"line_start":439,"line_end":439,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8910572,"byte_end":8910575,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8910580,"byte_end":8910644,"line_start":441,"line_end":441,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8910649,"byte_end":8910710,"line_start":442,"line_end":442,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8910715,"byte_end":8910718,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.recv_buffer_size()?);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8910723,"byte_end":8910772,"line_start":444,"line_end":444,"column_start":5,"column_end":54}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8910777,"byte_end":8910789,"line_start":445,"line_end":445,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8910794,"byte_end":8910801,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8910806,"byte_end":8910813,"line_start":447,"line_end":447,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3577},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8911433,"byte_end":8911453,"line_start":469,"line_end":469,"column_start":12,"column_end":32},"name":"set_recv_buffer_size","qualname":"<TcpStream>::set_recv_buffer_size","value":"pub fn set_recv_buffer_size(&Self, usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_RCVBUF` option on this socket.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8910928,"byte_end":8910988,"line_start":452,"line_end":452,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8910993,"byte_end":8910996,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ Changes the size of the operating system's receive buffer associated","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8911001,"byte_end":8911073,"line_start":454,"line_end":454,"column_start":5,"column_end":77}},{"value":"/ with the socket.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8911078,"byte_end":8911098,"line_start":455,"line_end":455,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8911103,"byte_end":8911106,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8911111,"byte_end":8911125,"line_start":457,"line_end":457,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8911130,"byte_end":8911133,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8911138,"byte_end":8911151,"line_start":459,"line_end":459,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8911156,"byte_end":8911186,"line_start":460,"line_end":460,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8911191,"byte_end":8911194,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8911199,"byte_end":8911263,"line_start":462,"line_end":462,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8911268,"byte_end":8911329,"line_start":463,"line_end":463,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8911334,"byte_end":8911337,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ stream.set_recv_buffer_size(100)?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8911342,"byte_end":8911380,"line_start":465,"line_end":465,"column_start":5,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8911385,"byte_end":8911397,"line_start":466,"line_end":466,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8911402,"byte_end":8911409,"line_start":467,"line_end":467,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8911414,"byte_end":8911421,"line_start":468,"line_end":468,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3578},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8912124,"byte_end":8912140,"line_start":491,"line_end":491,"column_start":12,"column_end":28},"name":"send_buffer_size","qualname":"<TcpStream>::send_buffer_size","value":"pub fn send_buffer_size(&Self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_SNDBUF` option on this socket.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8911558,"byte_end":8911618,"line_start":473,"line_end":473,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8911623,"byte_end":8911626,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_send_buffer_size`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8911631,"byte_end":8911704,"line_start":475,"line_end":475,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8911709,"byte_end":8911712,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ [`set_send_buffer_size`]: TcpStream::set_send_buffer_size","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8911717,"byte_end":8911778,"line_start":477,"line_end":477,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8911783,"byte_end":8911786,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8911791,"byte_end":8911805,"line_start":479,"line_end":479,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8911810,"byte_end":8911813,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8911818,"byte_end":8911831,"line_start":481,"line_end":481,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8911836,"byte_end":8911866,"line_start":482,"line_end":482,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8911871,"byte_end":8911874,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8911879,"byte_end":8911943,"line_start":484,"line_end":484,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8911948,"byte_end":8912009,"line_start":485,"line_end":485,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8912014,"byte_end":8912017,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.send_buffer_size()?);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8912022,"byte_end":8912071,"line_start":487,"line_end":487,"column_start":5,"column_end":54}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8912076,"byte_end":8912088,"line_start":488,"line_end":488,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8912093,"byte_end":8912100,"line_start":489,"line_end":489,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8912105,"byte_end":8912112,"line_start":490,"line_end":490,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3579},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8912729,"byte_end":8912749,"line_start":512,"line_end":512,"column_start":12,"column_end":32},"name":"set_send_buffer_size","qualname":"<TcpStream>::set_send_buffer_size","value":"pub fn set_send_buffer_size(&Self, usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_SNDBUF` option on this socket.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8912227,"byte_end":8912287,"line_start":495,"line_end":495,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8912292,"byte_end":8912295,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ Changes the size of the operating system's send buffer associated with","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8912300,"byte_end":8912374,"line_start":497,"line_end":497,"column_start":5,"column_end":79}},{"value":"/ the socket.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8912379,"byte_end":8912394,"line_start":498,"line_end":498,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8912399,"byte_end":8912402,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8912407,"byte_end":8912421,"line_start":500,"line_end":500,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8912426,"byte_end":8912429,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8912434,"byte_end":8912447,"line_start":502,"line_end":502,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8912452,"byte_end":8912482,"line_start":503,"line_end":503,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8912487,"byte_end":8912490,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8912495,"byte_end":8912559,"line_start":505,"line_end":505,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8912564,"byte_end":8912625,"line_start":506,"line_end":506,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8912630,"byte_end":8912633,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ stream.set_send_buffer_size(100)?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8912638,"byte_end":8912676,"line_start":508,"line_end":508,"column_start":5,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8912681,"byte_end":8912693,"line_start":509,"line_end":509,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8912698,"byte_end":8912705,"line_start":510,"line_end":510,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8912710,"byte_end":8912717,"line_start":511,"line_end":511,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3580},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8913451,"byte_end":8913460,"line_start":535,"line_end":535,"column_start":12,"column_end":21},"name":"keepalive","qualname":"<TcpStream>::keepalive","value":"pub fn keepalive(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Returns whether keepalive messages are enabled on this socket, and if so\n the duration of time between them.","sig":null,"attributes":[{"value":"/ Returns whether keepalive messages are enabled on this socket, and if so","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8912854,"byte_end":8912930,"line_start":516,"line_end":516,"column_start":5,"column_end":81}},{"value":"/ the duration of time between them.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8912935,"byte_end":8912973,"line_start":517,"line_end":517,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8912978,"byte_end":8912981,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_keepalive`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8912986,"byte_end":8913052,"line_start":519,"line_end":519,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8913057,"byte_end":8913060,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ [`set_keepalive`]: TcpStream::set_keepalive","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8913065,"byte_end":8913112,"line_start":521,"line_end":521,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8913117,"byte_end":8913120,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8913125,"byte_end":8913139,"line_start":523,"line_end":523,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8913144,"byte_end":8913147,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8913152,"byte_end":8913165,"line_start":525,"line_end":525,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8913170,"byte_end":8913200,"line_start":526,"line_end":526,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8913205,"byte_end":8913208,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8913213,"byte_end":8913277,"line_start":528,"line_end":528,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8913282,"byte_end":8913343,"line_start":529,"line_end":529,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8913348,"byte_end":8913351,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.keepalive()?);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8913356,"byte_end":8913398,"line_start":531,"line_end":531,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8913403,"byte_end":8913415,"line_start":532,"line_end":532,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8913420,"byte_end":8913427,"line_start":533,"line_end":533,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8913432,"byte_end":8913439,"line_start":534,"line_end":534,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3581},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8914491,"byte_end":8914504,"line_start":564,"line_end":564,"column_start":12,"column_end":25},"name":"set_keepalive","qualname":"<TcpStream>::set_keepalive","value":"pub fn set_keepalive(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether keepalive messages are enabled to be sent on this socket.","sig":null,"attributes":[{"value":"/ Sets whether keepalive messages are enabled to be sent on this socket.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8913551,"byte_end":8913625,"line_start":539,"line_end":539,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8913630,"byte_end":8913633,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ On Unix, this option will set the `SO_KEEPALIVE` as well as the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8913638,"byte_end":8913705,"line_start":541,"line_end":541,"column_start":5,"column_end":72}},{"value":"/ `TCP_KEEPALIVE` or `TCP_KEEPIDLE` option (depending on your platform).","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8913710,"byte_end":8913784,"line_start":542,"line_end":542,"column_start":5,"column_end":79}},{"value":"/ On Windows, this will set the `SIO_KEEPALIVE_VALS` option.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8913789,"byte_end":8913851,"line_start":543,"line_end":543,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8913856,"byte_end":8913859,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ If `None` is specified then keepalive messages are disabled, otherwise","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8913864,"byte_end":8913938,"line_start":545,"line_end":545,"column_start":5,"column_end":79}},{"value":"/ the duration specified will be the time to remain idle before sending a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8913943,"byte_end":8914018,"line_start":546,"line_end":546,"column_start":5,"column_end":80}},{"value":"/ TCP keepalive probe.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8914023,"byte_end":8914047,"line_start":547,"line_end":547,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8914052,"byte_end":8914055,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Some platforms specify this value in seconds, so sub-second","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8914060,"byte_end":8914123,"line_start":549,"line_end":549,"column_start":5,"column_end":68}},{"value":"/ specifications may be omitted.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8914128,"byte_end":8914162,"line_start":550,"line_end":550,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8914167,"byte_end":8914170,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8914175,"byte_end":8914189,"line_start":552,"line_end":552,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8914194,"byte_end":8914197,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8914202,"byte_end":8914215,"line_start":554,"line_end":554,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8914220,"byte_end":8914250,"line_start":555,"line_end":555,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8914255,"byte_end":8914258,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8914263,"byte_end":8914327,"line_start":557,"line_end":557,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8914332,"byte_end":8914393,"line_start":558,"line_end":558,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8914398,"byte_end":8914401,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ stream.set_keepalive(None)?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8914406,"byte_end":8914438,"line_start":560,"line_end":560,"column_start":5,"column_end":37}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8914443,"byte_end":8914455,"line_start":561,"line_end":561,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8914460,"byte_end":8914467,"line_start":562,"line_end":562,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8914472,"byte_end":8914479,"line_start":563,"line_end":563,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3582},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8915135,"byte_end":8915138,"line_start":586,"line_end":586,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8914623,"byte_end":8914681,"line_start":568,"line_end":568,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8914686,"byte_end":8914689,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8914694,"byte_end":8914754,"line_start":570,"line_end":570,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8914759,"byte_end":8914762,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: TcpStream::set_ttl","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8914767,"byte_end":8914802,"line_start":572,"line_end":572,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8914807,"byte_end":8914810,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8914815,"byte_end":8914829,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8914834,"byte_end":8914837,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8914842,"byte_end":8914855,"line_start":576,"line_end":576,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8914860,"byte_end":8914890,"line_start":577,"line_end":577,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8914895,"byte_end":8914898,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8914903,"byte_end":8914967,"line_start":579,"line_end":579,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8914972,"byte_end":8915033,"line_start":580,"line_end":580,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8915038,"byte_end":8915041,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.ttl()?);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8915046,"byte_end":8915082,"line_start":582,"line_end":582,"column_start":5,"column_end":41}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8915087,"byte_end":8915099,"line_start":583,"line_end":583,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8915104,"byte_end":8915111,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8915116,"byte_end":8915123,"line_start":585,"line_end":585,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3583},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8915705,"byte_end":8915712,"line_start":607,"line_end":607,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8915210,"byte_end":8915268,"line_start":590,"line_end":590,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8915273,"byte_end":8915276,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8915281,"byte_end":8915357,"line_start":592,"line_end":592,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8915362,"byte_end":8915383,"line_start":593,"line_end":593,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8915388,"byte_end":8915391,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8915396,"byte_end":8915410,"line_start":595,"line_end":595,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8915415,"byte_end":8915418,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8915423,"byte_end":8915436,"line_start":597,"line_end":597,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8915441,"byte_end":8915471,"line_start":598,"line_end":598,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8915476,"byte_end":8915479,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8915484,"byte_end":8915548,"line_start":600,"line_end":600,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8915553,"byte_end":8915614,"line_start":601,"line_end":601,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8915619,"byte_end":8915622,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(123)?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8915627,"byte_end":8915652,"line_start":603,"line_end":603,"column_start":5,"column_end":30}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8915657,"byte_end":8915669,"line_start":604,"line_end":604,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8915674,"byte_end":8915681,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8915686,"byte_end":8915693,"line_start":606,"line_end":606,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3584},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8916354,"byte_end":8916360,"line_start":630,"line_end":630,"column_start":12,"column_end":18},"name":"linger","qualname":"<TcpStream>::linger","value":"pub fn linger(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Reads the linger duration for this socket by getting the `SO_LINGER`\n option.","sig":null,"attributes":[{"value":"/ Reads the linger duration for this socket by getting the `SO_LINGER`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8915800,"byte_end":8915872,"line_start":611,"line_end":611,"column_start":5,"column_end":77}},{"value":"/ option.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8915877,"byte_end":8915888,"line_start":612,"line_end":612,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8915893,"byte_end":8915896,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_linger`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8915901,"byte_end":8915964,"line_start":614,"line_end":614,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8915969,"byte_end":8915972,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ [`set_linger`]: TcpStream::set_linger","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8915977,"byte_end":8916018,"line_start":616,"line_end":616,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8916023,"byte_end":8916026,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8916031,"byte_end":8916045,"line_start":618,"line_end":618,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8916050,"byte_end":8916053,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8916058,"byte_end":8916071,"line_start":620,"line_end":620,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8916076,"byte_end":8916106,"line_start":621,"line_end":621,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8916111,"byte_end":8916114,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8916119,"byte_end":8916183,"line_start":623,"line_end":623,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8916188,"byte_end":8916249,"line_start":624,"line_end":624,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8916254,"byte_end":8916257,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.linger()?);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8916262,"byte_end":8916301,"line_start":626,"line_end":626,"column_start":5,"column_end":44}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8916306,"byte_end":8916318,"line_start":627,"line_end":627,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8916323,"byte_end":8916330,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8916335,"byte_end":8916342,"line_start":629,"line_end":629,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3585},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8917302,"byte_end":8917312,"line_start":658,"line_end":658,"column_start":12,"column_end":22},"name":"set_linger","qualname":"<TcpStream>::set_linger","value":"pub fn set_linger(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the linger duration of this socket by setting the `SO_LINGER`\n option.","sig":null,"attributes":[{"value":"/ Sets the linger duration of this socket by setting the `SO_LINGER`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8916448,"byte_end":8916518,"line_start":634,"line_end":634,"column_start":5,"column_end":75}},{"value":"/ option.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8916523,"byte_end":8916534,"line_start":635,"line_end":635,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8916539,"byte_end":8916542,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ This option controls the action taken when a stream has unsent messages","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8916547,"byte_end":8916622,"line_start":637,"line_end":637,"column_start":5,"column_end":80}},{"value":"/ and the stream is closed. If `SO_LINGER` is set, the system","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8916627,"byte_end":8916690,"line_start":638,"line_end":638,"column_start":5,"column_end":68}},{"value":"/ shall block the process until it can transmit the data or until the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8916695,"byte_end":8916766,"line_start":639,"line_end":639,"column_start":5,"column_end":76}},{"value":"/ time expires.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8916771,"byte_end":8916788,"line_start":640,"line_end":640,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8916793,"byte_end":8916796,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ If `SO_LINGER` is not specified, and the stream is closed, the system","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8916801,"byte_end":8916874,"line_start":642,"line_end":642,"column_start":5,"column_end":78}},{"value":"/ handles the call in a way that allows the process to continue as quickly","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8916879,"byte_end":8916955,"line_start":643,"line_end":643,"column_start":5,"column_end":81}},{"value":"/ as possible.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8916960,"byte_end":8916976,"line_start":644,"line_end":644,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8916981,"byte_end":8916984,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8916989,"byte_end":8917003,"line_start":646,"line_end":646,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8917008,"byte_end":8917011,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8917016,"byte_end":8917029,"line_start":648,"line_end":648,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8917034,"byte_end":8917064,"line_start":649,"line_end":649,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8917069,"byte_end":8917072,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8917077,"byte_end":8917141,"line_start":651,"line_end":651,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8917146,"byte_end":8917207,"line_start":652,"line_end":652,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8917212,"byte_end":8917215,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ stream.set_linger(None)?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8917220,"byte_end":8917249,"line_start":654,"line_end":654,"column_start":5,"column_end":34}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8917254,"byte_end":8917266,"line_start":655,"line_end":655,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8917271,"byte_end":8917278,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8917283,"byte_end":8917290,"line_start":657,"line_end":657,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3586},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8917930,"byte_end":8917935,"line_start":672,"line_end":672,"column_start":12,"column_end":17},"name":"split","qualname":"<TcpStream>::split","value":"pub fn split<'a>(&'a mut Self) -> (ReadHalf, WriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8917553,"byte_end":8917589,"line_start":664,"line_end":664,"column_start":5,"column_end":41}},{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8917594,"byte_end":8917671,"line_start":665,"line_end":665,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8917676,"byte_end":8917722,"line_start":666,"line_end":666,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8917727,"byte_end":8917730,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ This method is more efficient than [`into_split`], but the halves cannot be","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8917735,"byte_end":8917814,"line_start":668,"line_end":668,"column_start":5,"column_end":84}},{"value":"/ moved into independently spawned tasks.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8917819,"byte_end":8917862,"line_start":669,"line_end":669,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8917867,"byte_end":8917870,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8917875,"byte_end":8917918,"line_start":671,"line_end":671,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3588},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8918591,"byte_end":8918601,"line_start":687,"line_end":687,"column_start":12,"column_end":22},"name":"into_split","qualname":"<TcpStream>::into_split","value":"pub fn into_split(Self) -> (OwnedReadHalf, OwnedWriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8918020,"byte_end":8918097,"line_start":676,"line_end":676,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8918102,"byte_end":8918148,"line_start":677,"line_end":677,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8918153,"byte_end":8918156,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ Unlike [`split`], the owned halves can be moved to separate tasks, however","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8918161,"byte_end":8918239,"line_start":679,"line_end":679,"column_start":5,"column_end":83}},{"value":"/ this comes at the cost of a heap allocation.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8918244,"byte_end":8918292,"line_start":680,"line_end":680,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8918297,"byte_end":8918300,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ **Note:** Dropping the write half will shut down the write half of the TCP","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8918305,"byte_end":8918383,"line_start":682,"line_end":682,"column_start":5,"column_end":83}},{"value":"/ stream. This is equivalent to calling [`shutdown(Write)`] on the `TcpStream`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8918388,"byte_end":8918469,"line_start":683,"line_end":683,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8918474,"byte_end":8918477,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8918482,"byte_end":8918515,"line_start":685,"line_end":685,"column_start":5,"column_end":38}},{"value":"/ [`shutdown(Write)`]: fn@crate::net::TcpStream::shutdown","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8918520,"byte_end":8918579,"line_start":686,"line_end":686,"column_start":5,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":3662},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"udp","qualname":"::net::udp","value":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/mod.rs","parent":null,"children":[{"krate":0,"index":3663},{"krate":0,"index":3748},{"krate":0,"index":3749},{"krate":0,"index":3786},{"krate":0,"index":3787},{"krate":0,"index":3788},{"krate":0,"index":14251},{"krate":0,"index":3789}],"decl_id":null,"docs":" UDP utility types.\n","sig":null,"attributes":[{"value":"cfg(feature = \"udp\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":23445,"byte_end":23468,"line_start":340,"line_end":340,"column_start":13,"column_end":36}},{"value":"/ UDP utility types.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/mod.rs","byte_start":8925854,"byte_end":8925876,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":3791},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8926332,"byte_end":8926341,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"UdpSocket","qualname":"::net::udp::socket::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":3792}],"decl_id":null,"docs":" A UDP socket\n","sig":null,"attributes":[{"value":"cfg(feature = \"udp\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":23445,"byte_end":23468,"line_start":340,"line_end":340,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3683},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8926539,"byte_end":8926543,"line_start":22,"line_end":22,"column_start":18,"column_end":22},"name":"bind","qualname":"<UdpSocket>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" This function will create a new UDP socket and attempt to bind it to\n the `addr` provided.\n","sig":null,"attributes":[{"value":"/ This function will create a new UDP socket and attempt to bind it to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8926420,"byte_end":8926492,"line_start":20,"line_end":20,"column_start":5,"column_end":77}},{"value":"/ the `addr` provided.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8926497,"byte_end":8926521,"line_start":21,"line_end":21,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3690},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8928246,"byte_end":8928254,"line_start":68,"line_end":68,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UdpSocket>::from_std","value":"pub fn from_std(net::UdpSocket) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UdpSocket` from the previously bound socket provided.","sig":null,"attributes":[{"value":"/ Creates a new `UdpSocket` from the previously bound socket provided.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8927378,"byte_end":8927450,"line_start":51,"line_end":51,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8927455,"byte_end":8927458,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ The socket given will be registered with the event loop that `handle`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8927463,"byte_end":8927536,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ is associated with. This function requires that `socket` has previously","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8927541,"byte_end":8927616,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ been bound to an address to work correctly.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8927621,"byte_end":8927668,"line_start":55,"line_end":55,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8927673,"byte_end":8927676,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This can be used in conjunction with net2's `UdpBuilder` interface to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8927681,"byte_end":8927754,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ configure a socket before it's handed off, such as setting options like","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8927759,"byte_end":8927834,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ `reuse_address` or binding to multiple addresses.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8927839,"byte_end":8927892,"line_start":59,"line_end":59,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8927897,"byte_end":8927900,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8927905,"byte_end":8927917,"line_start":61,"line_end":61,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8927922,"byte_end":8927925,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8927930,"byte_end":8927990,"line_start":63,"line_end":63,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8927995,"byte_end":8927998,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8928003,"byte_end":8928073,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8928078,"byte_end":8928151,"line_start":66,"line_end":66,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8928156,"byte_end":8928234,"line_start":67,"line_end":67,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3691},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8928638,"byte_end":8928643,"line_start":77,"line_end":77,"column_start":12,"column_end":17},"name":"split","qualname":"<UdpSocket>::split","value":"pub fn split(Self) -> (RecvHalf, SendHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits the `UdpSocket` into a receive half and a send half. The two parts\n can be used to receive and send datagrams concurrently, even from two\n different tasks.\n","sig":null,"attributes":[{"value":"/ Splits the `UdpSocket` into a receive half and a send half. The two parts","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8928446,"byte_end":8928523,"line_start":74,"line_end":74,"column_start":5,"column_end":82}},{"value":"/ can be used to receive and send datagrams concurrently, even from two","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8928528,"byte_end":8928601,"line_start":75,"line_end":75,"column_start":5,"column_end":78}},{"value":"/ different tasks.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8928606,"byte_end":8928626,"line_start":76,"line_end":76,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3692},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8928778,"byte_end":8928788,"line_start":82,"line_end":82,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this socket is bound to.\n","sig":null,"attributes":[{"value":"/ Returns the local address that this socket is bound to.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8928707,"byte_end":8928766,"line_start":81,"line_end":81,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3693},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8929060,"byte_end":8929067,"line_start":89,"line_end":89,"column_start":18,"column_end":25},"name":"connect","qualname":"<UdpSocket>::connect","value":"pub async fn connect<A: ToSocketAddrs, '_>(&'_ Self, A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket setting the default destination for send() and\n limiting packets that are read via recv from the address specified in\n `addr`.\n","sig":null,"attributes":[{"value":"/ Connects the UDP socket setting the default destination for send() and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8928874,"byte_end":8928948,"line_start":86,"line_end":86,"column_start":5,"column_end":79}},{"value":"/ limiting packets that are read via recv from the address specified in","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8928953,"byte_end":8929026,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ `addr`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8929031,"byte_end":8929042,"line_start":88,"line_end":88,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3698},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8930004,"byte_end":8930008,"line_start":115,"line_end":115,"column_start":18,"column_end":22},"name":"send","qualname":"<UdpSocket>::send","value":"pub async fn send<'_, '_>(&'_ mut Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the remote address to which it is connected.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the remote address to which it is connected.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8929601,"byte_end":8929699,"line_start":108,"line_end":108,"column_start":5,"column_end":103}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8929704,"byte_end":8929775,"line_start":109,"line_end":109,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8929780,"byte_end":8929783,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8929788,"byte_end":8929871,"line_start":111,"line_end":111,"column_start":5,"column_end":88}},{"value":"/ will resolve to an error if the socket is not connected.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8929876,"byte_end":8929936,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8929941,"byte_end":8929944,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8929949,"byte_end":8929986,"line_start":114,"line_end":114,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3702},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8930514,"byte_end":8930522,"line_start":129,"line_end":129,"column_start":12,"column_end":20},"name":"try_send","qualname":"<UdpSocket>::try_send","value":"pub fn try_send(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to send data on the socket to the remote address to which it is\n connected.","sig":null,"attributes":[{"value":"/ Try to send data on the socket to the remote address to which it is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8930118,"byte_end":8930189,"line_start":119,"line_end":119,"column_start":5,"column_end":76}},{"value":"/ connected.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8930194,"byte_end":8930208,"line_start":120,"line_end":120,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8930213,"byte_end":8930216,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8930221,"byte_end":8930234,"line_start":122,"line_end":122,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8930239,"byte_end":8930242,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ If successfull, the number of bytes sent is returned. Users","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8930247,"byte_end":8930310,"line_start":124,"line_end":124,"column_start":5,"column_end":68}},{"value":"/ should ensure that when the remote cannot receive, the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8930315,"byte_end":8930373,"line_start":125,"line_end":125,"column_start":5,"column_end":63}},{"value":"/ [`ErrorKind::WouldBlock`] is properly handled.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8930378,"byte_end":8930428,"line_start":126,"line_end":126,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8930433,"byte_end":8930436,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ [`ErrorKind::WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8930441,"byte_end":8930502,"line_start":128,"line_end":128,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3703},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8931229,"byte_end":8931238,"line_start":144,"line_end":144,"column_start":12,"column_end":21},"name":"poll_send","qualname":"<UdpSocket>::poll_send","value":"pub fn poll_send(&Self, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3704},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8932256,"byte_end":8932260,"line_start":168,"line_end":168,"column_start":18,"column_end":22},"name":"recv","qualname":"<UdpSocket>::recv","value":"pub async fn recv<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram message on the socket from\n the remote address to which it is connected. On success, the future will resolve\n to the number of bytes read.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram message on the socket from","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8931616,"byte_end":8931695,"line_start":156,"line_end":156,"column_start":5,"column_end":84}},{"value":"/ the remote address to which it is connected. On success, the future will resolve","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8931700,"byte_end":8931784,"line_start":157,"line_end":157,"column_start":5,"column_end":89}},{"value":"/ to the number of bytes read.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8931789,"byte_end":8931821,"line_start":158,"line_end":158,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8931826,"byte_end":8931829,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8931834,"byte_end":8931915,"line_start":160,"line_end":160,"column_start":5,"column_end":86}},{"value":"/ hold the message bytes. If a message is too long to fit in the supplied buffer,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8931920,"byte_end":8932003,"line_start":161,"line_end":161,"column_start":5,"column_end":88}},{"value":"/ excess bytes may be discarded.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8932008,"byte_end":8932042,"line_start":162,"line_end":162,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8932047,"byte_end":8932050,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8932055,"byte_end":8932138,"line_start":164,"line_end":164,"column_start":5,"column_end":88}},{"value":"/ will fail if the socket is not connected.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8932143,"byte_end":8932188,"line_start":165,"line_end":165,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8932193,"byte_end":8932196,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8932201,"byte_end":8932238,"line_start":167,"line_end":167,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3708},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8932400,"byte_end":8932409,"line_start":173,"line_end":173,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UdpSocket>::poll_recv","value":"pub fn poll_recv(&Self, &mut Context, &mut [u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3709},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8933128,"byte_end":8933135,"line_start":190,"line_end":190,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"pub async fn send_to<A: ToSocketAddrs, '_, '_>(&'_ mut Self, &'_ [u8], A)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the given address.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the given address.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8932837,"byte_end":8932909,"line_start":185,"line_end":185,"column_start":5,"column_end":77}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8932914,"byte_end":8932985,"line_start":186,"line_end":186,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8932990,"byte_end":8932993,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ The future will resolve to an error if the IP version of the socket does","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8932998,"byte_end":8933074,"line_start":188,"line_end":188,"column_start":5,"column_end":81}},{"value":"/ not match that of `target`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8933079,"byte_end":8933110,"line_start":189,"line_end":189,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3714},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8934031,"byte_end":8934042,"line_start":213,"line_end":213,"column_start":12,"column_end":23},"name":"try_send_to","qualname":"<UdpSocket>::try_send_to","value":"pub fn try_send_to(&Self, &[u8], SocketAddr) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to send data on the socket to the given address.","sig":null,"attributes":[{"value":"/ Try to send data on the socket to the given address.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8933553,"byte_end":8933609,"line_start":202,"line_end":202,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8933614,"byte_end":8933617,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8933622,"byte_end":8933635,"line_start":204,"line_end":204,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8933640,"byte_end":8933643,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ If successfull, the future resolves to the number of bytes sent.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8933648,"byte_end":8933716,"line_start":206,"line_end":206,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8933721,"byte_end":8933724,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ Users should ensure that when the remote cannot receive, the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8933729,"byte_end":8933793,"line_start":208,"line_end":208,"column_start":5,"column_end":69}},{"value":"/ [`ErrorKind::WouldBlock`] is properly handled. An error can also occur","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8933798,"byte_end":8933872,"line_start":209,"line_end":209,"column_start":5,"column_end":79}},{"value":"/ if the IP version of the socket does not match that of `target`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8933877,"byte_end":8933945,"line_start":210,"line_end":210,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8933950,"byte_end":8933953,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ [`ErrorKind::WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8933958,"byte_end":8934019,"line_start":212,"line_end":212,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3715},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8934218,"byte_end":8934230,"line_start":219,"line_end":219,"column_start":12,"column_end":24},"name":"poll_send_to","qualname":"<UdpSocket>::poll_send_to","value":"pub fn poll_send_to(&Self, &mut Context, &[u8], &SocketAddr)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3716},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8935069,"byte_end":8935078,"line_start":242,"line_end":242,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram on the socket. On success,\n the future resolves to the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram on the socket. On success,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8934679,"byte_end":8934758,"line_start":236,"line_end":236,"column_start":5,"column_end":84}},{"value":"/ the future resolves to the number of bytes read and the origin.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8934763,"byte_end":8934830,"line_start":237,"line_end":237,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8934835,"byte_end":8934838,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8934843,"byte_end":8934921,"line_start":239,"line_end":239,"column_start":5,"column_end":83}},{"value":"/ to hold the message bytes. If a message is too long to fit in the supplied","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8934926,"byte_end":8935004,"line_start":240,"line_end":240,"column_start":5,"column_end":83}},{"value":"/ buffer, excess bytes may be discarded.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8935009,"byte_end":8935051,"line_start":241,"line_end":241,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3720},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8935237,"byte_end":8935251,"line_start":247,"line_end":247,"column_start":12,"column_end":26},"name":"poll_recv_from","qualname":"<UdpSocket>::poll_recv_from","value":"pub fn poll_recv_from(&Self, &mut Context, &mut [u8])\n-> Poll<Result<(usize, SocketAddr), io::Error>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3721},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8935953,"byte_end":8935962,"line_start":268,"line_end":268,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"pub fn broadcast(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8935736,"byte_end":8935800,"line_start":263,"line_end":263,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8935805,"byte_end":8935808,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_broadcast`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8935813,"byte_end":8935879,"line_start":265,"line_end":265,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8935884,"byte_end":8935887,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ [`set_broadcast`]: method@Self::set_broadcast","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8935892,"byte_end":8935941,"line_start":267,"line_end":267,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3722},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8936218,"byte_end":8936231,"line_start":276,"line_end":276,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"pub fn set_broadcast(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8936041,"byte_end":8936105,"line_start":272,"line_end":272,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8936110,"byte_end":8936113,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8936118,"byte_end":8936189,"line_start":274,"line_end":274,"column_start":5,"column_end":76}},{"value":"/ address.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8936194,"byte_end":8936206,"line_start":275,"line_end":275,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3723},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8936570,"byte_end":8936587,"line_start":285,"line_end":285,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"pub fn multicast_loop_v4(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8936324,"byte_end":8936393,"line_start":280,"line_end":280,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8936398,"byte_end":8936401,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v4`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8936406,"byte_end":8936480,"line_start":282,"line_end":282,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8936485,"byte_end":8936488,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v4`]: method@Self::set_multicast_loop_v4","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8936493,"byte_end":8936558,"line_start":284,"line_end":284,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3724},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8936927,"byte_end":8936948,"line_start":296,"line_end":296,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"pub fn set_multicast_loop_v4(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8936674,"byte_end":8936743,"line_start":289,"line_end":289,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8936748,"byte_end":8936751,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8936756,"byte_end":8936830,"line_start":291,"line_end":291,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8936835,"byte_end":8936838,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8936843,"byte_end":8936853,"line_start":293,"line_end":293,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8936858,"byte_end":8936861,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8936866,"byte_end":8936915,"line_start":295,"line_end":295,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3725},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8937291,"byte_end":8937307,"line_start":305,"line_end":305,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"pub fn multicast_ttl_v4(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8937049,"byte_end":8937117,"line_start":300,"line_end":300,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8937122,"byte_end":8937125,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_ttl_v4`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8937130,"byte_end":8937203,"line_start":302,"line_end":302,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8937208,"byte_end":8937211,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_ttl_v4`]: method@Self::set_multicast_ttl_v4","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8937216,"byte_end":8937279,"line_start":304,"line_end":304,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3726},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8937786,"byte_end":8937806,"line_start":318,"line_end":318,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"pub fn set_multicast_ttl_v4(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8937392,"byte_end":8937460,"line_start":309,"line_end":309,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8937465,"byte_end":8937468,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8937473,"byte_end":8937543,"line_start":311,"line_end":311,"column_start":5,"column_end":75}},{"value":"/ this socket. The default value is 1 which means that multicast packets","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8937548,"byte_end":8937622,"line_start":312,"line_end":312,"column_start":5,"column_end":79}},{"value":"/ don't leave the local network unless explicitly requested.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8937627,"byte_end":8937689,"line_start":313,"line_end":313,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8937694,"byte_end":8937697,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8937702,"byte_end":8937712,"line_start":315,"line_end":315,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8937717,"byte_end":8937720,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8937725,"byte_end":8937774,"line_start":317,"line_end":317,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3727},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8938155,"byte_end":8938172,"line_start":327,"line_end":327,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"pub fn multicast_loop_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8937907,"byte_end":8937978,"line_start":322,"line_end":322,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8937983,"byte_end":8937986,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v6`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8937991,"byte_end":8938065,"line_start":324,"line_end":324,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8938070,"byte_end":8938073,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v6`]: method@Self::set_multicast_loop_v6","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8938078,"byte_end":8938143,"line_start":326,"line_end":326,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3728},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8938516,"byte_end":8938537,"line_start":338,"line_end":338,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"pub fn set_multicast_loop_v6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8938259,"byte_end":8938330,"line_start":331,"line_end":331,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8938335,"byte_end":8938338,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8938343,"byte_end":8938419,"line_start":333,"line_end":333,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8938424,"byte_end":8938427,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8938432,"byte_end":8938442,"line_start":335,"line_end":335,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8938447,"byte_end":8938450,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv4 sockets.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8938455,"byte_end":8938504,"line_start":337,"line_end":337,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3729},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8938831,"byte_end":8938834,"line_start":347,"line_end":347,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8938638,"byte_end":8938696,"line_start":342,"line_end":342,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8938701,"byte_end":8938704,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8938709,"byte_end":8938769,"line_start":344,"line_end":344,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8938774,"byte_end":8938777,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: method@Self::set_ttl","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8938782,"byte_end":8938819,"line_start":346,"line_end":346,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3730},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8939091,"byte_end":8939098,"line_start":355,"line_end":355,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8938906,"byte_end":8938964,"line_start":351,"line_end":351,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8938969,"byte_end":8938972,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8938977,"byte_end":8939053,"line_start":353,"line_end":353,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8939058,"byte_end":8939079,"line_start":354,"line_end":354,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3731},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8939616,"byte_end":8939633,"line_start":366,"line_end":366,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"pub fn join_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8939186,"byte_end":8939244,"line_start":359,"line_end":359,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8939249,"byte_end":8939252,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8939257,"byte_end":8939331,"line_start":361,"line_end":361,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8939336,"byte_end":8939409,"line_start":362,"line_end":362,"column_start":5,"column_end":78}},{"value":"/ address of the local interface with which the system should join the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8939414,"byte_end":8939486,"line_start":363,"line_end":363,"column_start":5,"column_end":77}},{"value":"/ multicast group. If it's equal to `INADDR_ANY` then an appropriate","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8939491,"byte_end":8939561,"line_start":364,"line_end":364,"column_start":5,"column_end":75}},{"value":"/ interface is chosen by the system.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8939566,"byte_end":8939604,"line_start":365,"line_end":365,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3732},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8940098,"byte_end":8940115,"line_start":375,"line_end":375,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"pub fn join_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8939782,"byte_end":8939842,"line_start":370,"line_end":370,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8939847,"byte_end":8939850,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8939855,"byte_end":8939929,"line_start":372,"line_end":372,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8939934,"byte_end":8940007,"line_start":373,"line_end":373,"column_start":5,"column_end":78}},{"value":"/ index of the interface to join/leave (or 0 to indicate any interface).","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8940012,"byte_end":8940086,"line_start":374,"line_end":374,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3733},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8940482,"byte_end":8940500,"line_start":384,"line_end":384,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"pub fn leave_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8940258,"byte_end":8940317,"line_start":379,"line_end":379,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8940322,"byte_end":8940325,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v4`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8940330,"byte_end":8940400,"line_start":381,"line_end":381,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8940405,"byte_end":8940408,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v4`]: method@Self::join_multicast_v4","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8940413,"byte_end":8940470,"line_start":383,"line_end":383,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3734},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8940876,"byte_end":8940894,"line_start":393,"line_end":393,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"pub fn leave_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8940650,"byte_end":8940711,"line_start":388,"line_end":388,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8940716,"byte_end":8940719,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v6`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8940724,"byte_end":8940794,"line_start":390,"line_end":390,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8940799,"byte_end":8940802,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v6`]: method@Self::join_multicast_v6","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8940807,"byte_end":8940864,"line_start":392,"line_end":392,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":3793},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8943529,"byte_end":8943537,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"SendHalf","qualname":"::net::udp::split::SendHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" The send half after [`split`](super::UdpSocket::split).","sig":null,"attributes":[{"value":"/ The send half after [`split`](super::UdpSocket::split).","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8943341,"byte_end":8943400,"line_start":24,"line_end":24,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8943401,"byte_end":8943404,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Use [`send_to`](method@Self::send_to) or [`send`](method@Self::send) to send","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8943405,"byte_end":8943485,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ datagrams.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8943486,"byte_end":8943500,"line_start":27,"line_end":27,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3798},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8943751,"byte_end":8943759,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"RecvHalf","qualname":"::net::udp::split::RecvHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" The recv half after [`split`](super::UdpSocket::split).","sig":null,"attributes":[{"value":"/ The recv half after [`split`](super::UdpSocket::split).","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8943556,"byte_end":8943615,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8943616,"byte_end":8943619,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Use [`recv_from`](method@Self::recv_from) or [`recv`](method@Self::recv) to receive","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8943620,"byte_end":8943707,"line_start":33,"line_end":33,"column_start":1,"column_end":88}},{"value":"/ datagrams.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8943708,"byte_end":8943722,"line_start":34,"line_end":34,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3803},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8944106,"byte_end":8944118,"line_start":48,"line_end":48,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::udp::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating that two halves were not from the same socket, and thus could\n not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating that two halves were not from the same socket, and thus could","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8943972,"byte_end":8944054,"line_start":45,"line_end":45,"column_start":1,"column_end":83}},{"value":"/ not be `reunite`d.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8944055,"byte_end":8944077,"line_start":46,"line_end":46,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":3805},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8944119,"byte_end":8944131,"line_start":48,"line_end":48,"column_start":25,"column_end":37},"name":"0","qualname":"::net::udp::split::ReuniteError::0","value":"net::udp::split::SendHalf","parent":{"krate":0,"index":3803},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3806},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8944133,"byte_end":8944145,"line_start":48,"line_end":48,"column_start":39,"column_end":51},"name":"1","qualname":"::net::udp::split::ReuniteError::1","value":"net::udp::split::RecvHalf","parent":{"krate":0,"index":3803},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3763},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8945155,"byte_end":8945162,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"reunite","qualname":"<RecvHalf>::reunite","value":"pub fn reunite(Self, SendHalf) -> Result<UdpSocket, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a `UdpSocket` back together and\n recover the original socket. Succeeds only if the two \"halves\"\n originated from the same call to `UdpSocket::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a `UdpSocket` back together and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8944940,"byte_end":8945011,"line_start":75,"line_end":75,"column_start":5,"column_end":76}},{"value":"/ recover the original socket. Succeeds only if the two \"halves\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8945016,"byte_end":8945082,"line_start":76,"line_end":76,"column_start":5,"column_end":71}},{"value":"/ originated from the same call to `UdpSocket::split`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8945087,"byte_end":8945143,"line_start":77,"line_end":77,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3764},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8945653,"byte_end":8945662,"line_start":88,"line_end":88,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<RecvHalf>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram on the socket. On success,\n the future resolves to the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram on the socket. On success,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8945263,"byte_end":8945342,"line_start":82,"line_end":82,"column_start":5,"column_end":84}},{"value":"/ the future resolves to the number of bytes read and the origin.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8945347,"byte_end":8945414,"line_start":83,"line_end":83,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8945419,"byte_end":8945422,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8945427,"byte_end":8945505,"line_start":85,"line_end":85,"column_start":5,"column_end":83}},{"value":"/ to hold the message bytes. If a message is too long to fit in the supplied","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8945510,"byte_end":8945588,"line_start":86,"line_end":86,"column_start":5,"column_end":83}},{"value":"/ buffer, excess bytes may be discarded.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8945593,"byte_end":8945635,"line_start":87,"line_end":87,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3768},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8946442,"byte_end":8946446,"line_start":104,"line_end":104,"column_start":18,"column_end":22},"name":"recv","qualname":"<RecvHalf>::recv","value":"pub async fn recv<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram message on the socket from\n the remote address to which it is connected. On success, the future will resolve\n to the number of bytes read.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram message on the socket from","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8945797,"byte_end":8945876,"line_start":92,"line_end":92,"column_start":5,"column_end":84}},{"value":"/ the remote address to which it is connected. On success, the future will resolve","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8945881,"byte_end":8945965,"line_start":93,"line_end":93,"column_start":5,"column_end":89}},{"value":"/ to the number of bytes read.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8945970,"byte_end":8946002,"line_start":94,"line_end":94,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8946007,"byte_end":8946010,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8946015,"byte_end":8946096,"line_start":96,"line_end":96,"column_start":5,"column_end":86}},{"value":"/ hold the message bytes. If a message is too long to fit in the supplied buffer,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8946101,"byte_end":8946184,"line_start":97,"line_end":97,"column_start":5,"column_end":88}},{"value":"/ excess bytes may be discarded.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8946189,"byte_end":8946223,"line_start":98,"line_end":98,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8946228,"byte_end":8946231,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8946236,"byte_end":8946319,"line_start":100,"line_end":100,"column_start":5,"column_end":88}},{"value":"/ will fail if the socket is not connected.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8946324,"byte_end":8946369,"line_start":101,"line_end":101,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8946374,"byte_end":8946377,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: super::UdpSocket::connect","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8946382,"byte_end":8946424,"line_start":103,"line_end":103,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3773},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8946795,"byte_end":8946802,"line_start":113,"line_end":113,"column_start":12,"column_end":19},"name":"reunite","qualname":"<SendHalf>::reunite","value":"pub fn reunite(Self, RecvHalf) -> Result<UdpSocket, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a `UdpSocket` back together and\n recover the original socket. Succeeds only if the two \"halves\"\n originated from the same call to `UdpSocket::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a `UdpSocket` back together and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8946580,"byte_end":8946651,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/ recover the original socket. Succeeds only if the two \"halves\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8946656,"byte_end":8946722,"line_start":111,"line_end":111,"column_start":5,"column_end":71}},{"value":"/ originated from the same call to `UdpSocket::split`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8946727,"byte_end":8946783,"line_start":112,"line_end":112,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3774},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8947194,"byte_end":8947201,"line_start":122,"line_end":122,"column_start":18,"column_end":25},"name":"send_to","qualname":"<SendHalf>::send_to","value":"pub async fn send_to<'_, '_, '_>(&'_ mut Self, &'_ [u8], &'_ SocketAddr)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the given address.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the given address.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8946903,"byte_end":8946975,"line_start":117,"line_end":117,"column_start":5,"column_end":77}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8946980,"byte_end":8947051,"line_start":118,"line_end":118,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8947056,"byte_end":8947059,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ The future will resolve to an error if the IP version of the socket does","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8947064,"byte_end":8947140,"line_start":120,"line_end":120,"column_start":5,"column_end":81}},{"value":"/ not match that of `target`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8947145,"byte_end":8947176,"line_start":121,"line_end":121,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3778},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8947753,"byte_end":8947757,"line_start":133,"line_end":133,"column_start":18,"column_end":22},"name":"send","qualname":"<SendHalf>::send","value":"pub async fn send<'_, '_>(&'_ mut Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the remote address to which it is connected.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the remote address to which it is connected.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8947345,"byte_end":8947443,"line_start":126,"line_end":126,"column_start":5,"column_end":103}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8947448,"byte_end":8947519,"line_start":127,"line_end":127,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8947524,"byte_end":8947527,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8947532,"byte_end":8947615,"line_start":129,"line_end":129,"column_start":5,"column_end":88}},{"value":"/ will resolve to an error if the socket is not connected.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8947620,"byte_end":8947680,"line_start":130,"line_end":130,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8947685,"byte_end":8947688,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: super::UdpSocket::connect","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8947693,"byte_end":8947735,"line_start":132,"line_end":132,"column_start":5,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":3809},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::net::unix","value":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/mod.rs","parent":null,"children":[{"krate":0,"index":3810},{"krate":0,"index":3969},{"krate":0,"index":3984},{"krate":0,"index":3985},{"krate":0,"index":4031},{"krate":0,"index":4032},{"krate":0,"index":4056},{"krate":0,"index":4057},{"krate":0,"index":4058},{"krate":0,"index":4059},{"krate":0,"index":4098},{"krate":0,"index":4099},{"krate":0,"index":4100},{"krate":0,"index":4101},{"krate":0,"index":14429},{"krate":0,"index":4102},{"krate":0,"index":4175},{"krate":0,"index":4176},{"krate":0,"index":4188}],"decl_id":null,"docs":" Unix domain socket utility types\n","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"uds\"))","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":23638,"byte_end":23672,"line_start":350,"line_end":350,"column_start":13,"column_end":47}},{"value":"/ Unix domain socket utility types","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/mod.rs","byte_start":8948065,"byte_end":8948101,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":3810},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"datagram","qualname":"::net::unix::datagram","value":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/mod.rs","parent":null,"children":[{"krate":0,"index":3811},{"krate":0,"index":3888},{"krate":0,"index":3918},{"krate":0,"index":3962},{"krate":0,"index":3963},{"krate":0,"index":3964},{"krate":0,"index":3965},{"krate":0,"index":3966},{"krate":0,"index":3967},{"krate":0,"index":3968},{"krate":0,"index":14331}],"decl_id":null,"docs":" Unix datagram types.\n","sig":null,"attributes":[{"value":"/ Unix datagram types.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/mod.rs","byte_start":8948459,"byte_end":8948483,"line_start":1,"line_end":1,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":4192},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8949181,"byte_end":8949193,"line_start":17,"line_end":17,"column_start":16,"column_end":28},"name":"UnixDatagram","qualname":"::net::unix::datagram::socket::UnixDatagram","value":"UnixDatagram {  }","parent":null,"children":[{"krate":0,"index":4193}],"decl_id":null,"docs":" An I/O object representing a Unix datagram socket.\n","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"uds\"))","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":23638,"byte_end":23672,"line_start":350,"line_end":350,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3837},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8949350,"byte_end":8949354,"line_start":24,"line_end":24,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixDatagram>::bind","value":"pub fn bind<P>(P) -> io::Result<UnixDatagram> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixDatagram` bound to the specified path.\n","sig":null,"attributes":[{"value":"/ Creates a new `UnixDatagram` bound to the specified path.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8949277,"byte_end":8949338,"line_start":23,"line_end":23,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3839},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8949817,"byte_end":8949821,"line_start":37,"line_end":37,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixDatagram>::pair","value":"pub fn pair() -> io::Result<(UnixDatagram, UnixDatagram)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8949537,"byte_end":8949586,"line_start":32,"line_end":32,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8949591,"byte_end":8949594,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This function will create a pair of interconnected Unix sockets for","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8949599,"byte_end":8949670,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ communicating back and forth between one another. Each socket will","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8949675,"byte_end":8949745,"line_start":35,"line_end":35,"column_start":5,"column_end":75}},{"value":"/ be associated with the default event loop's handle.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8949750,"byte_end":8949805,"line_start":36,"line_end":36,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3840},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8950647,"byte_end":8950655,"line_start":58,"line_end":58,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixDatagram>::from_std","value":"pub fn from_std(net::UnixDatagram) -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a `UnixDatagram` in the standard library and returns a\n nonblocking `UnixDatagram` from this crate.","sig":null,"attributes":[{"value":"/ Consumes a `UnixDatagram` in the standard library and returns a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8950032,"byte_end":8950099,"line_start":45,"line_end":45,"column_start":5,"column_end":72}},{"value":"/ nonblocking `UnixDatagram` from this crate.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8950104,"byte_end":8950151,"line_start":46,"line_end":46,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8950156,"byte_end":8950159,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ The returned datagram will be associated with the given event loop","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8950164,"byte_end":8950234,"line_start":48,"line_end":48,"column_start":5,"column_end":75}},{"value":"/ specified by `handle` and is ready to perform I/O.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8950239,"byte_end":8950293,"line_start":49,"line_end":49,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8950298,"byte_end":8950301,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8950306,"byte_end":8950318,"line_start":51,"line_end":51,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8950323,"byte_end":8950326,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8950331,"byte_end":8950391,"line_start":53,"line_end":53,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8950396,"byte_end":8950399,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8950404,"byte_end":8950474,"line_start":55,"line_end":55,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8950479,"byte_end":8950552,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8950557,"byte_end":8950635,"line_start":57,"line_end":57,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3842},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8951106,"byte_end":8951113,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"name":"unbound","qualname":"<UnixDatagram>::unbound","value":"pub fn unbound() -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixDatagram` which is not bound to any address.\n","sig":null,"attributes":[{"value":"/ Creates a new `UnixDatagram` which is not bound to any address.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8951027,"byte_end":8951094,"line_start":69,"line_end":69,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3843},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8951466,"byte_end":8951473,"line_start":79,"line_end":79,"column_start":12,"column_end":19},"name":"connect","qualname":"<UnixDatagram>::connect","value":"pub fn connect<P: AsRef<Path>>(&Self, P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the socket to the specified address.","sig":null,"attributes":[{"value":"/ Connects the socket to the specified address.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8951247,"byte_end":8951296,"line_start":75,"line_end":75,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8951301,"byte_end":8951304,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ The `send` method may be used to send data to the specified address.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8951309,"byte_end":8951381,"line_start":77,"line_end":77,"column_start":5,"column_end":77}},{"value":"/ `recv` and `recv_from` will only receive data from that address.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8951386,"byte_end":8951454,"line_start":78,"line_end":78,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3845},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8951645,"byte_end":8951649,"line_start":84,"line_end":84,"column_start":18,"column_end":22},"name":"send","qualname":"<UnixDatagram>::send","value":"pub async fn send<'_, '_>(&'_ mut Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the socket's peer.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the socket's peer.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8951577,"byte_end":8951627,"line_start":83,"line_end":83,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3849},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8952493,"byte_end":8952501,"line_start":111,"line_end":111,"column_start":12,"column_end":20},"name":"try_send","qualname":"<UnixDatagram>::try_send","value":"pub fn try_send(&mut Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to send a datagram to the peer without waiting.","sig":null,"attributes":[{"value":"/ Try to send a datagram to the peer without waiting.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8951764,"byte_end":8951819,"line_start":88,"line_end":88,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8951824,"byte_end":8951827,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8951832,"byte_end":8951839,"line_start":90,"line_end":90,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8951844,"byte_end":8951864,"line_start":91,"line_end":91,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8951869,"byte_end":8951934,"line_start":92,"line_end":92,"column_start":5,"column_end":70}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8951939,"byte_end":8951972,"line_start":93,"line_end":93,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8951977,"byte_end":8951980,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ let bytes = b\"bytes\";","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8951985,"byte_end":8952010,"line_start":95,"line_end":95,"column_start":5,"column_end":30}},{"value":"/ // We use a socket pair so that they are assigned","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8952015,"byte_end":8952068,"line_start":96,"line_end":96,"column_start":5,"column_end":58}},{"value":"/ // each other as a peer.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8952073,"byte_end":8952101,"line_start":97,"line_end":97,"column_start":5,"column_end":33}},{"value":"/ let (mut first, mut second) = UnixDatagram::pair()?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8952106,"byte_end":8952162,"line_start":98,"line_end":98,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8952167,"byte_end":8952170,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ let size = first.try_send(bytes)?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8952175,"byte_end":8952213,"line_start":100,"line_end":100,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(size, bytes.len());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8952218,"byte_end":8952252,"line_start":101,"line_end":101,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8952257,"byte_end":8952260,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = vec![0u8; 24];","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8952265,"byte_end":8952300,"line_start":103,"line_end":103,"column_start":5,"column_end":40}},{"value":"/ let size = second.try_recv(&mut buffer)?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8952305,"byte_end":8952350,"line_start":104,"line_end":104,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8952355,"byte_end":8952358,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ let dgram = &buffer.as_slice()[..size];","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8952363,"byte_end":8952406,"line_start":106,"line_end":106,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(dgram, bytes);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8952411,"byte_end":8952440,"line_start":107,"line_end":107,"column_start":5,"column_end":34}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8952445,"byte_end":8952457,"line_start":108,"line_end":108,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8952462,"byte_end":8952469,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8952474,"byte_end":8952481,"line_start":110,"line_end":110,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3850},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8953725,"byte_end":8953736,"line_start":148,"line_end":148,"column_start":12,"column_end":23},"name":"try_send_to","qualname":"<UnixDatagram>::try_send_to","value":"pub fn try_send_to<P>(&mut Self, &[u8], P) -> io::Result<usize> where\nP: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Try to send a datagram to the peer without waiting.","sig":null,"attributes":[{"value":"/ Try to send a datagram to the peer without waiting.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8952595,"byte_end":8952650,"line_start":115,"line_end":115,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8952655,"byte_end":8952658,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8952663,"byte_end":8952670,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8952675,"byte_end":8952695,"line_start":118,"line_end":118,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8952700,"byte_end":8952765,"line_start":119,"line_end":119,"column_start":5,"column_end":70}},{"value":"/ use {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8952770,"byte_end":8952779,"line_start":120,"line_end":120,"column_start":5,"column_end":14}},{"value":"/     tokio::net::UnixDatagram,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8952784,"byte_end":8952817,"line_start":121,"line_end":121,"column_start":5,"column_end":38}},{"value":"/     tempfile::tempdir,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8952822,"byte_end":8952848,"line_start":122,"line_end":122,"column_start":5,"column_end":31}},{"value":"/ };","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8952853,"byte_end":8952859,"line_start":123,"line_end":123,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8952864,"byte_end":8952867,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let bytes = b\"bytes\";","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8952872,"byte_end":8952897,"line_start":125,"line_end":125,"column_start":5,"column_end":30}},{"value":"/ // We use a temporary directory so that the socket","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8952902,"byte_end":8952956,"line_start":126,"line_end":126,"column_start":5,"column_end":59}},{"value":"/ // files left by the bound sockets will get cleaned up.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8952961,"byte_end":8953020,"line_start":127,"line_end":127,"column_start":5,"column_end":64}},{"value":"/ let tmp = tempdir().unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8953025,"byte_end":8953058,"line_start":128,"line_end":128,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8953063,"byte_end":8953066,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ let server_path = tmp.path().join(\"server\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8953071,"byte_end":8953119,"line_start":130,"line_end":130,"column_start":5,"column_end":53}},{"value":"/ let mut server = UnixDatagram::bind(&server_path)?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8953124,"byte_end":8953179,"line_start":131,"line_end":131,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8953184,"byte_end":8953187,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let client_path = tmp.path().join(\"client\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8953192,"byte_end":8953240,"line_start":133,"line_end":133,"column_start":5,"column_end":53}},{"value":"/ let mut client = UnixDatagram::bind(&client_path)?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8953245,"byte_end":8953300,"line_start":134,"line_end":134,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8953305,"byte_end":8953308,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ let size = client.try_send_to(bytes, &server_path)?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8953313,"byte_end":8953369,"line_start":136,"line_end":136,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(size, bytes.len());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8953374,"byte_end":8953408,"line_start":137,"line_end":137,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8953413,"byte_end":8953416,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = vec![0u8; 24];","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8953421,"byte_end":8953456,"line_start":139,"line_end":139,"column_start":5,"column_end":40}},{"value":"/ let (size, addr) = server.try_recv_from(&mut buffer)?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8953461,"byte_end":8953519,"line_start":140,"line_end":140,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8953524,"byte_end":8953527,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ let dgram = &buffer.as_slice()[..size];","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8953532,"byte_end":8953575,"line_start":142,"line_end":142,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(dgram, bytes);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8953580,"byte_end":8953609,"line_start":143,"line_end":143,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(addr.as_pathname().unwrap(), &client_path);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8953614,"byte_end":8953672,"line_start":144,"line_end":144,"column_start":5,"column_end":63}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8953677,"byte_end":8953689,"line_start":145,"line_end":145,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8953694,"byte_end":8953701,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8953706,"byte_end":8953713,"line_start":147,"line_end":147,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3853},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8954973,"byte_end":8954977,"line_start":182,"line_end":182,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnixDatagram>::recv","value":"pub async fn recv<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.\n","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8954921,"byte_end":8954955,"line_start":181,"line_end":181,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3857},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8955168,"byte_end":8955176,"line_start":187,"line_end":187,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<UnixDatagram>::try_recv","value":"pub fn try_recv(&mut Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive a datagram from the peer without waiting.\n","sig":null,"attributes":[{"value":"/ Try to receive a datagram from the peer without waiting.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8955096,"byte_end":8955156,"line_start":186,"line_end":186,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3859},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8955833,"byte_end":8955840,"line_start":208,"line_end":208,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UnixDatagram>::send_to","value":"pub async fn send_to<P, '_, '_>(&'_ mut Self, &'_ [u8], P) -> /*impl Trait*/\nwhere P: AsRef<Path> + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the specified address.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the specified address.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8955761,"byte_end":8955815,"line_start":207,"line_end":207,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3865},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8956561,"byte_end":8956570,"line_start":233,"line_end":233,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UnixDatagram>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.\n","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8956509,"byte_end":8956543,"line_start":232,"line_end":232,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3869},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8956776,"byte_end":8956789,"line_start":238,"line_end":238,"column_start":12,"column_end":25},"name":"try_recv_from","qualname":"<UnixDatagram>::try_recv_from","value":"pub fn try_recv_from(&mut Self, &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive data from the socket without waiting.\n","sig":null,"attributes":[{"value":"/ Try to receive data from the socket without waiting.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8956708,"byte_end":8956764,"line_start":237,"line_end":237,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3871},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8957495,"byte_end":8957505,"line_start":259,"line_end":259,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixDatagram>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this socket is bound to.\n","sig":null,"attributes":[{"value":"/ Returns the local address that this socket is bound to.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8957424,"byte_end":8957483,"line_start":258,"line_end":258,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3872},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8957721,"byte_end":8957730,"line_start":266,"line_end":266,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixDatagram>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket's peer.","sig":null,"attributes":[{"value":"/ Returns the address of this socket's peer.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8957591,"byte_end":8957637,"line_start":263,"line_end":263,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8957642,"byte_end":8957645,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ The `connect` method will connect the socket to a peer.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8957650,"byte_end":8957709,"line_start":265,"line_end":265,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3873},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8957874,"byte_end":8957884,"line_start":271,"line_end":271,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixDatagram>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8957815,"byte_end":8957862,"line_start":270,"line_end":270,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3874},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8958258,"byte_end":8958266,"line_start":280,"line_end":280,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixDatagram>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8957977,"byte_end":8958043,"line_start":275,"line_end":275,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8958048,"byte_end":8958051,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8958056,"byte_end":8958124,"line_start":277,"line_end":277,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8958129,"byte_end":8958199,"line_start":278,"line_end":278,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8958204,"byte_end":8958246,"line_start":279,"line_end":279,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3875},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8958898,"byte_end":8958903,"line_start":294,"line_end":294,"column_start":12,"column_end":17},"name":"split","qualname":"<UnixDatagram>::split","value":"pub fn split<'a>(&'a mut Self) -> (RecvHalf, SendHalf)","parent":null,"children":[],"decl_id":null,"docs":" Split a `UnixDatagram` into a receive half and a send half, which can be used\n to receive and send the datagram concurrently.","sig":null,"attributes":[{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8958497,"byte_end":8958533,"line_start":286,"line_end":286,"column_start":5,"column_end":41}},{"value":"/ Split a `UnixDatagram` into a receive half and a send half, which can be used","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8958538,"byte_end":8958619,"line_start":287,"line_end":287,"column_start":5,"column_end":86}},{"value":"/ to receive and send the datagram concurrently.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8958624,"byte_end":8958674,"line_start":288,"line_end":288,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8958679,"byte_end":8958682,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ This method is more efficient than [`into_split`], but the halves cannot","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8958687,"byte_end":8958763,"line_start":290,"line_end":290,"column_start":5,"column_end":81}},{"value":"/ be moved into independently spawned tasks.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8958768,"byte_end":8958814,"line_start":291,"line_end":291,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8958819,"byte_end":8958822,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: fn@crate::net::UnixDatagram::into_split","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8958827,"byte_end":8958886,"line_start":293,"line_end":293,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3877},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8959563,"byte_end":8959573,"line_start":309,"line_end":309,"column_start":12,"column_end":22},"name":"into_split","qualname":"<UnixDatagram>::into_split","value":"pub fn into_split(Self) -> (OwnedRecvHalf, OwnedSendHalf)","parent":null,"children":[],"decl_id":null,"docs":" Split a `UnixDatagram` into a receive half and a send half, which can be used\n to receive and send the datagram concurrently.","sig":null,"attributes":[{"value":"/ Split a `UnixDatagram` into a receive half and a send half, which can be used","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8958987,"byte_end":8959068,"line_start":298,"line_end":298,"column_start":5,"column_end":86}},{"value":"/ to receive and send the datagram concurrently.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8959073,"byte_end":8959123,"line_start":299,"line_end":299,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8959128,"byte_end":8959131,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ Unlike [`split`], the owned halves can be moved to separate tasks,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8959136,"byte_end":8959206,"line_start":301,"line_end":301,"column_start":5,"column_end":75}},{"value":"/ however this comes at the cost of a heap allocation.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8959211,"byte_end":8959267,"line_start":302,"line_end":302,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8959272,"byte_end":8959275,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ **Note:** Dropping the write half will shut down the write half of the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8959280,"byte_end":8959354,"line_start":304,"line_end":304,"column_start":5,"column_end":79}},{"value":"/ datagram. This is equivalent to calling [`shutdown(Write)`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8959359,"byte_end":8959423,"line_start":305,"line_end":305,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8959428,"byte_end":8959431,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ [`split`]: fn@crate::net::UnixDatagram::split","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8959436,"byte_end":8959485,"line_start":307,"line_end":307,"column_start":5,"column_end":54}},{"value":"/ [`shutdown(Write)`]:fn@crate::net::UnixDatagram::shutdown","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8959490,"byte_end":8959551,"line_start":308,"line_end":308,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":4194},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split.rs","byte_start":8961188,"byte_end":8961196,"line_start":18,"line_end":18,"column_start":12,"column_end":20},"name":"RecvHalf","qualname":"::net::unix::datagram::split::RecvHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed receive half of a [`UnixDatagram`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed receive half of a [`UnixDatagram`], created by [`split`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split.rs","byte_start":8961001,"byte_end":8961071,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split.rs","byte_start":8961072,"byte_end":8961075,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`UnixDatagram`]: UnixDatagram","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split.rs","byte_start":8961076,"byte_end":8961110,"line_start":15,"line_end":15,"column_start":1,"column_end":35}},{"value":"/ [`split`]: crate::net::UnixDatagram::split()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split.rs","byte_start":8961111,"byte_end":8961159,"line_start":16,"line_end":16,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":4201},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split.rs","byte_start":8961405,"byte_end":8961413,"line_start":25,"line_end":25,"column_start":12,"column_end":20},"name":"SendHalf","qualname":"::net::unix::datagram::split::SendHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed send half of a [`UnixDatagram`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed send half of a [`UnixDatagram`], created by [`split`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split.rs","byte_start":8961221,"byte_end":8961288,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split.rs","byte_start":8961289,"byte_end":8961292,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`UnixDatagram`]: UnixDatagram","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split.rs","byte_start":8961293,"byte_end":8961327,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/ [`split`]: crate::net::UnixDatagram::split()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split.rs","byte_start":8961328,"byte_end":8961376,"line_start":23,"line_end":23,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3896},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split.rs","byte_start":8961643,"byte_end":8961652,"line_start":33,"line_end":33,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<RecvHalf>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.\n","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split.rs","byte_start":8961591,"byte_end":8961625,"line_start":32,"line_end":32,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3900},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split.rs","byte_start":8961844,"byte_end":8961848,"line_start":38,"line_end":38,"column_start":18,"column_end":22},"name":"recv","qualname":"<RecvHalf>::recv","value":"pub async fn recv<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.\n","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split.rs","byte_start":8961792,"byte_end":8961826,"line_start":37,"line_end":37,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3905},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split.rs","byte_start":8962063,"byte_end":8962070,"line_start":45,"line_end":45,"column_start":18,"column_end":25},"name":"send_to","qualname":"<SendHalf>::send_to","value":"pub async fn send_to<P, '_, '_>(&'_ mut Self, &'_ [u8], P) -> /*impl Trait*/\nwhere P: AsRef<Path> + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the specified address.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the specified address.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split.rs","byte_start":8961991,"byte_end":8962045,"line_start":44,"line_end":44,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3910},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split.rs","byte_start":8962335,"byte_end":8962339,"line_start":53,"line_end":53,"column_start":18,"column_end":22},"name":"send","qualname":"<SendHalf>::send","value":"pub async fn send<'_, '_>(&'_ mut Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the socket's peer.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the socket's peer.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split.rs","byte_start":8962267,"byte_end":8962317,"line_start":52,"line_end":52,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":4208},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8963554,"byte_end":8963567,"line_start":34,"line_end":34,"column_start":12,"column_end":25},"name":"OwnedSendHalf","qualname":"::net::unix::datagram::split_owned::OwnedSendHalf","value":"OwnedSendHalf {  }","parent":null,"children":[{"krate":0,"index":4209},{"krate":0,"index":4210}],"decl_id":null,"docs":" Owned send half of a [`UnixDatagram`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned send half of a [`UnixDatagram`], created by [`into_split`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8963370,"byte_end":8963439,"line_start":29,"line_end":29,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8963440,"byte_end":8963443,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ [`UnixDatagram`]: UnixDatagram","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8963444,"byte_end":8963478,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ [`into_split`]: UnixDatagram::into_split()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8963479,"byte_end":8963525,"line_start":32,"line_end":32,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":4213},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8963818,"byte_end":8963831,"line_start":44,"line_end":44,"column_start":12,"column_end":25},"name":"OwnedRecvHalf","qualname":"::net::unix::datagram::split_owned::OwnedRecvHalf","value":"OwnedRecvHalf {  }","parent":null,"children":[{"krate":0,"index":4214}],"decl_id":null,"docs":" Owned receive half of a [`UnixDatagram`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned receive half of a [`UnixDatagram`], created by [`into_split`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8963631,"byte_end":8963703,"line_start":39,"line_end":39,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8963704,"byte_end":8963707,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ [`UnixDatagram`]: UnixDatagram","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8963708,"byte_end":8963742,"line_start":41,"line_end":41,"column_start":1,"column_end":35}},{"value":"/ [`into_split`]: UnixDatagram::into_split()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8963743,"byte_end":8963789,"line_start":42,"line_end":42,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":4217},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8964001,"byte_end":8964013,"line_start":51,"line_end":51,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::unix::datagram::split_owned::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating that two halves were not from the same socket, and thus could\n not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating that two halves were not from the same socket, and thus could","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8963867,"byte_end":8963949,"line_start":48,"line_end":48,"column_start":1,"column_end":83}},{"value":"/ not be `reunite`d.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8963950,"byte_end":8963972,"line_start":49,"line_end":49,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":4219},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8964014,"byte_end":8964031,"line_start":51,"line_end":51,"column_start":25,"column_end":42},"name":"0","qualname":"::net::unix::datagram::split_owned::ReuniteError::0","value":"net::unix::datagram::split_owned::OwnedSendHalf","parent":{"krate":0,"index":4217},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4220},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8964033,"byte_end":8964050,"line_start":51,"line_end":51,"column_start":44,"column_end":61},"name":"1","qualname":"::net::unix::datagram::split_owned::ReuniteError::1","value":"net::unix::datagram::split_owned::OwnedRecvHalf","parent":{"krate":0,"index":4217},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3935},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8965160,"byte_end":8965167,"line_start":83,"line_end":83,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedRecvHalf>::reunite","value":"pub fn reunite(Self, OwnedSendHalf) -> Result<UnixDatagram, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a `UnixDatagram` back together and\n recover the original socket. Succeeds only if the two \"halves\"\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a `UnixDatagram` back together and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8964887,"byte_end":8964961,"line_start":78,"line_end":78,"column_start":5,"column_end":79}},{"value":"/ recover the original socket. Succeeds only if the two \"halves\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8964966,"byte_end":8965032,"line_start":79,"line_end":79,"column_start":5,"column_end":71}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8965037,"byte_end":8965089,"line_start":80,"line_end":80,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8965094,"byte_end":8965097,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: UnixDatagram::into_split()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8965102,"byte_end":8965148,"line_start":82,"line_end":82,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3936},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8965328,"byte_end":8965337,"line_start":88,"line_end":88,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<OwnedRecvHalf>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.\n","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8965276,"byte_end":8965310,"line_start":87,"line_end":87,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3940},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8965533,"byte_end":8965537,"line_start":93,"line_end":93,"column_start":18,"column_end":22},"name":"recv","qualname":"<OwnedRecvHalf>::recv","value":"pub async fn recv<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.\n","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8965481,"byte_end":8965515,"line_start":92,"line_end":92,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3945},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8965958,"byte_end":8965965,"line_start":104,"line_end":104,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedSendHalf>::reunite","value":"pub fn reunite(Self, OwnedRecvHalf) -> Result<UnixDatagram, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a `UnixDatagram` back together and\n recover the original socket. Succeeds only if the two \"halves\"\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a `UnixDatagram` back together and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8965685,"byte_end":8965759,"line_start":99,"line_end":99,"column_start":5,"column_end":79}},{"value":"/ recover the original socket. Succeeds only if the two \"halves\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8965764,"byte_end":8965830,"line_start":100,"line_end":100,"column_start":5,"column_end":71}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8965835,"byte_end":8965887,"line_start":101,"line_end":101,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8965892,"byte_end":8965895,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: UnixDatagram::into_split()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8965900,"byte_end":8965946,"line_start":103,"line_end":103,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3946},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8966146,"byte_end":8966153,"line_start":109,"line_end":109,"column_start":18,"column_end":25},"name":"send_to","qualname":"<OwnedSendHalf>::send_to","value":"pub async fn send_to<P, '_, '_>(&'_ mut Self, &'_ [u8], P) -> /*impl Trait*/\nwhere P: AsRef<Path> + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the specified address.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the specified address.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8966074,"byte_end":8966128,"line_start":108,"line_end":108,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3951},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8966422,"byte_end":8966426,"line_start":117,"line_end":117,"column_start":18,"column_end":22},"name":"send","qualname":"<OwnedSendHalf>::send","value":"pub async fn send<'_, '_>(&'_ mut Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the socket's peer.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the socket's peer.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8966354,"byte_end":8966404,"line_start":116,"line_end":116,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3955},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8966747,"byte_end":8966753,"line_start":124,"line_end":124,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedSendHalf>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Destroy the send half, but don't close the send half of the stream\n until the receive half is dropped. If the read half has already been\n dropped, this closes the stream.\n","sig":null,"attributes":[{"value":"/ Destroy the send half, but don't close the send half of the stream","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8966547,"byte_end":8966617,"line_start":121,"line_end":121,"column_start":5,"column_end":75}},{"value":"/ until the receive half is dropped. If the read half has already been","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8966622,"byte_end":8966694,"line_start":122,"line_end":122,"column_start":5,"column_end":77}},{"value":"/ dropped, this closes the stream.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8966699,"byte_end":8966735,"line_start":123,"line_end":123,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":4223},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/incoming.rs","byte_start":8967446,"byte_end":8967454,"line_start":10,"line_end":10,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::net::unix::incoming::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":4225}],"decl_id":null,"docs":" Stream of listeners\n","sig":null,"attributes":[{"value":"/ Stream of listeners","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/incoming.rs","byte_start":8967345,"byte_end":8967368,"line_start":7,"line_end":7,"column_start":1,"column_end":24}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/incoming.rs","byte_start":8967386,"byte_end":8967434,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3980},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/incoming.rs","byte_start":8967963,"byte_end":8967974,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<Incoming>::poll_accept","value":"pub fn poll_accept(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<UnixStream>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to poll `UnixStream` by polling inner `UnixListener` to accept\n connection.","sig":null,"attributes":[{"value":"/ Attempts to poll `UnixStream` by polling inner `UnixListener` to accept","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/incoming.rs","byte_start":8967634,"byte_end":8967709,"line_start":19,"line_end":19,"column_start":5,"column_end":80}},{"value":"/ connection.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/incoming.rs","byte_start":8967714,"byte_end":8967729,"line_start":20,"line_end":20,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/incoming.rs","byte_start":8967734,"byte_end":8967737,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ If `UnixListener` isn't ready yet, `Poll::Pending` is returned and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/incoming.rs","byte_start":8967742,"byte_end":8967812,"line_start":22,"line_end":22,"column_start":5,"column_end":75}},{"value":"/ current task will be notified by a waker.  Otherwise `Poll::Ready` with","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/incoming.rs","byte_start":8967817,"byte_end":8967892,"line_start":23,"line_end":23,"column_start":5,"column_end":80}},{"value":"/ `Result` containing `UnixStream` will be returned.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/incoming.rs","byte_start":8967897,"byte_end":8967951,"line_start":24,"line_end":24,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":4229},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8970300,"byte_end":8970312,"line_start":49,"line_end":49,"column_start":16,"column_end":28},"name":"UnixListener","qualname":"::net::unix::listener::UnixListener","value":"UnixListener {  }","parent":null,"children":[{"krate":0,"index":4230}],"decl_id":null,"docs":" A Unix socket which can accept connections from other Unix sockets.","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"uds\"))","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":23638,"byte_end":23672,"line_start":350,"line_end":350,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4006},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8970811,"byte_end":8970815,"line_start":64,"line_end":64,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixListener>::bind","value":"pub fn bind<P>(P) -> io::Result<UnixListener> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixListener` bound to the specified path.","sig":null,"attributes":[{"value":"/ Creates a new `UnixListener` bound to the specified path.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8970396,"byte_end":8970457,"line_start":55,"line_end":55,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8970462,"byte_end":8970465,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8970470,"byte_end":8970482,"line_start":57,"line_end":57,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8970487,"byte_end":8970490,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8970495,"byte_end":8970555,"line_start":59,"line_end":59,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8970560,"byte_end":8970563,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8970568,"byte_end":8970638,"line_start":61,"line_end":61,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8970643,"byte_end":8970716,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8970721,"byte_end":8970799,"line_start":63,"line_end":63,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":4008},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8971659,"byte_end":8971667,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixListener>::from_std","value":"pub fn from_std(net::UnixListener) -> io::Result<UnixListener>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a `UnixListener` in the standard library and returns a\n nonblocking `UnixListener` from this crate.","sig":null,"attributes":[{"value":"/ Consumes a `UnixListener` in the standard library and returns a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8971044,"byte_end":8971111,"line_start":73,"line_end":73,"column_start":5,"column_end":72}},{"value":"/ nonblocking `UnixListener` from this crate.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8971116,"byte_end":8971163,"line_start":74,"line_end":74,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8971168,"byte_end":8971171,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ The returned listener will be associated with the given event loop","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8971176,"byte_end":8971246,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ specified by `handle` and is ready to perform I/O.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8971251,"byte_end":8971305,"line_start":77,"line_end":77,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8971310,"byte_end":8971313,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8971318,"byte_end":8971330,"line_start":79,"line_end":79,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8971335,"byte_end":8971338,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8971343,"byte_end":8971403,"line_start":81,"line_end":81,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8971408,"byte_end":8971411,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8971416,"byte_end":8971486,"line_start":83,"line_end":83,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8971491,"byte_end":8971564,"line_start":84,"line_end":84,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8971569,"byte_end":8971647,"line_start":85,"line_end":85,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":4009},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8971954,"byte_end":8971964,"line_start":93,"line_end":93,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.\n","sig":null,"attributes":[{"value":"/ Returns the local socket address of this listener.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8971888,"byte_end":8971942,"line_start":92,"line_end":92,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":4010},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8972109,"byte_end":8972119,"line_start":98,"line_end":98,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixListener>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8972050,"byte_end":8972097,"line_start":97,"line_end":97,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4011},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8972285,"byte_end":8972291,"line_start":103,"line_end":103,"column_start":18,"column_end":24},"name":"accept","qualname":"<UnixListener>::accept","value":"pub async fn accept<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.\n","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection to this listener.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8972212,"byte_end":8972267,"line_start":102,"line_end":102,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4015},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8972619,"byte_end":8972630,"line_start":111,"line_end":111,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<UnixListener>::poll_accept","value":"pub fn poll_accept(&mut Self, &mut Context)\n-> Poll<io::Result<(UnixStream, SocketAddr)>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to accept a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Polls to accept a new incoming connection to this listener.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8972405,"byte_end":8972468,"line_start":107,"line_end":107,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8972473,"byte_end":8972476,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ If there is no connection to accept, `Poll::Pending` is returned and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8972481,"byte_end":8972553,"line_start":109,"line_end":109,"column_start":5,"column_end":77}},{"value":"/ the current task will be notified by a waker.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8972558,"byte_end":8972607,"line_start":110,"line_end":110,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4017},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8974960,"byte_end":8974968,"line_start":178,"line_end":178,"column_start":12,"column_end":20},"name":"incoming","qualname":"<UnixListener>::incoming","value":"pub fn incoming(&mut Self) -> Incoming","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the connections being received on this listener.","sig":null,"attributes":[{"value":"/ Returns a stream over the connections being received on this listener.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8973596,"byte_end":8973670,"line_start":141,"line_end":141,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8973675,"byte_end":8973678,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Note that `UnixListener` also directly implements `Stream`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8973683,"byte_end":8973746,"line_start":143,"line_end":143,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8973751,"byte_end":8973754,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ The returned stream will never return `None` and will also not yield the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8973759,"byte_end":8973835,"line_start":145,"line_end":145,"column_start":5,"column_end":81}},{"value":"/ peer's `SocketAddr` structure. Iterating over it is equivalent to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8973840,"byte_end":8973909,"line_start":146,"line_end":146,"column_start":5,"column_end":74}},{"value":"/ calling accept in a loop.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8973914,"byte_end":8973943,"line_start":147,"line_end":147,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8973948,"byte_end":8973951,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8973956,"byte_end":8973968,"line_start":149,"line_end":149,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8973973,"byte_end":8973976,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ Note that accepting a connection can lead to various errors and not all","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8973981,"byte_end":8974056,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"/ of them are necessarily fatal ‒ for example having too many open file","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8974061,"byte_end":8974136,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ descriptors or the other side closing the connection while it waits in","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8974141,"byte_end":8974215,"line_start":153,"line_end":153,"column_start":5,"column_end":79}},{"value":"/ an accept queue. These would terminate the stream if not handled in any","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8974220,"byte_end":8974295,"line_start":154,"line_end":154,"column_start":5,"column_end":80}},{"value":"/ way.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8974300,"byte_end":8974308,"line_start":155,"line_end":155,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8974313,"byte_end":8974316,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8974321,"byte_end":8974335,"line_start":157,"line_end":157,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8974340,"byte_end":8974343,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8974348,"byte_end":8974361,"line_start":159,"line_end":159,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixListener;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8974366,"byte_end":8974399,"line_start":160,"line_end":160,"column_start":5,"column_end":38}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8974404,"byte_end":8974437,"line_start":161,"line_end":161,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8974442,"byte_end":8974445,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8974450,"byte_end":8974468,"line_start":163,"line_end":163,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8974473,"byte_end":8974494,"line_start":164,"line_end":164,"column_start":5,"column_end":26}},{"value":"/     let mut listener = UnixListener::bind(\"/path/to/the/socket\").unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8974499,"byte_end":8974577,"line_start":165,"line_end":165,"column_start":5,"column_end":83}},{"value":"/     let mut incoming = listener.incoming();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8974582,"byte_end":8974629,"line_start":166,"line_end":166,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8974634,"byte_end":8974637,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/     while let Some(stream) = incoming.next().await {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8974642,"byte_end":8974698,"line_start":168,"line_end":168,"column_start":5,"column_end":61}},{"value":"/         match stream {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8974703,"byte_end":8974729,"line_start":169,"line_end":169,"column_start":5,"column_end":31}},{"value":"/             Ok(stream) => {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8974734,"byte_end":8974765,"line_start":170,"line_end":170,"column_start":5,"column_end":36}},{"value":"/                 println!(\"new client!\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8974770,"byte_end":8974814,"line_start":171,"line_end":171,"column_start":5,"column_end":49}},{"value":"/             }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8974819,"byte_end":8974836,"line_start":172,"line_end":172,"column_start":5,"column_end":22}},{"value":"/             Err(e) => { /* connection failed */ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8974841,"byte_end":8974894,"line_start":173,"line_end":173,"column_start":5,"column_end":58}},{"value":"/         }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8974899,"byte_end":8974912,"line_start":174,"line_end":174,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8974917,"byte_end":8974926,"line_start":175,"line_end":175,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8974931,"byte_end":8974936,"line_start":176,"line_end":176,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8974941,"byte_end":8974948,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4231},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split.rs","byte_start":8977439,"byte_end":8977447,"line_start":30,"line_end":30,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::net::unix::split::ReadHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed read half of a [`UnixStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed read half of a [`UnixStream`], created by [`split`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split.rs","byte_start":8977018,"byte_end":8977083,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split.rs","byte_start":8977084,"byte_end":8977087,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Reading from a `ReadHalf` is usually done using the convenience methods found on the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split.rs","byte_start":8977088,"byte_end":8977176,"line_start":22,"line_end":22,"column_start":1,"column_end":89}},{"value":"/ [`AsyncReadExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split.rs","byte_start":8977177,"byte_end":8977254,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split.rs","byte_start":8977255,"byte_end":8977258,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`UnixStream`]: UnixStream","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split.rs","byte_start":8977259,"byte_end":8977289,"line_start":25,"line_end":25,"column_start":1,"column_end":31}},{"value":"/ [`split`]: UnixStream::split()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split.rs","byte_start":8977290,"byte_end":8977324,"line_start":26,"line_end":26,"column_start":1,"column_end":35}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split.rs","byte_start":8977325,"byte_end":8977376,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split.rs","byte_start":8977377,"byte_end":8977410,"line_start":28,"line_end":28,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":4238},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split.rs","byte_start":8978157,"byte_end":8978166,"line_start":47,"line_end":47,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::net::unix::split::WriteHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed write half of a [`UnixStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed write half of a [`UnixStream`], created by [`split`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split.rs","byte_start":8977470,"byte_end":8977536,"line_start":32,"line_end":32,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split.rs","byte_start":8977537,"byte_end":8977540,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implemenation of this type, [`poll_shutdown`] will","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split.rs","byte_start":8977541,"byte_end":8977627,"line_start":34,"line_end":34,"column_start":1,"column_end":87}},{"value":"/ shut down the UnixStream stream in the write direction.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split.rs","byte_start":8977628,"byte_end":8977687,"line_start":35,"line_end":35,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split.rs","byte_start":8977688,"byte_end":8977691,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Writing to an `WriteHalf` is usually done using the convenience methods found","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split.rs","byte_start":8977692,"byte_end":8977773,"line_start":37,"line_end":37,"column_start":1,"column_end":82}},{"value":"/ on the [`AsyncWriteExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split.rs","byte_start":8977774,"byte_end":8977859,"line_start":38,"line_end":38,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split.rs","byte_start":8977860,"byte_end":8977863,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`UnixStream`]: UnixStream","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split.rs","byte_start":8977864,"byte_end":8977894,"line_start":40,"line_end":40,"column_start":1,"column_end":31}},{"value":"/ [`split`]: UnixStream::split()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split.rs","byte_start":8977895,"byte_end":8977929,"line_start":41,"line_end":41,"column_start":1,"column_end":35}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split.rs","byte_start":8977930,"byte_end":8977977,"line_start":42,"line_end":42,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split.rs","byte_start":8977978,"byte_end":8978040,"line_start":43,"line_end":43,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split.rs","byte_start":8978041,"byte_end":8978094,"line_start":44,"line_end":44,"column_start":1,"column_end":54}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split.rs","byte_start":8978095,"byte_end":8978128,"line_start":45,"line_end":45,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":4245},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8980466,"byte_end":8980479,"line_start":32,"line_end":32,"column_start":12,"column_end":25},"name":"OwnedReadHalf","qualname":"::net::unix::split_owned::OwnedReadHalf","value":"OwnedReadHalf {  }","parent":null,"children":[{"krate":0,"index":4246}],"decl_id":null,"docs":" Owned read half of a [`UnixStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned read half of a [`UnixStream`], created by [`into_split`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8980003,"byte_end":8980070,"line_start":22,"line_end":22,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8980071,"byte_end":8980074,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Reading from an `OwnedReadHalf` is usually done using the convenience methods found","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8980075,"byte_end":8980162,"line_start":24,"line_end":24,"column_start":1,"column_end":88}},{"value":"/ on the [`AsyncReadExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8980163,"byte_end":8980247,"line_start":25,"line_end":25,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8980248,"byte_end":8980251,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`UnixStream`]: crate::net::UnixStream","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8980252,"byte_end":8980294,"line_start":27,"line_end":27,"column_start":1,"column_end":43}},{"value":"/ [`into_split`]: crate::net::UnixStream::into_split()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8980295,"byte_end":8980351,"line_start":28,"line_end":28,"column_start":1,"column_end":57}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8980352,"byte_end":8980403,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8980404,"byte_end":8980437,"line_start":30,"line_end":30,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":4249},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8981313,"byte_end":8981327,"line_start":53,"line_end":53,"column_start":12,"column_end":26},"name":"OwnedWriteHalf","qualname":"::net::unix::split_owned::OwnedWriteHalf","value":"OwnedWriteHalf {  }","parent":null,"children":[{"krate":0,"index":4250},{"krate":0,"index":4251}],"decl_id":null,"docs":" Owned write half of a [`UnixStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned write half of a [`UnixStream`], created by [`into_split`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8980513,"byte_end":8980581,"line_start":36,"line_end":36,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8980582,"byte_end":8980585,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implementation of this type,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8980586,"byte_end":8980650,"line_start":38,"line_end":38,"column_start":1,"column_end":65}},{"value":"/ [`poll_shutdown`] will shut down the stream in the write direction.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8980651,"byte_end":8980722,"line_start":39,"line_end":39,"column_start":1,"column_end":72}},{"value":"/ Dropping the write half will also shut down the write half of the stream.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8980723,"byte_end":8980800,"line_start":40,"line_end":40,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8980801,"byte_end":8980804,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Writing to an `OwnedWriteHalf` is usually done using the convenience methods","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8980805,"byte_end":8980885,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/ found on the [`AsyncWriteExt`] trait. Examples import this trait through","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8980886,"byte_end":8980962,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/ [the prelude].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8980963,"byte_end":8980981,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8980982,"byte_end":8980985,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ [`UnixStream`]: crate::net::UnixStream","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8980986,"byte_end":8981028,"line_start":46,"line_end":46,"column_start":1,"column_end":43}},{"value":"/ [`into_split`]: crate::net::UnixStream::into_split()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8981029,"byte_end":8981085,"line_start":47,"line_end":47,"column_start":1,"column_end":57}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8981086,"byte_end":8981133,"line_start":48,"line_end":48,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8981134,"byte_end":8981196,"line_start":49,"line_end":49,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8981197,"byte_end":8981250,"line_start":50,"line_end":50,"column_start":1,"column_end":54}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8981251,"byte_end":8981284,"line_start":51,"line_end":51,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":4254},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8982296,"byte_end":8982308,"line_start":87,"line_end":87,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::unix::split_owned::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating that two halves were not from the same socket, and thus could\n not be reunited.\n","sig":null,"attributes":[{"value":"/ Error indicating that two halves were not from the same socket, and thus could","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8982164,"byte_end":8982246,"line_start":84,"line_end":84,"column_start":1,"column_end":83}},{"value":"/ not be reunited.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8982247,"byte_end":8982267,"line_start":85,"line_end":85,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":4256},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8982309,"byte_end":8982326,"line_start":87,"line_end":87,"column_start":25,"column_end":42},"name":"0","qualname":"::net::unix::split_owned::ReuniteError::0","value":"net::unix::split_owned::OwnedReadHalf","parent":{"krate":0,"index":4254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4257},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8982328,"byte_end":8982346,"line_start":87,"line_end":87,"column_start":44,"column_end":62},"name":"1","qualname":"::net::unix::split_owned::ReuniteError::1","value":"net::unix::split_owned::OwnedWriteHalf","parent":{"krate":0,"index":4254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4081},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8982906,"byte_end":8982913,"line_start":106,"line_end":106,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedReadHalf>::reunite","value":"pub fn reunite(Self, OwnedWriteHalf) -> Result<UnixStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `UnixStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `UnixStream` back together and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8982629,"byte_end":8982699,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8982704,"byte_end":8982768,"line_start":102,"line_end":102,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8982773,"byte_end":8982825,"line_start":103,"line_end":103,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8982830,"byte_end":8982833,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: crate::net::UnixStream::into_split()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8982838,"byte_end":8982894,"line_start":105,"line_end":105,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4086},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8983654,"byte_end":8983661,"line_start":131,"line_end":131,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedWriteHalf>::reunite","value":"pub fn reunite(Self, OwnedReadHalf) -> Result<UnixStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `UnixStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `UnixStream` back together and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8983377,"byte_end":8983447,"line_start":126,"line_end":126,"column_start":5,"column_end":75}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8983452,"byte_end":8983516,"line_start":127,"line_end":127,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8983521,"byte_end":8983573,"line_start":128,"line_end":128,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8983578,"byte_end":8983581,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: crate::net::UnixStream::into_split()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8983586,"byte_end":8983642,"line_start":130,"line_end":130,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4087},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8983967,"byte_end":8983973,"line_start":138,"line_end":138,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedWriteHalf>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Destroy the write half, but don't close the write half of the stream\n until the read half is dropped. If the read half has already been\n dropped, this closes the stream.\n","sig":null,"attributes":[{"value":"/ Destroy the write half, but don't close the write half of the stream","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8983768,"byte_end":8983840,"line_start":135,"line_end":135,"column_start":5,"column_end":77}},{"value":"/ until the read half is dropped. If the read half has already been","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8983845,"byte_end":8983914,"line_start":136,"line_end":136,"column_start":5,"column_end":74}},{"value":"/ dropped, this closes the stream.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8983919,"byte_end":8983955,"line_start":137,"line_end":137,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":4260},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8986063,"byte_end":8986073,"line_start":24,"line_end":24,"column_start":16,"column_end":26},"name":"UnixStream","qualname":"::net::unix::stream::UnixStream","value":"UnixStream {  }","parent":null,"children":[{"krate":0,"index":4261}],"decl_id":null,"docs":" A structure representing a connected Unix socket.","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"uds\"))","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":23638,"byte_end":23672,"line_start":350,"line_end":350,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4139},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8986395,"byte_end":8986402,"line_start":35,"line_end":35,"column_start":18,"column_end":25},"name":"connect","qualname":"<UnixStream>::connect","value":"pub async fn connect<P>(P) -> /*impl Trait*/ where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Connects to the socket named by `path`.","sig":null,"attributes":[{"value":"/ Connects to the socket named by `path`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8986153,"byte_end":8986196,"line_start":30,"line_end":30,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8986201,"byte_end":8986204,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ This function will create a new Unix socket and connect to the path","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8986209,"byte_end":8986280,"line_start":32,"line_end":32,"column_start":5,"column_end":76}},{"value":"/ specified, associating the returned stream with the default event loop's","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8986285,"byte_end":8986361,"line_start":33,"line_end":33,"column_start":5,"column_end":81}},{"value":"/ handle.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8986366,"byte_end":8986377,"line_start":34,"line_end":34,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4144},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8987287,"byte_end":8987295,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixStream>::from_std","value":"pub fn from_std(net::UnixStream) -> io::Result<UnixStream>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a `UnixStream` in the standard library and returns a\n nonblocking `UnixStream` from this crate.","sig":null,"attributes":[{"value":"/ Consumes a `UnixStream` in the standard library and returns a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8986678,"byte_end":8986743,"line_start":46,"line_end":46,"column_start":5,"column_end":70}},{"value":"/ nonblocking `UnixStream` from this crate.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8986748,"byte_end":8986793,"line_start":47,"line_end":47,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8986798,"byte_end":8986801,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be associated with the given event loop","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8986806,"byte_end":8986874,"line_start":49,"line_end":49,"column_start":5,"column_end":73}},{"value":"/ specified by `handle` and is ready to perform I/O.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8986879,"byte_end":8986933,"line_start":50,"line_end":50,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8986938,"byte_end":8986941,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8986946,"byte_end":8986958,"line_start":52,"line_end":52,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8986963,"byte_end":8986966,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8986971,"byte_end":8987031,"line_start":54,"line_end":54,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8987036,"byte_end":8987039,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8987044,"byte_end":8987114,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8987119,"byte_end":8987192,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8987197,"byte_end":8987275,"line_start":58,"line_end":58,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":4145},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8987779,"byte_end":8987783,"line_start":71,"line_end":71,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixStream>::pair","value":"pub fn pair() -> io::Result<(UnixStream, UnixStream)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8987499,"byte_end":8987548,"line_start":66,"line_end":66,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8987553,"byte_end":8987556,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This function will create a pair of interconnected Unix sockets for","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8987561,"byte_end":8987632,"line_start":68,"line_end":68,"column_start":5,"column_end":76}},{"value":"/ communicating back and forth between one another. Each socket will","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8987637,"byte_end":8987707,"line_start":69,"line_end":69,"column_start":5,"column_end":75}},{"value":"/ be associated with the default event loop's handle.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8987712,"byte_end":8987767,"line_start":70,"line_end":70,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4147},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8988224,"byte_end":8988234,"line_start":85,"line_end":85,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this connection.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8988144,"byte_end":8988212,"line_start":84,"line_end":84,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":4148},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8988401,"byte_end":8988410,"line_start":90,"line_end":90,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote half of this connection.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8988320,"byte_end":8988389,"line_start":89,"line_end":89,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":4149},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8988589,"byte_end":8988598,"line_start":95,"line_end":95,"column_start":12,"column_end":21},"name":"peer_cred","qualname":"<UnixStream>::peer_cred","value":"pub fn peer_cred(&Self) -> io::Result<UCred>","parent":null,"children":[],"decl_id":null,"docs":" Returns effective credentials of the process which called `connect` or `pair`.\n","sig":null,"attributes":[{"value":"/ Returns effective credentials of the process which called `connect` or `pair`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8988495,"byte_end":8988577,"line_start":94,"line_end":94,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":4150},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8988734,"byte_end":8988744,"line_start":100,"line_end":100,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixStream>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8988675,"byte_end":8988722,"line_start":99,"line_end":99,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4151},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8989118,"byte_end":8989126,"line_start":109,"line_end":109,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixStream>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8988837,"byte_end":8988903,"line_start":104,"line_end":104,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8988908,"byte_end":8988911,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8988916,"byte_end":8988984,"line_start":106,"line_end":106,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8988989,"byte_end":8989059,"line_start":107,"line_end":107,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8989064,"byte_end":8989106,"line_start":108,"line_end":108,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4152},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8989729,"byte_end":8989734,"line_start":123,"line_end":123,"column_start":12,"column_end":17},"name":"split","qualname":"<UnixStream>::split","value":"pub fn split<'a>(&'a mut Self) -> (ReadHalf, WriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Split a `UnixStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8989357,"byte_end":8989393,"line_start":115,"line_end":115,"column_start":5,"column_end":41}},{"value":"/ Split a `UnixStream` into a read half and a write half, which can be used","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8989398,"byte_end":8989475,"line_start":116,"line_end":116,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8989480,"byte_end":8989526,"line_start":117,"line_end":117,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8989531,"byte_end":8989534,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ This method is more efficient than [`into_split`], but the halves cannot be","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8989539,"byte_end":8989618,"line_start":119,"line_end":119,"column_start":5,"column_end":84}},{"value":"/ moved into independently spawned tasks.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8989623,"byte_end":8989666,"line_start":120,"line_end":120,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8989671,"byte_end":8989674,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: Self::into_split()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8989679,"byte_end":8989717,"line_start":122,"line_end":122,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":4154},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8990366,"byte_end":8990376,"line_start":138,"line_end":138,"column_start":12,"column_end":22},"name":"into_split","qualname":"<UnixStream>::into_split","value":"pub fn into_split(Self) -> (OwnedReadHalf, OwnedWriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `UnixStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Splits a `UnixStream` into a read half and a write half, which can be used","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8989819,"byte_end":8989897,"line_start":127,"line_end":127,"column_start":5,"column_end":83}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8989902,"byte_end":8989948,"line_start":128,"line_end":128,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8989953,"byte_end":8989956,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ Unlike [`split`], the owned halves can be moved to separate tasks, however","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8989961,"byte_end":8990039,"line_start":130,"line_end":130,"column_start":5,"column_end":83}},{"value":"/ this comes at the cost of a heap allocation.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8990044,"byte_end":8990092,"line_start":131,"line_end":131,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8990097,"byte_end":8990100,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ **Note:** Dropping the write half will shut down the write half of the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8990105,"byte_end":8990179,"line_start":133,"line_end":133,"column_start":5,"column_end":79}},{"value":"/ stream. This is equivalent to calling [`shutdown(Write)`] on the `UnixStream`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8990184,"byte_end":8990266,"line_start":134,"line_end":134,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8990271,"byte_end":8990274,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ [`split`]: Self::split()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8990279,"byte_end":8990307,"line_start":136,"line_end":136,"column_start":5,"column_end":33}},{"value":"/ [`shutdown(Write)`]: fn@Self::shutdown","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8990312,"byte_end":8990354,"line_start":137,"line_end":137,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":4262},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/ucred.rs","byte_start":8993960,"byte_end":8993965,"line_start":5,"line_end":5,"column_start":12,"column_end":17},"name":"UCred","qualname":"::net::unix::ucred::UCred","value":"UCred { uid, gid }","parent":null,"children":[{"krate":0,"index":4263},{"krate":0,"index":4264}],"decl_id":null,"docs":" Credentials of a process\n","sig":null,"attributes":[{"value":"/ Credentials of a process","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/ucred.rs","byte_start":8993869,"byte_end":8993897,"line_start":3,"line_end":3,"column_start":1,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":4263},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/ucred.rs","byte_start":8994013,"byte_end":8994016,"line_start":7,"line_end":7,"column_start":9,"column_end":12},"name":"uid","qualname":"::net::unix::ucred::UCred::uid","value":"u32","parent":{"krate":0,"index":4262},"children":[],"decl_id":null,"docs":" UID (user ID) of the process\n","sig":null,"attributes":[{"value":"/ UID (user ID) of the process","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/ucred.rs","byte_start":8993972,"byte_end":8994004,"line_start":6,"line_end":6,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":4264},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/ucred.rs","byte_start":8994071,"byte_end":8994074,"line_start":9,"line_end":9,"column_start":9,"column_end":12},"name":"gid","qualname":"::net::unix::ucred::UCred::gid","value":"u32","parent":{"krate":0,"index":4262},"children":[],"decl_id":null,"docs":" GID (group ID) of the process\n","sig":null,"attributes":[{"value":"/ GID (group ID) of the process","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/ucred.rs","byte_start":8994029,"byte_end":8994062,"line_start":8,"line_end":8,"column_start":5,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":552},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/park/mod.rs","byte_start":93907,"byte_end":93913,"line_start":55,"line_end":55,"column_start":10,"column_end":16},"name":"Unpark","qualname":"::park::Park::Unpark","value":"type Unpark: Unpark;","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" Unpark handle type for the `Park` implementation.\n","sig":null,"attributes":[{"value":"/ Unpark handle type for the `Park` implementation.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/park/mod.rs","byte_start":93844,"byte_end":93897,"line_start":54,"line_end":54,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":553},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/park/mod.rs","byte_start":93966,"byte_end":93971,"line_start":58,"line_end":58,"column_start":10,"column_end":15},"name":"Error","qualname":"::park::Park::Error","value":"type Error;","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" Error returned by `park`\n","sig":null,"attributes":[{"value":"/ Error returned by `park`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/park/mod.rs","byte_start":93928,"byte_end":93956,"line_start":57,"line_end":57,"column_start":5,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":564},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/prelude.rs","parent":null,"children":[{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":4383},{"krate":0,"index":4384},{"krate":0,"index":4385},{"krate":0,"index":4386},{"krate":0,"index":4387}],"decl_id":null,"docs":" A \"prelude\" for users of the `tokio` crate.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/prelude.rs","byte_start":105933,"byte_end":105951,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/ A \"prelude\" for users of the `tokio` crate.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/prelude.rs","byte_start":105953,"byte_end":106000,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/prelude.rs","byte_start":106001,"byte_end":106004,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This prelude is similar to the standard library's prelude in that you'll","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/prelude.rs","byte_start":106005,"byte_end":106081,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ almost always want to import its entire contents, but unlike the standard","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/prelude.rs","byte_start":106082,"byte_end":106159,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ library's prelude you'll have to do so manually:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/prelude.rs","byte_start":106160,"byte_end":106212,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/prelude.rs","byte_start":106213,"byte_end":106216,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/prelude.rs","byte_start":106217,"byte_end":106224,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # #![allow(warnings)]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/prelude.rs","byte_start":106225,"byte_end":106250,"line_start":10,"line_end":10,"column_start":1,"column_end":26}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/prelude.rs","byte_start":106251,"byte_end":106277,"line_start":11,"line_end":11,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/prelude.rs","byte_start":106278,"byte_end":106285,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/prelude.rs","byte_start":106286,"byte_end":106289,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The prelude may grow over time as additional items see ubiquitous use.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/prelude.rs","byte_start":106290,"byte_end":106364,"line_start":14,"line_end":14,"column_start":1,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":4388},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"process","qualname":"::process","value":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","parent":null,"children":[{"krate":0,"index":4389},{"krate":0,"index":4538},{"krate":0,"index":4545},{"krate":0,"index":4546},{"krate":0,"index":4547},{"krate":0,"index":4548},{"krate":0,"index":4549},{"krate":0,"index":4550},{"krate":0,"index":4551},{"krate":0,"index":4552},{"krate":0,"index":4553},{"krate":0,"index":4554},{"krate":0,"index":4555},{"krate":0,"index":4556},{"krate":0,"index":4557},{"krate":0,"index":4558},{"krate":0,"index":4559},{"krate":0,"index":4560},{"krate":0,"index":4561},{"krate":0,"index":4699},{"krate":0,"index":4702},{"krate":0,"index":4562},{"krate":0,"index":4567},{"krate":0,"index":4609},{"krate":0,"index":4704},{"krate":0,"index":4708},{"krate":0,"index":4611},{"krate":0,"index":4614},{"krate":0,"index":4617},{"krate":0,"index":4711},{"krate":0,"index":4716},{"krate":0,"index":4623},{"krate":0,"index":4637},{"krate":0,"index":4718},{"krate":0,"index":4720},{"krate":0,"index":4722},{"krate":0,"index":4724},{"krate":0,"index":4726},{"krate":0,"index":4728},{"krate":0,"index":4640},{"krate":0,"index":4644},{"krate":0,"index":4647},{"krate":0,"index":4650}],"decl_id":null,"docs":" An implementation of asynchronous process management for Tokio.","sig":null,"attributes":[{"value":"cfg(feature = \"process\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":20620,"byte_end":20647,"line_start":199,"line_end":199,"column_start":13,"column_end":40}},{"value":"cfg(not(loom))","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":20723,"byte_end":20740,"line_start":201,"line_end":201,"column_start":13,"column_end":30}},{"value":"/ An implementation of asynchronous process management for Tokio.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":8999541,"byte_end":8999608,"line_start":1,"line_end":1,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":8999609,"byte_end":8999612,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides a [`Command`] struct that imitates the interface of the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":8999613,"byte_end":8999693,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ [`std::process::Command`] type in the standard library, but provides asynchronous versions of","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":8999694,"byte_end":8999791,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"/ functions that create processes. These functions (`spawn`, `status`, `output` and their","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":8999792,"byte_end":8999883,"line_start":5,"line_end":5,"column_start":1,"column_end":92}},{"value":"/ variants) return \"future aware\" types that interoperate with Tokio. The asynchronous process","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":8999884,"byte_end":8999980,"line_start":6,"line_end":6,"column_start":1,"column_end":97}},{"value":"/ support is provided through signal handling on Unix and system APIs on Windows.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":8999981,"byte_end":9000064,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9000065,"byte_end":9000068,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`std::process::Command`]: std::process::Command","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9000069,"byte_end":9000121,"line_start":9,"line_end":9,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9000122,"byte_end":9000125,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9000126,"byte_end":9000140,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9000141,"byte_end":9000144,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Here's an example program which will spawn `echo hello world` and then wait","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9000145,"byte_end":9000224,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ for it complete.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9000225,"byte_end":9000245,"line_start":14,"line_end":14,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9000246,"byte_end":9000249,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9000250,"byte_end":9000263,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9000264,"byte_end":9000296,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9000297,"byte_end":9000300,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9000301,"byte_end":9000319,"line_start":19,"line_end":19,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9000320,"byte_end":9000383,"line_start":20,"line_end":20,"column_start":1,"column_end":64}},{"value":"/     // The usage is the same as with the standard library's `Command` type, however the value","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9000384,"byte_end":9000481,"line_start":21,"line_end":21,"column_start":1,"column_end":98}},{"value":"/     // returned from `spawn` is a `Result` containing a `Future`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9000482,"byte_end":9000551,"line_start":22,"line_end":22,"column_start":1,"column_end":70}},{"value":"/     let child = Command::new(\"echo\").arg(\"hello\").arg(\"world\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9000552,"byte_end":9000618,"line_start":23,"line_end":23,"column_start":1,"column_end":67}},{"value":"/                         .spawn();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9000619,"byte_end":9000656,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9000657,"byte_end":9000660,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/     // Make sure our child succeeded in spawning and process the result","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9000661,"byte_end":9000736,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/     let future = child.expect(\"failed to spawn\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9000737,"byte_end":9000790,"line_start":27,"line_end":27,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9000791,"byte_end":9000794,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     // Await until the future (and the command) completes","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9000795,"byte_end":9000856,"line_start":29,"line_end":29,"column_start":1,"column_end":62}},{"value":"/     let status = future.await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9000857,"byte_end":9000892,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/     println!(\"the command exited with: {}\", status);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9000893,"byte_end":9000949,"line_start":31,"line_end":31,"column_start":1,"column_end":57}},{"value":"/     Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9000950,"byte_end":9000964,"line_start":32,"line_end":32,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9000965,"byte_end":9000970,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9000971,"byte_end":9000978,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9000979,"byte_end":9000982,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Next, let's take a look at an example where we not only spawn `echo hello","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9000983,"byte_end":9001060,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/ world` but we also capture its output.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9001061,"byte_end":9001103,"line_start":37,"line_end":37,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9001104,"byte_end":9001107,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9001108,"byte_end":9001121,"line_start":39,"line_end":39,"column_start":1,"column_end":14}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9001122,"byte_end":9001154,"line_start":40,"line_end":40,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9001155,"byte_end":9001158,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9001159,"byte_end":9001177,"line_start":42,"line_end":42,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9001178,"byte_end":9001241,"line_start":43,"line_end":43,"column_start":1,"column_end":64}},{"value":"/     // Like above, but use `output` which returns a future instead of","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9001242,"byte_end":9001315,"line_start":44,"line_end":44,"column_start":1,"column_end":74}},{"value":"/     // immediately returning the `Child`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9001316,"byte_end":9001361,"line_start":45,"line_end":45,"column_start":1,"column_end":46}},{"value":"/     let output = Command::new(\"echo\").arg(\"hello\").arg(\"world\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9001362,"byte_end":9001429,"line_start":46,"line_end":46,"column_start":1,"column_end":68}},{"value":"/                         .output();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9001430,"byte_end":9001468,"line_start":47,"line_end":47,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9001469,"byte_end":9001472,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     let output = output.await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9001473,"byte_end":9001508,"line_start":49,"line_end":49,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9001509,"byte_end":9001512,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     assert!(output.status.success());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9001513,"byte_end":9001554,"line_start":51,"line_end":51,"column_start":1,"column_end":42}},{"value":"/     assert_eq!(output.stdout, b\"hello world\\n\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9001555,"byte_end":9001607,"line_start":52,"line_end":52,"column_start":1,"column_end":53}},{"value":"/     Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9001608,"byte_end":9001622,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9001623,"byte_end":9001628,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9001629,"byte_end":9001636,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9001637,"byte_end":9001640,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ We can also read input line by line.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9001641,"byte_end":9001681,"line_start":57,"line_end":57,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9001682,"byte_end":9001685,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9001686,"byte_end":9001699,"line_start":59,"line_end":59,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{BufReader, AsyncBufReadExt};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9001700,"byte_end":9001748,"line_start":60,"line_end":60,"column_start":1,"column_end":49}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9001749,"byte_end":9001781,"line_start":61,"line_end":61,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9001782,"byte_end":9001785,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ use std::process::Stdio;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9001786,"byte_end":9001814,"line_start":63,"line_end":63,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9001815,"byte_end":9001818,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9001819,"byte_end":9001837,"line_start":65,"line_end":65,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9001838,"byte_end":9001901,"line_start":66,"line_end":66,"column_start":1,"column_end":64}},{"value":"/     let mut cmd = Command::new(\"cat\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9001902,"byte_end":9001944,"line_start":67,"line_end":67,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9001945,"byte_end":9001948,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     // Specify that we want the command's standard output piped back to us.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9001949,"byte_end":9002028,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/     // By default, standard input/output/error will be inherited from the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9002029,"byte_end":9002106,"line_start":70,"line_end":70,"column_start":1,"column_end":78}},{"value":"/     // current process (for example, this means that standard input will","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9002107,"byte_end":9002183,"line_start":71,"line_end":71,"column_start":1,"column_end":77}},{"value":"/     // come from the keyboard and standard output/error will go directly to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9002184,"byte_end":9002263,"line_start":72,"line_end":72,"column_start":1,"column_end":80}},{"value":"/     // the terminal if this process is invoked from the command line).","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9002264,"byte_end":9002338,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/     cmd.stdout(Stdio::piped());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9002339,"byte_end":9002374,"line_start":74,"line_end":74,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9002375,"byte_end":9002378,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/     let mut child = cmd.spawn()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9002379,"byte_end":9002414,"line_start":76,"line_end":76,"column_start":1,"column_end":36}},{"value":"/         .expect(\"failed to spawn command\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9002415,"byte_end":9002462,"line_start":77,"line_end":77,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9002463,"byte_end":9002466,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/     let stdout = child.stdout.take()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9002467,"byte_end":9002507,"line_start":79,"line_end":79,"column_start":1,"column_end":41}},{"value":"/         .expect(\"child did not have a handle to stdout\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9002508,"byte_end":9002569,"line_start":80,"line_end":80,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9002570,"byte_end":9002573,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/     let mut reader = BufReader::new(stdout).lines();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9002574,"byte_end":9002630,"line_start":82,"line_end":82,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9002631,"byte_end":9002634,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/     // Ensure the child process is spawned in the runtime so it can","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9002635,"byte_end":9002706,"line_start":84,"line_end":84,"column_start":1,"column_end":72}},{"value":"/     // make progress on its own while we await for any output.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9002707,"byte_end":9002773,"line_start":85,"line_end":85,"column_start":1,"column_end":67}},{"value":"/     tokio::spawn(async {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9002774,"byte_end":9002802,"line_start":86,"line_end":86,"column_start":1,"column_end":29}},{"value":"/         let status = child.await","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9002803,"byte_end":9002839,"line_start":87,"line_end":87,"column_start":1,"column_end":37}},{"value":"/             .expect(\"child process encountered an error\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9002840,"byte_end":9002902,"line_start":88,"line_end":88,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9002903,"byte_end":9002906,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/         println!(\"child status was: {}\", status);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9002907,"byte_end":9002960,"line_start":90,"line_end":90,"column_start":1,"column_end":54}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9002961,"byte_end":9002972,"line_start":91,"line_end":91,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9002973,"byte_end":9002976,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/     while let Some(line) = reader.next_line().await? {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9002977,"byte_end":9003035,"line_start":93,"line_end":93,"column_start":1,"column_end":59}},{"value":"/         println!(\"Line: {}\", line);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9003036,"byte_end":9003075,"line_start":94,"line_end":94,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9003076,"byte_end":9003085,"line_start":95,"line_end":95,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9003086,"byte_end":9003089,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9003090,"byte_end":9003104,"line_start":97,"line_end":97,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9003105,"byte_end":9003110,"line_start":98,"line_end":98,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9003111,"byte_end":9003118,"line_start":99,"line_end":99,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9003119,"byte_end":9003122,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9003123,"byte_end":9003136,"line_start":101,"line_end":101,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9003137,"byte_end":9003140,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ Similar to the behavior to the standard library, and unlike the futures","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9003141,"byte_end":9003216,"line_start":103,"line_end":103,"column_start":1,"column_end":76}},{"value":"/ paradigm of dropping-implies-cancellation, a spawned process will, by","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9003217,"byte_end":9003290,"line_start":104,"line_end":104,"column_start":1,"column_end":74}},{"value":"/ default, continue to execute even after the `Child` handle has been dropped.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9003291,"byte_end":9003371,"line_start":105,"line_end":105,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9003372,"byte_end":9003375,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ The `Command::kill_on_drop` method can be used to modify this behavior","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9003376,"byte_end":9003450,"line_start":107,"line_end":107,"column_start":1,"column_end":75}},{"value":"/ and kill the child process if the `Child` wrapper is dropped before it","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9003451,"byte_end":9003525,"line_start":108,"line_end":108,"column_start":1,"column_end":75}},{"value":"/ has exited.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9003526,"byte_end":9003541,"line_start":109,"line_end":109,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9003542,"byte_end":9003545,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ [`Command`]: crate::process::Command","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9003546,"byte_end":9003586,"line_start":111,"line_end":111,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":4699},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9004607,"byte_end":9004614,"line_start":149,"line_end":149,"column_start":12,"column_end":19},"name":"Command","qualname":"::process::Command","value":"Command {  }","parent":null,"children":[{"krate":0,"index":4700},{"krate":0,"index":4701}],"decl_id":null,"docs":" This structure mimics the API of [`std::process::Command`] found in the standard library, but\n replaces functions that create a process with an asynchronous variant. The main provided\n asynchronous functions are [spawn](Command::spawn), [status](Command::status), and\n [output](Command::output).","sig":null,"attributes":[{"value":"/ This structure mimics the API of [`std::process::Command`] found in the standard library, but","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9004095,"byte_end":9004192,"line_start":139,"line_end":139,"column_start":1,"column_end":98}},{"value":"/ replaces functions that create a process with an asynchronous variant. The main provided","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9004193,"byte_end":9004285,"line_start":140,"line_end":140,"column_start":1,"column_end":93}},{"value":"/ asynchronous functions are [spawn](Command::spawn), [status](Command::status), and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9004286,"byte_end":9004372,"line_start":141,"line_end":141,"column_start":1,"column_end":87}},{"value":"/ [output](Command::output).","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9004373,"byte_end":9004403,"line_start":142,"line_end":142,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9004404,"byte_end":9004407,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ `Command` uses asynchronous versions of some `std` types (for example [`Child`]).","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9004408,"byte_end":9004493,"line_start":144,"line_end":144,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9004494,"byte_end":9004497,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ [`std::process::Command`]: std::process::Command","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9004498,"byte_end":9004550,"line_start":146,"line_end":146,"column_start":1,"column_end":53}},{"value":"/ [`Child`]: struct@Child","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9004551,"byte_end":9004578,"line_start":147,"line_end":147,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":4568},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9005964,"byte_end":9005967,"line_start":191,"line_end":191,"column_start":12,"column_end":15},"name":"new","qualname":"<Command>::new","value":"pub fn new<S: AsRef<OsStr>>(S) -> Command","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Command` for launching the program at\n path `program`, with the following default configuration:","sig":null,"attributes":[{"value":"/ Constructs a new `Command` for launching the program at","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9004855,"byte_end":9004914,"line_start":162,"line_end":162,"column_start":5,"column_end":64}},{"value":"/ path `program`, with the following default configuration:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9004919,"byte_end":9004980,"line_start":163,"line_end":163,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9004985,"byte_end":9004988,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ * No arguments to the program","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9004993,"byte_end":9005026,"line_start":165,"line_end":165,"column_start":5,"column_end":38}},{"value":"/ * Inherit the current process's environment","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9005031,"byte_end":9005078,"line_start":166,"line_end":166,"column_start":5,"column_end":52}},{"value":"/ * Inherit the current process's working directory","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9005083,"byte_end":9005136,"line_start":167,"line_end":167,"column_start":5,"column_end":58}},{"value":"/ * Inherit stdin/stdout/stderr for `spawn` or `status`, but create pipes for `output`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9005141,"byte_end":9005229,"line_start":168,"line_end":168,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9005234,"byte_end":9005237,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ Builder methods are provided to change these defaults and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9005242,"byte_end":9005303,"line_start":170,"line_end":170,"column_start":5,"column_end":66}},{"value":"/ otherwise configure the process.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9005308,"byte_end":9005344,"line_start":171,"line_end":171,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9005349,"byte_end":9005352,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ If `program` is not an absolute path, the `PATH` will be searched in","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9005357,"byte_end":9005429,"line_start":173,"line_end":173,"column_start":5,"column_end":77}},{"value":"/ an OS-defined way.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9005434,"byte_end":9005456,"line_start":174,"line_end":174,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9005461,"byte_end":9005464,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ The search path to be used may be controlled by setting the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9005469,"byte_end":9005532,"line_start":176,"line_end":176,"column_start":5,"column_end":68}},{"value":"/ `PATH` environment variable on the Command,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9005537,"byte_end":9005584,"line_start":177,"line_end":177,"column_start":5,"column_end":52}},{"value":"/ but this has some implementation limitations on Windows","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9005589,"byte_end":9005648,"line_start":178,"line_end":178,"column_start":5,"column_end":64}},{"value":"/ (see issue [rust-lang/rust#37519]).","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9005653,"byte_end":9005692,"line_start":179,"line_end":179,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9005697,"byte_end":9005700,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9005705,"byte_end":9005719,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9005724,"byte_end":9005727,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9005732,"byte_end":9005748,"line_start":183,"line_end":183,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9005753,"byte_end":9005756,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9005761,"byte_end":9005774,"line_start":185,"line_end":185,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9005779,"byte_end":9005811,"line_start":186,"line_end":186,"column_start":5,"column_end":37}},{"value":"/ let command = Command::new(\"sh\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9005816,"byte_end":9005853,"line_start":187,"line_end":187,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9005858,"byte_end":9005865,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9005870,"byte_end":9005873,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ [rust-lang/rust#37519]: https://github.com/rust-lang/rust/issues/37519","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9005878,"byte_end":9005952,"line_start":190,"line_end":190,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":4570},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9006814,"byte_end":9006817,"line_start":227,"line_end":227,"column_start":12,"column_end":15},"name":"arg","qualname":"<Command>::arg","value":"pub fn arg<S: AsRef<OsStr>>(&mut Self, S) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Adds an argument to pass to the program.","sig":null,"attributes":[{"value":"/ Adds an argument to pass to the program.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9006066,"byte_end":9006110,"line_start":195,"line_end":195,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9006115,"byte_end":9006118,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ Only one argument can be passed per use. So instead of:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9006123,"byte_end":9006182,"line_start":197,"line_end":197,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9006187,"byte_end":9006190,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9006195,"byte_end":9006208,"line_start":199,"line_end":199,"column_start":5,"column_end":18}},{"value":"/ tokio::process::Command::new(\"sh\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9006213,"byte_end":9006251,"line_start":200,"line_end":200,"column_start":5,"column_end":43}},{"value":"/   .arg(\"-C /path/to/repo\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9006256,"byte_end":9006287,"line_start":201,"line_end":201,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9006292,"byte_end":9006299,"line_start":202,"line_end":202,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9006304,"byte_end":9006307,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ usage would be:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9006312,"byte_end":9006331,"line_start":204,"line_end":204,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9006336,"byte_end":9006339,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9006344,"byte_end":9006357,"line_start":206,"line_end":206,"column_start":5,"column_end":18}},{"value":"/ tokio::process::Command::new(\"sh\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9006362,"byte_end":9006400,"line_start":207,"line_end":207,"column_start":5,"column_end":43}},{"value":"/   .arg(\"-C\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9006405,"byte_end":9006421,"line_start":208,"line_end":208,"column_start":5,"column_end":21}},{"value":"/   .arg(\"/path/to/repo\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9006426,"byte_end":9006454,"line_start":209,"line_end":209,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9006459,"byte_end":9006466,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9006471,"byte_end":9006474,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ To pass multiple arguments see [`args`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9006479,"byte_end":9006523,"line_start":212,"line_end":212,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9006528,"byte_end":9006531,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ [`args`]: method@Self::args","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9006536,"byte_end":9006567,"line_start":214,"line_end":214,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9006572,"byte_end":9006575,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9006580,"byte_end":9006594,"line_start":216,"line_end":216,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9006599,"byte_end":9006602,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9006607,"byte_end":9006623,"line_start":218,"line_end":218,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9006628,"byte_end":9006631,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9006636,"byte_end":9006649,"line_start":220,"line_end":220,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9006654,"byte_end":9006686,"line_start":221,"line_end":221,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9006691,"byte_end":9006694,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9006699,"byte_end":9006735,"line_start":223,"line_end":223,"column_start":5,"column_end":41}},{"value":"/         .arg(\"-l\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9006740,"byte_end":9006762,"line_start":224,"line_end":224,"column_start":5,"column_end":27}},{"value":"/         .arg(\"-a\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9006767,"byte_end":9006790,"line_start":225,"line_end":225,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9006795,"byte_end":9006802,"line_start":226,"line_end":226,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4572},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9007301,"byte_end":9007305,"line_start":248,"line_end":248,"column_start":12,"column_end":16},"name":"args","qualname":"<Command>::args","value":"pub fn args<I, S>(&mut Self, I) -> &mut Command where I: IntoIterator<Item =\nS>, S: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Adds multiple arguments to pass to the program.","sig":null,"attributes":[{"value":"/ Adds multiple arguments to pass to the program.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9006923,"byte_end":9006974,"line_start":232,"line_end":232,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9006979,"byte_end":9006982,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ To pass a single argument see [`arg`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9006987,"byte_end":9007029,"line_start":234,"line_end":234,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9007034,"byte_end":9007037,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ [`arg`]: method@Self::arg","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9007042,"byte_end":9007071,"line_start":236,"line_end":236,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9007076,"byte_end":9007079,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9007084,"byte_end":9007098,"line_start":238,"line_end":238,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9007103,"byte_end":9007106,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9007111,"byte_end":9007127,"line_start":240,"line_end":240,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9007132,"byte_end":9007135,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9007140,"byte_end":9007153,"line_start":242,"line_end":242,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9007158,"byte_end":9007190,"line_start":243,"line_end":243,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9007195,"byte_end":9007198,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9007203,"byte_end":9007239,"line_start":245,"line_end":245,"column_start":5,"column_end":41}},{"value":"/         .args(&[\"-l\", \"-a\"]);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9007244,"byte_end":9007277,"line_start":246,"line_end":246,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9007282,"byte_end":9007289,"line_start":247,"line_end":247,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4575},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9007921,"byte_end":9007924,"line_start":272,"line_end":272,"column_start":12,"column_end":15},"name":"env","qualname":"<Command>::env","value":"pub fn env<K, V>(&mut Self, K, V) -> &mut Command where K: AsRef<OsStr>,\nV: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Inserts or updates an environment variable mapping.","sig":null,"attributes":[{"value":"/ Inserts or updates an environment variable mapping.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9007477,"byte_end":9007532,"line_start":257,"line_end":257,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9007537,"byte_end":9007540,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ Note that environment variable names are case-insensitive (but case-preserving) on Windows,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9007545,"byte_end":9007640,"line_start":259,"line_end":259,"column_start":5,"column_end":100}},{"value":"/ and case-sensitive on all other platforms.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9007645,"byte_end":9007691,"line_start":260,"line_end":260,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9007696,"byte_end":9007699,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9007704,"byte_end":9007718,"line_start":262,"line_end":262,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9007723,"byte_end":9007726,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9007731,"byte_end":9007747,"line_start":264,"line_end":264,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9007752,"byte_end":9007755,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9007760,"byte_end":9007773,"line_start":266,"line_end":266,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9007778,"byte_end":9007810,"line_start":267,"line_end":267,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9007815,"byte_end":9007818,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9007823,"byte_end":9007859,"line_start":269,"line_end":269,"column_start":5,"column_end":41}},{"value":"/         .env(\"PATH\", \"/bin\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9007864,"byte_end":9007897,"line_start":270,"line_end":270,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9007902,"byte_end":9007909,"line_start":271,"line_end":271,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4578},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9008798,"byte_end":9008802,"line_start":304,"line_end":304,"column_start":12,"column_end":16},"name":"envs","qualname":"<Command>::envs","value":"pub fn envs<I, K, V>(&mut Self, I) -> &mut Command where I: IntoIterator<Item\n= (K, V)>, K: AsRef<OsStr>, V: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Adds or updates multiple environment variable mappings.","sig":null,"attributes":[{"value":"/ Adds or updates multiple environment variable mappings.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9008096,"byte_end":9008155,"line_start":281,"line_end":281,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9008160,"byte_end":9008163,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9008168,"byte_end":9008182,"line_start":283,"line_end":283,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9008187,"byte_end":9008190,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9008195,"byte_end":9008211,"line_start":285,"line_end":285,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9008216,"byte_end":9008219,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9008224,"byte_end":9008237,"line_start":287,"line_end":287,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9008242,"byte_end":9008274,"line_start":288,"line_end":288,"column_start":5,"column_end":37}},{"value":"/ use std::process::{Stdio};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9008279,"byte_end":9008309,"line_start":289,"line_end":289,"column_start":5,"column_end":35}},{"value":"/ use std::env;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9008314,"byte_end":9008331,"line_start":290,"line_end":290,"column_start":5,"column_end":22}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9008336,"byte_end":9008370,"line_start":291,"line_end":291,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9008375,"byte_end":9008378,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ let filtered_env : HashMap<String, String> =","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9008383,"byte_end":9008431,"line_start":293,"line_end":293,"column_start":5,"column_end":53}},{"value":"/     env::vars().filter(|&(ref k, _)|","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9008436,"byte_end":9008476,"line_start":294,"line_end":294,"column_start":5,"column_end":45}},{"value":"/         k == \"TERM\" || k == \"TZ\" || k == \"LANG\" || k == \"PATH\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9008481,"byte_end":9008547,"line_start":295,"line_end":295,"column_start":5,"column_end":71}},{"value":"/     ).collect();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9008552,"byte_end":9008572,"line_start":296,"line_end":296,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9008577,"byte_end":9008580,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"printenv\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9008585,"byte_end":9008627,"line_start":298,"line_end":298,"column_start":5,"column_end":47}},{"value":"/         .stdin(Stdio::null())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9008632,"byte_end":9008665,"line_start":299,"line_end":299,"column_start":5,"column_end":38}},{"value":"/         .stdout(Stdio::inherit())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9008670,"byte_end":9008707,"line_start":300,"line_end":300,"column_start":5,"column_end":42}},{"value":"/         .env_clear()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9008712,"byte_end":9008736,"line_start":301,"line_end":301,"column_start":5,"column_end":29}},{"value":"/         .envs(&filtered_env);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9008741,"byte_end":9008774,"line_start":302,"line_end":302,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9008779,"byte_end":9008786,"line_start":303,"line_end":303,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4582},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9009280,"byte_end":9009290,"line_start":326,"line_end":326,"column_start":12,"column_end":22},"name":"env_remove","qualname":"<Command>::env_remove","value":"pub fn env_remove<K: AsRef<OsStr>>(&mut Self, K) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Removes an environment variable mapping.","sig":null,"attributes":[{"value":"/ Removes an environment variable mapping.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9009007,"byte_end":9009051,"line_start":314,"line_end":314,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9009056,"byte_end":9009059,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9009064,"byte_end":9009078,"line_start":316,"line_end":316,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9009083,"byte_end":9009086,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9009091,"byte_end":9009107,"line_start":318,"line_end":318,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9009112,"byte_end":9009115,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9009120,"byte_end":9009133,"line_start":320,"line_end":320,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9009138,"byte_end":9009170,"line_start":321,"line_end":321,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9009175,"byte_end":9009178,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9009183,"byte_end":9009219,"line_start":323,"line_end":323,"column_start":5,"column_end":41}},{"value":"/         .env_remove(\"PATH\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9009224,"byte_end":9009256,"line_start":324,"line_end":324,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9009261,"byte_end":9009268,"line_start":325,"line_end":325,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4584},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9009685,"byte_end":9009694,"line_start":343,"line_end":343,"column_start":12,"column_end":21},"name":"env_clear","qualname":"<Command>::env_clear","value":"pub fn env_clear(&mut Self) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Clears the entire environment map for the child process.","sig":null,"attributes":[{"value":"/ Clears the entire environment map for the child process.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9009403,"byte_end":9009463,"line_start":331,"line_end":331,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9009468,"byte_end":9009471,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9009476,"byte_end":9009490,"line_start":333,"line_end":333,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9009495,"byte_end":9009498,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9009503,"byte_end":9009519,"line_start":335,"line_end":335,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9009524,"byte_end":9009527,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9009532,"byte_end":9009545,"line_start":337,"line_end":337,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9009550,"byte_end":9009582,"line_start":338,"line_end":338,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9009587,"byte_end":9009590,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9009595,"byte_end":9009631,"line_start":340,"line_end":340,"column_start":5,"column_end":41}},{"value":"/         .env_clear();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9009636,"byte_end":9009661,"line_start":341,"line_end":341,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9009666,"byte_end":9009673,"line_start":342,"line_end":342,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4585},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9010539,"byte_end":9010550,"line_start":370,"line_end":370,"column_start":12,"column_end":23},"name":"current_dir","qualname":"<Command>::current_dir","value":"pub fn current_dir<P: AsRef<Path>>(&mut Self, P) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets the working directory for the child process.","sig":null,"attributes":[{"value":"/ Sets the working directory for the child process.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9009778,"byte_end":9009831,"line_start":348,"line_end":348,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9009836,"byte_end":9009839,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9009844,"byte_end":9009876,"line_start":350,"line_end":350,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9009881,"byte_end":9009884,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ If the program path is relative (e.g., `\"./script.sh\"`), it's ambiguous","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9009889,"byte_end":9009964,"line_start":352,"line_end":352,"column_start":5,"column_end":80}},{"value":"/ whether it should be interpreted relative to the parent's working","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9009969,"byte_end":9010038,"line_start":353,"line_end":353,"column_start":5,"column_end":74}},{"value":"/ directory or relative to `current_dir`. The behavior in this case is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9010043,"byte_end":9010115,"line_start":354,"line_end":354,"column_start":5,"column_end":77}},{"value":"/ platform specific and unstable, and it's recommended to use","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9010120,"byte_end":9010183,"line_start":355,"line_end":355,"column_start":5,"column_end":68}},{"value":"/ [`canonicalize`] to get an absolute program path instead.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9010188,"byte_end":9010249,"line_start":356,"line_end":356,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9010254,"byte_end":9010257,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ [`canonicalize`]: crate::fs::canonicalize()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9010262,"byte_end":9010309,"line_start":358,"line_end":358,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9010314,"byte_end":9010317,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9010322,"byte_end":9010336,"line_start":360,"line_end":360,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9010341,"byte_end":9010344,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9010349,"byte_end":9010365,"line_start":362,"line_end":362,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9010370,"byte_end":9010373,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9010378,"byte_end":9010391,"line_start":364,"line_end":364,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9010396,"byte_end":9010428,"line_start":365,"line_end":365,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9010433,"byte_end":9010436,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9010441,"byte_end":9010477,"line_start":367,"line_end":367,"column_start":5,"column_end":41}},{"value":"/         .current_dir(\"/bin\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9010482,"byte_end":9010515,"line_start":368,"line_end":368,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9010520,"byte_end":9010527,"line_start":369,"line_end":369,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4587},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9011245,"byte_end":9011250,"line_start":394,"line_end":394,"column_start":12,"column_end":17},"name":"stdin","qualname":"<Command>::stdin","value":"pub fn stdin<T: Into<Stdio>>(&mut Self, T) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets configuration for the child process's standard input (stdin) handle.","sig":null,"attributes":[{"value":"/ Sets configuration for the child process's standard input (stdin) handle.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9010663,"byte_end":9010740,"line_start":375,"line_end":375,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9010745,"byte_end":9010748,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Defaults to [`inherit`] when used with `spawn` or `status`, and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9010753,"byte_end":9010820,"line_start":377,"line_end":377,"column_start":5,"column_end":72}},{"value":"/ defaults to [`piped`] when used with `output`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9010825,"byte_end":9010875,"line_start":378,"line_end":378,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9010880,"byte_end":9010883,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ [`inherit`]: std::process::Stdio::inherit","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9010888,"byte_end":9010933,"line_start":380,"line_end":380,"column_start":5,"column_end":50}},{"value":"/ [`piped`]: std::process::Stdio::piped","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9010938,"byte_end":9010979,"line_start":381,"line_end":381,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9010984,"byte_end":9010987,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9010992,"byte_end":9011006,"line_start":383,"line_end":383,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9011011,"byte_end":9011014,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9011019,"byte_end":9011035,"line_start":385,"line_end":385,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9011040,"byte_end":9011043,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9011048,"byte_end":9011061,"line_start":387,"line_end":387,"column_start":5,"column_end":18}},{"value":"/ use std::process::{Stdio};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9011066,"byte_end":9011096,"line_start":388,"line_end":388,"column_start":5,"column_end":35}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9011101,"byte_end":9011133,"line_start":389,"line_end":389,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9011138,"byte_end":9011141,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9011146,"byte_end":9011182,"line_start":391,"line_end":391,"column_start":5,"column_end":41}},{"value":"/         .stdin(Stdio::null());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9011187,"byte_end":9011221,"line_start":392,"line_end":392,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9011226,"byte_end":9011233,"line_start":393,"line_end":393,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4589},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9011941,"byte_end":9011947,"line_start":418,"line_end":418,"column_start":12,"column_end":18},"name":"stdout","qualname":"<Command>::stdout","value":"pub fn stdout<T: Into<Stdio>>(&mut Self, T) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets configuration for the child process's standard output (stdout) handle.","sig":null,"attributes":[{"value":"/ Sets configuration for the child process's standard output (stdout) handle.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9011357,"byte_end":9011436,"line_start":399,"line_end":399,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9011441,"byte_end":9011444,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ Defaults to [`inherit`] when used with `spawn` or `status`, and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9011449,"byte_end":9011516,"line_start":401,"line_end":401,"column_start":5,"column_end":72}},{"value":"/ defaults to [`piped`] when used with `output`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9011521,"byte_end":9011571,"line_start":402,"line_end":402,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9011576,"byte_end":9011579,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ [`inherit`]: std::process::Stdio::inherit","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9011584,"byte_end":9011629,"line_start":404,"line_end":404,"column_start":5,"column_end":50}},{"value":"/ [`piped`]: std::process::Stdio::piped","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9011634,"byte_end":9011675,"line_start":405,"line_end":405,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9011680,"byte_end":9011683,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9011688,"byte_end":9011702,"line_start":407,"line_end":407,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9011707,"byte_end":9011710,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9011715,"byte_end":9011731,"line_start":409,"line_end":409,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9011736,"byte_end":9011739,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9011744,"byte_end":9011757,"line_start":411,"line_end":411,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9011762,"byte_end":9011795,"line_start":412,"line_end":412,"column_start":5,"column_end":38}},{"value":"/ use std::process::Stdio;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9011800,"byte_end":9011828,"line_start":413,"line_end":413,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9011833,"byte_end":9011836,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9011841,"byte_end":9011877,"line_start":415,"line_end":415,"column_start":5,"column_end":41}},{"value":"/         .stdout(Stdio::null());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9011882,"byte_end":9011917,"line_start":416,"line_end":416,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9011922,"byte_end":9011929,"line_start":417,"line_end":417,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4591},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9012640,"byte_end":9012646,"line_start":442,"line_end":442,"column_start":12,"column_end":18},"name":"stderr","qualname":"<Command>::stderr","value":"pub fn stderr<T: Into<Stdio>>(&mut Self, T) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets configuration for the child process's standard error (stderr) handle.","sig":null,"attributes":[{"value":"/ Sets configuration for the child process's standard error (stderr) handle.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9012055,"byte_end":9012133,"line_start":423,"line_end":423,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9012138,"byte_end":9012141,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ Defaults to [`inherit`] when used with `spawn` or `status`, and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9012146,"byte_end":9012213,"line_start":425,"line_end":425,"column_start":5,"column_end":72}},{"value":"/ defaults to [`piped`] when used with `output`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9012218,"byte_end":9012268,"line_start":426,"line_end":426,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9012273,"byte_end":9012276,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ [`inherit`]: std::process::Stdio::inherit","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9012281,"byte_end":9012326,"line_start":428,"line_end":428,"column_start":5,"column_end":50}},{"value":"/ [`piped`]: std::process::Stdio::piped","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9012331,"byte_end":9012372,"line_start":429,"line_end":429,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9012377,"byte_end":9012380,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9012385,"byte_end":9012399,"line_start":431,"line_end":431,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9012404,"byte_end":9012407,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9012412,"byte_end":9012428,"line_start":433,"line_end":433,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9012433,"byte_end":9012436,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9012441,"byte_end":9012454,"line_start":435,"line_end":435,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9012459,"byte_end":9012492,"line_start":436,"line_end":436,"column_start":5,"column_end":38}},{"value":"/ use std::process::{Stdio};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9012497,"byte_end":9012527,"line_start":437,"line_end":437,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9012532,"byte_end":9012535,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9012540,"byte_end":9012576,"line_start":439,"line_end":439,"column_start":5,"column_end":41}},{"value":"/         .stderr(Stdio::null());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9012581,"byte_end":9012616,"line_start":440,"line_end":440,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9012621,"byte_end":9012628,"line_start":441,"line_end":441,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4593},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9013099,"byte_end":9013111,"line_start":453,"line_end":453,"column_start":12,"column_end":24},"name":"kill_on_drop","qualname":"<Command>::kill_on_drop","value":"pub fn kill_on_drop(&mut Self, bool) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Controls whether a `kill` operation should be invoked on a spawned child\n process when its corresponding `Child` handle is dropped.","sig":null,"attributes":[{"value":"/ Controls whether a `kill` operation should be invoked on a spawned child","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9012754,"byte_end":9012830,"line_start":447,"line_end":447,"column_start":5,"column_end":81}},{"value":"/ process when its corresponding `Child` handle is dropped.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9012835,"byte_end":9012896,"line_start":448,"line_end":448,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9012901,"byte_end":9012904,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ By default, this value is assumed to be `false`, meaning the next spawned","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9012909,"byte_end":9012986,"line_start":450,"line_end":450,"column_start":5,"column_end":82}},{"value":"/ process will not be killed on drop, similar to the behavior of the standard","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9012991,"byte_end":9013070,"line_start":451,"line_end":451,"column_start":5,"column_end":84}},{"value":"/ library.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9013075,"byte_end":9013087,"line_start":452,"line_end":452,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":4594},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9013828,"byte_end":9013831,"line_start":473,"line_end":473,"column_start":12,"column_end":15},"name":"uid","qualname":"<Command>::uid","value":"pub fn uid(&mut Self, u32) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets the child process's user ID. This translates to a\n `setuid` call in the child process. Failure in the `setuid`\n call will cause the spawn to fail.\n","sig":null,"attributes":[{"value":"/ Sets the child process's user ID. This translates to a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9013630,"byte_end":9013688,"line_start":469,"line_end":469,"column_start":5,"column_end":63}},{"value":"/ `setuid` call in the child process. Failure in the `setuid`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9013693,"byte_end":9013756,"line_start":470,"line_end":470,"column_start":5,"column_end":68}},{"value":"/ call will cause the spawn to fail.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9013761,"byte_end":9013799,"line_start":471,"line_end":471,"column_start":5,"column_end":43}},{"value":"cfg(unix)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9013804,"byte_end":9013816,"line_start":472,"line_end":472,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":4595},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9014069,"byte_end":9014072,"line_start":481,"line_end":481,"column_start":12,"column_end":15},"name":"gid","qualname":"<Command>::gid","value":"pub fn gid(&mut Self, u32) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Similar to `uid` but sets the group ID of the child process. This has\n the same semantics as the `uid` field.\n","sig":null,"attributes":[{"value":"/ Similar to `uid` but sets the group ID of the child process. This has","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9013920,"byte_end":9013993,"line_start":478,"line_end":478,"column_start":5,"column_end":78}},{"value":"/ the same semantics as the `uid` field.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9013998,"byte_end":9014040,"line_start":479,"line_end":479,"column_start":5,"column_end":47}},{"value":"cfg(unix)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9014045,"byte_end":9014057,"line_start":480,"line_end":480,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":4596},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9015726,"byte_end":9015734,"line_start":516,"line_end":516,"column_start":19,"column_end":27},"name":"pre_exec","qualname":"<Command>::pre_exec","value":"pub unsafe fn pre_exec<F>(&mut Self, F) -> &mut Command where F: FnMut() ->\nio::Result<()> + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Schedules a closure to be run just before the `exec` function is\n invoked.","sig":null,"attributes":[{"value":"/ Schedules a closure to be run just before the `exec` function is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9014161,"byte_end":9014229,"line_start":486,"line_end":486,"column_start":5,"column_end":73}},{"value":"/ invoked.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9014234,"byte_end":9014246,"line_start":487,"line_end":487,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9014251,"byte_end":9014254,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ The closure is allowed to return an I/O error whose OS error code will","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9014259,"byte_end":9014333,"line_start":489,"line_end":489,"column_start":5,"column_end":79}},{"value":"/ be communicated back to the parent and returned as an error from when","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9014338,"byte_end":9014411,"line_start":490,"line_end":490,"column_start":5,"column_end":78}},{"value":"/ the spawn was requested.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9014416,"byte_end":9014444,"line_start":491,"line_end":491,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9014449,"byte_end":9014452,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ Multiple closures can be registered and they will be called in order of","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9014457,"byte_end":9014532,"line_start":493,"line_end":493,"column_start":5,"column_end":80}},{"value":"/ their registration. If a closure returns `Err` then no further closures","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9014537,"byte_end":9014612,"line_start":494,"line_end":494,"column_start":5,"column_end":80}},{"value":"/ will be called and the spawn operation will immediately return with a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9014617,"byte_end":9014690,"line_start":495,"line_end":495,"column_start":5,"column_end":78}},{"value":"/ failure.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9014695,"byte_end":9014707,"line_start":496,"line_end":496,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9014712,"byte_end":9014715,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9014720,"byte_end":9014732,"line_start":498,"line_end":498,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9014737,"byte_end":9014740,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ This closure will be run in the context of the child process after a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9014745,"byte_end":9014817,"line_start":500,"line_end":500,"column_start":5,"column_end":77}},{"value":"/ `fork`. This primarily means that any modifications made to memory on","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9014822,"byte_end":9014895,"line_start":501,"line_end":501,"column_start":5,"column_end":78}},{"value":"/ behalf of this closure will **not** be visible to the parent process.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9014900,"byte_end":9014973,"line_start":502,"line_end":502,"column_start":5,"column_end":78}},{"value":"/ This is often a very constrained environment where normal operations","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9014978,"byte_end":9015050,"line_start":503,"line_end":503,"column_start":5,"column_end":77}},{"value":"/ like `malloc` or acquiring a mutex are not guaranteed to work (due to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9015055,"byte_end":9015128,"line_start":504,"line_end":504,"column_start":5,"column_end":78}},{"value":"/ other threads perhaps still running when the `fork` was run).","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9015133,"byte_end":9015198,"line_start":505,"line_end":505,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9015203,"byte_end":9015206,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ This also means that all resources such as file descriptors and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9015211,"byte_end":9015278,"line_start":507,"line_end":507,"column_start":5,"column_end":72}},{"value":"/ memory-mapped regions got duplicated. It is your responsibility to make","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9015283,"byte_end":9015358,"line_start":508,"line_end":508,"column_start":5,"column_end":80}},{"value":"/ sure that the closure does not violate library invariants by making","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9015363,"byte_end":9015434,"line_start":509,"line_end":509,"column_start":5,"column_end":76}},{"value":"/ invalid use of these duplicates.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9015439,"byte_end":9015475,"line_start":510,"line_end":510,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9015480,"byte_end":9015483,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ When this closure is run, aspects such as the stdio file descriptors and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9015488,"byte_end":9015564,"line_start":512,"line_end":512,"column_start":5,"column_end":81}},{"value":"/ working directory have successfully been changed, so output to these","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9015569,"byte_end":9015641,"line_start":513,"line_end":513,"column_start":5,"column_end":77}},{"value":"/ locations may not appear where intended.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9015646,"byte_end":9015690,"line_start":514,"line_end":514,"column_start":5,"column_end":49}},{"value":"cfg(unix)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9015695,"byte_end":9015707,"line_start":515,"line_end":515,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":4598},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9017373,"byte_end":9017378,"line_start":562,"line_end":562,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Command>::spawn","value":"pub fn spawn(&mut Self) -> io::Result<Child>","parent":null,"children":[],"decl_id":null,"docs":" Executes the command as a child process, returning a handle to it.","sig":null,"attributes":[{"value":"/ Executes the command as a child process, returning a handle to it.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9015903,"byte_end":9015973,"line_start":524,"line_end":524,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9015978,"byte_end":9015981,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ By default, stdin, stdout and stderr are inherited from the parent.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9015986,"byte_end":9016057,"line_start":526,"line_end":526,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9016062,"byte_end":9016065,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ This method will spawn the child process synchronously and return a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9016070,"byte_end":9016141,"line_start":528,"line_end":528,"column_start":5,"column_end":76}},{"value":"/ handle to a future-aware child process. The `Child` returned implements","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9016146,"byte_end":9016221,"line_start":529,"line_end":529,"column_start":5,"column_end":80}},{"value":"/ `Future` itself to acquire the `ExitStatus` of the child, and otherwise","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9016226,"byte_end":9016301,"line_start":530,"line_end":530,"column_start":5,"column_end":80}},{"value":"/ the `Child` has methods to acquire handles to the stdin, stdout, and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9016306,"byte_end":9016378,"line_start":531,"line_end":531,"column_start":5,"column_end":77}},{"value":"/ stderr streams.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9016383,"byte_end":9016402,"line_start":532,"line_end":532,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9016407,"byte_end":9016410,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ All I/O this child does will be associated with the current default","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9016415,"byte_end":9016486,"line_start":534,"line_end":534,"column_start":5,"column_end":76}},{"value":"/ event loop.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9016491,"byte_end":9016506,"line_start":535,"line_end":535,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9016511,"byte_end":9016514,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ # Caveats","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9016519,"byte_end":9016532,"line_start":537,"line_end":537,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9016537,"byte_end":9016540,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ Similar to the behavior to the standard library, and unlike the futures","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9016545,"byte_end":9016620,"line_start":539,"line_end":539,"column_start":5,"column_end":80}},{"value":"/ paradigm of dropping-implies-cancellation, the spawned process will, by","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9016625,"byte_end":9016700,"line_start":540,"line_end":540,"column_start":5,"column_end":80}},{"value":"/ default, continue to execute even after the `Child` handle has been dropped.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9016705,"byte_end":9016785,"line_start":541,"line_end":541,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9016790,"byte_end":9016793,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ The `Command::kill_on_drop` method can be used to modify this behavior","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9016798,"byte_end":9016872,"line_start":543,"line_end":543,"column_start":5,"column_end":79}},{"value":"/ and kill the child process if the `Child` wrapper is dropped before it","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9016877,"byte_end":9016951,"line_start":544,"line_end":544,"column_start":5,"column_end":79}},{"value":"/ has exited.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9016956,"byte_end":9016971,"line_start":545,"line_end":545,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9016976,"byte_end":9016979,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9016984,"byte_end":9016998,"line_start":547,"line_end":547,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9017003,"byte_end":9017006,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9017011,"byte_end":9017027,"line_start":549,"line_end":549,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9017032,"byte_end":9017035,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9017040,"byte_end":9017053,"line_start":551,"line_end":551,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9017058,"byte_end":9017090,"line_start":552,"line_end":552,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9017095,"byte_end":9017098,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ async fn run_ls() -> std::process::ExitStatus {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9017103,"byte_end":9017154,"line_start":554,"line_end":554,"column_start":5,"column_end":56}},{"value":"/     Command::new(\"ls\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9017159,"byte_end":9017185,"line_start":555,"line_end":555,"column_start":5,"column_end":31}},{"value":"/         .spawn()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9017190,"byte_end":9017210,"line_start":556,"line_end":556,"column_start":5,"column_end":25}},{"value":"/         .expect(\"ls command failed to start\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9017215,"byte_end":9017264,"line_start":557,"line_end":557,"column_start":5,"column_end":54}},{"value":"/         .await","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9017269,"byte_end":9017287,"line_start":558,"line_end":558,"column_start":5,"column_end":23}},{"value":"/         .expect(\"ls command failed to run\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9017292,"byte_end":9017339,"line_start":559,"line_end":559,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9017344,"byte_end":9017349,"line_start":560,"line_end":560,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9017354,"byte_end":9017361,"line_start":561,"line_end":561,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4603},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9018936,"byte_end":9018942,"line_start":605,"line_end":605,"column_start":12,"column_end":18},"name":"status","qualname":"<Command>::status","value":"pub fn status(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Executes the command as a child process, waiting for it to finish and\n collecting its exit status.","sig":null,"attributes":[{"value":"/ Executes the command as a child process, waiting for it to finish and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9017875,"byte_end":9017948,"line_start":574,"line_end":574,"column_start":5,"column_end":78}},{"value":"/ collecting its exit status.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9017953,"byte_end":9017984,"line_start":575,"line_end":575,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9017989,"byte_end":9017992,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ By default, stdin, stdout and stderr are inherited from the parent.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9017997,"byte_end":9018068,"line_start":577,"line_end":577,"column_start":5,"column_end":76}},{"value":"/ If any input/output handles are set to a pipe then they will be immediately","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9018073,"byte_end":9018152,"line_start":578,"line_end":578,"column_start":5,"column_end":84}},{"value":"/ closed after the child is spawned.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9018157,"byte_end":9018195,"line_start":579,"line_end":579,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9018200,"byte_end":9018203,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ All I/O this child does will be associated with the current default","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9018208,"byte_end":9018279,"line_start":581,"line_end":581,"column_start":5,"column_end":76}},{"value":"/ event loop.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9018284,"byte_end":9018299,"line_start":582,"line_end":582,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9018304,"byte_end":9018307,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ If this future is dropped before the future resolves, then","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9018312,"byte_end":9018374,"line_start":584,"line_end":584,"column_start":5,"column_end":67}},{"value":"/ the child will be killed, if it was spawned.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9018379,"byte_end":9018427,"line_start":585,"line_end":585,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9018432,"byte_end":9018435,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9018440,"byte_end":9018452,"line_start":587,"line_end":587,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9018457,"byte_end":9018460,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ This future will return an error if the child process cannot be spawned","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9018465,"byte_end":9018540,"line_start":589,"line_end":589,"column_start":5,"column_end":80}},{"value":"/ or if there is an error while awaiting its status.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9018545,"byte_end":9018599,"line_start":590,"line_end":590,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9018604,"byte_end":9018607,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9018612,"byte_end":9018626,"line_start":592,"line_end":592,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9018631,"byte_end":9018634,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9018639,"byte_end":9018655,"line_start":594,"line_end":594,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9018660,"byte_end":9018663,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9018668,"byte_end":9018681,"line_start":596,"line_end":596,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9018686,"byte_end":9018718,"line_start":597,"line_end":597,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9018723,"byte_end":9018726,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ async fn run_ls() -> std::process::ExitStatus {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9018731,"byte_end":9018782,"line_start":599,"line_end":599,"column_start":5,"column_end":56}},{"value":"/     Command::new(\"ls\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9018787,"byte_end":9018813,"line_start":600,"line_end":600,"column_start":5,"column_end":31}},{"value":"/         .status()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9018818,"byte_end":9018839,"line_start":601,"line_end":601,"column_start":5,"column_end":26}},{"value":"/         .await","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9018844,"byte_end":9018862,"line_start":602,"line_end":602,"column_start":5,"column_end":23}},{"value":"/         .expect(\"ls command failed to run\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9018867,"byte_end":9018914,"line_start":603,"line_end":603,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9018919,"byte_end":9018924,"line_start":604,"line_end":604,"column_start":5,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":4606},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9020831,"byte_end":9020837,"line_start":657,"line_end":657,"column_start":12,"column_end":18},"name":"output","qualname":"<Command>::output","value":"pub fn output(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Executes the command as a child process, waiting for it to finish and\n collecting all of its output.","sig":null,"attributes":[{"value":"/ Executes the command as a child process, waiting for it to finish and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9019417,"byte_end":9019490,"line_start":622,"line_end":622,"column_start":5,"column_end":78}},{"value":"/ collecting all of its output.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9019495,"byte_end":9019528,"line_start":623,"line_end":623,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9019533,"byte_end":9019536,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ > **Note**: this method, unlike the standard library, will","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9019541,"byte_end":9019603,"line_start":625,"line_end":625,"column_start":5,"column_end":67}},{"value":"/ > unconditionally configure the stdout/stderr handles to be pipes, even","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9019608,"byte_end":9019683,"line_start":626,"line_end":626,"column_start":5,"column_end":80}},{"value":"/ > if they have been previously configured. If this is not desired then","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9019688,"byte_end":9019762,"line_start":627,"line_end":627,"column_start":5,"column_end":79}},{"value":"/ > the `spawn` method should be used in combination with the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9019767,"byte_end":9019830,"line_start":628,"line_end":628,"column_start":5,"column_end":68}},{"value":"/ > `wait_with_output` method on child.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9019835,"byte_end":9019876,"line_start":629,"line_end":629,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9019881,"byte_end":9019884,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ This method will return a future representing the collection of the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9019889,"byte_end":9019960,"line_start":631,"line_end":631,"column_start":5,"column_end":76}},{"value":"/ child process's stdout/stderr. It will resolve to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9019965,"byte_end":9020018,"line_start":632,"line_end":632,"column_start":5,"column_end":58}},{"value":"/ the `Output` type in the standard library, containing `stdout` and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9020023,"byte_end":9020093,"line_start":633,"line_end":633,"column_start":5,"column_end":75}},{"value":"/ `stderr` as `Vec<u8>` along with an `ExitStatus` representing how the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9020098,"byte_end":9020171,"line_start":634,"line_end":634,"column_start":5,"column_end":78}},{"value":"/ process exited.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9020176,"byte_end":9020195,"line_start":635,"line_end":635,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9020200,"byte_end":9020203,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ All I/O this child does will be associated with the current default","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9020208,"byte_end":9020279,"line_start":637,"line_end":637,"column_start":5,"column_end":76}},{"value":"/ event loop.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9020284,"byte_end":9020299,"line_start":638,"line_end":638,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9020304,"byte_end":9020307,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ If this future is dropped before the future resolves, then","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9020312,"byte_end":9020374,"line_start":640,"line_end":640,"column_start":5,"column_end":67}},{"value":"/ the child will be killed, if it was spawned.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9020379,"byte_end":9020427,"line_start":641,"line_end":641,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9020432,"byte_end":9020435,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9020440,"byte_end":9020454,"line_start":643,"line_end":643,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9020459,"byte_end":9020462,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9020467,"byte_end":9020483,"line_start":645,"line_end":645,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9020488,"byte_end":9020491,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9020496,"byte_end":9020509,"line_start":647,"line_end":647,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9020514,"byte_end":9020546,"line_start":648,"line_end":648,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9020551,"byte_end":9020554,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ async fn run_ls() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9020559,"byte_end":9020582,"line_start":650,"line_end":650,"column_start":5,"column_end":28}},{"value":"/     let output: std::process::Output = Command::new(\"ls\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9020587,"byte_end":9020648,"line_start":651,"line_end":651,"column_start":5,"column_end":66}},{"value":"/         .output()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9020653,"byte_end":9020674,"line_start":652,"line_end":652,"column_start":5,"column_end":26}},{"value":"/         .await","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9020679,"byte_end":9020697,"line_start":653,"line_end":653,"column_start":5,"column_end":23}},{"value":"/         .expect(\"ls command failed to run\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9020702,"byte_end":9020750,"line_start":654,"line_end":654,"column_start":5,"column_end":53}},{"value":"/     println!(\"stderr of ls: {:?}\", output.stderr);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9020755,"byte_end":9020809,"line_start":655,"line_end":655,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9020814,"byte_end":9020819,"line_start":656,"line_end":656,"column_start":5,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":4711},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9023186,"byte_end":9023191,"line_start":744,"line_end":744,"column_start":12,"column_end":17},"name":"Child","qualname":"::process::Child","value":"Child { stdin, stdout, stderr }","parent":null,"children":[{"krate":0,"index":4712},{"krate":0,"index":4713},{"krate":0,"index":4714},{"krate":0,"index":4715}],"decl_id":null,"docs":" Representation of a child process spawned onto an event loop.","sig":null,"attributes":[{"value":"/ Representation of a child process spawned onto an event loop.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9022408,"byte_end":9022473,"line_start":728,"line_end":728,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9022474,"byte_end":9022477,"line_start":729,"line_end":729,"column_start":1,"column_end":4}},{"value":"/ This type is also a future which will yield the `ExitStatus` of the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9022478,"byte_end":9022549,"line_start":730,"line_end":730,"column_start":1,"column_end":72}},{"value":"/ underlying child process. A `Child` here also provides access to information","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9022550,"byte_end":9022630,"line_start":731,"line_end":731,"column_start":1,"column_end":81}},{"value":"/ like the OS-assigned identifier and the stdio streams.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9022631,"byte_end":9022689,"line_start":732,"line_end":732,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9022690,"byte_end":9022693,"line_start":733,"line_end":733,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9022694,"byte_end":9022707,"line_start":734,"line_end":734,"column_start":1,"column_end":14}},{"value":"/ Similar to the behavior to the standard library, and unlike the futures","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9022708,"byte_end":9022783,"line_start":735,"line_end":735,"column_start":1,"column_end":76}},{"value":"/ paradigm of dropping-implies-cancellation, a spawned process will, by","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9022784,"byte_end":9022857,"line_start":736,"line_end":736,"column_start":1,"column_end":74}},{"value":"/ default, continue to execute even after the `Child` handle has been dropped.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9022858,"byte_end":9022938,"line_start":737,"line_end":737,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9022939,"byte_end":9022942,"line_start":738,"line_end":738,"column_start":1,"column_end":4}},{"value":"/ The `Command::kill_on_drop` method can be used to modify this behavior","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9022943,"byte_end":9023017,"line_start":739,"line_end":739,"column_start":1,"column_end":75}},{"value":"/ and kill the child process if the `Child` wrapper is dropped before it","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9023018,"byte_end":9023092,"line_start":740,"line_end":740,"column_start":1,"column_end":75}},{"value":"/ has exited.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9023093,"byte_end":9023108,"line_start":741,"line_end":741,"column_start":1,"column_end":16}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9023109,"byte_end":9023157,"line_start":742,"line_end":742,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":4713},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9023345,"byte_end":9023350,"line_start":749,"line_end":749,"column_start":9,"column_end":14},"name":"stdin","qualname":"::process::Child::stdin","value":"std::option::Option<process::ChildStdin>","parent":{"krate":0,"index":4711},"children":[],"decl_id":null,"docs":" The handle for writing to the child's standard input (stdin), if it has\n been captured.\n","sig":null,"attributes":[{"value":"/ The handle for writing to the child's standard input (stdin), if it has","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9023238,"byte_end":9023313,"line_start":747,"line_end":747,"column_start":5,"column_end":80}},{"value":"/ been captured.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9023318,"byte_end":9023336,"line_start":748,"line_end":748,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":4714},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9023488,"byte_end":9023494,"line_start":753,"line_end":753,"column_start":9,"column_end":15},"name":"stdout","qualname":"::process::Child::stdout","value":"std::option::Option<process::ChildStdout>","parent":{"krate":0,"index":4711},"children":[],"decl_id":null,"docs":" The handle for reading from the child's standard output (stdout), if it\n has been captured.\n","sig":null,"attributes":[{"value":"/ The handle for reading from the child's standard output (stdout), if it","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9023377,"byte_end":9023452,"line_start":751,"line_end":751,"column_start":5,"column_end":80}},{"value":"/ has been captured.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9023457,"byte_end":9023479,"line_start":752,"line_end":752,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":4715},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9023632,"byte_end":9023638,"line_start":757,"line_end":757,"column_start":9,"column_end":15},"name":"stderr","qualname":"::process::Child::stderr","value":"std::option::Option<process::ChildStderr>","parent":{"krate":0,"index":4711},"children":[],"decl_id":null,"docs":" The handle for reading from the child's standard error (stderr), if it\n has been captured.\n","sig":null,"attributes":[{"value":"/ The handle for reading from the child's standard error (stderr), if it","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9023522,"byte_end":9023596,"line_start":755,"line_end":755,"column_start":5,"column_end":79}},{"value":"/ has been captured.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9023601,"byte_end":9023623,"line_start":756,"line_end":756,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":4624},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9023767,"byte_end":9023769,"line_start":762,"line_end":762,"column_start":12,"column_end":14},"name":"id","qualname":"<Child>::id","value":"pub fn id(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the OS-assigned process identifier associated with this child.\n","sig":null,"attributes":[{"value":"/ Returns the OS-assigned process identifier associated with this child.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9023681,"byte_end":9023755,"line_start":761,"line_end":761,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":4625},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9024963,"byte_end":9024967,"line_start":795,"line_end":795,"column_start":12,"column_end":16},"name":"kill","qualname":"<Child>::kill","value":"pub fn kill(&mut Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Forces the child to exit.","sig":null,"attributes":[{"value":"/ Forces the child to exit.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9023827,"byte_end":9023856,"line_start":766,"line_end":766,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9023861,"byte_end":9023864,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to sending a SIGKILL on unix platforms.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9023869,"byte_end":9023931,"line_start":768,"line_end":768,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9023936,"byte_end":9023939,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ If the child has to be killed remotely, it is possible to do it using","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9023944,"byte_end":9024017,"line_start":770,"line_end":770,"column_start":5,"column_end":78}},{"value":"/ a combination of the select! macro and a oneshot channel. In the following","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9024022,"byte_end":9024100,"line_start":771,"line_end":771,"column_start":5,"column_end":83}},{"value":"/ example, the child will run until completion unless a message is sent on","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9024105,"byte_end":9024181,"line_start":772,"line_end":772,"column_start":5,"column_end":81}},{"value":"/ the oneshot channel. If that happens, the child is killed immediately","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9024186,"byte_end":9024259,"line_start":773,"line_end":773,"column_start":5,"column_end":78}},{"value":"/ using the `.kill()` method.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9024264,"byte_end":9024295,"line_start":774,"line_end":774,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9024300,"byte_end":9024303,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9024308,"byte_end":9024321,"line_start":776,"line_end":776,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9024326,"byte_end":9024358,"line_start":777,"line_end":777,"column_start":5,"column_end":37}},{"value":"/ use tokio::sync::oneshot::channel;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9024363,"byte_end":9024401,"line_start":778,"line_end":778,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9024406,"byte_end":9024409,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9024414,"byte_end":9024432,"line_start":780,"line_end":780,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9024437,"byte_end":9024458,"line_start":781,"line_end":781,"column_start":5,"column_end":26}},{"value":"/     let (send, recv) = channel::<()>();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9024463,"byte_end":9024506,"line_start":782,"line_end":782,"column_start":5,"column_end":48}},{"value":"/     let mut child = Command::new(\"sleep\").arg(\"1\").spawn().unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9024511,"byte_end":9024583,"line_start":783,"line_end":783,"column_start":5,"column_end":77}},{"value":"/     tokio::spawn(async move { send.send(()) });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9024588,"byte_end":9024639,"line_start":784,"line_end":784,"column_start":5,"column_end":56}},{"value":"/     tokio::select! {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9024644,"byte_end":9024668,"line_start":785,"line_end":785,"column_start":5,"column_end":29}},{"value":"/         _ = &mut child => {}","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9024673,"byte_end":9024705,"line_start":786,"line_end":786,"column_start":5,"column_end":37}},{"value":"/         _ = recv => {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9024710,"byte_end":9024735,"line_start":787,"line_end":787,"column_start":5,"column_end":30}},{"value":"/             &mut child.kill();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9024740,"byte_end":9024774,"line_start":788,"line_end":788,"column_start":5,"column_end":39}},{"value":"/             // NB: await the child here to avoid a zombie process on Unix platforms","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9024779,"byte_end":9024866,"line_start":789,"line_end":789,"column_start":5,"column_end":92}},{"value":"/             child.await.unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9024871,"byte_end":9024908,"line_start":790,"line_end":790,"column_start":5,"column_end":42}},{"value":"/         }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9024913,"byte_end":9024926,"line_start":791,"line_end":791,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9024931,"byte_end":9024940,"line_start":792,"line_end":792,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9024945,"byte_end":9024950,"line_start":793,"line_end":793,"column_start":5,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":4626},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9025123,"byte_end":9025128,"line_start":801,"line_end":801,"column_start":12,"column_end":17},"name":"stdin","qualname":"<Child>::stdin","value":"pub fn stdin(&mut Self) -> &mut Option<ChildStdin>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"please use `child.stdin` instead\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9025055,"byte_end":9025111,"line_start":800,"line_end":800,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4627},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9025292,"byte_end":9025298,"line_start":807,"line_end":807,"column_start":12,"column_end":18},"name":"stdout","qualname":"<Child>::stdout","value":"pub fn stdout(&mut Self) -> &mut Option<ChildStdout>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"please use `child.stdout` instead\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9025223,"byte_end":9025280,"line_start":806,"line_end":806,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4628},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9025464,"byte_end":9025470,"line_start":813,"line_end":813,"column_start":12,"column_end":18},"name":"stderr","qualname":"<Child>::stderr","value":"pub fn stderr(&mut Self) -> &mut Option<ChildStderr>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"please use `child.stderr` instead\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9025395,"byte_end":9025452,"line_start":812,"line_end":812,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4629},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9026478,"byte_end":9026494,"line_start":833,"line_end":833,"column_start":18,"column_end":34},"name":"wait_with_output","qualname":"<Child>::wait_with_output","value":"pub async fn wait_with_output(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that will resolve to an `Output`, containing the exit\n status, stdout, and stderr of the child process.","sig":null,"attributes":[{"value":"/ Returns a future that will resolve to an `Output`, containing the exit","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9025548,"byte_end":9025622,"line_start":817,"line_end":817,"column_start":5,"column_end":79}},{"value":"/ status, stdout, and stderr of the child process.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9025627,"byte_end":9025679,"line_start":818,"line_end":818,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9025684,"byte_end":9025687,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ The returned future will simultaneously waits for the child to exit and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9025692,"byte_end":9025767,"line_start":820,"line_end":820,"column_start":5,"column_end":80}},{"value":"/ collect all remaining output on the stdout/stderr handles, returning an","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9025772,"byte_end":9025847,"line_start":821,"line_end":821,"column_start":5,"column_end":80}},{"value":"/ `Output` instance.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9025852,"byte_end":9025874,"line_start":822,"line_end":822,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9025879,"byte_end":9025882,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ The stdin handle to the child process, if any, will be closed before","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9025887,"byte_end":9025959,"line_start":824,"line_end":824,"column_start":5,"column_end":77}},{"value":"/ waiting. This helps avoid deadlock: it ensures that the child does not","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9025964,"byte_end":9026038,"line_start":825,"line_end":825,"column_start":5,"column_end":79}},{"value":"/ block waiting for input from the parent, while the parent waits for the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9026043,"byte_end":9026118,"line_start":826,"line_end":826,"column_start":5,"column_end":80}},{"value":"/ child to exit.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9026123,"byte_end":9026141,"line_start":827,"line_end":827,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9026146,"byte_end":9026149,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ By default, stdin, stdout and stderr are inherited from the parent. In","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9026154,"byte_end":9026228,"line_start":829,"line_end":829,"column_start":5,"column_end":79}},{"value":"/ order to capture the output into this `Output` it is necessary to create","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9026233,"byte_end":9026309,"line_start":830,"line_end":830,"column_start":5,"column_end":81}},{"value":"/ new pipes between parent and child. Use `stdout(Stdio::piped())` or","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9026314,"byte_end":9026385,"line_start":831,"line_end":831,"column_start":5,"column_end":76}},{"value":"/ `stderr(Stdio::piped())`, respectively, when creating a `Command`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9026390,"byte_end":9026460,"line_start":832,"line_end":832,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":4718},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9027608,"byte_end":9027618,"line_start":871,"line_end":871,"column_start":12,"column_end":22},"name":"ChildStdin","qualname":"::process::ChildStdin","value":"ChildStdin {  }","parent":null,"children":[{"krate":0,"index":4719}],"decl_id":null,"docs":" The standard input stream for spawned children.","sig":null,"attributes":[{"value":"/ The standard input stream for spawned children.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9027394,"byte_end":9027445,"line_start":866,"line_end":866,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9027446,"byte_end":9027449,"line_start":867,"line_end":867,"column_start":1,"column_end":4}},{"value":"/ This type implements the `AsyncWrite` trait to pass data to the stdin handle of","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9027450,"byte_end":9027533,"line_start":868,"line_end":868,"column_start":1,"column_end":84}},{"value":"/ handle of a child process asynchronously.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9027534,"byte_end":9027579,"line_start":869,"line_end":869,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":4722},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9027859,"byte_end":9027870,"line_start":880,"line_end":880,"column_start":12,"column_end":23},"name":"ChildStdout","qualname":"::process::ChildStdout","value":"ChildStdout {  }","parent":null,"children":[{"krate":0,"index":4723}],"decl_id":null,"docs":" The standard output stream for spawned children.","sig":null,"attributes":[{"value":"/ The standard output stream for spawned children.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9027652,"byte_end":9027704,"line_start":875,"line_end":875,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9027705,"byte_end":9027708,"line_start":876,"line_end":876,"column_start":1,"column_end":4}},{"value":"/ This type implements the `AsyncRead` trait to read data from the stdout","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9027709,"byte_end":9027784,"line_start":877,"line_end":877,"column_start":1,"column_end":76}},{"value":"/ handle of a child process asynchronously.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9027785,"byte_end":9027830,"line_start":878,"line_end":878,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":4726},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9028111,"byte_end":9028122,"line_start":889,"line_end":889,"column_start":12,"column_end":23},"name":"ChildStderr","qualname":"::process::ChildStderr","value":"ChildStderr {  }","parent":null,"children":[{"krate":0,"index":4727}],"decl_id":null,"docs":" The standard error stream for spawned children.","sig":null,"attributes":[{"value":"/ The standard error stream for spawned children.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9027905,"byte_end":9027956,"line_start":884,"line_end":884,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9027957,"byte_end":9027960,"line_start":885,"line_end":885,"column_start":1,"column_end":4}},{"value":"/ This type implements the `AsyncRead` trait to read data from the stderr","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9027961,"byte_end":9028036,"line_start":886,"line_end":886,"column_start":1,"column_end":76}},{"value":"/ handle of a child process asynchronously.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9028037,"byte_end":9028082,"line_start":887,"line_end":887,"column_start":1,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":570},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"runtime","qualname":"::runtime","value":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","parent":null,"children":[{"krate":0,"index":571},{"krate":0,"index":4740},{"krate":0,"index":4831},{"krate":0,"index":4832},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":5467},{"krate":0,"index":5468},{"krate":0,"index":5469},{"krate":0,"index":588},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":5572},{"krate":0,"index":5624},{"krate":0,"index":701},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":5655},{"krate":0,"index":5756},{"krate":0,"index":5955},{"krate":0,"index":5984},{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":5985},{"krate":0,"index":5989},{"krate":0,"index":5991},{"krate":0,"index":6001},{"krate":0,"index":742},{"krate":0,"index":743}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"/ The Tokio runtime.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":106576,"byte_end":106598,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":106599,"byte_end":106602,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Unlike other Rust programs, asynchronous applications require","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":106603,"byte_end":106668,"line_start":3,"line_end":3,"column_start":1,"column_end":66}},{"value":"/ runtime support. In particular, the following runtime services are","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":106669,"byte_end":106739,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/ necessary:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":106740,"byte_end":106754,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":106755,"byte_end":106758,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ * An **I/O event loop**, called the driver, which drives I/O resources and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":106759,"byte_end":106837,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/   dispatches I/O events to tasks that depend on them.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":106838,"byte_end":106895,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"/ * A **scheduler** to execute [tasks] that use these I/O resources.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":106896,"byte_end":106966,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ * A **timer** for scheduling work to run after a set period of time.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":106967,"byte_end":107039,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":107040,"byte_end":107043,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Tokio's [`Runtime`] bundles all of these services as a single type, allowing","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":107044,"byte_end":107124,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ them to be started, shut down, and configured together. However, most","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":107125,"byte_end":107198,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/ applications won't need to use [`Runtime`] directly. Instead, they can","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":107199,"byte_end":107273,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/ use the [`tokio::main`] attribute macro, which creates a [`Runtime`] under","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":107274,"byte_end":107352,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ the hood.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":107353,"byte_end":107366,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":107367,"byte_end":107370,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":107371,"byte_end":107382,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":107383,"byte_end":107386,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Most applications will use the [`tokio::main`] attribute macro.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":107387,"byte_end":107454,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":107455,"byte_end":107458,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":107459,"byte_end":107472,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":107473,"byte_end":107505,"line_start":23,"line_end":23,"column_start":1,"column_end":33}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":107506,"byte_end":107532,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":107533,"byte_end":107536,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":107537,"byte_end":107555,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":107556,"byte_end":107619,"line_start":27,"line_end":27,"column_start":1,"column_end":64}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":107620,"byte_end":107690,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":107691,"byte_end":107694,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":107695,"byte_end":107709,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":107710,"byte_end":107769,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":107770,"byte_end":107773,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":107774,"byte_end":107811,"line_start":33,"line_end":33,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":107812,"byte_end":107852,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":107853,"byte_end":107856,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":107857,"byte_end":107937,"line_start":36,"line_end":36,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":107938,"byte_end":107960,"line_start":37,"line_end":37,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":107961,"byte_end":108024,"line_start":38,"line_end":38,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":108025,"byte_end":108065,"line_start":39,"line_end":39,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":108066,"byte_end":108116,"line_start":40,"line_end":40,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":108117,"byte_end":108152,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":108153,"byte_end":108188,"line_start":42,"line_end":42,"column_start":1,"column_end":36}},{"value":"/                         println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":108189,"byte_end":108271,"line_start":43,"line_end":43,"column_start":1,"column_end":83}},{"value":"/                         return;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":108272,"byte_end":108307,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":108308,"byte_end":108333,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":108334,"byte_end":108356,"line_start":46,"line_end":46,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":108357,"byte_end":108360,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":108361,"byte_end":108403,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":108404,"byte_end":108476,"line_start":49,"line_end":49,"column_start":1,"column_end":73}},{"value":"/                     println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":108477,"byte_end":108554,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"/                     return;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":108555,"byte_end":108586,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":108587,"byte_end":108608,"line_start":52,"line_end":52,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":108609,"byte_end":108626,"line_start":53,"line_end":53,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":108627,"byte_end":108642,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":108643,"byte_end":108652,"line_start":55,"line_end":55,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":108653,"byte_end":108658,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":108659,"byte_end":108666,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":108667,"byte_end":108670,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ From within the context of the runtime, additional tasks are spawned using","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":108671,"byte_end":108749,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ the [`tokio::spawn`] function. Futures spawned using this function will be","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":108750,"byte_end":108828,"line_start":60,"line_end":60,"column_start":1,"column_end":79}},{"value":"/ executed on the same thread pool used by the [`Runtime`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":108829,"byte_end":108890,"line_start":61,"line_end":61,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":108891,"byte_end":108894,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ A [`Runtime`] instance can also be used directly.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":108895,"byte_end":108948,"line_start":63,"line_end":63,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":108949,"byte_end":108952,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":108953,"byte_end":108966,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":108967,"byte_end":108999,"line_start":66,"line_end":66,"column_start":1,"column_end":33}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":109000,"byte_end":109026,"line_start":67,"line_end":67,"column_start":1,"column_end":27}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":109027,"byte_end":109059,"line_start":68,"line_end":68,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":109060,"byte_end":109063,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":109064,"byte_end":109121,"line_start":70,"line_end":70,"column_start":1,"column_end":58}},{"value":"/     // Create the runtime","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":109122,"byte_end":109151,"line_start":71,"line_end":71,"column_start":1,"column_end":30}},{"value":"/     let mut rt = Runtime::new()?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":109152,"byte_end":109189,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":109190,"byte_end":109193,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     // Spawn the root task","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":109194,"byte_end":109224,"line_start":74,"line_end":74,"column_start":1,"column_end":31}},{"value":"/     rt.block_on(async {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":109225,"byte_end":109252,"line_start":75,"line_end":75,"column_start":1,"column_end":28}},{"value":"/         let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":109253,"byte_end":109327,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":109328,"byte_end":109331,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/         loop {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":109332,"byte_end":109350,"line_start":78,"line_end":78,"column_start":1,"column_end":19}},{"value":"/             let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":109351,"byte_end":109414,"line_start":79,"line_end":79,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":109415,"byte_end":109418,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/             tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":109419,"byte_end":109460,"line_start":81,"line_end":81,"column_start":1,"column_end":42}},{"value":"/                 let mut buf = [0; 1024];","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":109461,"byte_end":109505,"line_start":82,"line_end":82,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":109506,"byte_end":109509,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/                 // In a loop, read data from the socket and write the data back.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":109510,"byte_end":109594,"line_start":84,"line_end":84,"column_start":1,"column_end":85}},{"value":"/                 loop {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":109595,"byte_end":109621,"line_start":85,"line_end":85,"column_start":1,"column_end":27}},{"value":"/                     let n = match socket.read(&mut buf).await {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":109622,"byte_end":109689,"line_start":86,"line_end":86,"column_start":1,"column_end":68}},{"value":"/                         // socket closed","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":109690,"byte_end":109734,"line_start":87,"line_end":87,"column_start":1,"column_end":45}},{"value":"/                         Ok(n) if n == 0 => return,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":109735,"byte_end":109789,"line_start":88,"line_end":88,"column_start":1,"column_end":55}},{"value":"/                         Ok(n) => n,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":109790,"byte_end":109829,"line_start":89,"line_end":89,"column_start":1,"column_end":40}},{"value":"/                         Err(e) => {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":109830,"byte_end":109869,"line_start":90,"line_end":90,"column_start":1,"column_end":40}},{"value":"/                             println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":109870,"byte_end":109956,"line_start":91,"line_end":91,"column_start":1,"column_end":87}},{"value":"/                             return;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":109957,"byte_end":109996,"line_start":92,"line_end":92,"column_start":1,"column_end":40}},{"value":"/                         }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":109997,"byte_end":110026,"line_start":93,"line_end":93,"column_start":1,"column_end":30}},{"value":"/                     };","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":110027,"byte_end":110053,"line_start":94,"line_end":94,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":110054,"byte_end":110057,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/                     // Write the data back","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":110058,"byte_end":110104,"line_start":96,"line_end":96,"column_start":1,"column_end":47}},{"value":"/                     if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":110105,"byte_end":110181,"line_start":97,"line_end":97,"column_start":1,"column_end":77}},{"value":"/                         println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":110182,"byte_end":110263,"line_start":98,"line_end":98,"column_start":1,"column_end":82}},{"value":"/                         return;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":110264,"byte_end":110299,"line_start":99,"line_end":99,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":110300,"byte_end":110325,"line_start":100,"line_end":100,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":110326,"byte_end":110347,"line_start":101,"line_end":101,"column_start":1,"column_end":22}},{"value":"/             });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":110348,"byte_end":110367,"line_start":102,"line_end":102,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":110368,"byte_end":110381,"line_start":103,"line_end":103,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":110382,"byte_end":110392,"line_start":104,"line_end":104,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":110393,"byte_end":110398,"line_start":105,"line_end":105,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":110399,"byte_end":110406,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":110407,"byte_end":110410,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ ## Runtime Configurations","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":110411,"byte_end":110440,"line_start":108,"line_end":108,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":110441,"byte_end":110444,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ Tokio provides multiple task scheduling strategies, suitable for different","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":110445,"byte_end":110523,"line_start":110,"line_end":110,"column_start":1,"column_end":79}},{"value":"/ applications. The [runtime builder] or `#[tokio::main]` attribute may be","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":110524,"byte_end":110600,"line_start":111,"line_end":111,"column_start":1,"column_end":77}},{"value":"/ used to select which scheduler to use.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":110601,"byte_end":110643,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":110644,"byte_end":110647,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ #### Basic Scheduler","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":110648,"byte_end":110672,"line_start":114,"line_end":114,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":110673,"byte_end":110676,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ The basic scheduler provides a _single-threaded_ future executor. All tasks","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":110677,"byte_end":110756,"line_start":116,"line_end":116,"column_start":1,"column_end":80}},{"value":"/ will be created and executed on the current thread. The basic scheduler","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":110757,"byte_end":110832,"line_start":117,"line_end":117,"column_start":1,"column_end":76}},{"value":"/ requires the `rt-core` feature flag, and can be selected using the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":110833,"byte_end":110903,"line_start":118,"line_end":118,"column_start":1,"column_end":71}},{"value":"/ [`Builder::basic_scheduler`] method:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":110904,"byte_end":110944,"line_start":119,"line_end":119,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":110945,"byte_end":110952,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":110953,"byte_end":110976,"line_start":121,"line_end":121,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":110977,"byte_end":110980,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":110981,"byte_end":111040,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/ let basic_rt = runtime::Builder::new()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":111041,"byte_end":111083,"line_start":124,"line_end":124,"column_start":1,"column_end":43}},{"value":"/     .basic_scheduler()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":111084,"byte_end":111110,"line_start":125,"line_end":125,"column_start":1,"column_end":27}},{"value":"/     .build()?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":111111,"byte_end":111129,"line_start":126,"line_end":126,"column_start":1,"column_end":19}},{"value":"/ # Ok(()) }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":111130,"byte_end":111144,"line_start":127,"line_end":127,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":111145,"byte_end":111152,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":111153,"byte_end":111156,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ If the `rt-core` feature is enabled and `rt-threaded` is not,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":111157,"byte_end":111222,"line_start":130,"line_end":130,"column_start":1,"column_end":66}},{"value":"/ [`Runtime::new`] will return a basic scheduler runtime by default.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":111223,"byte_end":111293,"line_start":131,"line_end":131,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":111294,"byte_end":111297,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ #### Threaded Scheduler","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":111298,"byte_end":111325,"line_start":133,"line_end":133,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":111326,"byte_end":111329,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ The threaded scheduler executes futures on a _thread pool_, using a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":111330,"byte_end":111401,"line_start":135,"line_end":135,"column_start":1,"column_end":72}},{"value":"/ work-stealing strategy. By default, it will start a worker thread for each","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":111402,"byte_end":111480,"line_start":136,"line_end":136,"column_start":1,"column_end":79}},{"value":"/ CPU core available on the system. This tends to be the ideal configurations","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":111481,"byte_end":111560,"line_start":137,"line_end":137,"column_start":1,"column_end":80}},{"value":"/ for most applications. The threaded scheduler requires the `rt-threaded` feature","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":111561,"byte_end":111645,"line_start":138,"line_end":138,"column_start":1,"column_end":85}},{"value":"/ flag, and can be selected using the  [`Builder::threaded_scheduler`] method:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":111646,"byte_end":111726,"line_start":139,"line_end":139,"column_start":1,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":111727,"byte_end":111734,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":111735,"byte_end":111758,"line_start":141,"line_end":141,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":111759,"byte_end":111762,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":111763,"byte_end":111822,"line_start":143,"line_end":143,"column_start":1,"column_end":60}},{"value":"/ let threaded_rt = runtime::Builder::new()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":111823,"byte_end":111868,"line_start":144,"line_end":144,"column_start":1,"column_end":46}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":111869,"byte_end":111898,"line_start":145,"line_end":145,"column_start":1,"column_end":30}},{"value":"/     .build()?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":111899,"byte_end":111917,"line_start":146,"line_end":146,"column_start":1,"column_end":19}},{"value":"/ # Ok(()) }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":111918,"byte_end":111932,"line_start":147,"line_end":147,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":111933,"byte_end":111940,"line_start":148,"line_end":148,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":111941,"byte_end":111944,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ If the `rt-threaded` feature flag is enabled, [`Runtime::new`] will return a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":111945,"byte_end":112025,"line_start":150,"line_end":150,"column_start":1,"column_end":81}},{"value":"/ threaded scheduler runtime by default.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":112026,"byte_end":112068,"line_start":151,"line_end":151,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":112069,"byte_end":112072,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ Most applications should use the threaded scheduler, except in some niche","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":112073,"byte_end":112150,"line_start":153,"line_end":153,"column_start":1,"column_end":78}},{"value":"/ use-cases, such as when running only a single thread is required.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":112151,"byte_end":112220,"line_start":154,"line_end":154,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":112221,"byte_end":112224,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ #### Resource drivers","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":112225,"byte_end":112250,"line_start":156,"line_end":156,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":112251,"byte_end":112254,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ When configuring a runtime by hand, no resource drivers are enabled by","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":112255,"byte_end":112329,"line_start":158,"line_end":158,"column_start":1,"column_end":75}},{"value":"/ default. In this case, attempting to use networking types or time types will","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":112330,"byte_end":112410,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ fail. In order to enable these types, the resource drivers must be enabled.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":112411,"byte_end":112490,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ This is done with [`Builder::enable_io`] and [`Builder::enable_time`]. As a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":112491,"byte_end":112570,"line_start":161,"line_end":161,"column_start":1,"column_end":80}},{"value":"/ shorthand, [`Builder::enable_all`] enables both resource drivers.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":112571,"byte_end":112640,"line_start":162,"line_end":162,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":112641,"byte_end":112644,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ ## Lifetime of spawned threads","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":112645,"byte_end":112679,"line_start":164,"line_end":164,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":112680,"byte_end":112683,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ The runtime may spawn threads depending on its configuration and usage. The","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":112684,"byte_end":112763,"line_start":166,"line_end":166,"column_start":1,"column_end":80}},{"value":"/ threaded scheduler spawns threads to schedule tasks and calls to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":112764,"byte_end":112832,"line_start":167,"line_end":167,"column_start":1,"column_end":69}},{"value":"/ `spawn_blocking` spawn threads to run blocking operations.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":112833,"byte_end":112895,"line_start":168,"line_end":168,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":112896,"byte_end":112899,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ While the `Runtime` is active, threads may shutdown after periods of being","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":112900,"byte_end":112978,"line_start":170,"line_end":170,"column_start":1,"column_end":79}},{"value":"/ idle. Once `Runtime` is dropped, all runtime threads are forcibly shutdown.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":112979,"byte_end":113058,"line_start":171,"line_end":171,"column_start":1,"column_end":80}},{"value":"/ Any tasks that have not yet completed will be dropped.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":113059,"byte_end":113117,"line_start":172,"line_end":172,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":113118,"byte_end":113121,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ [tasks]: crate::task","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":113122,"byte_end":113146,"line_start":174,"line_end":174,"column_start":1,"column_end":25}},{"value":"/ [`Runtime`]: Runtime","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":113147,"byte_end":113171,"line_start":175,"line_end":175,"column_start":1,"column_end":25}},{"value":"/ [`tokio::spawn`]: crate::spawn","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":113172,"byte_end":113206,"line_start":176,"line_end":176,"column_start":1,"column_end":35}},{"value":"/ [`tokio::main`]: ../attr.main.html","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":113207,"byte_end":113245,"line_start":177,"line_end":177,"column_start":1,"column_end":39}},{"value":"/ [runtime builder]: crate::runtime::Builder","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":113246,"byte_end":113292,"line_start":178,"line_end":178,"column_start":1,"column_end":47}},{"value":"/ [`Runtime::new`]: crate::runtime::Runtime::new","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":113293,"byte_end":113343,"line_start":179,"line_end":179,"column_start":1,"column_end":51}},{"value":"/ [`Builder::basic_scheduler`]: crate::runtime::Builder::basic_scheduler","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":113344,"byte_end":113418,"line_start":180,"line_end":180,"column_start":1,"column_end":75}},{"value":"/ [`Builder::threaded_scheduler`]: crate::runtime::Builder::threaded_scheduler","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":113419,"byte_end":113499,"line_start":181,"line_end":181,"column_start":1,"column_end":81}},{"value":"/ [`Builder::enable_io`]: crate::runtime::Builder::enable_io","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":113500,"byte_end":113562,"line_start":182,"line_end":182,"column_start":1,"column_end":63}},{"value":"/ [`Builder::enable_time`]: crate::runtime::Builder::enable_time","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":113563,"byte_end":113629,"line_start":183,"line_end":183,"column_start":1,"column_end":67}},{"value":"/ [`Builder::enable_all`]: crate::runtime::Builder::enable_all","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":113630,"byte_end":113694,"line_start":184,"line_end":184,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":5281},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9087478,"byte_end":9087487,"line_start":8,"line_end":8,"column_start":16,"column_end":25},"name":"JoinError","qualname":"::runtime::task::error::JoinError","value":"JoinError {  }","parent":null,"children":[{"krate":0,"index":5282}],"decl_id":null,"docs":" Task failed to execute to completion.\n","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":21740,"byte_end":21767,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4924},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9087663,"byte_end":9087672,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<JoinError>::cancelled","value":"pub fn cancelled() -> JoinError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9087638,"byte_end":9087651,"line_start":20,"line_end":20,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":4926},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9087890,"byte_end":9087895,"line_start":33,"line_end":33,"column_start":12,"column_end":17},"name":"panic","qualname":"<JoinError>::panic","value":"pub fn panic(Box<Any + Send + 'static>) -> JoinError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9087865,"byte_end":9087878,"line_start":32,"line_end":32,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":4928},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9088225,"byte_end":9088237,"line_start":44,"line_end":44,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<JoinError>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task being cancelled\n","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task being cancelled","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9088145,"byte_end":9088213,"line_start":43,"line_end":43,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":4929},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9088743,"byte_end":9088751,"line_start":67,"line_end":67,"column_start":12,"column_end":20},"name":"is_panic","qualname":"<JoinError>::is_panic","value":"pub fn is_panic(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task panicking","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task panicking","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9088364,"byte_end":9088426,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9088431,"byte_end":9088434,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9088439,"byte_end":9088453,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9088458,"byte_end":9088461,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9088466,"byte_end":9088473,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ use std::panic;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9088478,"byte_end":9088497,"line_start":56,"line_end":56,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9088502,"byte_end":9088505,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9088510,"byte_end":9088528,"line_start":58,"line_end":58,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9088533,"byte_end":9088554,"line_start":59,"line_end":59,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9088559,"byte_end":9088597,"line_start":60,"line_end":60,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9088602,"byte_end":9088629,"line_start":61,"line_end":61,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9088634,"byte_end":9088664,"line_start":62,"line_end":62,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9088669,"byte_end":9088672,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/     assert!(err.is_panic());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9088677,"byte_end":9088709,"line_start":64,"line_end":64,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9088714,"byte_end":9088719,"line_start":65,"line_end":65,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9088724,"byte_end":9088731,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4930},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9089658,"byte_end":9089668,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"into_panic","qualname":"<JoinError>::into_panic","value":"pub fn into_panic(Self) -> Box<Any + Send + 'static>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task panicked.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task panicked.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9088877,"byte_end":9088956,"line_start":74,"line_end":74,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9088961,"byte_end":9088964,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9088969,"byte_end":9088981,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9088986,"byte_end":9088989,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ `into_panic()` panics if the `Error` does not represent the underlying","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9088994,"byte_end":9089068,"line_start":78,"line_end":78,"column_start":5,"column_end":79}},{"value":"/ task terminating with a panic. Use `is_panic` to check the error reason","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9089073,"byte_end":9089148,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ or `try_into_panic` for a variant that does not panic.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9089153,"byte_end":9089211,"line_start":80,"line_end":80,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9089216,"byte_end":9089219,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9089224,"byte_end":9089238,"line_start":82,"line_end":82,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9089243,"byte_end":9089246,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9089251,"byte_end":9089270,"line_start":84,"line_end":84,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9089275,"byte_end":9089294,"line_start":85,"line_end":85,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9089299,"byte_end":9089302,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9089307,"byte_end":9089325,"line_start":87,"line_end":87,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9089330,"byte_end":9089351,"line_start":88,"line_end":88,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9089356,"byte_end":9089394,"line_start":89,"line_end":89,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9089399,"byte_end":9089426,"line_start":90,"line_end":90,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9089431,"byte_end":9089461,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9089466,"byte_end":9089469,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/     if err.is_panic() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9089474,"byte_end":9089501,"line_start":93,"line_end":93,"column_start":5,"column_end":32}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9089506,"byte_end":9089554,"line_start":94,"line_end":94,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(err.into_panic());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9089559,"byte_end":9089610,"line_start":95,"line_end":95,"column_start":5,"column_end":56}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9089615,"byte_end":9089624,"line_start":96,"line_end":96,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9089629,"byte_end":9089634,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9089639,"byte_end":9089646,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4931},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9090433,"byte_end":9090447,"line_start":125,"line_end":125,"column_start":12,"column_end":26},"name":"try_into_panic","qualname":"<JoinError>::try_into_panic","value":"pub fn try_into_panic(Self) -> Result<Box<Any + Send + 'static>, JoinError>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task\n panicked if the task terminated due to a panic. Otherwise, `self` is\n returned.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9089809,"byte_end":9089878,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ panicked if the task terminated due to a panic. Otherwise, `self` is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9089883,"byte_end":9089955,"line_start":105,"line_end":105,"column_start":5,"column_end":77}},{"value":"/ returned.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9089960,"byte_end":9089973,"line_start":106,"line_end":106,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9089978,"byte_end":9089981,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9089986,"byte_end":9090000,"line_start":108,"line_end":108,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9090005,"byte_end":9090008,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9090013,"byte_end":9090032,"line_start":110,"line_end":110,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9090037,"byte_end":9090056,"line_start":111,"line_end":111,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9090061,"byte_end":9090064,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9090069,"byte_end":9090087,"line_start":113,"line_end":113,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9090092,"byte_end":9090113,"line_start":114,"line_end":114,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9090118,"byte_end":9090156,"line_start":115,"line_end":115,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9090161,"byte_end":9090188,"line_start":116,"line_end":116,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9090193,"byte_end":9090223,"line_start":117,"line_end":117,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9090228,"byte_end":9090231,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/     if let Ok(reason) = err.try_into_panic() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9090236,"byte_end":9090286,"line_start":119,"line_end":119,"column_start":5,"column_end":55}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9090291,"byte_end":9090339,"line_start":120,"line_end":120,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(reason);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9090344,"byte_end":9090385,"line_start":121,"line_end":121,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9090390,"byte_end":9090399,"line_start":122,"line_end":122,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9090404,"byte_end":9090409,"line_start":123,"line_end":123,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9090414,"byte_end":9090421,"line_start":124,"line_end":124,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5283},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/join.rs","byte_start":9106813,"byte_end":9106823,"line_start":78,"line_end":78,"column_start":16,"column_end":26},"name":"JoinHandle","qualname":"::runtime::task::join::JoinHandle","value":"JoinHandle {  }","parent":null,"children":[{"krate":0,"index":5285},{"krate":0,"index":5286}],"decl_id":null,"docs":" An owned permission to join on a task (await its termination).","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":21740,"byte_end":21767,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":600},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":129918,"byte_end":129925,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"Builder","qualname":"::runtime::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609}],"decl_id":null,"docs":" Builds Tokio Runtime with custom configuration values.","sig":null,"attributes":[{"value":"/ Builds Tokio Runtime with custom configuration values.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":129090,"byte_end":129148,"line_start":9,"line_end":9,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":129149,"byte_end":129152,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Methods can be chained in order to set the configuration values. The","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":129153,"byte_end":129225,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/ Runtime is constructed by calling [`build`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":129226,"byte_end":129274,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":129275,"byte_end":129278,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ New instances of `Builder` are obtained via [`Builder::new`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":129279,"byte_end":129344,"line_start":14,"line_end":14,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":129345,"byte_end":129348,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ See function level documentation for details on the various configuration","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":129349,"byte_end":129426,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ settings.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":129427,"byte_end":129440,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":129441,"byte_end":129444,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`build`]: method@Self::build","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":129445,"byte_end":129478,"line_start":19,"line_end":19,"column_start":1,"column_end":34}},{"value":"/ [`Builder::new`]: method@Self::new","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":129479,"byte_end":129517,"line_start":20,"line_end":20,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":129518,"byte_end":129521,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":129522,"byte_end":129536,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":129537,"byte_end":129540,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":129541,"byte_end":129548,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":129549,"byte_end":129581,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":129582,"byte_end":129585,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":129586,"byte_end":129601,"line_start":27,"line_end":27,"column_start":1,"column_end":16}},{"value":"/     // build runtime","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":129602,"byte_end":129626,"line_start":28,"line_end":28,"column_start":1,"column_end":25}},{"value":"/     let runtime = Builder::new()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":129627,"byte_end":129663,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"/         .threaded_scheduler()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":129664,"byte_end":129697,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/         .core_threads(4)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":129698,"byte_end":129726,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/         .thread_name(\"my-custom-name\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":129727,"byte_end":129769,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/         .thread_stack_size(3 * 1024 * 1024)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":129770,"byte_end":129817,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/         .build()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":129818,"byte_end":129838,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/         .unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":129839,"byte_end":129861,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":129862,"byte_end":129865,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     // use runtime ...","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":129866,"byte_end":129892,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":129893,"byte_end":129898,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":129899,"byte_end":129906,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":131080,"byte_end":131083,"line_start":85,"line_end":85,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new runtime builder initialized with default configuration\n values.","sig":null,"attributes":[{"value":"/ Returns a new runtime builder initialized with default configuration","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":130906,"byte_end":130978,"line_start":81,"line_end":81,"column_start":5,"column_end":77}},{"value":"/ values.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":130983,"byte_end":130994,"line_start":82,"line_end":82,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":130999,"byte_end":131002,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Configuration methods can be chained on the return value.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":131007,"byte_end":131068,"line_start":84,"line_end":84,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":132287,"byte_end":132297,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"enable_all","qualname":"<Builder>::enable_all","value":"pub fn enable_all(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables both I/O and time drivers.","sig":null,"attributes":[{"value":"/ Enables both I/O and time drivers.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":131773,"byte_end":131811,"line_start":113,"line_end":113,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":131816,"byte_end":131819,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Doing this is a shorthand for calling `enable_io` and `enable_time`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":131824,"byte_end":131895,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/ individually. If additional components are added to Tokio in the future,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":131900,"byte_end":131976,"line_start":116,"line_end":116,"column_start":5,"column_end":81}},{"value":"/ `enable_all` will include these future components.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":131981,"byte_end":132035,"line_start":117,"line_end":117,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":132040,"byte_end":132043,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":132048,"byte_end":132062,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":132067,"byte_end":132070,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":132075,"byte_end":132082,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":132087,"byte_end":132110,"line_start":122,"line_end":122,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":132115,"byte_end":132118,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":132123,"byte_end":132159,"line_start":124,"line_end":124,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":132164,"byte_end":132193,"line_start":125,"line_end":125,"column_start":5,"column_end":34}},{"value":"/     .enable_all()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":132198,"byte_end":132219,"line_start":126,"line_end":126,"column_start":5,"column_end":26}},{"value":"/     .build()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":132224,"byte_end":132240,"line_start":127,"line_end":127,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":132245,"byte_end":132263,"line_start":128,"line_end":128,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":132268,"byte_end":132275,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":132852,"byte_end":132863,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"num_threads","qualname":"<Builder>::num_threads","value":"pub fn num_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of worker threads for the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"deprecated(note = \"In future will be replaced by core_threads method\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":132474,"byte_end":132547,"line_start":139,"line_end":139,"column_start":5,"column_end":78}},{"value":"/ Sets the maximum number of worker threads for the `Runtime`'s thread pool.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":132552,"byte_end":132630,"line_start":140,"line_end":140,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":132635,"byte_end":132638,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ This must be a number between 1 and 32,768 though it is advised to keep","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":132643,"byte_end":132718,"line_start":142,"line_end":142,"column_start":5,"column_end":80}},{"value":"/ this value on the smaller side.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":132723,"byte_end":132758,"line_start":143,"line_end":143,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":132763,"byte_end":132766,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":132771,"byte_end":132840,"line_start":145,"line_end":145,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":133572,"byte_end":133584,"line_start":171,"line_end":171,"column_start":12,"column_end":24},"name":"core_threads","qualname":"<Builder>::core_threads","value":"pub fn core_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the core number of worker threads for the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets the core number of worker threads for the `Runtime`'s thread pool.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":132965,"byte_end":133040,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":133045,"byte_end":133048,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This should be a number between 1 and 32,768 though it is advised to keep","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":133053,"byte_end":133130,"line_start":153,"line_end":153,"column_start":5,"column_end":82}},{"value":"/ this value on the smaller side.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":133135,"byte_end":133170,"line_start":154,"line_end":154,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":133175,"byte_end":133178,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":133183,"byte_end":133252,"line_start":156,"line_end":156,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":133257,"byte_end":133260,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ These threads will be always active and running.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":133265,"byte_end":133317,"line_start":158,"line_end":158,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":133322,"byte_end":133325,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":133330,"byte_end":133344,"line_start":160,"line_end":160,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":133349,"byte_end":133352,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":133357,"byte_end":133364,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":133369,"byte_end":133392,"line_start":163,"line_end":163,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":133397,"byte_end":133400,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":133405,"byte_end":133441,"line_start":165,"line_end":165,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":133446,"byte_end":133475,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/     .core_threads(4)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":133480,"byte_end":133504,"line_start":167,"line_end":167,"column_start":5,"column_end":29}},{"value":"/     .build()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":133509,"byte_end":133525,"line_start":168,"line_end":168,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":133530,"byte_end":133548,"line_start":169,"line_end":169,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":133553,"byte_end":133560,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":134463,"byte_end":134474,"line_start":191,"line_end":191,"column_start":12,"column_end":23},"name":"max_threads","qualname":"<Builder>::max_threads","value":"pub fn max_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies limit for threads, spawned by the Runtime.","sig":null,"attributes":[{"value":"/ Specifies limit for threads, spawned by the Runtime.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":133745,"byte_end":133801,"line_start":177,"line_end":177,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":133806,"byte_end":133809,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ This is number of threads to be used by Runtime, including `core_threads`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":133814,"byte_end":133891,"line_start":179,"line_end":179,"column_start":5,"column_end":82}},{"value":"/ Having `max_threads` less than `core_threads` results in invalid configuration","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":133896,"byte_end":133978,"line_start":180,"line_end":180,"column_start":5,"column_end":87}},{"value":"/ when building multi-threaded `Runtime`, which would cause a panic.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":133983,"byte_end":134053,"line_start":181,"line_end":181,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":134058,"byte_end":134061,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ Similarly to the `core_threads`, this number should be between 1 and 32,768.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":134066,"byte_end":134146,"line_start":183,"line_end":183,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":134151,"byte_end":134154,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ The default value is 512.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":134159,"byte_end":134188,"line_start":185,"line_end":185,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":134193,"byte_end":134196,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ When multi-threaded runtime is not used, will act as limit on additional threads.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":134201,"byte_end":134286,"line_start":187,"line_end":187,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":134291,"byte_end":134294,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ Otherwise as `core_threads` are always active, it limits additional threads (e.g. for","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":134299,"byte_end":134388,"line_start":189,"line_end":189,"column_start":5,"column_end":94}},{"value":"/ blocking annotations) as `max_threads - core_threads`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":134393,"byte_end":134451,"line_start":190,"line_end":190,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":134998,"byte_end":135009,"line_start":212,"line_end":212,"column_start":12,"column_end":23},"name":"thread_name","qualname":"<Builder>::thread_name","value":"pub fn thread_name<impl Into<String>: Into<String>>(&mut Self,\n                                                    impl Into<String>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets name of threads spawned by the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets name of threads spawned by the `Runtime`'s thread pool.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":134628,"byte_end":134692,"line_start":197,"line_end":197,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":134697,"byte_end":134700,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ The default name is \"tokio-runtime-worker\".","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":134705,"byte_end":134752,"line_start":199,"line_end":199,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":134757,"byte_end":134760,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":134765,"byte_end":134779,"line_start":201,"line_end":201,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":134784,"byte_end":134787,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":134792,"byte_end":134799,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":134804,"byte_end":134829,"line_start":204,"line_end":204,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":134834,"byte_end":134837,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":134842,"byte_end":134863,"line_start":206,"line_end":206,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":134868,"byte_end":134904,"line_start":207,"line_end":207,"column_start":5,"column_end":41}},{"value":"/     .thread_name(\"my-pool\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":134909,"byte_end":134940,"line_start":208,"line_end":208,"column_start":5,"column_end":36}},{"value":"/     .build();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":134945,"byte_end":134962,"line_start":209,"line_end":209,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":134967,"byte_end":134974,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":134979,"byte_end":134986,"line_start":211,"line_end":211,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":135733,"byte_end":135750,"line_start":237,"line_end":237,"column_start":12,"column_end":29},"name":"thread_stack_size","qualname":"<Builder>::thread_stack_size","value":"pub fn thread_stack_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the stack size (in bytes) for worker threads.","sig":null,"attributes":[{"value":"/ Sets the stack size (in bytes) for worker threads.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":135123,"byte_end":135177,"line_start":217,"line_end":217,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":135182,"byte_end":135185,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ The actual stack size may be greater than this value if the platform","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":135190,"byte_end":135262,"line_start":219,"line_end":219,"column_start":5,"column_end":77}},{"value":"/ specifies minimal stack size.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":135267,"byte_end":135300,"line_start":220,"line_end":220,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":135305,"byte_end":135308,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ The default stack size for spawned threads is 2 MiB, though this","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":135313,"byte_end":135381,"line_start":222,"line_end":222,"column_start":5,"column_end":73}},{"value":"/ particular stack size is subject to change in the future.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":135386,"byte_end":135447,"line_start":223,"line_end":223,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":135452,"byte_end":135455,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":135460,"byte_end":135474,"line_start":225,"line_end":225,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":135479,"byte_end":135482,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":135487,"byte_end":135494,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":135499,"byte_end":135524,"line_start":228,"line_end":228,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":135529,"byte_end":135532,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":135537,"byte_end":135558,"line_start":230,"line_end":230,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":135563,"byte_end":135599,"line_start":231,"line_end":231,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":135604,"byte_end":135633,"line_start":232,"line_end":232,"column_start":5,"column_end":34}},{"value":"/     .thread_stack_size(32 * 1024)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":135638,"byte_end":135675,"line_start":233,"line_end":233,"column_start":5,"column_end":42}},{"value":"/     .build();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":135680,"byte_end":135697,"line_start":234,"line_end":234,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":135702,"byte_end":135709,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":135714,"byte_end":135721,"line_start":236,"line_end":236,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":136391,"byte_end":136406,"line_start":262,"line_end":262,"column_start":12,"column_end":27},"name":"on_thread_start","qualname":"<Builder>::on_thread_start","value":"pub fn on_thread_start<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` after each thread is started but before it starts\n doing work.","sig":null,"attributes":[{"value":"/ Executes function `f` after each thread is started but before it starts","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":135857,"byte_end":135932,"line_start":242,"line_end":242,"column_start":5,"column_end":80}},{"value":"/ doing work.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":135937,"byte_end":135952,"line_start":243,"line_end":243,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":135957,"byte_end":135960,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":135965,"byte_end":136027,"line_start":245,"line_end":245,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":136032,"byte_end":136035,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":136040,"byte_end":136054,"line_start":247,"line_end":247,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":136059,"byte_end":136062,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":136067,"byte_end":136074,"line_start":249,"line_end":249,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":136079,"byte_end":136104,"line_start":250,"line_end":250,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":136109,"byte_end":136112,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":136117,"byte_end":136138,"line_start":252,"line_end":252,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":136143,"byte_end":136184,"line_start":253,"line_end":253,"column_start":5,"column_end":46}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":136189,"byte_end":136218,"line_start":254,"line_end":254,"column_start":5,"column_end":34}},{"value":"/     .on_thread_start(|| {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":136223,"byte_end":136252,"line_start":255,"line_end":255,"column_start":5,"column_end":34}},{"value":"/         println!(\"thread started\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":136257,"byte_end":136296,"line_start":256,"line_end":256,"column_start":5,"column_end":44}},{"value":"/     })","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":136301,"byte_end":136311,"line_start":257,"line_end":257,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":136316,"byte_end":136333,"line_start":258,"line_end":258,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":136338,"byte_end":136345,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":136350,"byte_end":136357,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":136362,"byte_end":136379,"line_start":261,"line_end":261,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":137057,"byte_end":137071,"line_start":289,"line_end":289,"column_start":12,"column_end":26},"name":"on_thread_stop","qualname":"<Builder>::on_thread_stop","value":"pub fn on_thread_stop<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` before each thread stops.","sig":null,"attributes":[{"value":"/ Executes function `f` before each thread stops.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":136567,"byte_end":136618,"line_start":270,"line_end":270,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":136623,"byte_end":136626,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":136631,"byte_end":136693,"line_start":272,"line_end":272,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":136698,"byte_end":136701,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":136706,"byte_end":136720,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":136725,"byte_end":136728,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":136733,"byte_end":136740,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":136745,"byte_end":136770,"line_start":277,"line_end":277,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":136775,"byte_end":136778,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":136783,"byte_end":136804,"line_start":279,"line_end":279,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":136809,"byte_end":136850,"line_start":280,"line_end":280,"column_start":5,"column_end":46}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":136855,"byte_end":136884,"line_start":281,"line_end":281,"column_start":5,"column_end":34}},{"value":"/     .on_thread_stop(|| {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":136889,"byte_end":136917,"line_start":282,"line_end":282,"column_start":5,"column_end":33}},{"value":"/         println!(\"thread stopping\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":136922,"byte_end":136962,"line_start":283,"line_end":283,"column_start":5,"column_end":45}},{"value":"/     })","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":136967,"byte_end":136977,"line_start":284,"line_end":284,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":136982,"byte_end":136999,"line_start":285,"line_end":285,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":137004,"byte_end":137011,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":137016,"byte_end":137023,"line_start":287,"line_end":287,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":137028,"byte_end":137045,"line_start":288,"line_end":288,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":137617,"byte_end":137622,"line_start":312,"line_end":312,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"pub fn build(&mut Self) -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Creates the configured `Runtime`.","sig":null,"attributes":[{"value":"/ Creates the configured `Runtime`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":137232,"byte_end":137269,"line_start":297,"line_end":297,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":137274,"byte_end":137277,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ The returned `ThreadPool` instance is ready to spawn tasks.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":137282,"byte_end":137345,"line_start":299,"line_end":299,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":137350,"byte_end":137353,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":137358,"byte_end":137372,"line_start":301,"line_end":301,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":137377,"byte_end":137380,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":137385,"byte_end":137392,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":137397,"byte_end":137429,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":137434,"byte_end":137437,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Builder::new().build().unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":137442,"byte_end":137491,"line_start":306,"line_end":306,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":137496,"byte_end":137499,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ rt.block_on(async {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":137504,"byte_end":137527,"line_start":308,"line_end":308,"column_start":5,"column_end":28}},{"value":"/     println!(\"Hello from the Tokio runtime\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":137532,"byte_end":137581,"line_start":309,"line_end":309,"column_start":5,"column_end":54}},{"value":"/ });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":137586,"byte_end":137593,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":137598,"byte_end":137605,"line_start":311,"line_end":311,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5483},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":139247,"byte_end":139256,"line_start":367,"line_end":367,"column_start":16,"column_end":25},"name":"enable_io","qualname":"<Builder>::enable_io","value":"pub fn enable_io(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the I/O driver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5485},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":139767,"byte_end":139778,"line_start":390,"line_end":390,"column_start":16,"column_end":27},"name":"enable_time","qualname":"<Builder>::enable_time","value":"pub fn enable_time(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the time driver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5487},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":140391,"byte_end":140406,"line_start":409,"line_end":409,"column_start":16,"column_end":31},"name":"basic_scheduler","qualname":"<Builder>::basic_scheduler","value":"pub fn basic_scheduler(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets runtime to use a simpler scheduler that runs all tasks on the current-thread.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5493},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":142142,"byte_end":142160,"line_start":458,"line_end":458,"column_start":16,"column_end":34},"name":"threaded_scheduler","qualname":"<Builder>::threaded_scheduler","value":"pub fn threaded_scheduler(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets runtime to use a multi-threaded scheduler for executing tasks.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5552},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":151388,"byte_end":151394,"line_start":22,"line_end":22,"column_start":12,"column_end":18},"name":"Handle","qualname":"::runtime::handle::Handle","value":"Handle {  }","parent":null,"children":[{"krate":0,"index":5553},{"krate":0,"index":5554},{"krate":0,"index":5555},{"krate":0,"index":5556},{"krate":0,"index":5557}],"decl_id":null,"docs":" Handle to the runtime.","sig":null,"attributes":[{"value":"/ Handle to the runtime.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":151119,"byte_end":151145,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":151146,"byte_end":151149,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The handle is internally reference-counted and can be freely cloned. A handle can be","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":151150,"byte_end":151238,"line_start":17,"line_end":17,"column_start":1,"column_end":89}},{"value":"/ obtained using the [`Runtime::handle`] method.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":151239,"byte_end":151289,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":151290,"byte_end":151293,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`Runtime::handle`]: crate::runtime::Runtime::handle()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":151294,"byte_end":151352,"line_start":20,"line_end":20,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":152931,"byte_end":152936,"line_start":72,"line_end":72,"column_start":12,"column_end":17},"name":"enter","qualname":"<Handle>::enter","value":"pub fn enter<F, R>(&Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context. This allows you to construct types that must\n have an executor available on creation such as [`Delay`] or [`TcpStream`].\n It will also allow you to call methods such as [`tokio::spawn`].","sig":null,"attributes":[{"value":"/ Enter the runtime context. This allows you to construct types that must","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":151758,"byte_end":151833,"line_start":39,"line_end":39,"column_start":5,"column_end":80}},{"value":"/ have an executor available on creation such as [`Delay`] or [`TcpStream`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":151838,"byte_end":151916,"line_start":40,"line_end":40,"column_start":5,"column_end":83}},{"value":"/ It will also allow you to call methods such as [`tokio::spawn`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":151921,"byte_end":151989,"line_start":41,"line_end":41,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":151994,"byte_end":151997,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ This function is also available as [`Runtime::enter`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":152002,"byte_end":152060,"line_start":43,"line_end":43,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":152065,"byte_end":152068,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ [`Delay`]: struct@crate::time::Delay","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":152073,"byte_end":152113,"line_start":45,"line_end":45,"column_start":5,"column_end":45}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":152118,"byte_end":152165,"line_start":46,"line_end":46,"column_start":5,"column_end":52}},{"value":"/ [`Runtime::enter`]: fn@crate::runtime::Runtime::enter","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":152170,"byte_end":152227,"line_start":47,"line_end":47,"column_start":5,"column_end":62}},{"value":"/ [`tokio::spawn`]: fn@crate::spawn","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":152232,"byte_end":152269,"line_start":48,"line_end":48,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":152274,"byte_end":152277,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":152282,"byte_end":152295,"line_start":50,"line_end":50,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":152300,"byte_end":152303,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":152308,"byte_end":152315,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":152320,"byte_end":152352,"line_start":53,"line_end":53,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":152357,"byte_end":152360,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ fn function_that_spawns(msg: String) {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":152365,"byte_end":152407,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/     // Had we not used `handle.enter` below, this would panic.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":152412,"byte_end":152478,"line_start":56,"line_end":56,"column_start":5,"column_end":71}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":152483,"byte_end":152516,"line_start":57,"line_end":57,"column_start":5,"column_end":38}},{"value":"/         println!(\"{}\", msg);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":152521,"byte_end":152553,"line_start":58,"line_end":58,"column_start":5,"column_end":37}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":152558,"byte_end":152569,"line_start":59,"line_end":59,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":152574,"byte_end":152579,"line_start":60,"line_end":60,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":152584,"byte_end":152587,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":152592,"byte_end":152607,"line_start":62,"line_end":62,"column_start":5,"column_end":20}},{"value":"/     let rt = Runtime::new().unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":152612,"byte_end":152653,"line_start":63,"line_end":63,"column_start":5,"column_end":46}},{"value":"/     let handle = rt.handle().clone();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":152658,"byte_end":152699,"line_start":64,"line_end":64,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":152704,"byte_end":152707,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/     let s = \"Hello World!\".to_string();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":152712,"byte_end":152755,"line_start":66,"line_end":66,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":152760,"byte_end":152763,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/     // By entering the context, we tie `tokio::spawn` to this executor.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":152768,"byte_end":152843,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/     handle.enter(|| function_that_spawns(s));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":152848,"byte_end":152897,"line_start":69,"line_end":69,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":152902,"byte_end":152907,"line_start":70,"line_end":70,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":152912,"byte_end":152919,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":154406,"byte_end":154413,"line_start":117,"line_end":117,"column_start":12,"column_end":19},"name":"current","qualname":"<Handle>::current","value":"pub fn current() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Handle` view over the currently running `Runtime`","sig":null,"attributes":[{"value":"/ Returns a `Handle` view over the currently running `Runtime`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":153054,"byte_end":153118,"line_start":79,"line_end":79,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":153123,"byte_end":153126,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":153131,"byte_end":153142,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":153147,"byte_end":153150,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This will panic if called outside the context of a Tokio runtime. That means that you must","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":153155,"byte_end":153249,"line_start":83,"line_end":83,"column_start":5,"column_end":99}},{"value":"/ call this on one of the threads **being run by the runtime**. Calling this from within a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":153254,"byte_end":153346,"line_start":84,"line_end":84,"column_start":5,"column_end":97}},{"value":"/ thread created by `std::thread::spawn` (for example) will cause a panic.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":153351,"byte_end":153427,"line_start":85,"line_end":85,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":153432,"byte_end":153435,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":153440,"byte_end":153454,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":153459,"byte_end":153462,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This can be used to obtain the handle of the surrounding runtime from an async","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":153467,"byte_end":153549,"line_start":89,"line_end":89,"column_start":5,"column_end":87}},{"value":"/ block or function running on that runtime.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":153554,"byte_end":153600,"line_start":90,"line_end":90,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":153605,"byte_end":153608,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":153613,"byte_end":153620,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ # use std::thread;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":153625,"byte_end":153647,"line_start":93,"line_end":93,"column_start":5,"column_end":27}},{"value":"/ # use tokio::runtime::Runtime;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":153652,"byte_end":153686,"line_start":94,"line_end":94,"column_start":5,"column_end":39}},{"value":"/ # fn dox() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":153691,"byte_end":153707,"line_start":95,"line_end":95,"column_start":5,"column_end":21}},{"value":"/ # let rt = Runtime::new().unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":153712,"byte_end":153751,"line_start":96,"line_end":96,"column_start":5,"column_end":44}},{"value":"/ # rt.spawn(async {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":153756,"byte_end":153778,"line_start":97,"line_end":97,"column_start":5,"column_end":27}},{"value":"/ use tokio::runtime::Handle;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":153783,"byte_end":153814,"line_start":98,"line_end":98,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":153819,"byte_end":153822,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ // Inside an async block or function.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":153827,"byte_end":153868,"line_start":100,"line_end":100,"column_start":5,"column_end":46}},{"value":"/ let handle = Handle::current();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":153873,"byte_end":153908,"line_start":101,"line_end":101,"column_start":5,"column_end":40}},{"value":"/ handle.spawn(async {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":153913,"byte_end":153937,"line_start":102,"line_end":102,"column_start":5,"column_end":29}},{"value":"/     println!(\"now running in the existing Runtime\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":153942,"byte_end":153998,"line_start":103,"line_end":103,"column_start":5,"column_end":61}},{"value":"/ });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":154003,"byte_end":154010,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":154015,"byte_end":154018,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # let handle =","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":154023,"byte_end":154041,"line_start":106,"line_end":106,"column_start":5,"column_end":23}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":154046,"byte_end":154073,"line_start":107,"line_end":107,"column_start":5,"column_end":32}},{"value":"/     // Notice that the handle is created outside of this thread and then moved in","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":154078,"byte_end":154163,"line_start":108,"line_end":108,"column_start":5,"column_end":90}},{"value":"/     handle.block_on(async { /* ... */ })","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":154168,"byte_end":154212,"line_start":109,"line_end":109,"column_start":5,"column_end":49}},{"value":"/     // This next line would cause a panic","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":154217,"byte_end":154262,"line_start":110,"line_end":110,"column_start":5,"column_end":50}},{"value":"/     // let handle2 = Handle::current();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":154267,"byte_end":154310,"line_start":111,"line_end":111,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":154315,"byte_end":154322,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ # handle.join().unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":154327,"byte_end":154356,"line_start":113,"line_end":113,"column_start":5,"column_end":34}},{"value":"/ # });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":154361,"byte_end":154370,"line_start":114,"line_end":114,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":154375,"byte_end":154382,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":154387,"byte_end":154394,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":154711,"byte_end":154722,"line_start":126,"line_end":126,"column_start":12,"column_end":23},"name":"try_current","qualname":"<Handle>::try_current","value":"pub fn try_current() -> Result<Self, TryCurrentError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a Handle view over the currently running Runtime","sig":null,"attributes":[{"value":"/ Returns a Handle view over the currently running Runtime","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":154518,"byte_end":154578,"line_start":121,"line_end":121,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":154583,"byte_end":154586,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Returns an error if no Runtime has been started","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":154591,"byte_end":154642,"line_start":123,"line_end":123,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":154647,"byte_end":154650,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Contrary to `current`, this never panics","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":154655,"byte_end":154699,"line_start":125,"line_end":125,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5563},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":156247,"byte_end":156252,"line_start":170,"line_end":170,"column_start":16,"column_end":21},"name":"spawn","qualname":"<Handle>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a future onto the Tokio runtime.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5565},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":160371,"byte_end":160379,"line_start":274,"line_end":274,"column_start":16,"column_end":24},"name":"block_on","qualname":"<Handle>::block_on","value":"pub fn block_on<F: Future>(&Self, F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the Tokio runtime from a synchronous\n context.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5569},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":163768,"byte_end":163782,"line_start":344,"line_end":344,"column_start":16,"column_end":30},"name":"spawn_blocking","qualname":"<Handle>::spawn_blocking","value":"pub fn spawn_blocking<F, R>(&Self, F) -> JoinHandle<R> where F: FnOnce() ->\nR + Send + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided closure on a thread where blocking is acceptable.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":678},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":164171,"byte_end":164186,"line_start":357,"line_end":357,"column_start":12,"column_end":27},"name":"TryCurrentError","qualname":"::runtime::handle::TryCurrentError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `try_current` when no Runtime has been started\n","sig":null,"attributes":[{"value":"/ Error returned by `try_current` when no Runtime has been started","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":164091,"byte_end":164159,"line_start":356,"line_end":356,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":5985},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":115599,"byte_end":115606,"line_start":275,"line_end":275,"column_start":12,"column_end":19},"name":"Runtime","qualname":"::runtime::Runtime","value":"Runtime {  }","parent":null,"children":[{"krate":0,"index":5986},{"krate":0,"index":5987},{"krate":0,"index":5988}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"/ The Tokio runtime.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":114582,"byte_end":114604,"line_start":246,"line_end":246,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":114605,"byte_end":114608,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ The runtime provides an I/O driver, task scheduler, [timer], and blocking","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":114609,"byte_end":114686,"line_start":248,"line_end":248,"column_start":1,"column_end":78}},{"value":"/ pool, necessary for running asynchronous tasks.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":114687,"byte_end":114738,"line_start":249,"line_end":249,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":114739,"byte_end":114742,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ Instances of `Runtime` can be created using [`new`] or [`Builder`]. However,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":114743,"byte_end":114823,"line_start":251,"line_end":251,"column_start":1,"column_end":81}},{"value":"/ most users will use the `#[tokio::main]` annotation on their entry point instead.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":114824,"byte_end":114909,"line_start":252,"line_end":252,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":114910,"byte_end":114913,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":114914,"byte_end":114973,"line_start":254,"line_end":254,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":114974,"byte_end":114977,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ # Shutdown","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":114978,"byte_end":114992,"line_start":256,"line_end":256,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":114993,"byte_end":114996,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ Shutting down the runtime is done by dropping the value. The current thread","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":114997,"byte_end":115076,"line_start":258,"line_end":258,"column_start":1,"column_end":80}},{"value":"/ will block until the shut down operation has completed.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":115077,"byte_end":115136,"line_start":259,"line_end":259,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":115137,"byte_end":115140,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ * Drain any scheduled work queues.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":115141,"byte_end":115179,"line_start":261,"line_end":261,"column_start":1,"column_end":39}},{"value":"/ * Drop any futures that have not yet completed.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":115180,"byte_end":115231,"line_start":262,"line_end":262,"column_start":1,"column_end":52}},{"value":"/ * Drop the reactor.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":115232,"byte_end":115255,"line_start":263,"line_end":263,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":115256,"byte_end":115259,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ Once the reactor has dropped, any outstanding I/O resources bound to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":115260,"byte_end":115332,"line_start":265,"line_end":265,"column_start":1,"column_end":73}},{"value":"/ that reactor will no longer function. Calling any method on them will","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":115333,"byte_end":115406,"line_start":266,"line_end":266,"column_start":1,"column_end":74}},{"value":"/ result in an error.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":115407,"byte_end":115430,"line_start":267,"line_end":267,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":115431,"byte_end":115434,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ [timer]: crate::time","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":115435,"byte_end":115459,"line_start":269,"line_end":269,"column_start":1,"column_end":25}},{"value":"/ [mod]: index.html","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":115460,"byte_end":115481,"line_start":270,"line_end":270,"column_start":1,"column_end":22}},{"value":"/ [`new`]: method@Self::new","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":115482,"byte_end":115511,"line_start":271,"line_end":271,"column_start":1,"column_end":30}},{"value":"/ [`Builder`]: struct@Builder","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":115512,"byte_end":115543,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ [`tokio::run`]: fn@run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":115544,"byte_end":115570,"line_start":273,"line_end":273,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":117827,"byte_end":117830,"line_start":341,"line_end":341,"column_start":12,"column_end":15},"name":"new","qualname":"<Runtime>::new","value":"pub fn new() -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Create a new runtime instance with default configuration values.","sig":null,"attributes":[{"value":"/ Create a new runtime instance with default configuration values.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":116420,"byte_end":116488,"line_start":306,"line_end":306,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":116493,"byte_end":116496,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ This results in a scheduler, I/O driver, and time driver being","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":116501,"byte_end":116567,"line_start":308,"line_end":308,"column_start":5,"column_end":71}},{"value":"/ initialized. The type of scheduler used depends on what feature flags","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":116572,"byte_end":116645,"line_start":309,"line_end":309,"column_start":5,"column_end":78}},{"value":"/ are enabled: if the `rt-threaded` feature is enabled, the [threaded","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":116650,"byte_end":116721,"line_start":310,"line_end":310,"column_start":5,"column_end":76}},{"value":"/ scheduler] is used, while if only the `rt-core` feature is enabled, the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":116726,"byte_end":116801,"line_start":311,"line_end":311,"column_start":5,"column_end":80}},{"value":"/ [basic scheduler] is used instead.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":116806,"byte_end":116844,"line_start":312,"line_end":312,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":116849,"byte_end":116852,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ If the threaded scheduler is selected, it will not spawn","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":116857,"byte_end":116917,"line_start":314,"line_end":314,"column_start":5,"column_end":65}},{"value":"/ any worker threads until it needs to, i.e. tasks are scheduled to run.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":116922,"byte_end":116996,"line_start":315,"line_end":315,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":117001,"byte_end":117004,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ Most applications will not need to call this function directly. Instead,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":117009,"byte_end":117085,"line_start":317,"line_end":317,"column_start":5,"column_end":81}},{"value":"/ they will use the  [`#[tokio::main]` attribute][main]. When more complex","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":117090,"byte_end":117166,"line_start":318,"line_end":318,"column_start":5,"column_end":81}},{"value":"/ configuration is necessary, the [runtime builder] may be used.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":117171,"byte_end":117237,"line_start":319,"line_end":319,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":117242,"byte_end":117245,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":117250,"byte_end":117309,"line_start":321,"line_end":321,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":117314,"byte_end":117317,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":117322,"byte_end":117336,"line_start":323,"line_end":323,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":117341,"byte_end":117344,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ Creating a new `Runtime` with default configuration values.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":117349,"byte_end":117412,"line_start":325,"line_end":325,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":117417,"byte_end":117420,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":117425,"byte_end":117432,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":117437,"byte_end":117469,"line_start":328,"line_end":328,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":117474,"byte_end":117477,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ let rt = Runtime::new()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":117482,"byte_end":117509,"line_start":330,"line_end":330,"column_start":5,"column_end":32}},{"value":"/     .unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":117514,"byte_end":117532,"line_start":331,"line_end":331,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":117537,"byte_end":117540,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ // Use the runtime...","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":117545,"byte_end":117570,"line_start":333,"line_end":333,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":117575,"byte_end":117582,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":117587,"byte_end":117590,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":117595,"byte_end":117616,"line_start":336,"line_end":336,"column_start":5,"column_end":26}},{"value":"/ [main]: ../attr.main.html","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":117621,"byte_end":117650,"line_start":337,"line_end":337,"column_start":5,"column_end":34}},{"value":"/ [threaded scheduler]: index.html#threaded-scheduler","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":117655,"byte_end":117710,"line_start":338,"line_end":338,"column_start":5,"column_end":60}},{"value":"/ [basic scheduler]: index.html#basic-scheduler","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":117715,"byte_end":117764,"line_start":339,"line_end":339,"column_start":5,"column_end":54}},{"value":"/ [runtime builder]: crate::runtime::Builder","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":117769,"byte_end":117815,"line_start":340,"line_end":340,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":119420,"byte_end":119425,"line_start":391,"line_end":391,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Runtime>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the Tokio runtime.","sig":null,"attributes":[{"value":"/ Spawn a future onto the Tokio runtime.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":118240,"byte_end":118282,"line_start":354,"line_end":354,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":118287,"byte_end":118290,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ This spawns the given future onto the runtime's executor, usually a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":118295,"byte_end":118366,"line_start":356,"line_end":356,"column_start":5,"column_end":76}},{"value":"/ thread pool. The thread pool is then responsible for polling the future","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":118371,"byte_end":118446,"line_start":357,"line_end":357,"column_start":5,"column_end":80}},{"value":"/ until it completes.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":118451,"byte_end":118474,"line_start":358,"line_end":358,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":118479,"byte_end":118482,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":118487,"byte_end":118546,"line_start":360,"line_end":360,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":118551,"byte_end":118554,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":118559,"byte_end":118580,"line_start":362,"line_end":362,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":118585,"byte_end":118588,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":118593,"byte_end":118607,"line_start":364,"line_end":364,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":118612,"byte_end":118615,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":118620,"byte_end":118627,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":118632,"byte_end":118664,"line_start":367,"line_end":367,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":118669,"byte_end":118672,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":118677,"byte_end":118693,"line_start":369,"line_end":369,"column_start":5,"column_end":21}},{"value":"/ // Create the runtime","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":118698,"byte_end":118723,"line_start":370,"line_end":370,"column_start":5,"column_end":30}},{"value":"/ let rt = Runtime::new().unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":118728,"byte_end":118765,"line_start":371,"line_end":371,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":118770,"byte_end":118773,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ // Spawn a future onto the runtime","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":118778,"byte_end":118816,"line_start":373,"line_end":373,"column_start":5,"column_end":43}},{"value":"/ rt.spawn(async {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":118821,"byte_end":118841,"line_start":374,"line_end":374,"column_start":5,"column_end":25}},{"value":"/     println!(\"now running on a worker thread\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":118846,"byte_end":118897,"line_start":375,"line_end":375,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":118902,"byte_end":118909,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":118914,"byte_end":118921,"line_start":377,"line_end":377,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":118926,"byte_end":118933,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":118938,"byte_end":118941,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":118946,"byte_end":118958,"line_start":380,"line_end":380,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":118963,"byte_end":118966,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ This function will not panic unless task execution is disabled on the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":118971,"byte_end":119044,"line_start":382,"line_end":382,"column_start":5,"column_end":78}},{"value":"/ executor. This can only happen if the runtime was built using","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":119049,"byte_end":119114,"line_start":383,"line_end":383,"column_start":5,"column_end":70}},{"value":"/ [`Builder`] without picking either [`basic_scheduler`] or","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":119119,"byte_end":119180,"line_start":384,"line_end":384,"column_start":5,"column_end":66}},{"value":"/ [`threaded_scheduler`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":119185,"byte_end":119212,"line_start":385,"line_end":385,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":119217,"byte_end":119220,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ [`Builder`]: struct@Builder","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":119225,"byte_end":119256,"line_start":387,"line_end":387,"column_start":5,"column_end":36}},{"value":"/ [`threaded_scheduler`]: fn@Builder::threaded_scheduler","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":119261,"byte_end":119319,"line_start":388,"line_end":388,"column_start":5,"column_end":63}},{"value":"/ [`basic_scheduler`]: fn@Builder::basic_scheduler","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":119324,"byte_end":119376,"line_start":389,"line_end":389,"column_start":5,"column_end":57}},{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":119381,"byte_end":119408,"line_start":390,"line_end":390,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":121046,"byte_end":121054,"line_start":438,"line_end":438,"column_start":12,"column_end":20},"name":"block_on","qualname":"<Runtime>::block_on","value":"pub fn block_on<F: Future>(&mut Self, F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the Tokio runtime. This is the runtime's\n entry point.","sig":null,"attributes":[{"value":"/ Run a future to completion on the Tokio runtime. This is the runtime's","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":119827,"byte_end":119901,"line_start":404,"line_end":404,"column_start":5,"column_end":79}},{"value":"/ entry point.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":119906,"byte_end":119922,"line_start":405,"line_end":405,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":119927,"byte_end":119930,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the runtime, blocking until it is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":119935,"byte_end":120002,"line_start":407,"line_end":407,"column_start":5,"column_end":72}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":120007,"byte_end":120080,"line_start":408,"line_end":408,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":120085,"byte_end":120150,"line_start":409,"line_end":409,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":120155,"byte_end":120158,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ `&mut` is required as calling `block_on` **may** result in advancing the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":120163,"byte_end":120239,"line_start":411,"line_end":411,"column_start":5,"column_end":81}},{"value":"/ state of the runtime. The details depend on how the runtime is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":120244,"byte_end":120310,"line_start":412,"line_end":412,"column_start":5,"column_end":71}},{"value":"/ configured. [`runtime::Handle::block_on`][handle] provides a version","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":120315,"byte_end":120387,"line_start":413,"line_end":413,"column_start":5,"column_end":77}},{"value":"/ that takes `&self`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":120392,"byte_end":120415,"line_start":414,"line_end":414,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":120420,"byte_end":120423,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ This method may not be called from an asynchronous context.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":120428,"byte_end":120491,"line_start":416,"line_end":416,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":120496,"byte_end":120499,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":120504,"byte_end":120516,"line_start":418,"line_end":418,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":120521,"byte_end":120524,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ This function panics if the provided future panics, or if called within an","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":120529,"byte_end":120607,"line_start":420,"line_end":420,"column_start":5,"column_end":83}},{"value":"/ asynchronous execution context.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":120612,"byte_end":120647,"line_start":421,"line_end":421,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":120652,"byte_end":120655,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":120660,"byte_end":120674,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":120679,"byte_end":120682,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":120687,"byte_end":120700,"line_start":425,"line_end":425,"column_start":5,"column_end":18}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":120705,"byte_end":120737,"line_start":426,"line_end":426,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":120742,"byte_end":120745,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ // Create the runtime","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":120750,"byte_end":120775,"line_start":428,"line_end":428,"column_start":5,"column_end":30}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":120780,"byte_end":120821,"line_start":429,"line_end":429,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":120826,"byte_end":120829,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ // Execute the future, blocking the current thread until completion","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":120834,"byte_end":120905,"line_start":431,"line_end":431,"column_start":5,"column_end":76}},{"value":"/ rt.block_on(async {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":120910,"byte_end":120933,"line_start":432,"line_end":432,"column_start":5,"column_end":28}},{"value":"/     println!(\"hello\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":120938,"byte_end":120964,"line_start":433,"line_end":433,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":120969,"byte_end":120976,"line_start":434,"line_end":434,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":120981,"byte_end":120988,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":120993,"byte_end":120996,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ [handle]: fn@Handle::block_on","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":121001,"byte_end":121034,"line_start":437,"line_end":437,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":122576,"byte_end":122581,"line_start":482,"line_end":482,"column_start":12,"column_end":17},"name":"enter","qualname":"<Runtime>::enter","value":"pub fn enter<F, R>(&Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context. This allows you to construct types that must\n have an executor available on creation such as [`Delay`] or [`TcpStream`].\n It will also allow you to call methods such as [`tokio::spawn`].","sig":null,"attributes":[{"value":"/ Enter the runtime context. This allows you to construct types that must","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":121460,"byte_end":121535,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ have an executor available on creation such as [`Delay`] or [`TcpStream`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":121540,"byte_end":121618,"line_start":451,"line_end":451,"column_start":5,"column_end":83}},{"value":"/ It will also allow you to call methods such as [`tokio::spawn`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":121623,"byte_end":121691,"line_start":452,"line_end":452,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":121696,"byte_end":121699,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ This function is also available as [`Handle::enter`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":121704,"byte_end":121761,"line_start":454,"line_end":454,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":121766,"byte_end":121769,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ [`Delay`]: struct@crate::time::Delay","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":121774,"byte_end":121814,"line_start":456,"line_end":456,"column_start":5,"column_end":45}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":121819,"byte_end":121866,"line_start":457,"line_end":457,"column_start":5,"column_end":52}},{"value":"/ [`Handle::enter`]: fn@crate::runtime::Handle::enter","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":121871,"byte_end":121926,"line_start":458,"line_end":458,"column_start":5,"column_end":60}},{"value":"/ [`tokio::spawn`]: fn@crate::spawn","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":121931,"byte_end":121968,"line_start":459,"line_end":459,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":121973,"byte_end":121976,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":121981,"byte_end":121994,"line_start":461,"line_end":461,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":121999,"byte_end":122002,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":122007,"byte_end":122014,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":122019,"byte_end":122051,"line_start":464,"line_end":464,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":122056,"byte_end":122059,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ fn function_that_spawns(msg: String) {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":122064,"byte_end":122106,"line_start":466,"line_end":466,"column_start":5,"column_end":47}},{"value":"/     // Had we not used `rt.enter` below, this would panic.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":122111,"byte_end":122173,"line_start":467,"line_end":467,"column_start":5,"column_end":67}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":122178,"byte_end":122211,"line_start":468,"line_end":468,"column_start":5,"column_end":38}},{"value":"/         println!(\"{}\", msg);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":122216,"byte_end":122248,"line_start":469,"line_end":469,"column_start":5,"column_end":37}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":122253,"byte_end":122264,"line_start":470,"line_end":470,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":122269,"byte_end":122274,"line_start":471,"line_end":471,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":122279,"byte_end":122282,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":122287,"byte_end":122302,"line_start":473,"line_end":473,"column_start":5,"column_end":20}},{"value":"/     let rt = Runtime::new().unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":122307,"byte_end":122348,"line_start":474,"line_end":474,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":122353,"byte_end":122356,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/     let s = \"Hello World!\".to_string();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":122361,"byte_end":122404,"line_start":476,"line_end":476,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":122409,"byte_end":122412,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/     // By entering the context, we tie `tokio::spawn` to this executor.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":122417,"byte_end":122492,"line_start":478,"line_end":478,"column_start":5,"column_end":80}},{"value":"/     rt.enter(|| function_that_spawns(s));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":122497,"byte_end":122542,"line_start":479,"line_end":479,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":122547,"byte_end":122552,"line_start":480,"line_end":480,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":122557,"byte_end":122564,"line_start":481,"line_end":481,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":123168,"byte_end":123174,"line_start":506,"line_end":506,"column_start":12,"column_end":18},"name":"handle","qualname":"<Runtime>::handle","value":"pub fn handle(&Self) -> &Handle","parent":null,"children":[],"decl_id":null,"docs":" Return a handle to the runtime's spawner.","sig":null,"attributes":[{"value":"/ Return a handle to the runtime's spawner.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":122688,"byte_end":122733,"line_start":489,"line_end":489,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":122738,"byte_end":122741,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ The returned handle can be used to spawn tasks that run on this runtime, and can","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":122746,"byte_end":122830,"line_start":491,"line_end":491,"column_start":5,"column_end":89}},{"value":"/ be cloned to allow moving the `Handle` to other threads.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":122835,"byte_end":122895,"line_start":492,"line_end":492,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":122900,"byte_end":122903,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":122908,"byte_end":122922,"line_start":494,"line_end":494,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":122927,"byte_end":122930,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":122935,"byte_end":122942,"line_start":496,"line_end":496,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":122947,"byte_end":122979,"line_start":497,"line_end":497,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":122984,"byte_end":122987,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ let rt = Runtime::new()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":122992,"byte_end":123019,"line_start":499,"line_end":499,"column_start":5,"column_end":32}},{"value":"/     .unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":123024,"byte_end":123042,"line_start":500,"line_end":500,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":123047,"byte_end":123050,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ let handle = rt.handle();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":123055,"byte_end":123084,"line_start":502,"line_end":502,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":123089,"byte_end":123092,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ handle.spawn(async { println!(\"hello\"); });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":123097,"byte_end":123144,"line_start":504,"line_end":504,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":123149,"byte_end":123156,"line_start":505,"line_end":505,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":124582,"byte_end":124598,"line_start":545,"line_end":545,"column_start":12,"column_end":28},"name":"shutdown_timeout","qualname":"<Runtime>::shutdown_timeout","value":"pub fn shutdown_timeout(Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, waiting for at most `duration` for all spawned\n task to shutdown.","sig":null,"attributes":[{"value":"/ Shutdown the runtime, waiting for at most `duration` for all spawned","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":123227,"byte_end":123299,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ task to shutdown.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":123304,"byte_end":123325,"line_start":511,"line_end":511,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":123330,"byte_end":123333,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ Usually, dropping a `Runtime` handle is sufficient as tasks are able to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":123338,"byte_end":123413,"line_start":513,"line_end":513,"column_start":5,"column_end":80}},{"value":"/ shutdown in a timely fashion. However, dropping a `Runtime` will wait","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":123418,"byte_end":123491,"line_start":514,"line_end":514,"column_start":5,"column_end":78}},{"value":"/ indefinitely for all tasks to terminate, and there are cases where a long","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":123496,"byte_end":123573,"line_start":515,"line_end":515,"column_start":5,"column_end":82}},{"value":"/ blocking task has been spawned, which can block dropping `Runtime`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":123578,"byte_end":123649,"line_start":516,"line_end":516,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":123654,"byte_end":123657,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ In this case, calling `shutdown_timeout` with an explicit wait timeout","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":123662,"byte_end":123736,"line_start":518,"line_end":518,"column_start":5,"column_end":79}},{"value":"/ can work. The `shutdown_timeout` will signal all tasks to shutdown and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":123741,"byte_end":123815,"line_start":519,"line_end":519,"column_start":5,"column_end":79}},{"value":"/ will wait for at most `duration` for all spawned tasks to terminate. If","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":123820,"byte_end":123895,"line_start":520,"line_end":520,"column_start":5,"column_end":80}},{"value":"/ `timeout` elapses before all tasks are dropped, the function returns and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":123900,"byte_end":123976,"line_start":521,"line_end":521,"column_start":5,"column_end":81}},{"value":"/ outstanding tasks are potentially leaked.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":123981,"byte_end":124026,"line_start":522,"line_end":522,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":124031,"byte_end":124034,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":124039,"byte_end":124053,"line_start":524,"line_end":524,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":124058,"byte_end":124061,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":124066,"byte_end":124073,"line_start":526,"line_end":526,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":124078,"byte_end":124110,"line_start":527,"line_end":527,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":124115,"byte_end":124135,"line_start":528,"line_end":528,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":124140,"byte_end":124143,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ use std::thread;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":124148,"byte_end":124168,"line_start":530,"line_end":530,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":124173,"byte_end":124201,"line_start":531,"line_end":531,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":124206,"byte_end":124209,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":124214,"byte_end":124229,"line_start":533,"line_end":533,"column_start":5,"column_end":20}},{"value":"/    let mut runtime = Runtime::new().unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":124234,"byte_end":124283,"line_start":534,"line_end":534,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":124288,"byte_end":124291,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/    runtime.block_on(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":124296,"byte_end":124332,"line_start":536,"line_end":536,"column_start":5,"column_end":41}},{"value":"/        task::spawn_blocking(move || {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":124337,"byte_end":124378,"line_start":537,"line_end":537,"column_start":5,"column_end":46}},{"value":"/            thread::sleep(Duration::from_secs(10_000));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":124383,"byte_end":124441,"line_start":538,"line_end":538,"column_start":5,"column_end":63}},{"value":"/        });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":124446,"byte_end":124460,"line_start":539,"line_end":539,"column_start":5,"column_end":19}},{"value":"/    });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":124465,"byte_end":124475,"line_start":540,"line_end":540,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":124480,"byte_end":124483,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/    runtime.shutdown_timeout(Duration::from_millis(100));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":124488,"byte_end":124548,"line_start":542,"line_end":542,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":124553,"byte_end":124558,"line_start":543,"line_end":543,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":124563,"byte_end":124570,"line_start":544,"line_end":544,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":125907,"byte_end":125926,"line_start":577,"line_end":577,"column_start":12,"column_end":31},"name":"shutdown_background","qualname":"<Runtime>::shutdown_background","value":"pub fn shutdown_background(Self)","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, without waiting for any spawned tasks to shutdown.","sig":null,"attributes":[{"value":"/ Shutdown the runtime, without waiting for any spawned tasks to shutdown.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":124789,"byte_end":124865,"line_start":551,"line_end":551,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":124870,"byte_end":124873,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ This can be useful if you want to drop a runtime from within another runtime.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":124878,"byte_end":124959,"line_start":553,"line_end":553,"column_start":5,"column_end":86}},{"value":"/ Normally, dropping a runtime will block indefinitely for spawned blocking tasks","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":124964,"byte_end":125047,"line_start":554,"line_end":554,"column_start":5,"column_end":88}},{"value":"/ to complete, which would normally not be permitted within an asynchronous context.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":125052,"byte_end":125138,"line_start":555,"line_end":555,"column_start":5,"column_end":91}},{"value":"/ By calling `shutdown_background()`, you can drop the runtime from such a context.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":125143,"byte_end":125228,"line_start":556,"line_end":556,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":125233,"byte_end":125236,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ Note however, that because we do not wait for any blocking tasks to complete, this","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":125241,"byte_end":125327,"line_start":558,"line_end":558,"column_start":5,"column_end":91}},{"value":"/ may result in a resource leak (in that any blocking tasks are still running until they","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":125332,"byte_end":125422,"line_start":559,"line_end":559,"column_start":5,"column_end":95}},{"value":"/ return.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":125427,"byte_end":125438,"line_start":560,"line_end":560,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":125443,"byte_end":125446,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `shutdown_timeout(Duration::of_nanos(0))`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":125451,"byte_end":125536,"line_start":562,"line_end":562,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":125541,"byte_end":125544,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":125549,"byte_end":125556,"line_start":564,"line_end":564,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":125561,"byte_end":125593,"line_start":565,"line_end":565,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":125598,"byte_end":125601,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":125606,"byte_end":125621,"line_start":567,"line_end":567,"column_start":5,"column_end":20}},{"value":"/    let mut runtime = Runtime::new().unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":125626,"byte_end":125675,"line_start":568,"line_end":568,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":125680,"byte_end":125683,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/    runtime.block_on(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":125688,"byte_end":125724,"line_start":570,"line_end":570,"column_start":5,"column_end":41}},{"value":"/        let inner_runtime = Runtime::new().unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":125729,"byte_end":125784,"line_start":571,"line_end":571,"column_start":5,"column_end":60}},{"value":"/        // ...","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":125789,"byte_end":125806,"line_start":572,"line_end":572,"column_start":5,"column_end":22}},{"value":"/        inner_runtime.shutdown_background();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":125811,"byte_end":125858,"line_start":573,"line_end":573,"column_start":5,"column_end":52}},{"value":"/    });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":125863,"byte_end":125873,"line_start":574,"line_end":574,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":125878,"byte_end":125883,"line_start":575,"line_end":575,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":125888,"byte_end":125895,"line_start":576,"line_end":576,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":6040},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"signal","qualname":"::signal","value":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","parent":null,"children":[{"krate":0,"index":6041},{"krate":0,"index":6048},{"krate":0,"index":6049},{"krate":0,"index":6097},{"krate":0,"index":6101}],"decl_id":null,"docs":" Asynchronous signal handling for Tokio","sig":null,"attributes":[{"value":"cfg(feature = \"signal\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":20854,"byte_end":20880,"line_start":210,"line_end":210,"column_start":13,"column_end":39}},{"value":"cfg(not(loom))","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":20955,"byte_end":20972,"line_start":212,"line_end":212,"column_start":13,"column_end":30}},{"value":"/ Asynchronous signal handling for Tokio","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","byte_start":9208392,"byte_end":9208434,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","byte_start":9208435,"byte_end":9208438,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Note that signal handling is in general a very tricky topic and should be","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","byte_start":9208439,"byte_end":9208516,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ used with great care. This crate attempts to implement 'best practice' for","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","byte_start":9208517,"byte_end":9208595,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ signal handling, but it should be evaluated for your own applications' needs","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","byte_start":9208596,"byte_end":9208676,"line_start":5,"line_end":5,"column_start":1,"column_end":81}},{"value":"/ to see if it's suitable.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","byte_start":9208677,"byte_end":9208705,"line_start":6,"line_end":6,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","byte_start":9208706,"byte_end":9208709,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The are some fundamental limitations of this crate documented on the OS","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","byte_start":9208710,"byte_end":9208785,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ specific structures, as well.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","byte_start":9208786,"byte_end":9208819,"line_start":9,"line_end":9,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","byte_start":9208820,"byte_end":9208823,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","byte_start":9208824,"byte_end":9208838,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","byte_start":9208839,"byte_end":9208842,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Print on \"ctrl-c\" notification.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","byte_start":9208843,"byte_end":9208878,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","byte_start":9208879,"byte_end":9208882,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","byte_start":9208883,"byte_end":9208901,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","byte_start":9208902,"byte_end":9208924,"line_start":16,"line_end":16,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","byte_start":9208925,"byte_end":9208928,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","byte_start":9208929,"byte_end":9208947,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","byte_start":9208948,"byte_end":9209011,"line_start":19,"line_end":19,"column_start":1,"column_end":64}},{"value":"/     signal::ctrl_c().await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","byte_start":9209012,"byte_end":9209044,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/     println!(\"ctrl-c received!\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","byte_start":9209045,"byte_end":9209082,"line_start":21,"line_end":21,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","byte_start":9209083,"byte_end":9209097,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","byte_start":9209098,"byte_end":9209103,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","byte_start":9209104,"byte_end":9209111,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","byte_start":9209112,"byte_end":9209115,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Wait for SIGHUP on Unix","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","byte_start":9209116,"byte_end":9209143,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","byte_start":9209144,"byte_end":9209147,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","byte_start":9209148,"byte_end":9209166,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # #[cfg(unix)] {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","byte_start":9209167,"byte_end":9209187,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"/ use tokio::signal::unix::{signal, SignalKind};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","byte_start":9209188,"byte_end":9209238,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","byte_start":9209239,"byte_end":9209242,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","byte_start":9209243,"byte_end":9209261,"line_start":32,"line_end":32,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","byte_start":9209262,"byte_end":9209325,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/     // An infinite stream of hangup signals.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","byte_start":9209326,"byte_end":9209374,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"/     let mut stream = signal(SignalKind::hangup())?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","byte_start":9209375,"byte_end":9209430,"line_start":35,"line_end":35,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","byte_start":9209431,"byte_end":9209434,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     // Print whenever a HUP signal is received","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","byte_start":9209435,"byte_end":9209485,"line_start":37,"line_end":37,"column_start":1,"column_end":51}},{"value":"/     loop {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","byte_start":9209486,"byte_end":9209500,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/         stream.recv().await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","byte_start":9209501,"byte_end":9209533,"line_start":39,"line_end":39,"column_start":1,"column_end":33}},{"value":"/         println!(\"got signal HUP\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","byte_start":9209534,"byte_end":9209573,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","byte_start":9209574,"byte_end":9209583,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","byte_start":9209584,"byte_end":9209589,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","byte_start":9209590,"byte_end":9209597,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","byte_start":9209598,"byte_end":9209605,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":6045},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/ctrl_c.rs","byte_start":9211681,"byte_end":9211687,"line_start":50,"line_end":50,"column_start":14,"column_end":20},"name":"ctrl_c","qualname":"::signal::ctrl_c::ctrl_c","value":"pub async fn ctrl_c() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when a \"ctrl-c\" notification is sent to the process.","sig":null,"attributes":[{"value":"/ Completes when a \"ctrl-c\" notification is sent to the process.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/ctrl_c.rs","byte_start":9209979,"byte_end":9210045,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/ctrl_c.rs","byte_start":9210046,"byte_end":9210049,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ While signals are handled very differently between Unix and Windows, both","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/ctrl_c.rs","byte_start":9210050,"byte_end":9210127,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ platforms support receiving a signal on \"ctrl-c\". This function provides a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/ctrl_c.rs","byte_start":9210128,"byte_end":9210206,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ portable API for receiving this notification.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/ctrl_c.rs","byte_start":9210207,"byte_end":9210256,"line_start":12,"line_end":12,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/ctrl_c.rs","byte_start":9210257,"byte_end":9210260,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Once the returned future is polled, a listener is registered. The future","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/ctrl_c.rs","byte_start":9210261,"byte_end":9210337,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ will complete on the first received `ctrl-c` **after** the initial call to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/ctrl_c.rs","byte_start":9210338,"byte_end":9210416,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ either `Future::poll` or `.await`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/ctrl_c.rs","byte_start":9210417,"byte_end":9210455,"line_start":16,"line_end":16,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/ctrl_c.rs","byte_start":9210456,"byte_end":9210459,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/ctrl_c.rs","byte_start":9210460,"byte_end":9210473,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/ctrl_c.rs","byte_start":9210474,"byte_end":9210477,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ On Unix platforms, the first time that a `Signal` instance is registered for a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/ctrl_c.rs","byte_start":9210478,"byte_end":9210560,"line_start":20,"line_end":20,"column_start":1,"column_end":83}},{"value":"/ particular signal kind, an OS signal-handler is installed which replaces the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/ctrl_c.rs","byte_start":9210561,"byte_end":9210641,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ default platform behavior when that signal is received, **for the duration of","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/ctrl_c.rs","byte_start":9210642,"byte_end":9210723,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/ the entire process**.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/ctrl_c.rs","byte_start":9210724,"byte_end":9210749,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/ctrl_c.rs","byte_start":9210750,"byte_end":9210753,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ For example, Unix systems will terminate a process by default when it","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/ctrl_c.rs","byte_start":9210754,"byte_end":9210827,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/ receives a signal generated by \"CTRL+C\" on the terminal. But, when a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/ctrl_c.rs","byte_start":9210828,"byte_end":9210900,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ `ctrl_c` stream is created to listen for this signal, the time it arrives,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/ctrl_c.rs","byte_start":9210901,"byte_end":9210979,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ it will be translated to a stream event, and the process will continue to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/ctrl_c.rs","byte_start":9210980,"byte_end":9211057,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ execute.  **Even if this `Signal` instance is dropped, subsequent SIGINT","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/ctrl_c.rs","byte_start":9211058,"byte_end":9211134,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ deliveries will end up captured by Tokio, and the default platform behavior","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/ctrl_c.rs","byte_start":9211135,"byte_end":9211214,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ will NOT be reset**.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/ctrl_c.rs","byte_start":9211215,"byte_end":9211239,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/ctrl_c.rs","byte_start":9211240,"byte_end":9211243,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Thus, applications should take care to ensure the expected signal behavior","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/ctrl_c.rs","byte_start":9211244,"byte_end":9211322,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ occurs as expected after listening for specific signals.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/ctrl_c.rs","byte_start":9211323,"byte_end":9211383,"line_start":34,"line_end":34,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/ctrl_c.rs","byte_start":9211384,"byte_end":9211387,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/ctrl_c.rs","byte_start":9211388,"byte_end":9211402,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/ctrl_c.rs","byte_start":9211403,"byte_end":9211406,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/ctrl_c.rs","byte_start":9211407,"byte_end":9211425,"line_start":38,"line_end":38,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/ctrl_c.rs","byte_start":9211426,"byte_end":9211448,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/ctrl_c.rs","byte_start":9211449,"byte_end":9211452,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/ctrl_c.rs","byte_start":9211453,"byte_end":9211471,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/ctrl_c.rs","byte_start":9211472,"byte_end":9211493,"line_start":42,"line_end":42,"column_start":1,"column_end":22}},{"value":"/     println!(\"waiting for ctrl-c\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/ctrl_c.rs","byte_start":9211494,"byte_end":9211533,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/ctrl_c.rs","byte_start":9211534,"byte_end":9211537,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/     signal::ctrl_c().await.expect(\"failed to listen for event\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/ctrl_c.rs","byte_start":9211538,"byte_end":9211606,"line_start":45,"line_end":45,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/ctrl_c.rs","byte_start":9211607,"byte_end":9211610,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/     println!(\"received ctrl-c event\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/ctrl_c.rs","byte_start":9211611,"byte_end":9211653,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/ctrl_c.rs","byte_start":9211654,"byte_end":9211659,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/ctrl_c.rs","byte_start":9211660,"byte_end":9211667,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":6101},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::signal::unix","value":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","parent":null,"children":[{"krate":0,"index":6102},{"krate":0,"index":6103},{"krate":0,"index":6104},{"krate":0,"index":6105},{"krate":0,"index":6106},{"krate":0,"index":6107},{"krate":0,"index":6108},{"krate":0,"index":6109},{"krate":0,"index":6110},{"krate":0,"index":6111},{"krate":0,"index":6112},{"krate":0,"index":6113},{"krate":0,"index":6114},{"krate":0,"index":6115},{"krate":0,"index":6116},{"krate":0,"index":6117},{"krate":0,"index":6118},{"krate":0,"index":6119},{"krate":0,"index":6120},{"krate":0,"index":6121},{"krate":0,"index":6122},{"krate":0,"index":6123},{"krate":0,"index":6124},{"krate":0,"index":6125},{"krate":0,"index":6126},{"krate":0,"index":6127},{"krate":0,"index":6128},{"krate":0,"index":6129},{"krate":0,"index":6130},{"krate":0,"index":6131},{"krate":0,"index":6132},{"krate":0,"index":6135},{"krate":0,"index":6197},{"krate":0,"index":6200},{"krate":0,"index":6142},{"krate":0,"index":6202},{"krate":0,"index":6208},{"krate":0,"index":6206},{"krate":0,"index":6205},{"krate":0,"index":6144},{"krate":0,"index":6158},{"krate":0,"index":6162},{"krate":0,"index":6164},{"krate":0,"index":6165},{"krate":0,"index":6210},{"krate":0,"index":6212},{"krate":0,"index":6169},{"krate":0,"index":6171},{"krate":0,"index":6214},{"krate":0,"index":6217},{"krate":0,"index":6175},{"krate":0,"index":6176},{"krate":0,"index":6219},{"krate":0,"index":6183}],"decl_id":null,"docs":" Unix-specific types for signal handling.","sig":null,"attributes":[{"value":"/ Unix-specific types for signal handling.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9221125,"byte_end":9221169,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9221170,"byte_end":9221173,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only defined on Unix platforms and contains the primary","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9221174,"byte_end":9221248,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ `Signal` type for receiving notifications of signals.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9221249,"byte_end":9221306,"line_start":4,"line_end":4,"column_start":1,"column_end":58}},{"value":"cfg(unix)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9221308,"byte_end":9221321,"line_start":6,"line_end":6,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6202},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9222636,"byte_end":9222646,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"SignalKind","qualname":"::signal::unix::SignalKind","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents the specific kind of signal to listen for.\n","sig":null,"attributes":[{"value":"/ Represents the specific kind of signal to listen for.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9222537,"byte_end":9222594,"line_start":59,"line_end":59,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":6145},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9223045,"byte_end":9223053,"line_start":74,"line_end":74,"column_start":12,"column_end":20},"name":"from_raw","qualname":"<SignalKind>::from_raw","value":"pub fn from_raw(c_int) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allows for listening to any valid OS signal.","sig":null,"attributes":[{"value":"/ Allows for listening to any valid OS signal.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9222678,"byte_end":9222726,"line_start":64,"line_end":64,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9222731,"byte_end":9222734,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ For example, this can be used for listening for platform-specific","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9222739,"byte_end":9222808,"line_start":66,"line_end":66,"column_start":5,"column_end":74}},{"value":"/ signals.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9222813,"byte_end":9222825,"line_start":67,"line_end":67,"column_start":5,"column_end":17}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9222830,"byte_end":9222848,"line_start":68,"line_end":68,"column_start":5,"column_end":23}},{"value":"/ # use tokio::signal::unix::SignalKind;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9222853,"byte_end":9222895,"line_start":69,"line_end":69,"column_start":5,"column_end":47}},{"value":"/ # let signum = -1;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9222900,"byte_end":9222922,"line_start":70,"line_end":70,"column_start":5,"column_end":27}},{"value":"/ // let signum = libc::OS_SPECIFIC_SIGNAL;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9222927,"byte_end":9222972,"line_start":71,"line_end":71,"column_start":5,"column_end":50}},{"value":"/ let kind = SignalKind::from_raw(signum);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9222977,"byte_end":9223021,"line_start":72,"line_end":72,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9223026,"byte_end":9223033,"line_start":73,"line_end":73,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6146},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9223307,"byte_end":9223312,"line_start":82,"line_end":82,"column_start":12,"column_end":17},"name":"alarm","qualname":"<SignalKind>::alarm","value":"pub fn alarm() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGALRM signal.","sig":null,"attributes":[{"value":"/ Represents the SIGALRM signal.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9223111,"byte_end":9223145,"line_start":78,"line_end":78,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9223150,"byte_end":9223153,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when a real-time timer has expired.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9223158,"byte_end":9223233,"line_start":80,"line_end":80,"column_start":5,"column_end":80}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9223238,"byte_end":9223295,"line_start":81,"line_end":81,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":6147},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9223554,"byte_end":9223559,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"child","qualname":"<SignalKind>::child","value":"pub fn child() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGCHLD signal.","sig":null,"attributes":[{"value":"/ Represents the SIGCHLD signal.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9223364,"byte_end":9223398,"line_start":86,"line_end":86,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9223403,"byte_end":9223406,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the status of a child process","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9223411,"byte_end":9223485,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ has changed. By default, this signal is ignored.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9223490,"byte_end":9223542,"line_start":89,"line_end":89,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":6148},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9223805,"byte_end":9223811,"line_start":98,"line_end":98,"column_start":12,"column_end":18},"name":"hangup","qualname":"<SignalKind>::hangup","value":"pub fn hangup() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGHUP signal.","sig":null,"attributes":[{"value":"/ Represents the SIGHUP signal.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9223611,"byte_end":9223644,"line_start":94,"line_end":94,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9223649,"byte_end":9223652,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the terminal is disconnected.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9223657,"byte_end":9223731,"line_start":96,"line_end":96,"column_start":5,"column_end":79}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9223736,"byte_end":9223793,"line_start":97,"line_end":97,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":6149},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9224225,"byte_end":9224229,"line_start":113,"line_end":113,"column_start":12,"column_end":16},"name":"info","qualname":"<SignalKind>::info","value":"pub fn info() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGINFO signal.","sig":null,"attributes":[{"value":"/ Represents the SIGINFO signal.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9223862,"byte_end":9223896,"line_start":102,"line_end":102,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9223901,"byte_end":9223904,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent to request a status update from the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9223909,"byte_end":9223984,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/ process. By default, this signal is ignored.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9223989,"byte_end":9224037,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"macos\",\n          target_os = \"netbsd\", target_os = \"openbsd\"))","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9224042,"byte_end":9224213,"line_start":106,"line_end":112,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6150},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9224464,"byte_end":9224473,"line_start":121,"line_end":121,"column_start":12,"column_end":21},"name":"interrupt","qualname":"<SignalKind>::interrupt","value":"pub fn interrupt() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGINT signal.","sig":null,"attributes":[{"value":"/ Represents the SIGINT signal.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9224281,"byte_end":9224314,"line_start":117,"line_end":117,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9224319,"byte_end":9224322,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent to interrupt a program.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9224327,"byte_end":9224390,"line_start":119,"line_end":119,"column_start":5,"column_end":68}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9224395,"byte_end":9224452,"line_start":120,"line_end":120,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":6151},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9224722,"byte_end":9224724,"line_start":129,"line_end":129,"column_start":12,"column_end":14},"name":"io","qualname":"<SignalKind>::io","value":"pub fn io() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGIO signal.","sig":null,"attributes":[{"value":"/ Represents the SIGIO signal.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9224524,"byte_end":9224556,"line_start":125,"line_end":125,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9224561,"byte_end":9224564,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when I/O operations are possible","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9224569,"byte_end":9224641,"line_start":127,"line_end":127,"column_start":5,"column_end":77}},{"value":"/ on some file descriptor. By default, this signal is ignored.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9224646,"byte_end":9224710,"line_start":128,"line_end":128,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":6152},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9225008,"byte_end":9225012,"line_start":138,"line_end":138,"column_start":12,"column_end":16},"name":"pipe","qualname":"<SignalKind>::pipe","value":"pub fn pipe() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGPIPE signal.","sig":null,"attributes":[{"value":"/ Represents the SIGPIPE signal.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9224774,"byte_end":9224808,"line_start":133,"line_end":133,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9224813,"byte_end":9224816,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the process attempts to write","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9224821,"byte_end":9224895,"line_start":135,"line_end":135,"column_start":5,"column_end":79}},{"value":"/ to a pipe which has no reader. By default, the process is terminated by","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9224900,"byte_end":9224975,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ this signal.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9224980,"byte_end":9224996,"line_start":137,"line_end":137,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":6153},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9225315,"byte_end":9225319,"line_start":147,"line_end":147,"column_start":12,"column_end":16},"name":"quit","qualname":"<SignalKind>::quit","value":"pub fn quit() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGQUIT signal.","sig":null,"attributes":[{"value":"/ Represents the SIGQUIT signal.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9225064,"byte_end":9225098,"line_start":142,"line_end":142,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9225103,"byte_end":9225106,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent to issue a shutdown of the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9225111,"byte_end":9225177,"line_start":144,"line_end":144,"column_start":5,"column_end":71}},{"value":"/ process, after which the OS will dump the process core.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9225182,"byte_end":9225241,"line_start":145,"line_end":145,"column_start":5,"column_end":64}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9225246,"byte_end":9225303,"line_start":146,"line_end":146,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":6154},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9225567,"byte_end":9225576,"line_start":155,"line_end":155,"column_start":12,"column_end":21},"name":"terminate","qualname":"<SignalKind>::terminate","value":"pub fn terminate() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGTERM signal.","sig":null,"attributes":[{"value":"/ Represents the SIGTERM signal.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9225371,"byte_end":9225405,"line_start":151,"line_end":151,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9225410,"byte_end":9225413,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent to issue a shutdown of the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9225418,"byte_end":9225484,"line_start":153,"line_end":153,"column_start":5,"column_end":71}},{"value":"/ process. By default, the process is terminated by this signal.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9225489,"byte_end":9225555,"line_start":154,"line_end":154,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":6155},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9225799,"byte_end":9225812,"line_start":163,"line_end":163,"column_start":12,"column_end":25},"name":"user_defined1","qualname":"<SignalKind>::user_defined1","value":"pub fn user_defined1() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGUSR1 signal.","sig":null,"attributes":[{"value":"/ Represents the SIGUSR1 signal.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9225628,"byte_end":9225662,"line_start":159,"line_end":159,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9225667,"byte_end":9225670,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this is a user defined signal.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9225675,"byte_end":9225725,"line_start":161,"line_end":161,"column_start":5,"column_end":55}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9225730,"byte_end":9225787,"line_start":162,"line_end":162,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":6156},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9226035,"byte_end":9226048,"line_start":171,"line_end":171,"column_start":12,"column_end":25},"name":"user_defined2","qualname":"<SignalKind>::user_defined2","value":"pub fn user_defined2() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGUSR2 signal.","sig":null,"attributes":[{"value":"/ Represents the SIGUSR2 signal.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9225864,"byte_end":9225898,"line_start":167,"line_end":167,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9225903,"byte_end":9225906,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this is a user defined signal.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9225911,"byte_end":9225961,"line_start":169,"line_end":169,"column_start":5,"column_end":55}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9225966,"byte_end":9226023,"line_start":170,"line_end":170,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":6157},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9226280,"byte_end":9226293,"line_start":179,"line_end":179,"column_start":12,"column_end":25},"name":"window_change","qualname":"<SignalKind>::window_change","value":"pub fn window_change() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGWINCH signal.","sig":null,"attributes":[{"value":"/ Represents the SIGWINCH signal.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9226100,"byte_end":9226135,"line_start":175,"line_end":175,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9226140,"byte_end":9226143,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the terminal window is resized.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9226148,"byte_end":9226224,"line_start":177,"line_end":177,"column_start":5,"column_end":81}},{"value":"/ By default, this signal is ignored.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9226229,"byte_end":9226268,"line_start":178,"line_end":178,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":6214},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9233716,"byte_end":9233722,"line_start":378,"line_end":378,"column_start":12,"column_end":18},"name":"Signal","qualname":"::signal::unix::Signal","value":"Signal {  }","parent":null,"children":[{"krate":0,"index":6215},{"krate":0,"index":6216}],"decl_id":null,"docs":" A stream of events for receiving a particular type of OS signal.","sig":null,"attributes":[{"value":"/ A stream of events for receiving a particular type of OS signal.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9230951,"byte_end":9231019,"line_start":314,"line_end":314,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9231020,"byte_end":9231023,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ In general signal handling on Unix is a pretty tricky topic, and this","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9231024,"byte_end":9231097,"line_start":316,"line_end":316,"column_start":1,"column_end":74}},{"value":"/ structure is no exception! There are some important limitations to keep in","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9231098,"byte_end":9231176,"line_start":317,"line_end":317,"column_start":1,"column_end":79}},{"value":"/ mind when using `Signal` streams:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9231177,"byte_end":9231214,"line_start":318,"line_end":318,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9231215,"byte_end":9231218,"line_start":319,"line_end":319,"column_start":1,"column_end":4}},{"value":"/ * Signals handling in Unix already necessitates coalescing signals","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9231219,"byte_end":9231289,"line_start":320,"line_end":320,"column_start":1,"column_end":71}},{"value":"/   together sometimes. This `Signal` stream is also no exception here in","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9231290,"byte_end":9231365,"line_start":321,"line_end":321,"column_start":1,"column_end":76}},{"value":"/   that it will also coalesce signals. That is, even if the signal handler","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9231366,"byte_end":9231443,"line_start":322,"line_end":322,"column_start":1,"column_end":78}},{"value":"/   for this process runs multiple times, the `Signal` stream may only return","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9231444,"byte_end":9231523,"line_start":323,"line_end":323,"column_start":1,"column_end":80}},{"value":"/   one signal notification. Specifically, before `poll` is called, all","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9231524,"byte_end":9231597,"line_start":324,"line_end":324,"column_start":1,"column_end":74}},{"value":"/   signal notifications are coalesced into one item returned from `poll`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9231598,"byte_end":9231674,"line_start":325,"line_end":325,"column_start":1,"column_end":77}},{"value":"/   Once `poll` has been called, however, a further signal is guaranteed to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9231675,"byte_end":9231752,"line_start":326,"line_end":326,"column_start":1,"column_end":78}},{"value":"/   be yielded as an item.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9231753,"byte_end":9231781,"line_start":327,"line_end":327,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9231782,"byte_end":9231785,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/   Put another way, any element pulled off the returned stream corresponds to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9231786,"byte_end":9231866,"line_start":329,"line_end":329,"column_start":1,"column_end":81}},{"value":"/   *at least one* signal, but possibly more.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9231867,"byte_end":9231914,"line_start":330,"line_end":330,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9231915,"byte_end":9231918,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/ * Signal handling in general is relatively inefficient. Although some","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9231919,"byte_end":9231992,"line_start":332,"line_end":332,"column_start":1,"column_end":74}},{"value":"/   improvements are possible in this crate, it's recommended to not plan on","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9231993,"byte_end":9232071,"line_start":333,"line_end":333,"column_start":1,"column_end":79}},{"value":"/   having millions of signal channels open.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9232072,"byte_end":9232118,"line_start":334,"line_end":334,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9232119,"byte_end":9232122,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ If you've got any questions about this feel free to open an issue on the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9232123,"byte_end":9232199,"line_start":336,"line_end":336,"column_start":1,"column_end":77}},{"value":"/ repo! New approaches to alleviate some of these limitations are always","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9232200,"byte_end":9232274,"line_start":337,"line_end":337,"column_start":1,"column_end":75}},{"value":"/ appreciated!","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9232275,"byte_end":9232291,"line_start":338,"line_end":338,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9232292,"byte_end":9232295,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9232296,"byte_end":9232309,"line_start":340,"line_end":340,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9232310,"byte_end":9232313,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ The first time that a `Signal` instance is registered for a particular","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9232314,"byte_end":9232388,"line_start":342,"line_end":342,"column_start":1,"column_end":75}},{"value":"/ signal kind, an OS signal-handler is installed which replaces the default","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9232389,"byte_end":9232466,"line_start":343,"line_end":343,"column_start":1,"column_end":78}},{"value":"/ platform behavior when that signal is received, **for the duration of the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9232467,"byte_end":9232544,"line_start":344,"line_end":344,"column_start":1,"column_end":78}},{"value":"/ entire process**.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9232545,"byte_end":9232566,"line_start":345,"line_end":345,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9232567,"byte_end":9232570,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ For example, Unix systems will terminate a process by default when it","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9232571,"byte_end":9232644,"line_start":347,"line_end":347,"column_start":1,"column_end":74}},{"value":"/ receives SIGINT. But, when a `Signal` instance is created to listen for","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9232645,"byte_end":9232720,"line_start":348,"line_end":348,"column_start":1,"column_end":76}},{"value":"/ this signal, the next SIGINT that arrives will be translated to a stream","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9232721,"byte_end":9232797,"line_start":349,"line_end":349,"column_start":1,"column_end":77}},{"value":"/ event, and the process will continue to execute. **Even if this `Signal`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9232798,"byte_end":9232874,"line_start":350,"line_end":350,"column_start":1,"column_end":77}},{"value":"/ instance is dropped, subsequent SIGINT deliveries will end up captured by","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9232875,"byte_end":9232952,"line_start":351,"line_end":351,"column_start":1,"column_end":78}},{"value":"/ Tokio, and the default platform behavior will NOT be reset**.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9232953,"byte_end":9233018,"line_start":352,"line_end":352,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9233019,"byte_end":9233022,"line_start":353,"line_end":353,"column_start":1,"column_end":4}},{"value":"/ Thus, applications should take care to ensure the expected signal behavior","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9233023,"byte_end":9233101,"line_start":354,"line_end":354,"column_start":1,"column_end":79}},{"value":"/ occurs as expected after listening for specific signals.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9233102,"byte_end":9233162,"line_start":355,"line_end":355,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9233163,"byte_end":9233166,"line_start":356,"line_end":356,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9233167,"byte_end":9233181,"line_start":357,"line_end":357,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9233182,"byte_end":9233185,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ Wait for SIGHUP","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9233186,"byte_end":9233205,"line_start":359,"line_end":359,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9233206,"byte_end":9233209,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9233210,"byte_end":9233228,"line_start":361,"line_end":361,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal::unix::{signal, SignalKind};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9233229,"byte_end":9233279,"line_start":362,"line_end":362,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9233280,"byte_end":9233283,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9233284,"byte_end":9233302,"line_start":364,"line_end":364,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9233303,"byte_end":9233366,"line_start":365,"line_end":365,"column_start":1,"column_end":64}},{"value":"/     // An infinite stream of hangup signals.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9233367,"byte_end":9233415,"line_start":366,"line_end":366,"column_start":1,"column_end":49}},{"value":"/     let mut stream = signal(SignalKind::hangup())?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9233416,"byte_end":9233471,"line_start":367,"line_end":367,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9233472,"byte_end":9233475,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"/     // Print whenever a HUP signal is received","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9233476,"byte_end":9233526,"line_start":369,"line_end":369,"column_start":1,"column_end":51}},{"value":"/     loop {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9233527,"byte_end":9233541,"line_start":370,"line_end":370,"column_start":1,"column_end":15}},{"value":"/         stream.recv().await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9233542,"byte_end":9233574,"line_start":371,"line_end":371,"column_start":1,"column_end":33}},{"value":"/         println!(\"got signal HUP\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9233575,"byte_end":9233614,"line_start":372,"line_end":372,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9233615,"byte_end":9233624,"line_start":373,"line_end":373,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9233625,"byte_end":9233630,"line_start":374,"line_end":374,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9233631,"byte_end":9233638,"line_start":375,"line_end":375,"column_start":1,"column_end":8}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9233639,"byte_end":9233687,"line_start":376,"line_end":376,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":6175},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9234815,"byte_end":9234821,"line_start":405,"line_end":405,"column_start":8,"column_end":14},"name":"signal","qualname":"::signal::unix::signal","value":"pub fn signal(SignalKind) -> io::Result<Signal>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream which will receive notifications when the current\n process receives the specified signal `kind`.","sig":null,"attributes":[{"value":"/ Creates a new stream which will receive notifications when the current","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9233770,"byte_end":9233844,"line_start":383,"line_end":383,"column_start":1,"column_end":75}},{"value":"/ process receives the specified signal `kind`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9233845,"byte_end":9233894,"line_start":384,"line_end":384,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9233895,"byte_end":9233898,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ This function will create a new stream which binds to the default reactor.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9233899,"byte_end":9233977,"line_start":386,"line_end":386,"column_start":1,"column_end":79}},{"value":"/ The `Signal` stream is an infinite stream which will receive","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9233978,"byte_end":9234042,"line_start":387,"line_end":387,"column_start":1,"column_end":65}},{"value":"/ notifications whenever a signal is received. More documentation can be","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9234043,"byte_end":9234117,"line_start":388,"line_end":388,"column_start":1,"column_end":75}},{"value":"/ found on `Signal` itself, but to reiterate:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9234118,"byte_end":9234165,"line_start":389,"line_end":389,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9234166,"byte_end":9234169,"line_start":390,"line_end":390,"column_start":1,"column_end":4}},{"value":"/ * Signals may be coalesced beyond what the kernel already does.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9234170,"byte_end":9234237,"line_start":391,"line_end":391,"column_start":1,"column_end":68}},{"value":"/ * Once a signal handler is registered with the process the underlying","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9234238,"byte_end":9234311,"line_start":392,"line_end":392,"column_start":1,"column_end":74}},{"value":"/   libc signal handler is never unregistered.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9234312,"byte_end":9234360,"line_start":393,"line_end":393,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9234361,"byte_end":9234364,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/ A `Signal` stream can be created for a particular signal number","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9234365,"byte_end":9234432,"line_start":395,"line_end":395,"column_start":1,"column_end":68}},{"value":"/ multiple times. When a signal is received then all the associated","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9234433,"byte_end":9234502,"line_start":396,"line_end":396,"column_start":1,"column_end":70}},{"value":"/ channels will receive the signal notification.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9234503,"byte_end":9234553,"line_start":397,"line_end":397,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9234554,"byte_end":9234557,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9234558,"byte_end":9234570,"line_start":399,"line_end":399,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9234571,"byte_end":9234574,"line_start":400,"line_end":400,"column_start":1,"column_end":4}},{"value":"/ * If the lower-level C functions fail for some reason.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9234575,"byte_end":9234633,"line_start":401,"line_end":401,"column_start":1,"column_end":59}},{"value":"/ * If the previous initialization of this specific signal failed.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9234634,"byte_end":9234702,"line_start":402,"line_end":402,"column_start":1,"column_end":69}},{"value":"/ * If the signal is one of","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9234703,"byte_end":9234732,"line_start":403,"line_end":403,"column_start":1,"column_end":30}},{"value":"/   [`signal_hook::FORBIDDEN`](fn@signal_hook_registry::register#panics)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9234733,"byte_end":9234807,"line_start":404,"line_end":404,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":6177},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9236032,"byte_end":9236036,"line_start":447,"line_end":447,"column_start":18,"column_end":22},"name":"recv","qualname":"<Signal>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next signal notification event.","sig":null,"attributes":[{"value":"/ Receives the next signal notification event.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9235325,"byte_end":9235373,"line_start":424,"line_end":424,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9235378,"byte_end":9235381,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if no more events can be received by this stream.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9235386,"byte_end":9235458,"line_start":426,"line_end":426,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9235463,"byte_end":9235466,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9235471,"byte_end":9235485,"line_start":428,"line_end":428,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9235490,"byte_end":9235493,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ Wait for SIGHUP","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9235498,"byte_end":9235517,"line_start":430,"line_end":430,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9235522,"byte_end":9235525,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9235530,"byte_end":9235548,"line_start":432,"line_end":432,"column_start":5,"column_end":23}},{"value":"/ use tokio::signal::unix::{signal, SignalKind};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9235553,"byte_end":9235603,"line_start":433,"line_end":433,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9235608,"byte_end":9235611,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9235616,"byte_end":9235634,"line_start":435,"line_end":435,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9235639,"byte_end":9235702,"line_start":436,"line_end":436,"column_start":5,"column_end":68}},{"value":"/     // An infinite stream of hangup signals.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9235707,"byte_end":9235755,"line_start":437,"line_end":437,"column_start":5,"column_end":53}},{"value":"/     let mut stream = signal(SignalKind::hangup())?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9235760,"byte_end":9235815,"line_start":438,"line_end":438,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9235820,"byte_end":9235823,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/     // Print whenever a HUP signal is received","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9235828,"byte_end":9235878,"line_start":440,"line_end":440,"column_start":5,"column_end":55}},{"value":"/     loop {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9235883,"byte_end":9235897,"line_start":441,"line_end":441,"column_start":5,"column_end":19}},{"value":"/         stream.recv().await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9235902,"byte_end":9235934,"line_start":442,"line_end":442,"column_start":5,"column_end":37}},{"value":"/         println!(\"got signal HUP\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9235939,"byte_end":9235978,"line_start":443,"line_end":443,"column_start":5,"column_end":44}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9235983,"byte_end":9235992,"line_start":444,"line_end":444,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9235997,"byte_end":9236002,"line_start":445,"line_end":445,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9236007,"byte_end":9236014,"line_start":446,"line_end":446,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6182},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9236985,"byte_end":9236994,"line_start":480,"line_end":480,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Signal>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next signal notification event, outside of an\n `async` context.","sig":null,"attributes":[{"value":"/ Polls to receive the next signal notification event, outside of an","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9236158,"byte_end":9236228,"line_start":452,"line_end":452,"column_start":5,"column_end":75}},{"value":"/ `async` context.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9236233,"byte_end":9236253,"line_start":453,"line_end":453,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9236258,"byte_end":9236261,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if no more events can be received by this stream.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9236266,"byte_end":9236338,"line_start":455,"line_end":455,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9236343,"byte_end":9236346,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9236351,"byte_end":9236365,"line_start":457,"line_end":457,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9236370,"byte_end":9236373,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ Polling from a manually implemented future","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9236378,"byte_end":9236424,"line_start":459,"line_end":459,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9236429,"byte_end":9236432,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9236437,"byte_end":9236455,"line_start":461,"line_end":461,"column_start":5,"column_end":23}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9236460,"byte_end":9236482,"line_start":462,"line_end":462,"column_start":5,"column_end":27}},{"value":"/ use std::future::Future;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9236487,"byte_end":9236515,"line_start":463,"line_end":463,"column_start":5,"column_end":33}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9236520,"byte_end":9236555,"line_start":464,"line_end":464,"column_start":5,"column_end":40}},{"value":"/ use tokio::signal::unix::Signal;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9236560,"byte_end":9236596,"line_start":465,"line_end":465,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9236601,"byte_end":9236604,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ struct MyFuture {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9236609,"byte_end":9236630,"line_start":467,"line_end":467,"column_start":5,"column_end":26}},{"value":"/     signal: Signal,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9236635,"byte_end":9236658,"line_start":468,"line_end":468,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9236663,"byte_end":9236668,"line_start":469,"line_end":469,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9236673,"byte_end":9236676,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ impl Future for MyFuture {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9236681,"byte_end":9236711,"line_start":471,"line_end":471,"column_start":5,"column_end":35}},{"value":"/     type Output = Option<()>;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9236716,"byte_end":9236749,"line_start":472,"line_end":472,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9236754,"byte_end":9236757,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/     fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9236762,"byte_end":9236849,"line_start":474,"line_end":474,"column_start":5,"column_end":92}},{"value":"/         println!(\"polling MyFuture\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9236854,"byte_end":9236895,"line_start":475,"line_end":475,"column_start":5,"column_end":46}},{"value":"/         self.signal.poll_recv(cx)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9236900,"byte_end":9236937,"line_start":476,"line_end":476,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9236942,"byte_end":9236951,"line_start":477,"line_end":477,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9236956,"byte_end":9236961,"line_start":478,"line_end":478,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9236966,"byte_end":9236973,"line_start":479,"line_end":479,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":6222},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":6223},{"krate":0,"index":6243},{"krate":0,"index":6244},{"krate":0,"index":6264},{"krate":0,"index":6265},{"krate":0,"index":6285},{"krate":0,"index":6286},{"krate":0,"index":6377},{"krate":0,"index":6378},{"krate":0,"index":6379},{"krate":0,"index":6399},{"krate":0,"index":6400},{"krate":0,"index":6401},{"krate":0,"index":6402},{"krate":0,"index":6424},{"krate":0,"index":6425},{"krate":0,"index":6448},{"krate":0,"index":6449},{"krate":0,"index":6468},{"krate":0,"index":6469},{"krate":0,"index":6484},{"krate":0,"index":6485},{"krate":0,"index":6500},{"krate":0,"index":6501},{"krate":0,"index":6502},{"krate":0,"index":6503},{"krate":0,"index":6528},{"krate":0,"index":6529},{"krate":0,"index":6552},{"krate":0,"index":6553},{"krate":0,"index":6570},{"krate":0,"index":6571},{"krate":0,"index":6590},{"krate":0,"index":6591},{"krate":0,"index":6592},{"krate":0,"index":6593},{"krate":0,"index":6613},{"krate":0,"index":6614},{"krate":0,"index":6615},{"krate":0,"index":6616},{"krate":0,"index":6658},{"krate":0,"index":6659},{"krate":0,"index":6679},{"krate":0,"index":6680},{"krate":0,"index":6702},{"krate":0,"index":6703},{"krate":0,"index":6724},{"krate":0,"index":6725},{"krate":0,"index":6746},{"krate":0,"index":6747},{"krate":0,"index":6771},{"krate":0,"index":6886},{"krate":0,"index":6909},{"krate":0,"index":6910},{"krate":0,"index":6772},{"krate":0,"index":6773},{"krate":0,"index":6807},{"krate":0,"index":6809}],"decl_id":null,"docs":" Stream utilities for Tokio.","sig":null,"attributes":[{"value":"cfg(feature = \"stream\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":21086,"byte_end":21112,"line_start":221,"line_end":221,"column_start":13,"column_end":39}},{"value":"/ Stream utilities for Tokio.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9246164,"byte_end":9246195,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9246196,"byte_end":9246199,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ A `Stream` is an asynchronous sequence of values. It can be thought of as an asynchronous version of the standard library's `Iterator` trait.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9246200,"byte_end":9246345,"line_start":3,"line_end":3,"column_start":1,"column_end":146}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9246346,"byte_end":9246349,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module provides helpers to work with them.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9246350,"byte_end":9246401,"line_start":5,"line_end":5,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":6810},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/all.rs","byte_start":9272082,"byte_end":9272091,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AllFuture","qualname":"::stream::all::AllFuture","value":"AllFuture {  }","parent":null,"children":[{"krate":0,"index":6814},{"krate":0,"index":6815}],"decl_id":null,"docs":" Future for the [`all`](super::StreamExt::all) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`all`](super::StreamExt::all) method.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/all.rs","byte_start":9271928,"byte_end":9271985,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/all.rs","byte_start":9272003,"byte_end":9272070,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6821},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/any.rs","byte_start":9273245,"byte_end":9273254,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AnyFuture","qualname":"::stream::any::AnyFuture","value":"AnyFuture {  }","parent":null,"children":[{"krate":0,"index":6825},{"krate":0,"index":6826}],"decl_id":null,"docs":" Future for the [`any`](super::StreamExt::any) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`any`](super::StreamExt::any) method.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/any.rs","byte_start":9273091,"byte_end":9273148,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/any.rs","byte_start":9273166,"byte_end":9273233,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10619},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/chain.rs","byte_start":9274374,"byte_end":9274379,"line_start":9,"line_end":9,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":10622},{"krate":0,"index":10623}],"decl_id":null,"docs":" Stream returned by the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10581},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9275612,"byte_end":9275619,"line_start":15,"line_end":15,"column_start":16,"column_end":23},"name":"Collect","qualname":"::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":10584},{"krate":0,"index":10585}],"decl_id":null,"docs":" Future returned by the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.11/src/lib.rs","byte_start":8332164,"byte_end":8332173,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":6300},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9276184,"byte_end":9276194,"line_start":36,"line_end":36,"column_start":11,"column_end":21},"name":"FromStream","qualname":"::stream::collect::FromStream","value":"FromStream<T>: sealed::FromStreamPriv<T>","parent":null,"children":[],"decl_id":null,"docs":" Convert from a [`Stream`](crate::stream::Stream).","sig":null,"attributes":[{"value":"/ Convert from a [`Stream`](crate::stream::Stream).","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9275771,"byte_end":9275824,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9275825,"byte_end":9275828,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This trait is not intended to be used directly. Instead, call","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9275829,"byte_end":9275894,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/ [`StreamExt::collect()`](super::StreamExt::collect).","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9275895,"byte_end":9275951,"line_start":29,"line_end":29,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9275952,"byte_end":9275955,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Implementing","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9275956,"byte_end":9275974,"line_start":31,"line_end":31,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9275975,"byte_end":9275978,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait may not be implemented by third parties. The trait is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9275979,"byte_end":9276058,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ sealed in order to make changes in the future. Stabilization is pending","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9276059,"byte_end":9276134,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ enhancements to the Rust language.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9276135,"byte_end":9276173,"line_start":35,"line_end":35,"column_start":1,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":6371},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9281095,"byte_end":9281109,"line_start":231,"line_end":231,"column_start":15,"column_end":29},"name":"FromStreamPriv","qualname":"::stream::collect::sealed::FromStreamPriv","value":"FromStreamPriv<T>","parent":null,"children":[{"krate":0,"index":6373},{"krate":0,"index":6374},{"krate":0,"index":6375},{"krate":0,"index":6376}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6373},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9281189,"byte_end":9281199,"line_start":233,"line_end":233,"column_start":14,"column_end":24},"name":"Collection","qualname":"::stream::collect::sealed::FromStreamPriv::Collection","value":"type Collection;","parent":{"krate":0,"index":6371},"children":[],"decl_id":null,"docs":" Intermediate type used during collection process\n","sig":null,"attributes":[{"value":"/ Intermediate type used during collection process","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9281123,"byte_end":9281175,"line_start":232,"line_end":232,"column_start":9,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":6374},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9281251,"byte_end":9281261,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"initialize","qualname":"::stream::collect::sealed::FromStreamPriv::initialize","value":"pub fn initialize(usize, Option<usize>) -> Self::Collection","parent":{"krate":0,"index":6371},"children":[],"decl_id":null,"docs":" Initialize the collection\n","sig":null,"attributes":[{"value":"/ Initialize the collection","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9281210,"byte_end":9281239,"line_start":235,"line_end":235,"column_start":9,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":6375},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9281478,"byte_end":9281484,"line_start":241,"line_end":241,"column_start":12,"column_end":18},"name":"extend","qualname":"::stream::collect::sealed::FromStreamPriv::extend","value":"pub fn extend(&mut Self::Collection, T) -> bool","parent":{"krate":0,"index":6371},"children":[],"decl_id":null,"docs":" Extend the collection with the received item","sig":null,"attributes":[{"value":"/ Extend the collection with the received item","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9281328,"byte_end":9281376,"line_start":238,"line_end":238,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9281385,"byte_end":9281388,"line_start":239,"line_end":239,"column_start":9,"column_end":12}},{"value":"/ Return `true` to continue streaming, `false` complete collection.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9281397,"byte_end":9281466,"line_start":240,"line_end":240,"column_start":9,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":6376},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9281600,"byte_end":9281608,"line_start":244,"line_end":244,"column_start":12,"column_end":20},"name":"finalize","qualname":"::stream::collect::sealed::FromStreamPriv::finalize","value":"pub fn finalize(&mut Self::Collection) -> Self","parent":{"krate":0,"index":6371},"children":[],"decl_id":null,"docs":" Finalize collection into target type.\n","sig":null,"attributes":[{"value":"/ Finalize collection into target type.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9281547,"byte_end":9281588,"line_start":243,"line_end":243,"column_start":9,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":6832},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/empty.rs","byte_start":9281901,"byte_end":9281906,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream for the [`empty`](fn@empty) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`](fn@empty) function.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/empty.rs","byte_start":9281775,"byte_end":9281823,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/empty.rs","byte_start":9281841,"byte_end":9281889,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":6392},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/empty.rs","byte_start":9282496,"byte_end":9282501,"line_start":36,"line_end":36,"column_start":14,"column_end":19},"name":"empty","qualname":"::stream::empty::empty","value":"pub const fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that yields nothing.","sig":null,"attributes":[{"value":"/ Creates a stream that yields nothing.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/empty.rs","byte_start":9282031,"byte_end":9282072,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/empty.rs","byte_start":9282073,"byte_end":9282076,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is immediately ready and returns `None`. Use","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/empty.rs","byte_start":9282077,"byte_end":9282145,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/ [`stream::pending()`](super::pending()) to obtain a stream that is never","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/empty.rs","byte_start":9282146,"byte_end":9282222,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ ready.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/empty.rs","byte_start":9282223,"byte_end":9282233,"line_start":20,"line_end":20,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/empty.rs","byte_start":9282234,"byte_end":9282237,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/empty.rs","byte_start":9282238,"byte_end":9282252,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/empty.rs","byte_start":9282253,"byte_end":9282256,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/empty.rs","byte_start":9282257,"byte_end":9282273,"line_start":24,"line_end":24,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/empty.rs","byte_start":9282274,"byte_end":9282277,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/empty.rs","byte_start":9282278,"byte_end":9282285,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/empty.rs","byte_start":9282286,"byte_end":9282327,"line_start":27,"line_end":27,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/empty.rs","byte_start":9282328,"byte_end":9282331,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/empty.rs","byte_start":9282332,"byte_end":9282350,"line_start":29,"line_end":29,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/empty.rs","byte_start":9282351,"byte_end":9282372,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"/     let mut none = stream::empty::<i32>();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/empty.rs","byte_start":9282373,"byte_end":9282419,"line_start":31,"line_end":31,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/empty.rs","byte_start":9282420,"byte_end":9282423,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(None, none.next().await);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/empty.rs","byte_start":9282424,"byte_end":9282468,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/empty.rs","byte_start":9282469,"byte_end":9282474,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/empty.rs","byte_start":9282475,"byte_end":9282482,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10525},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/filter.rs","byte_start":9283084,"byte_end":9283090,"line_start":11,"line_end":11,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":10528},{"krate":0,"index":10529}],"decl_id":null,"docs":" Stream returned by the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.11/src/lib.rs","byte_start":8332164,"byte_end":8332173,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10480},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/filter_map.rs","byte_start":9284522,"byte_end":9284531,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":10483},{"krate":0,"index":10484}],"decl_id":null,"docs":" Stream returned by the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.11/src/lib.rs","byte_start":8332164,"byte_end":8332173,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10431},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/fold.rs","byte_start":9285948,"byte_end":9285958,"line_start":11,"line_end":11,"column_start":16,"column_end":26},"name":"FoldFuture","qualname":"::stream::fold::FoldFuture","value":"FoldFuture {  }","parent":null,"children":[{"krate":0,"index":10435},{"krate":0,"index":10436},{"krate":0,"index":10437}],"decl_id":null,"docs":" Future returned by the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10391},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/fuse.rs","byte_start":9287114,"byte_end":9287118,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":10393}],"decl_id":null,"docs":" Stream returned by [`fuse()`][super::StreamExt::fuse].\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6839},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/iter.rs","byte_start":9288250,"byte_end":9288254,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":6841}],"decl_id":null,"docs":" Stream for the [`iter`](fn@iter) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`](fn@iter) function.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/iter.rs","byte_start":9288126,"byte_end":9288172,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/iter.rs","byte_start":9288190,"byte_end":9288238,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":6493},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/iter.rs","byte_start":9288828,"byte_end":9288832,"line_start":32,"line_end":32,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"pub fn iter<I>(I) -> Iter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/iter.rs","byte_start":9288306,"byte_end":9288370,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/iter.rs","byte_start":9288371,"byte_end":9288399,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/iter.rs","byte_start":9288400,"byte_end":9288403,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/iter.rs","byte_start":9288404,"byte_end":9288477,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/iter.rs","byte_start":9288478,"byte_end":9288533,"line_start":19,"line_end":19,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/iter.rs","byte_start":9288534,"byte_end":9288537,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/iter.rs","byte_start":9288538,"byte_end":9288545,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # async fn dox() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/iter.rs","byte_start":9288546,"byte_end":9288568,"line_start":22,"line_end":22,"column_start":1,"column_end":23}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/iter.rs","byte_start":9288569,"byte_end":9288610,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/iter.rs","byte_start":9288611,"byte_end":9288614,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut stream = stream::iter(vec![17, 19]);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/iter.rs","byte_start":9288615,"byte_end":9288663,"line_start":25,"line_end":25,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/iter.rs","byte_start":9288664,"byte_end":9288667,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(stream.next().await, Some(17));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/iter.rs","byte_start":9288668,"byte_end":9288714,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(stream.next().await, Some(19));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/iter.rs","byte_start":9288715,"byte_end":9288761,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/iter.rs","byte_start":9288762,"byte_end":9288804,"line_start":29,"line_end":29,"column_start":1,"column_end":43}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/iter.rs","byte_start":9288805,"byte_end":9288812,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/iter.rs","byte_start":9288813,"byte_end":9288820,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10337},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/map.rs","byte_start":9289612,"byte_end":9289615,"line_start":11,"line_end":11,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":10340},{"krate":0,"index":10341}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.11/src/lib.rs","byte_start":8332164,"byte_end":8332173,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10288},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/merge.rs","byte_start":9290685,"byte_end":9290690,"line_start":9,"line_end":9,"column_start":16,"column_end":21},"name":"Merge","qualname":"::stream::merge::Merge","value":"Merge {  }","parent":null,"children":[{"krate":0,"index":10291},{"krate":0,"index":10292},{"krate":0,"index":10293}],"decl_id":null,"docs":" Stream returned by the [`merge`](super::StreamExt::merge) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6845},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/next.rs","byte_start":9292565,"byte_end":9292569,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":6848}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/next.rs","byte_start":9292409,"byte_end":9292468,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/next.rs","byte_start":9292486,"byte_end":9292553,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6853},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/once.rs","byte_start":9293265,"byte_end":9293269,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":6855}],"decl_id":null,"docs":" Stream for the [`once`](fn@once) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`once`](fn@once) function.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/once.rs","byte_start":9293141,"byte_end":9293187,"line_start":7,"line_end":7,"column_start":1,"column_end":47}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/once.rs","byte_start":9293205,"byte_end":9293253,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":6583},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/once.rs","byte_start":9293841,"byte_end":9293845,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"pub fn once<T>(T) -> Once<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that emits an element exactly once.","sig":null,"attributes":[{"value":"/ Creates a stream that emits an element exactly once.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/once.rs","byte_start":9293345,"byte_end":9293401,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/once.rs","byte_start":9293402,"byte_end":9293405,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is immediately ready and emits the provided value once.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/once.rs","byte_start":9293406,"byte_end":9293485,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/once.rs","byte_start":9293486,"byte_end":9293489,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/once.rs","byte_start":9293490,"byte_end":9293504,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/once.rs","byte_start":9293505,"byte_end":9293508,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/once.rs","byte_start":9293509,"byte_end":9293516,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/once.rs","byte_start":9293517,"byte_end":9293558,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/once.rs","byte_start":9293559,"byte_end":9293562,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/once.rs","byte_start":9293563,"byte_end":9293581,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/once.rs","byte_start":9293582,"byte_end":9293603,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     // one is the loneliest number","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/once.rs","byte_start":9293604,"byte_end":9293642,"line_start":27,"line_end":27,"column_start":1,"column_end":39}},{"value":"/     let mut one = stream::once(1);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/once.rs","byte_start":9293643,"byte_end":9293681,"line_start":28,"line_end":28,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/once.rs","byte_start":9293682,"byte_end":9293685,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(Some(1), one.next().await);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/once.rs","byte_start":9293686,"byte_end":9293732,"line_start":30,"line_end":30,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/once.rs","byte_start":9293733,"byte_end":9293736,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     // just one, that's all we get","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/once.rs","byte_start":9293737,"byte_end":9293775,"line_start":32,"line_end":32,"column_start":1,"column_end":39}},{"value":"/     assert_eq!(None, one.next().await);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/once.rs","byte_start":9293776,"byte_end":9293819,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/once.rs","byte_start":9293820,"byte_end":9293825,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/once.rs","byte_start":9293826,"byte_end":9293833,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6859},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/pending.rs","byte_start":9294468,"byte_end":9294475,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream for the [`pending`](fn@pending) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending`](fn@pending) function.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/pending.rs","byte_start":9294338,"byte_end":9294390,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/pending.rs","byte_start":9294408,"byte_end":9294456,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":6606},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/pending.rs","byte_start":9295215,"byte_end":9295222,"line_start":40,"line_end":40,"column_start":14,"column_end":21},"name":"pending","qualname":"::stream::pending::pending","value":"pub const fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that is never ready","sig":null,"attributes":[{"value":"/ Creates a stream that is never ready","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/pending.rs","byte_start":9294606,"byte_end":9294646,"line_start":16,"line_end":16,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/pending.rs","byte_start":9294647,"byte_end":9294650,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is never ready. Attempting to call","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/pending.rs","byte_start":9294651,"byte_end":9294709,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/ [`next()`](crate::stream::StreamExt::next) will never complete. Use","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/pending.rs","byte_start":9294710,"byte_end":9294781,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"/ [`stream::empty()`](super::empty()) to obtain a stream that is is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/pending.rs","byte_start":9294782,"byte_end":9294851,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/ immediately empty but returns no values.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/pending.rs","byte_start":9294852,"byte_end":9294896,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/pending.rs","byte_start":9294897,"byte_end":9294900,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/pending.rs","byte_start":9294901,"byte_end":9294915,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/pending.rs","byte_start":9294916,"byte_end":9294919,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/pending.rs","byte_start":9294920,"byte_end":9294936,"line_start":25,"line_end":25,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/pending.rs","byte_start":9294937,"byte_end":9294940,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/pending.rs","byte_start":9294941,"byte_end":9294954,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/pending.rs","byte_start":9294955,"byte_end":9294996,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/pending.rs","byte_start":9294997,"byte_end":9295000,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/pending.rs","byte_start":9295001,"byte_end":9295019,"line_start":30,"line_end":30,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/pending.rs","byte_start":9295020,"byte_end":9295041,"line_start":31,"line_end":31,"column_start":1,"column_end":22}},{"value":"/     let mut never = stream::pending::<i32>();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/pending.rs","byte_start":9295042,"byte_end":9295091,"line_start":32,"line_end":32,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/pending.rs","byte_start":9295092,"byte_end":9295095,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/     // This will never complete","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/pending.rs","byte_start":9295096,"byte_end":9295131,"line_start":34,"line_end":34,"column_start":1,"column_end":36}},{"value":"/     never.next().await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/pending.rs","byte_start":9295132,"byte_end":9295159,"line_start":35,"line_end":35,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/pending.rs","byte_start":9295160,"byte_end":9295163,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     unreachable!();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/pending.rs","byte_start":9295164,"byte_end":9295187,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/pending.rs","byte_start":9295188,"byte_end":9295193,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/pending.rs","byte_start":9295194,"byte_end":9295201,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6866},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9300871,"byte_end":9300880,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"StreamMap","qualname":"::stream::stream_map::StreamMap","value":"StreamMap {  }","parent":null,"children":[{"krate":0,"index":6869}],"decl_id":null,"docs":" Combine many streams into one, indexing each source stream with a unique\n key.","sig":null,"attributes":[{"value":"/ Combine many streams into one, indexing each source stream with a unique","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9295639,"byte_end":9295715,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ key.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9295716,"byte_end":9295724,"line_start":9,"line_end":9,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9295725,"byte_end":9295728,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` is similar to [`StreamExt::merge`] in that it combines source","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9295729,"byte_end":9295806,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ streams into a single merged stream that yields values in the order that","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9295807,"byte_end":9295883,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ they arrive from the source streams. However, `StreamMap` has a lot more","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9295884,"byte_end":9295960,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ flexibility in usage patterns.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9295961,"byte_end":9295995,"line_start":14,"line_end":14,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9295996,"byte_end":9295999,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` can:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9296000,"byte_end":9296020,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9296021,"byte_end":9296024,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * Merge an arbitrary number of streams.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9296025,"byte_end":9296068,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ * Track which source stream the value was received from.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9296069,"byte_end":9296129,"line_start":19,"line_end":19,"column_start":1,"column_end":61}},{"value":"/ * Handle inserting and removing streams from the set of managed streams at","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9296130,"byte_end":9296208,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/   any point during iteration.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9296209,"byte_end":9296242,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9296243,"byte_end":9296246,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ All source streams held by `StreamMap` are indexed using a key. This key is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9296247,"byte_end":9296326,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ included with the value when a source stream yields a value. The key is also","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9296327,"byte_end":9296407,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ used to remove the stream from the `StreamMap` before the stream has","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9296408,"byte_end":9296480,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ completed streaming.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9296481,"byte_end":9296505,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9296506,"byte_end":9296509,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # `Unpin`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9296510,"byte_end":9296523,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9296524,"byte_end":9296527,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Because the `StreamMap` API moves streams during runtime, both streams and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9296528,"byte_end":9296606,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ keys must be `Unpin`. In order to insert a `!Unpin` stream into a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9296607,"byte_end":9296676,"line_start":31,"line_end":31,"column_start":1,"column_end":70}},{"value":"/ `StreamMap`, use [`pin!`] to pin the stream to the stack or [`Box::pin`] to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9296677,"byte_end":9296756,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ pin the stream in the heap.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9296757,"byte_end":9296788,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9296789,"byte_end":9296792,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9296793,"byte_end":9296813,"line_start":35,"line_end":35,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9296814,"byte_end":9296817,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` is backed by a `Vec<(K, V)>`. There is no guarantee that this","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9296818,"byte_end":9296895,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/ internal implementation detail will persist in future versions, but it is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9296896,"byte_end":9296973,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ important to know the runtime implications. In general, `StreamMap` works","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9296974,"byte_end":9297051,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ best with a \"smallish\" number of streams as all entries are scanned on","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9297052,"byte_end":9297126,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/ insert, remove, and polling. In cases where a large number of streams need","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9297127,"byte_end":9297205,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ to be merged, it may be advisable to use tasks sending values on a shared","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9297206,"byte_end":9297283,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ [`mpsc`] channel.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9297284,"byte_end":9297305,"line_start":43,"line_end":43,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9297306,"byte_end":9297309,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ [`StreamExt::merge`]: crate::stream::StreamExt::merge","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9297310,"byte_end":9297367,"line_start":45,"line_end":45,"column_start":1,"column_end":58}},{"value":"/ [`mpsc`]: crate::sync::mpsc","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9297368,"byte_end":9297399,"line_start":46,"line_end":46,"column_start":1,"column_end":32}},{"value":"/ [`pin!`]: macro@pin","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9297400,"byte_end":9297423,"line_start":47,"line_end":47,"column_start":1,"column_end":24}},{"value":"/ [`Box::pin`]: std::boxed::Box::pin","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9297424,"byte_end":9297462,"line_start":48,"line_end":48,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9297463,"byte_end":9297466,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9297467,"byte_end":9297481,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9297482,"byte_end":9297485,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Merging two streams, then remove them after receiving the first value","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9297486,"byte_end":9297559,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9297560,"byte_end":9297563,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9297564,"byte_end":9297571,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{StreamExt, StreamMap};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9297572,"byte_end":9297618,"line_start":55,"line_end":55,"column_start":1,"column_end":47}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9297619,"byte_end":9297645,"line_start":56,"line_end":56,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9297646,"byte_end":9297649,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9297650,"byte_end":9297668,"line_start":58,"line_end":58,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9297669,"byte_end":9297690,"line_start":59,"line_end":59,"column_start":1,"column_end":22}},{"value":"/     let (mut tx1, rx1) = mpsc::channel(10);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9297691,"byte_end":9297738,"line_start":60,"line_end":60,"column_start":1,"column_end":48}},{"value":"/     let (mut tx2, rx2) = mpsc::channel(10);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9297739,"byte_end":9297786,"line_start":61,"line_end":61,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9297787,"byte_end":9297790,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9297791,"byte_end":9297824,"line_start":63,"line_end":63,"column_start":1,"column_end":34}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9297825,"byte_end":9297864,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9297865,"byte_end":9297868,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/         // This value will never be received. The send may or may not return","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9297869,"byte_end":9297949,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/         // `Err` depending on if the remote end closed first or not.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9297950,"byte_end":9298022,"line_start":67,"line_end":67,"column_start":1,"column_end":73}},{"value":"/         let _ = tx1.send(2).await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9298023,"byte_end":9298061,"line_start":68,"line_end":68,"column_start":1,"column_end":39}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9298062,"byte_end":9298073,"line_start":69,"line_end":69,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9298074,"byte_end":9298077,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9298078,"byte_end":9298111,"line_start":71,"line_end":71,"column_start":1,"column_end":34}},{"value":"/         tx2.send(3).await.unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9298112,"byte_end":9298151,"line_start":72,"line_end":72,"column_start":1,"column_end":40}},{"value":"/         let _ = tx2.send(4).await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9298152,"byte_end":9298190,"line_start":73,"line_end":73,"column_start":1,"column_end":39}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9298191,"byte_end":9298202,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9298203,"byte_end":9298206,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/     let mut map = StreamMap::new();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9298207,"byte_end":9298246,"line_start":76,"line_end":76,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9298247,"byte_end":9298250,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/     // Insert both streams","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9298251,"byte_end":9298281,"line_start":78,"line_end":78,"column_start":1,"column_end":31}},{"value":"/     map.insert(\"one\", rx1);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9298282,"byte_end":9298313,"line_start":79,"line_end":79,"column_start":1,"column_end":32}},{"value":"/     map.insert(\"two\", rx2);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9298314,"byte_end":9298345,"line_start":80,"line_end":80,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9298346,"byte_end":9298349,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/     // Read twice","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9298350,"byte_end":9298371,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/     for _ in 0..2 {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9298372,"byte_end":9298395,"line_start":83,"line_end":83,"column_start":1,"column_end":24}},{"value":"/         let (key, val) = map.next().await.unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9298396,"byte_end":9298451,"line_start":84,"line_end":84,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9298452,"byte_end":9298455,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/         if key == \"one\" {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9298456,"byte_end":9298485,"line_start":86,"line_end":86,"column_start":1,"column_end":30}},{"value":"/             assert_eq!(val, 1);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9298486,"byte_end":9298521,"line_start":87,"line_end":87,"column_start":1,"column_end":36}},{"value":"/         } else {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9298522,"byte_end":9298542,"line_start":88,"line_end":88,"column_start":1,"column_end":21}},{"value":"/             assert_eq!(val, 3);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9298543,"byte_end":9298578,"line_start":89,"line_end":89,"column_start":1,"column_end":36}},{"value":"/         }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9298579,"byte_end":9298592,"line_start":90,"line_end":90,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9298593,"byte_end":9298596,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/         // Remove the stream to prevent reading the next value","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9298597,"byte_end":9298663,"line_start":92,"line_end":92,"column_start":1,"column_end":67}},{"value":"/         map.remove(key);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9298664,"byte_end":9298692,"line_start":93,"line_end":93,"column_start":1,"column_end":29}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9298693,"byte_end":9298702,"line_start":94,"line_end":94,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9298703,"byte_end":9298708,"line_start":95,"line_end":95,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9298709,"byte_end":9298716,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9298717,"byte_end":9298720,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ This example models a read-only client to a chat system with channels. The","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9298721,"byte_end":9298799,"line_start":98,"line_end":98,"column_start":1,"column_end":79}},{"value":"/ client sends commands to join and leave channels. `StreamMap` is used to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9298800,"byte_end":9298876,"line_start":99,"line_end":99,"column_start":1,"column_end":77}},{"value":"/ manage active channel subscriptions.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9298877,"byte_end":9298917,"line_start":100,"line_end":100,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9298918,"byte_end":9298921,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ For simplicity, messages are displayed with `println!`, but they could be","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9298922,"byte_end":9298999,"line_start":102,"line_end":102,"column_start":1,"column_end":78}},{"value":"/ sent to the client over a socket.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9299000,"byte_end":9299037,"line_start":103,"line_end":103,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9299038,"byte_end":9299041,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9299042,"byte_end":9299055,"line_start":105,"line_end":105,"column_start":1,"column_end":14}},{"value":"/ use tokio::stream::{Stream, StreamExt, StreamMap};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9299056,"byte_end":9299110,"line_start":106,"line_end":106,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9299111,"byte_end":9299114,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ enum Command {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9299115,"byte_end":9299133,"line_start":108,"line_end":108,"column_start":1,"column_end":19}},{"value":"/     Join(String),","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9299134,"byte_end":9299155,"line_start":109,"line_end":109,"column_start":1,"column_end":22}},{"value":"/     Leave(String),","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9299156,"byte_end":9299178,"line_start":110,"line_end":110,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9299179,"byte_end":9299184,"line_start":111,"line_end":111,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9299185,"byte_end":9299188,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ fn commands() -> impl Stream<Item = Command> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9299189,"byte_end":9299239,"line_start":113,"line_end":113,"column_start":1,"column_end":51}},{"value":"/     // Streams in user commands by parsing `stdin`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9299240,"byte_end":9299295,"line_start":114,"line_end":114,"column_start":1,"column_end":56}},{"value":"/ # tokio::stream::pending()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9299296,"byte_end":9299326,"line_start":115,"line_end":115,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9299327,"byte_end":9299332,"line_start":116,"line_end":116,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9299333,"byte_end":9299336,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ // Join a channel, returns a stream of messages received on the channel.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9299337,"byte_end":9299413,"line_start":118,"line_end":118,"column_start":1,"column_end":77}},{"value":"/ fn join(channel: &str) -> impl Stream<Item = String> + Unpin {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9299414,"byte_end":9299480,"line_start":119,"line_end":119,"column_start":1,"column_end":67}},{"value":"/     // left as an exercise to the reader","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9299481,"byte_end":9299525,"line_start":120,"line_end":120,"column_start":1,"column_end":45}},{"value":"/ # tokio::stream::pending()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9299526,"byte_end":9299556,"line_start":121,"line_end":121,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9299557,"byte_end":9299562,"line_start":122,"line_end":122,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9299563,"byte_end":9299566,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9299567,"byte_end":9299585,"line_start":124,"line_end":124,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9299586,"byte_end":9299607,"line_start":125,"line_end":125,"column_start":1,"column_end":22}},{"value":"/     let mut channels = StreamMap::new();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9299608,"byte_end":9299652,"line_start":126,"line_end":126,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9299653,"byte_end":9299656,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/     // Input commands (join / leave channels).","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9299657,"byte_end":9299707,"line_start":128,"line_end":128,"column_start":1,"column_end":51}},{"value":"/     let cmds = commands();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9299708,"byte_end":9299738,"line_start":129,"line_end":129,"column_start":1,"column_end":31}},{"value":"/     tokio::pin!(cmds);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9299739,"byte_end":9299765,"line_start":130,"line_end":130,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9299766,"byte_end":9299769,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9299770,"byte_end":9299784,"line_start":132,"line_end":132,"column_start":1,"column_end":15}},{"value":"/         tokio::select! {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9299785,"byte_end":9299813,"line_start":133,"line_end":133,"column_start":1,"column_end":29}},{"value":"/             Some(cmd) = cmds.next() => {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9299814,"byte_end":9299858,"line_start":134,"line_end":134,"column_start":1,"column_end":45}},{"value":"/                 match cmd {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9299859,"byte_end":9299890,"line_start":135,"line_end":135,"column_start":1,"column_end":32}},{"value":"/                     Command::Join(chan) => {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9299891,"byte_end":9299939,"line_start":136,"line_end":136,"column_start":1,"column_end":49}},{"value":"/                         // Join the channel and add it to the `channels`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9299940,"byte_end":9300016,"line_start":137,"line_end":137,"column_start":1,"column_end":77}},{"value":"/                         // stream map","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9300017,"byte_end":9300058,"line_start":138,"line_end":138,"column_start":1,"column_end":42}},{"value":"/                         let msgs = join(&chan);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9300059,"byte_end":9300110,"line_start":139,"line_end":139,"column_start":1,"column_end":52}},{"value":"/                         channels.insert(chan, msgs);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9300111,"byte_end":9300167,"line_start":140,"line_end":140,"column_start":1,"column_end":57}},{"value":"/                     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9300168,"byte_end":9300193,"line_start":141,"line_end":141,"column_start":1,"column_end":26}},{"value":"/                     Command::Leave(chan) => {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9300194,"byte_end":9300243,"line_start":142,"line_end":142,"column_start":1,"column_end":50}},{"value":"/                         channels.remove(&chan);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9300244,"byte_end":9300295,"line_start":143,"line_end":143,"column_start":1,"column_end":52}},{"value":"/                     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9300296,"byte_end":9300321,"line_start":144,"line_end":144,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9300322,"byte_end":9300343,"line_start":145,"line_end":145,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9300344,"byte_end":9300361,"line_start":146,"line_end":146,"column_start":1,"column_end":18}},{"value":"/             Some((chan, msg)) = channels.next() => {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9300362,"byte_end":9300418,"line_start":147,"line_end":147,"column_start":1,"column_end":57}},{"value":"/                 // Received a message, display it on stdout with the channel","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9300419,"byte_end":9300499,"line_start":148,"line_end":148,"column_start":1,"column_end":81}},{"value":"/                 // it originated from.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9300500,"byte_end":9300542,"line_start":149,"line_end":149,"column_start":1,"column_end":43}},{"value":"/                 println!(\"{}: {}\", chan, msg);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9300543,"byte_end":9300593,"line_start":150,"line_end":150,"column_start":1,"column_end":51}},{"value":"/             }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9300594,"byte_end":9300611,"line_start":151,"line_end":151,"column_start":1,"column_end":18}},{"value":"/             // Both the `commands` stream and the `channels` stream are","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9300612,"byte_end":9300687,"line_start":152,"line_end":152,"column_start":1,"column_end":76}},{"value":"/             // complete. There is no more work to do, so leave the loop.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9300688,"byte_end":9300764,"line_start":153,"line_end":153,"column_start":1,"column_end":77}},{"value":"/             else => break,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9300765,"byte_end":9300795,"line_start":154,"line_end":154,"column_start":1,"column_end":31}},{"value":"/         }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9300796,"byte_end":9300809,"line_start":155,"line_end":155,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9300810,"byte_end":9300819,"line_start":156,"line_end":156,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9300820,"byte_end":9300825,"line_start":157,"line_end":157,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9300826,"byte_end":9300833,"line_start":158,"line_end":158,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6627},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9301353,"byte_end":9301356,"line_start":178,"line_end":178,"column_start":12,"column_end":15},"name":"new","qualname":"<StreamMap<K, V>>::new","value":"pub fn new() -> StreamMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `StreamMap`.","sig":null,"attributes":[{"value":"/ Creates an empty `StreamMap`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9300985,"byte_end":9301018,"line_start":166,"line_end":166,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9301023,"byte_end":9301026,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ The stream map is initially created with a capacity of `0`, so it will","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9301031,"byte_end":9301105,"line_start":168,"line_end":168,"column_start":5,"column_end":79}},{"value":"/ not allocate until it is first inserted into.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9301110,"byte_end":9301159,"line_start":169,"line_end":169,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9301164,"byte_end":9301167,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9301172,"byte_end":9301186,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9301191,"byte_end":9301194,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9301199,"byte_end":9301206,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9301211,"byte_end":9301255,"line_start":174,"line_end":174,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9301260,"byte_end":9301263,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<&str, Pending<()>> = StreamMap::new();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9301268,"byte_end":9301329,"line_start":176,"line_end":176,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9301334,"byte_end":9301341,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6628},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9301861,"byte_end":9301874,"line_start":194,"line_end":194,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<StreamMap<K, V>>::with_capacity","value":"pub fn with_capacity(usize) -> StreamMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `StreamMap` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates an empty `StreamMap` with the specified capacity.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9301429,"byte_end":9301490,"line_start":182,"line_end":182,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9301495,"byte_end":9301498,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The stream map will be able to hold at least `capacity` elements without","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9301503,"byte_end":9301579,"line_start":184,"line_end":184,"column_start":5,"column_end":81}},{"value":"/ reallocating. If `capacity` is 0, the stream map will not allocate.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9301584,"byte_end":9301655,"line_start":185,"line_end":185,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9301660,"byte_end":9301663,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9301668,"byte_end":9301682,"line_start":187,"line_end":187,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9301687,"byte_end":9301690,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9301695,"byte_end":9301702,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9301707,"byte_end":9301751,"line_start":190,"line_end":190,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9301756,"byte_end":9301759,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<&str, Pending<()>> = StreamMap::with_capacity(10);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9301764,"byte_end":9301837,"line_start":192,"line_end":192,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9301842,"byte_end":9301849,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6629},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9302492,"byte_end":9302496,"line_start":219,"line_end":219,"column_start":12,"column_end":16},"name":"keys","qualname":"<StreamMap<K, V>>::keys","value":"pub fn keys(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator visiting all keys in arbitrary order.","sig":null,"attributes":[{"value":"/ Returns an iterator visiting all keys in arbitrary order.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9302005,"byte_end":9302066,"line_start":200,"line_end":200,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9302071,"byte_end":9302074,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a K.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9302079,"byte_end":9302118,"line_start":202,"line_end":202,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9302123,"byte_end":9302126,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9302131,"byte_end":9302145,"line_start":204,"line_end":204,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9302150,"byte_end":9302153,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9302158,"byte_end":9302165,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9302170,"byte_end":9302214,"line_start":207,"line_end":207,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9302219,"byte_end":9302222,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9302227,"byte_end":9302262,"line_start":209,"line_end":209,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9302267,"byte_end":9302270,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9302275,"byte_end":9302313,"line_start":211,"line_end":211,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9302318,"byte_end":9302349,"line_start":212,"line_end":212,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9302354,"byte_end":9302385,"line_start":213,"line_end":213,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9302390,"byte_end":9302393,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ for key in map.keys() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9302398,"byte_end":9302425,"line_start":215,"line_end":215,"column_start":5,"column_end":32}},{"value":"/     println!(\"{}\", key);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9302430,"byte_end":9302458,"line_start":216,"line_end":216,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9302463,"byte_end":9302468,"line_start":217,"line_end":217,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9302473,"byte_end":9302480,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6632},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9303080,"byte_end":9303086,"line_start":242,"line_end":242,"column_start":12,"column_end":18},"name":"values","qualname":"<StreamMap<K, V>>::values","value":"pub fn values(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values in arbitrary order.","sig":null,"attributes":[{"value":"/ An iterator visiting all values in arbitrary order.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9302589,"byte_end":9302644,"line_start":223,"line_end":223,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9302649,"byte_end":9302652,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a V.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9302657,"byte_end":9302696,"line_start":225,"line_end":225,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9302701,"byte_end":9302704,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9302709,"byte_end":9302723,"line_start":227,"line_end":227,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9302728,"byte_end":9302731,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9302736,"byte_end":9302743,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9302748,"byte_end":9302792,"line_start":230,"line_end":230,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9302797,"byte_end":9302800,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9302805,"byte_end":9302840,"line_start":232,"line_end":232,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9302845,"byte_end":9302848,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9302853,"byte_end":9302891,"line_start":234,"line_end":234,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9302896,"byte_end":9302927,"line_start":235,"line_end":235,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9302932,"byte_end":9302963,"line_start":236,"line_end":236,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9302968,"byte_end":9302971,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ for stream in map.values() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9302976,"byte_end":9303008,"line_start":238,"line_end":238,"column_start":5,"column_end":37}},{"value":"/     println!(\"{:?}\", stream);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9303013,"byte_end":9303046,"line_start":239,"line_end":239,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9303051,"byte_end":9303056,"line_start":240,"line_end":240,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9303061,"byte_end":9303068,"line_start":241,"line_end":241,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6635},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9303686,"byte_end":9303696,"line_start":265,"line_end":265,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<StreamMap<K, V>>::values_mut","value":"pub fn values_mut(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values mutably in arbitrary order.","sig":null,"attributes":[{"value":"/ An iterator visiting all values mutably in arbitrary order.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9303179,"byte_end":9303242,"line_start":246,"line_end":246,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9303247,"byte_end":9303250,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a mut V.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9303255,"byte_end":9303298,"line_start":248,"line_end":248,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9303303,"byte_end":9303306,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9303311,"byte_end":9303325,"line_start":250,"line_end":250,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9303330,"byte_end":9303333,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9303338,"byte_end":9303345,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9303350,"byte_end":9303394,"line_start":253,"line_end":253,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9303399,"byte_end":9303402,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9303407,"byte_end":9303442,"line_start":255,"line_end":255,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9303447,"byte_end":9303450,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9303455,"byte_end":9303493,"line_start":257,"line_end":257,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9303498,"byte_end":9303529,"line_start":258,"line_end":258,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9303534,"byte_end":9303565,"line_start":259,"line_end":259,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9303570,"byte_end":9303573,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ for stream in map.values_mut() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9303578,"byte_end":9303614,"line_start":261,"line_end":261,"column_start":5,"column_end":41}},{"value":"/     println!(\"{:?}\", stream);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9303619,"byte_end":9303652,"line_start":262,"line_end":262,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9303657,"byte_end":9303662,"line_start":263,"line_end":263,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9303667,"byte_end":9303674,"line_start":264,"line_end":264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6638},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9304274,"byte_end":9304282,"line_start":282,"line_end":282,"column_start":12,"column_end":20},"name":"capacity","qualname":"<StreamMap<K, V>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams the map can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of streams the map can hold without reallocating.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9303801,"byte_end":9303873,"line_start":269,"line_end":269,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9303878,"byte_end":9303881,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ This number is a lower bound; the `StreamMap` might be able to hold","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9303886,"byte_end":9303957,"line_start":271,"line_end":271,"column_start":5,"column_end":76}},{"value":"/ more, but is guaranteed to be able to hold at least this many.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9303962,"byte_end":9304028,"line_start":272,"line_end":272,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9304033,"byte_end":9304036,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9304041,"byte_end":9304055,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9304060,"byte_end":9304063,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9304068,"byte_end":9304075,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9304080,"byte_end":9304124,"line_start":277,"line_end":277,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9304129,"byte_end":9304132,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<i32, Pending<()>> = StreamMap::with_capacity(100);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9304137,"byte_end":9304210,"line_start":279,"line_end":279,"column_start":5,"column_end":78}},{"value":"/ assert!(map.capacity() >= 100);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9304215,"byte_end":9304250,"line_start":280,"line_end":280,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9304255,"byte_end":9304262,"line_start":281,"line_end":281,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6639},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9304658,"byte_end":9304661,"line_start":298,"line_end":298,"column_start":12,"column_end":15},"name":"len","qualname":"<StreamMap<K, V>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams in the map.","sig":null,"attributes":[{"value":"/ Returns the number of streams in the map.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9304344,"byte_end":9304389,"line_start":286,"line_end":286,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9304394,"byte_end":9304397,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9304402,"byte_end":9304416,"line_start":288,"line_end":288,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9304421,"byte_end":9304424,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9304429,"byte_end":9304436,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9304441,"byte_end":9304485,"line_start":291,"line_end":291,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9304490,"byte_end":9304493,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ let mut a = StreamMap::new();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9304498,"byte_end":9304531,"line_start":293,"line_end":293,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(a.len(), 0);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9304536,"byte_end":9304563,"line_start":294,"line_end":294,"column_start":5,"column_end":32}},{"value":"/ a.insert(1, pending::<i32>());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9304568,"byte_end":9304602,"line_start":295,"line_end":295,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(a.len(), 1);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9304607,"byte_end":9304634,"line_start":296,"line_end":296,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9304639,"byte_end":9304646,"line_start":297,"line_end":297,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6640},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9305012,"byte_end":9305020,"line_start":314,"line_end":314,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<StreamMap<K, V>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains no elements.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains no elements.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9304718,"byte_end":9304769,"line_start":302,"line_end":302,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9304774,"byte_end":9304777,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9304782,"byte_end":9304796,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9304801,"byte_end":9304804,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9304809,"byte_end":9304816,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9304821,"byte_end":9304855,"line_start":307,"line_end":307,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9304860,"byte_end":9304863,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9304868,"byte_end":9304899,"line_start":309,"line_end":309,"column_start":5,"column_end":36}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9304904,"byte_end":9304930,"line_start":310,"line_end":310,"column_start":5,"column_end":31}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9304935,"byte_end":9304956,"line_start":311,"line_end":311,"column_start":5,"column_end":26}},{"value":"/ assert!(!a.is_empty());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9304961,"byte_end":9304988,"line_start":312,"line_end":312,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9304993,"byte_end":9305000,"line_start":313,"line_end":313,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6641},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9305432,"byte_end":9305437,"line_start":331,"line_end":331,"column_start":12,"column_end":17},"name":"clear","qualname":"<StreamMap<K, V>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, removing all key-stream pairs. Keeps the allocated\n memory for reuse.","sig":null,"attributes":[{"value":"/ Clears the map, removing all key-stream pairs. Keeps the allocated","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9305081,"byte_end":9305151,"line_start":318,"line_end":318,"column_start":5,"column_end":75}},{"value":"/ memory for reuse.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9305156,"byte_end":9305177,"line_start":319,"line_end":319,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9305182,"byte_end":9305185,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9305190,"byte_end":9305204,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9305209,"byte_end":9305212,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9305217,"byte_end":9305224,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9305229,"byte_end":9305273,"line_start":324,"line_end":324,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9305278,"byte_end":9305281,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ let mut a = StreamMap::new();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9305286,"byte_end":9305319,"line_start":326,"line_end":326,"column_start":5,"column_end":38}},{"value":"/ a.insert(1, pending::<i32>());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9305324,"byte_end":9305358,"line_start":327,"line_end":327,"column_start":5,"column_end":39}},{"value":"/ a.clear();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9305363,"byte_end":9305377,"line_start":328,"line_end":328,"column_start":5,"column_end":19}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9305382,"byte_end":9305408,"line_start":329,"line_end":329,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9305413,"byte_end":9305420,"line_start":330,"line_end":330,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6642},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9306112,"byte_end":9306118,"line_start":355,"line_end":355,"column_start":12,"column_end":18},"name":"insert","qualname":"<StreamMap<K, V>>::insert","value":"pub fn insert(&mut Self, K, V) -> Option<V> where K: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Insert a key-stream pair into the map.","sig":null,"attributes":[{"value":"/ Insert a key-stream pair into the map.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9305492,"byte_end":9305534,"line_start":335,"line_end":335,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9305539,"byte_end":9305542,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ If the map did not have this key present, `None` is returned.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9305547,"byte_end":9305612,"line_start":337,"line_end":337,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9305617,"byte_end":9305620,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ If the map did have this key present, the new `stream` replaces the old","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9305625,"byte_end":9305700,"line_start":339,"line_end":339,"column_start":5,"column_end":80}},{"value":"/ one and the old stream is returned.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9305705,"byte_end":9305744,"line_start":340,"line_end":340,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9305749,"byte_end":9305752,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9305757,"byte_end":9305771,"line_start":342,"line_end":342,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9305776,"byte_end":9305779,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9305784,"byte_end":9305791,"line_start":344,"line_end":344,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9305796,"byte_end":9305840,"line_start":345,"line_end":345,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9305845,"byte_end":9305848,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9305853,"byte_end":9305888,"line_start":347,"line_end":347,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9305893,"byte_end":9305896,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ assert!(map.insert(37, pending::<i32>()).is_none());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9305901,"byte_end":9305957,"line_start":349,"line_end":349,"column_start":5,"column_end":61}},{"value":"/ assert!(!map.is_empty());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9305962,"byte_end":9305991,"line_start":350,"line_end":350,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9305996,"byte_end":9305999,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ map.insert(37, pending());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9306004,"byte_end":9306034,"line_start":352,"line_end":352,"column_start":5,"column_end":35}},{"value":"/ assert!(map.insert(37, pending()).is_some());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9306039,"byte_end":9306088,"line_start":353,"line_end":353,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9306093,"byte_end":9306100,"line_start":354,"line_end":354,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6643},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9306849,"byte_end":9306855,"line_start":380,"line_end":380,"column_start":12,"column_end":18},"name":"remove","qualname":"<StreamMap<K, V>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> Option<V> where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the stream at the key if the key was previously in the map.","sig":null,"attributes":[{"value":"/ Removes a key from the map, returning the stream at the key if the key was previously in the map.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9306297,"byte_end":9306398,"line_start":365,"line_end":365,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9306403,"byte_end":9306406,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but `Hash` and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9306411,"byte_end":9306485,"line_start":367,"line_end":367,"column_start":5,"column_end":79}},{"value":"/ `Eq` on the borrowed form must match those for the key type.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9306490,"byte_end":9306554,"line_start":368,"line_end":368,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9306559,"byte_end":9306562,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9306567,"byte_end":9306581,"line_start":370,"line_end":370,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9306586,"byte_end":9306589,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9306594,"byte_end":9306601,"line_start":372,"line_end":372,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9306606,"byte_end":9306650,"line_start":373,"line_end":373,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9306655,"byte_end":9306658,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9306663,"byte_end":9306698,"line_start":375,"line_end":375,"column_start":5,"column_end":40}},{"value":"/ map.insert(1, pending::<i32>());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9306703,"byte_end":9306739,"line_start":376,"line_end":376,"column_start":5,"column_end":41}},{"value":"/ assert!(map.remove(&1).is_some());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9306744,"byte_end":9306782,"line_start":377,"line_end":377,"column_start":5,"column_end":43}},{"value":"/ assert!(map.remove(&1).is_none());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9306787,"byte_end":9306825,"line_start":378,"line_end":378,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9306830,"byte_end":9306837,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6645},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9307689,"byte_end":9307701,"line_start":409,"line_end":409,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<StreamMap<K, V>>::contains_key","value":"pub fn contains_key<Q: ?Sized>(&Self, &Q) -> bool where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains a stream for the specified key.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains a stream for the specified key.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9307157,"byte_end":9307227,"line_start":394,"line_end":394,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9307232,"byte_end":9307235,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but `Hash` and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9307240,"byte_end":9307314,"line_start":396,"line_end":396,"column_start":5,"column_end":79}},{"value":"/ `Eq` on the borrowed form must match those for the key type.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9307319,"byte_end":9307383,"line_start":397,"line_end":397,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9307388,"byte_end":9307391,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9307396,"byte_end":9307410,"line_start":399,"line_end":399,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9307415,"byte_end":9307418,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9307423,"byte_end":9307430,"line_start":401,"line_end":401,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9307435,"byte_end":9307479,"line_start":402,"line_end":402,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9307484,"byte_end":9307487,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9307492,"byte_end":9307527,"line_start":404,"line_end":404,"column_start":5,"column_end":40}},{"value":"/ map.insert(1, pending::<i32>());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9307532,"byte_end":9307568,"line_start":405,"line_end":405,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(map.contains_key(&1), true);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9307573,"byte_end":9307616,"line_start":406,"line_end":406,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(map.contains_key(&2), false);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9307621,"byte_end":9307665,"line_start":407,"line_end":407,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9307670,"byte_end":9307677,"line_start":408,"line_end":408,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":10251},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/skip.rs","byte_start":9310641,"byte_end":9310645,"line_start":11,"line_end":11,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":10253},{"krate":0,"index":10254}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.11/src/lib.rs","byte_start":8332164,"byte_end":8332173,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10206},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/skip_while.rs","byte_start":9312207,"byte_end":9312216,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":10209},{"krate":0,"index":10210}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.11/src/lib.rs","byte_start":8332164,"byte_end":8332173,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6878},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/try_next.rs","byte_start":9314020,"byte_end":9314027,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":6881}],"decl_id":null,"docs":" Future for the [`try_next`](super::StreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::StreamExt::try_next) method.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/try_next.rs","byte_start":9313856,"byte_end":9313923,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/try_next.rs","byte_start":9313941,"byte_end":9314008,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10169},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/take.rs","byte_start":9314876,"byte_end":9314880,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":10171},{"krate":0,"index":10172}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.11/src/lib.rs","byte_start":8332164,"byte_end":8332173,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10120},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/take_while.rs","byte_start":9316723,"byte_end":9316732,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":10123},{"krate":0,"index":10124},{"krate":0,"index":10125}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.11/src/lib.rs","byte_start":8332164,"byte_end":8332173,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10081},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/timeout.rs","byte_start":9348841,"byte_end":9348848,"line_start":14,"line_end":14,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::stream::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":10083},{"krate":0,"index":10084},{"krate":0,"index":10085},{"krate":0,"index":10086}],"decl_id":null,"docs":" Stream returned by the [`timeout`](super::StreamExt::timeout) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.11/src/lib.rs","byte_start":8332164,"byte_end":8332173,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":6773},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9247405,"byte_end":9247414,"line_start":81,"line_end":81,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":6774},{"krate":0,"index":6775},{"krate":0,"index":6778},{"krate":0,"index":6781},{"krate":0,"index":6783},{"krate":0,"index":6785},{"krate":0,"index":6788},{"krate":0,"index":6789},{"krate":0,"index":6790},{"krate":0,"index":6792},{"krate":0,"index":6793},{"krate":0,"index":6795},{"krate":0,"index":6797},{"krate":0,"index":6799},{"krate":0,"index":6801},{"krate":0,"index":6804},{"krate":0,"index":6806}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9247294,"byte_end":9247368,"line_start":79,"line_end":79,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9247369,"byte_end":9247394,"line_start":80,"line_end":80,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":6774},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9248484,"byte_end":9248488,"line_start":113,"line_end":113,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::StreamExt::next","value":"pub fn next(&mut Self) -> Next<, Self> where Self: Unpin","parent":{"krate":0,"index":6773},"children":[],"decl_id":null,"docs":" Consumes and returns the next value in the stream or `None` if the\n stream is finished.","sig":null,"attributes":[{"value":"/ Consumes and returns the next value in the stream or `None` if the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9247429,"byte_end":9247499,"line_start":82,"line_end":82,"column_start":5,"column_end":75}},{"value":"/ stream is finished.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9247504,"byte_end":9247527,"line_start":83,"line_end":83,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9247532,"byte_end":9247535,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9247540,"byte_end":9247558,"line_start":85,"line_end":85,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9247563,"byte_end":9247566,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9247571,"byte_end":9247584,"line_start":87,"line_end":87,"column_start":5,"column_end":18}},{"value":"/ async fn next(&mut self) -> Option<Self::Item>;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9247589,"byte_end":9247640,"line_start":88,"line_end":88,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9247645,"byte_end":9247652,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9247657,"byte_end":9247660,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9247665,"byte_end":9247733,"line_start":91,"line_end":91,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9247738,"byte_end":9247813,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9247818,"byte_end":9247893,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9247898,"byte_end":9247952,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9247957,"byte_end":9248032,"line_start":95,"line_end":95,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9248037,"byte_end":9248047,"line_start":96,"line_end":96,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9248052,"byte_end":9248055,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9248060,"byte_end":9248074,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9248079,"byte_end":9248082,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9248087,"byte_end":9248094,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9248099,"byte_end":9248119,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9248124,"byte_end":9248147,"line_start":102,"line_end":102,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9248152,"byte_end":9248193,"line_start":103,"line_end":103,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9248198,"byte_end":9248201,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9248206,"byte_end":9248247,"line_start":105,"line_end":105,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9248252,"byte_end":9248255,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9248260,"byte_end":9248305,"line_start":107,"line_end":107,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9248310,"byte_end":9248355,"line_start":108,"line_end":108,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9248360,"byte_end":9248405,"line_start":109,"line_end":109,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9248410,"byte_end":9248452,"line_start":110,"line_end":110,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9248457,"byte_end":9248464,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9248469,"byte_end":9248476,"line_start":112,"line_end":112,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6775},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9249559,"byte_end":9249567,"line_start":148,"line_end":148,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::StreamExt::try_next","value":"pub fn try_next<T, E>(&mut Self) -> TryNext<, Self> where Self: Stream<Item =\nResult<T, E>> + Unpin","parent":{"krate":0,"index":6773},"children":[],"decl_id":null,"docs":" Consumes and returns the next item in the stream. If an error is\n encountered before the next item, the error is returned instead.","sig":null,"attributes":[{"value":"/ Consumes and returns the next item in the stream. If an error is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9248590,"byte_end":9248658,"line_start":120,"line_end":120,"column_start":5,"column_end":73}},{"value":"/ encountered before the next item, the error is returned instead.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9248663,"byte_end":9248731,"line_start":121,"line_end":121,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9248736,"byte_end":9248739,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9248744,"byte_end":9248762,"line_start":123,"line_end":123,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9248767,"byte_end":9248770,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9248775,"byte_end":9248788,"line_start":125,"line_end":125,"column_start":5,"column_end":18}},{"value":"/ async fn try_next(&mut self) -> Result<Option<T>, E>;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9248793,"byte_end":9248850,"line_start":126,"line_end":126,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9248855,"byte_end":9248862,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9248867,"byte_end":9248870,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`](StreamExt::next) combinator,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9248875,"byte_end":9248939,"line_start":129,"line_end":129,"column_start":5,"column_end":69}},{"value":"/ but returns a [`Result<Option<T>, E>`](Result) rather than","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9248944,"byte_end":9249006,"line_start":130,"line_end":130,"column_start":5,"column_end":67}},{"value":"/ an [`Option<Result<T, E>>`](Option), making for easy use","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9249011,"byte_end":9249071,"line_start":131,"line_end":131,"column_start":5,"column_end":65}},{"value":"/ with the [`?`](std::ops::Try) operator.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9249076,"byte_end":9249119,"line_start":132,"line_end":132,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9249124,"byte_end":9249127,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9249132,"byte_end":9249146,"line_start":134,"line_end":134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9249151,"byte_end":9249154,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9249159,"byte_end":9249166,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9249171,"byte_end":9249191,"line_start":137,"line_end":137,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9249196,"byte_end":9249219,"line_start":138,"line_end":138,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9249224,"byte_end":9249265,"line_start":139,"line_end":139,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9249270,"byte_end":9249273,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(1), Ok(2), Err(\"nope\")]);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9249278,"byte_end":9249345,"line_start":141,"line_end":141,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9249350,"byte_end":9249353,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9249358,"byte_end":9249411,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(2)));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9249416,"byte_end":9249469,"line_start":144,"line_end":144,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(\"nope\"));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9249474,"byte_end":9249527,"line_start":145,"line_end":145,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9249532,"byte_end":9249539,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9249544,"byte_end":9249551,"line_start":147,"line_end":147,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6778},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9250635,"byte_end":9250638,"line_start":181,"line_end":181,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::StreamExt::map","value":"pub fn map<T, F>(Self, F) -> Map<Self, F> where F: FnMut(Self::Item) -> T,\nSelf: Sized","parent":{"krate":0,"index":6773},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9249711,"byte_end":9249786,"line_start":155,"line_end":155,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9249791,"byte_end":9249814,"line_start":156,"line_end":156,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9249819,"byte_end":9249822,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9249827,"byte_end":9249899,"line_start":158,"line_end":158,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9249904,"byte_end":9249968,"line_start":159,"line_end":159,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9249973,"byte_end":9250010,"line_start":160,"line_end":160,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9250015,"byte_end":9250018,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9250023,"byte_end":9250099,"line_start":162,"line_end":162,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9250104,"byte_end":9250175,"line_start":163,"line_end":163,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9250180,"byte_end":9250201,"line_start":164,"line_end":164,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9250206,"byte_end":9250209,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9250214,"byte_end":9250228,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9250233,"byte_end":9250236,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9250241,"byte_end":9250248,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9250253,"byte_end":9250273,"line_start":169,"line_end":169,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9250278,"byte_end":9250301,"line_start":170,"line_end":170,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9250306,"byte_end":9250347,"line_start":171,"line_end":171,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9250352,"byte_end":9250355,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9250360,"byte_end":9250397,"line_start":173,"line_end":173,"column_start":5,"column_end":42}},{"value":"/ let mut stream = stream.map(|x| x + 3);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9250402,"byte_end":9250445,"line_start":174,"line_end":174,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9250450,"byte_end":9250453,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(4));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9250458,"byte_end":9250503,"line_start":176,"line_end":176,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(5));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9250508,"byte_end":9250553,"line_start":177,"line_end":177,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(6));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9250558,"byte_end":9250603,"line_start":178,"line_end":178,"column_start":5,"column_end":50}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9250608,"byte_end":9250615,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9250620,"byte_end":9250627,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6781},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9253248,"byte_end":9253253,"line_start":259,"line_end":259,"column_start":8,"column_end":13},"name":"merge","qualname":"::stream::StreamExt::merge","value":"pub fn merge<U>(Self, U) -> Merge<Self, U> where U: Stream<Item = Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":6773},"children":[],"decl_id":null,"docs":" Combine two streams into one by interleaving the output of both as it\n is produced.","sig":null,"attributes":[{"value":"/ Combine two streams into one by interleaving the output of both as it","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9250782,"byte_end":9250855,"line_start":189,"line_end":189,"column_start":5,"column_end":78}},{"value":"/ is produced.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9250860,"byte_end":9250876,"line_start":190,"line_end":190,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9250881,"byte_end":9250884,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Values are produced from the merged stream in the order they arrive from","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9250889,"byte_end":9250965,"line_start":192,"line_end":192,"column_start":5,"column_end":81}},{"value":"/ the two source streams. If both source streams provide values","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9250970,"byte_end":9251035,"line_start":193,"line_end":193,"column_start":5,"column_end":70}},{"value":"/ simultaneously, the merge stream alternates between them. This provides","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9251040,"byte_end":9251115,"line_start":194,"line_end":194,"column_start":5,"column_end":80}},{"value":"/ some level of fairness. You should not chain calls to `merge`, as this","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9251120,"byte_end":9251194,"line_start":195,"line_end":195,"column_start":5,"column_end":79}},{"value":"/ will break the fairness of the merging.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9251199,"byte_end":9251242,"line_start":196,"line_end":196,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9251247,"byte_end":9251250,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ The merged stream completes once **both** source streams complete. When","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9251255,"byte_end":9251330,"line_start":198,"line_end":198,"column_start":5,"column_end":80}},{"value":"/ one source stream completes before the other, the merge stream","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9251335,"byte_end":9251401,"line_start":199,"line_end":199,"column_start":5,"column_end":71}},{"value":"/ exclusively polls the remaining stream.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9251406,"byte_end":9251449,"line_start":200,"line_end":200,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9251454,"byte_end":9251457,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ For merging multiple streams, consider using [`StreamMap`] instead.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9251462,"byte_end":9251533,"line_start":202,"line_end":202,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9251538,"byte_end":9251541,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ [`StreamMap`]: crate::stream::StreamMap","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9251546,"byte_end":9251589,"line_start":204,"line_end":204,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9251594,"byte_end":9251597,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9251602,"byte_end":9251616,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9251621,"byte_end":9251624,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9251629,"byte_end":9251636,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9251641,"byte_end":9251674,"line_start":209,"line_end":209,"column_start":5,"column_end":38}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9251679,"byte_end":9251705,"line_start":210,"line_end":210,"column_start":5,"column_end":31}},{"value":"/ use tokio::time;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9251710,"byte_end":9251730,"line_start":211,"line_end":211,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9251735,"byte_end":9251738,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9251743,"byte_end":9251771,"line_start":213,"line_end":213,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9251776,"byte_end":9251779,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # /*","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9251784,"byte_end":9251792,"line_start":215,"line_end":215,"column_start":5,"column_end":13}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9251797,"byte_end":9251815,"line_start":216,"line_end":216,"column_start":5,"column_end":23}},{"value":"/ # */","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9251820,"byte_end":9251828,"line_start":217,"line_end":217,"column_start":5,"column_end":13}},{"value":"/ # #[tokio::main(basic_scheduler)]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9251833,"byte_end":9251870,"line_start":218,"line_end":218,"column_start":5,"column_end":42}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9251875,"byte_end":9251896,"line_start":219,"line_end":219,"column_start":5,"column_end":26}},{"value":"/ # time::pause();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9251901,"byte_end":9251921,"line_start":220,"line_end":220,"column_start":5,"column_end":25}},{"value":"/     let (mut tx1, rx1) = mpsc::channel(10);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9251926,"byte_end":9251973,"line_start":221,"line_end":221,"column_start":5,"column_end":52}},{"value":"/     let (mut tx2, rx2) = mpsc::channel(10);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9251978,"byte_end":9252025,"line_start":222,"line_end":222,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9252030,"byte_end":9252033,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/     let mut rx = rx1.merge(rx2);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9252038,"byte_end":9252074,"line_start":224,"line_end":224,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9252079,"byte_end":9252082,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9252087,"byte_end":9252120,"line_start":226,"line_end":226,"column_start":5,"column_end":38}},{"value":"/         // Send some values immediately","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9252125,"byte_end":9252168,"line_start":227,"line_end":227,"column_start":5,"column_end":48}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9252173,"byte_end":9252212,"line_start":228,"line_end":228,"column_start":5,"column_end":44}},{"value":"/         tx1.send(2).await.unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9252217,"byte_end":9252256,"line_start":229,"line_end":229,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9252261,"byte_end":9252264,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/         // Let the other task send values","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9252269,"byte_end":9252314,"line_start":231,"line_end":231,"column_start":5,"column_end":50}},{"value":"/         time::delay_for(Duration::from_millis(20)).await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9252319,"byte_end":9252380,"line_start":232,"line_end":232,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9252385,"byte_end":9252388,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/         tx1.send(4).await.unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9252393,"byte_end":9252432,"line_start":234,"line_end":234,"column_start":5,"column_end":44}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9252437,"byte_end":9252448,"line_start":235,"line_end":235,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9252453,"byte_end":9252456,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9252461,"byte_end":9252494,"line_start":237,"line_end":237,"column_start":5,"column_end":38}},{"value":"/         // Wait for the first task to send values","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9252499,"byte_end":9252552,"line_start":238,"line_end":238,"column_start":5,"column_end":58}},{"value":"/         time::delay_for(Duration::from_millis(5)).await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9252557,"byte_end":9252617,"line_start":239,"line_end":239,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9252622,"byte_end":9252625,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/         tx2.send(3).await.unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9252630,"byte_end":9252669,"line_start":241,"line_end":241,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9252674,"byte_end":9252677,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/         time::delay_for(Duration::from_millis(25)).await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9252682,"byte_end":9252743,"line_start":243,"line_end":243,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9252748,"byte_end":9252751,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/         // Send the final value","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9252756,"byte_end":9252791,"line_start":245,"line_end":245,"column_start":5,"column_end":40}},{"value":"/         tx2.send(5).await.unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9252796,"byte_end":9252835,"line_start":246,"line_end":246,"column_start":5,"column_end":44}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9252840,"byte_end":9252851,"line_start":247,"line_end":247,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9252856,"byte_end":9252859,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/    assert_eq!(1, rx.next().await.unwrap());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9252864,"byte_end":9252911,"line_start":249,"line_end":249,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(2, rx.next().await.unwrap());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9252916,"byte_end":9252963,"line_start":250,"line_end":250,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(3, rx.next().await.unwrap());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9252968,"byte_end":9253015,"line_start":251,"line_end":251,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(4, rx.next().await.unwrap());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9253020,"byte_end":9253067,"line_start":252,"line_end":252,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(5, rx.next().await.unwrap());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9253072,"byte_end":9253119,"line_start":253,"line_end":253,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9253124,"byte_end":9253127,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/    // The merged stream is consumed","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9253132,"byte_end":9253171,"line_start":255,"line_end":255,"column_start":5,"column_end":44}},{"value":"/    assert!(rx.next().await.is_none());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9253176,"byte_end":9253218,"line_start":256,"line_end":256,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9253223,"byte_end":9253228,"line_start":257,"line_end":257,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9253233,"byte_end":9253240,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6783},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9254558,"byte_end":9254564,"line_start":297,"line_end":297,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::StreamExt::filter","value":"pub fn filter<F>(Self, F) -> Filter<Self, F> where F: FnMut(&Self::Item) ->\nbool, Self: Sized","parent":{"krate":0,"index":6773},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9253409,"byte_end":9253481,"line_start":267,"line_end":267,"column_start":5,"column_end":77}},{"value":"/ predicate.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9253486,"byte_end":9253500,"line_start":268,"line_end":268,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9253505,"byte_end":9253508,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9253513,"byte_end":9253588,"line_start":270,"line_end":270,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9253593,"byte_end":9253639,"line_start":271,"line_end":271,"column_start":5,"column_end":51}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9253644,"byte_end":9253716,"line_start":272,"line_end":272,"column_start":5,"column_end":77}},{"value":"/ predicate resolves to `false`, then the value","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9253721,"byte_end":9253770,"line_start":273,"line_end":273,"column_start":5,"column_end":54}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9253775,"byte_end":9253833,"line_start":274,"line_end":274,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9253838,"byte_end":9253841,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9253846,"byte_end":9253922,"line_start":276,"line_end":276,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to [`Iterator::filter`] method in the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9253927,"byte_end":9253999,"line_start":277,"line_end":277,"column_start":5,"column_end":77}},{"value":"/ standard library.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9254004,"byte_end":9254025,"line_start":278,"line_end":278,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9254030,"byte_end":9254033,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9254038,"byte_end":9254052,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9254057,"byte_end":9254060,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9254065,"byte_end":9254072,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9254077,"byte_end":9254097,"line_start":283,"line_end":283,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9254102,"byte_end":9254125,"line_start":284,"line_end":284,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9254130,"byte_end":9254171,"line_start":285,"line_end":285,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9254176,"byte_end":9254179,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=8);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9254184,"byte_end":9254221,"line_start":287,"line_end":287,"column_start":5,"column_end":42}},{"value":"/ let mut evens = stream.filter(|x| x % 2 == 0);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9254226,"byte_end":9254276,"line_start":288,"line_end":288,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9254281,"byte_end":9254284,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(2), evens.next().await);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9254289,"byte_end":9254333,"line_start":290,"line_end":290,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(4), evens.next().await);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9254338,"byte_end":9254382,"line_start":291,"line_end":291,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(6), evens.next().await);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9254387,"byte_end":9254431,"line_start":292,"line_end":292,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(8), evens.next().await);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9254436,"byte_end":9254480,"line_start":293,"line_end":293,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(None, evens.next().await);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9254485,"byte_end":9254526,"line_start":294,"line_end":294,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9254531,"byte_end":9254538,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9254543,"byte_end":9254550,"line_start":296,"line_end":296,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6785},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9255931,"byte_end":9255941,"line_start":335,"line_end":335,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::StreamExt::filter_map","value":"pub fn filter_map<T, F>(Self, F) -> FilterMap<Self, F> where\nF: FnMut(Self::Item) -> Option<T>, Self: Sized","parent":{"krate":0,"index":6773},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9254715,"byte_end":9254790,"line_start":305,"line_end":305,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided closure.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9254795,"byte_end":9254858,"line_start":306,"line_end":306,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9254863,"byte_end":9254866,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9254871,"byte_end":9254946,"line_start":308,"line_end":308,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the predicate `f` resolves to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9254951,"byte_end":9255003,"line_start":309,"line_end":309,"column_start":5,"column_end":57}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9255008,"byte_end":9255084,"line_start":310,"line_end":310,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`], then the value will be skipped.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9255089,"byte_end":9255149,"line_start":311,"line_end":311,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9255154,"byte_end":9255157,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9255162,"byte_end":9255238,"line_start":313,"line_end":313,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to [`Iterator::filter_map`] method in the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9255243,"byte_end":9255319,"line_start":314,"line_end":314,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9255324,"byte_end":9255345,"line_start":315,"line_end":315,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9255350,"byte_end":9255353,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9255358,"byte_end":9255372,"line_start":317,"line_end":317,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9255377,"byte_end":9255384,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9255389,"byte_end":9255409,"line_start":319,"line_end":319,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9255414,"byte_end":9255437,"line_start":320,"line_end":320,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9255442,"byte_end":9255483,"line_start":321,"line_end":321,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9255488,"byte_end":9255491,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=8);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9255496,"byte_end":9255533,"line_start":323,"line_end":323,"column_start":5,"column_end":42}},{"value":"/ let mut evens = stream.filter_map(|x| {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9255538,"byte_end":9255581,"line_start":324,"line_end":324,"column_start":5,"column_end":48}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9255586,"byte_end":9255637,"line_start":325,"line_end":325,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9255642,"byte_end":9255649,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9255654,"byte_end":9255657,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(3), evens.next().await);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9255662,"byte_end":9255706,"line_start":328,"line_end":328,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(5), evens.next().await);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9255711,"byte_end":9255755,"line_start":329,"line_end":329,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(7), evens.next().await);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9255760,"byte_end":9255804,"line_start":330,"line_end":330,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(9), evens.next().await);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9255809,"byte_end":9255853,"line_start":331,"line_end":331,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(None, evens.next().await);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9255858,"byte_end":9255899,"line_start":332,"line_end":332,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9255904,"byte_end":9255911,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9255916,"byte_end":9255923,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6788},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9258073,"byte_end":9258077,"line_start":401,"line_end":401,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::StreamExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":6773},"children":[],"decl_id":null,"docs":" Creates a stream which ends after the first `None`.","sig":null,"attributes":[{"value":"/ Creates a stream which ends after the first `None`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9256105,"byte_end":9256160,"line_start":343,"line_end":343,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9256165,"byte_end":9256168,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ After a stream returns `None`, behavior is undefined. Future calls to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9256173,"byte_end":9256246,"line_start":345,"line_end":345,"column_start":5,"column_end":78}},{"value":"/ `poll_next` may or may not return `Some(T)` again or they may panic.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9256251,"byte_end":9256323,"line_start":346,"line_end":346,"column_start":5,"column_end":77}},{"value":"/ `fuse()` adapts a stream, ensuring that after `None` is given, it will","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9256328,"byte_end":9256402,"line_start":347,"line_end":347,"column_start":5,"column_end":79}},{"value":"/ return `None` forever.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9256407,"byte_end":9256433,"line_start":348,"line_end":348,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9256438,"byte_end":9256441,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9256446,"byte_end":9256460,"line_start":350,"line_end":350,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9256465,"byte_end":9256468,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9256473,"byte_end":9256480,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{Stream, StreamExt};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9256485,"byte_end":9256528,"line_start":353,"line_end":353,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9256533,"byte_end":9256536,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9256541,"byte_end":9256563,"line_start":355,"line_end":355,"column_start":5,"column_end":27}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9256568,"byte_end":9256603,"line_start":356,"line_end":356,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9256608,"byte_end":9256611,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ // a stream which alternates between Some and None","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9256616,"byte_end":9256670,"line_start":358,"line_end":358,"column_start":5,"column_end":59}},{"value":"/ struct Alternate {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9256675,"byte_end":9256697,"line_start":359,"line_end":359,"column_start":5,"column_end":27}},{"value":"/     state: i32,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9256702,"byte_end":9256721,"line_start":360,"line_end":360,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9256726,"byte_end":9256731,"line_start":361,"line_end":361,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9256736,"byte_end":9256739,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ impl Stream for Alternate {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9256744,"byte_end":9256775,"line_start":363,"line_end":363,"column_start":5,"column_end":36}},{"value":"/     type Item = i32;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9256780,"byte_end":9256804,"line_start":364,"line_end":364,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9256809,"byte_end":9256812,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/     fn poll_next(mut self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<Option<i32>> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9256817,"byte_end":9256909,"line_start":366,"line_end":366,"column_start":5,"column_end":97}},{"value":"/         let val = self.state;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9256914,"byte_end":9256947,"line_start":367,"line_end":367,"column_start":5,"column_end":38}},{"value":"/         self.state = self.state + 1;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9256952,"byte_end":9256992,"line_start":368,"line_end":368,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9256997,"byte_end":9257000,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/         // if it's even, Some(i32), else None","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9257005,"byte_end":9257054,"line_start":370,"line_end":370,"column_start":5,"column_end":54}},{"value":"/         if val % 2 == 0 {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9257059,"byte_end":9257088,"line_start":371,"line_end":371,"column_start":5,"column_end":34}},{"value":"/             Poll::Ready(Some(val))","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9257093,"byte_end":9257131,"line_start":372,"line_end":372,"column_start":5,"column_end":43}},{"value":"/         } else {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9257136,"byte_end":9257156,"line_start":373,"line_end":373,"column_start":5,"column_end":25}},{"value":"/             Poll::Ready(None)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9257161,"byte_end":9257194,"line_start":374,"line_end":374,"column_start":5,"column_end":38}},{"value":"/         }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9257199,"byte_end":9257212,"line_start":375,"line_end":375,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9257217,"byte_end":9257226,"line_start":376,"line_end":376,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9257231,"byte_end":9257236,"line_start":377,"line_end":377,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9257241,"byte_end":9257244,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9257249,"byte_end":9257267,"line_start":379,"line_end":379,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9257272,"byte_end":9257293,"line_start":380,"line_end":380,"column_start":5,"column_end":26}},{"value":"/     let mut stream = Alternate { state: 0 };","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9257298,"byte_end":9257346,"line_start":381,"line_end":381,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9257351,"byte_end":9257354,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/     // the stream goes back and forth","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9257359,"byte_end":9257400,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(stream.next().await, Some(0));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9257405,"byte_end":9257454,"line_start":384,"line_end":384,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9257459,"byte_end":9257505,"line_start":385,"line_end":385,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9257510,"byte_end":9257559,"line_start":386,"line_end":386,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9257564,"byte_end":9257610,"line_start":387,"line_end":387,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9257615,"byte_end":9257618,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/     // however, once it is fused","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9257623,"byte_end":9257659,"line_start":389,"line_end":389,"column_start":5,"column_end":41}},{"value":"/     let mut stream = stream.fuse();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9257664,"byte_end":9257703,"line_start":390,"line_end":390,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9257708,"byte_end":9257711,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(stream.next().await, Some(4));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9257716,"byte_end":9257765,"line_start":392,"line_end":392,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9257770,"byte_end":9257816,"line_start":393,"line_end":393,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9257821,"byte_end":9257824,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/     // it will always return `None` after the first time.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9257829,"byte_end":9257890,"line_start":395,"line_end":395,"column_start":5,"column_end":66}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9257895,"byte_end":9257941,"line_start":396,"line_end":396,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9257946,"byte_end":9257992,"line_start":397,"line_end":397,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9257997,"byte_end":9258043,"line_start":398,"line_end":398,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9258048,"byte_end":9258053,"line_start":399,"line_end":399,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9258058,"byte_end":9258065,"line_start":400,"line_end":400,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6789},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9258813,"byte_end":9258817,"line_start":428,"line_end":428,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::StreamExt::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":6773},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9258170,"byte_end":9258241,"line_start":408,"line_end":408,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9258246,"byte_end":9258249,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9258254,"byte_end":9258327,"line_start":410,"line_end":410,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9258332,"byte_end":9258367,"line_start":411,"line_end":411,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9258372,"byte_end":9258375,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9258380,"byte_end":9258394,"line_start":413,"line_end":413,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9258399,"byte_end":9258402,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9258407,"byte_end":9258414,"line_start":415,"line_end":415,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9258419,"byte_end":9258439,"line_start":416,"line_end":416,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9258444,"byte_end":9258467,"line_start":417,"line_end":417,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9258472,"byte_end":9258513,"line_start":418,"line_end":418,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9258518,"byte_end":9258521,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).take(3);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9258526,"byte_end":9258576,"line_start":420,"line_end":420,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9258581,"byte_end":9258584,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9258589,"byte_end":9258634,"line_start":422,"line_end":422,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(2), stream.next().await);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9258639,"byte_end":9258684,"line_start":423,"line_end":423,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9258689,"byte_end":9258734,"line_start":424,"line_end":424,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9258739,"byte_end":9258781,"line_start":425,"line_end":425,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9258786,"byte_end":9258793,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9258798,"byte_end":9258805,"line_start":427,"line_end":427,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6790},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9259710,"byte_end":9259720,"line_start":457,"line_end":457,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::StreamExt::take_while","value":"pub fn take_while<F>(Self, F) -> TakeWhile<Self, F> where\nF: FnMut(&Self::Item) -> bool, Self: Sized","parent":{"krate":0,"index":6773},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided predicate","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9258923,"byte_end":9258986,"line_start":435,"line_end":435,"column_start":5,"column_end":68}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9258991,"byte_end":9259014,"line_start":436,"line_end":436,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9259019,"byte_end":9259022,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9259027,"byte_end":9259102,"line_start":438,"line_end":438,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9259107,"byte_end":9259179,"line_start":439,"line_end":439,"column_start":5,"column_end":77}},{"value":"/ returns false it will always return that the stream is done.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9259184,"byte_end":9259248,"line_start":440,"line_end":440,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9259253,"byte_end":9259256,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9259261,"byte_end":9259275,"line_start":442,"line_end":442,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9259280,"byte_end":9259283,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9259288,"byte_end":9259295,"line_start":444,"line_end":444,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9259300,"byte_end":9259320,"line_start":445,"line_end":445,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9259325,"byte_end":9259348,"line_start":446,"line_end":446,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9259353,"byte_end":9259394,"line_start":447,"line_end":447,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9259399,"byte_end":9259402,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).take_while(|x| *x <= 3);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9259407,"byte_end":9259473,"line_start":449,"line_end":449,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9259478,"byte_end":9259481,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9259486,"byte_end":9259531,"line_start":451,"line_end":451,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(2), stream.next().await);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9259536,"byte_end":9259581,"line_start":452,"line_end":452,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9259586,"byte_end":9259631,"line_start":453,"line_end":453,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9259636,"byte_end":9259678,"line_start":454,"line_end":454,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9259683,"byte_end":9259690,"line_start":455,"line_end":455,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9259695,"byte_end":9259702,"line_start":456,"line_end":456,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6792},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9260417,"byte_end":9260421,"line_start":483,"line_end":483,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::StreamExt::skip","value":"pub fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":6773},"children":[],"decl_id":null,"docs":" Creates a new stream that will skip the `n` first items of the\n underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream that will skip the `n` first items of the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9259877,"byte_end":9259943,"line_start":465,"line_end":465,"column_start":5,"column_end":71}},{"value":"/ underlying stream.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9259948,"byte_end":9259970,"line_start":466,"line_end":466,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9259975,"byte_end":9259978,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9259983,"byte_end":9259997,"line_start":468,"line_end":468,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9260002,"byte_end":9260005,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9260010,"byte_end":9260017,"line_start":470,"line_end":470,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9260022,"byte_end":9260042,"line_start":471,"line_end":471,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9260047,"byte_end":9260070,"line_start":472,"line_end":472,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9260075,"byte_end":9260116,"line_start":473,"line_end":473,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9260121,"byte_end":9260124,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).skip(7);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9260129,"byte_end":9260179,"line_start":475,"line_end":475,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9260184,"byte_end":9260187,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(8), stream.next().await);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9260192,"byte_end":9260237,"line_start":477,"line_end":477,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(9), stream.next().await);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9260242,"byte_end":9260287,"line_start":478,"line_end":478,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(10), stream.next().await);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9260292,"byte_end":9260338,"line_start":479,"line_end":479,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9260343,"byte_end":9260385,"line_start":480,"line_end":480,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9260390,"byte_end":9260397,"line_start":481,"line_end":481,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9260402,"byte_end":9260409,"line_start":482,"line_end":482,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6793},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9261399,"byte_end":9261409,"line_start":513,"line_end":513,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::StreamExt::skip_while","value":"pub fn skip_while<F>(Self, F) -> SkipWhile<Self, F> where\nF: FnMut(&Self::Item) -> bool, Self: Sized","parent":{"krate":0,"index":6773},"children":[],"decl_id":null,"docs":" Skip elements from the underlying stream while the provided predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements from the underlying stream while the provided predicate","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9260527,"byte_end":9260600,"line_start":490,"line_end":490,"column_start":5,"column_end":78}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9260605,"byte_end":9260628,"line_start":491,"line_end":491,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9260633,"byte_end":9260636,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ This function, like [`Iterator::skip_while`], will ignore elemets from the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9260641,"byte_end":9260719,"line_start":493,"line_end":493,"column_start":5,"column_end":83}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9260724,"byte_end":9260796,"line_start":494,"line_end":494,"column_start":5,"column_end":77}},{"value":"/ returns false, the rest of the elements will be yielded.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9260801,"byte_end":9260861,"line_start":495,"line_end":495,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9260866,"byte_end":9260869,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ [`Iterator::skip_while`]: std::iter::Iterator::skip_while()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9260874,"byte_end":9260937,"line_start":497,"line_end":497,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9260942,"byte_end":9260945,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9260950,"byte_end":9260964,"line_start":499,"line_end":499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9260969,"byte_end":9260972,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9260977,"byte_end":9260984,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9260989,"byte_end":9261009,"line_start":502,"line_end":502,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9261014,"byte_end":9261037,"line_start":503,"line_end":503,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9261042,"byte_end":9261083,"line_start":504,"line_end":504,"column_start":5,"column_end":46}},{"value":"/ let mut stream = stream::iter(vec![1,2,3,4,1]).skip_while(|x| *x < 3);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9261088,"byte_end":9261162,"line_start":505,"line_end":505,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9261167,"byte_end":9261170,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9261175,"byte_end":9261220,"line_start":507,"line_end":507,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(4), stream.next().await);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9261225,"byte_end":9261270,"line_start":508,"line_end":508,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9261275,"byte_end":9261320,"line_start":509,"line_end":509,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9261325,"byte_end":9261367,"line_start":510,"line_end":510,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9261372,"byte_end":9261379,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9261384,"byte_end":9261391,"line_start":512,"line_end":512,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6795},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9262988,"byte_end":9262991,"line_start":568,"line_end":568,"column_start":8,"column_end":11},"name":"all","qualname":"::stream::StreamExt::all","value":"pub fn all<F>(&mut Self, F) -> AllFuture<, Self, F> where Self: Unpin,\nF: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":6773},"children":[],"decl_id":null,"docs":" Tests if every element of the stream matches a predicate.","sig":null,"attributes":[{"value":"/ Tests if every element of the stream matches a predicate.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9261566,"byte_end":9261627,"line_start":521,"line_end":521,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9261632,"byte_end":9261635,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ `all()` takes a closure that returns `true` or `false`. It applies","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9261640,"byte_end":9261710,"line_start":523,"line_end":523,"column_start":5,"column_end":75}},{"value":"/ this closure to each element of the stream, and if they all return","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9261715,"byte_end":9261785,"line_start":524,"line_end":524,"column_start":5,"column_end":75}},{"value":"/ `true`, then so does `all`. If any of them return `false`, it","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9261790,"byte_end":9261855,"line_start":525,"line_end":525,"column_start":5,"column_end":70}},{"value":"/ returns `false`. An empty stream returns `true`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9261860,"byte_end":9261912,"line_start":526,"line_end":526,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9261917,"byte_end":9261920,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ `all()` is short-circuiting; in other words, it will stop processing","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9261925,"byte_end":9261997,"line_start":528,"line_end":528,"column_start":5,"column_end":77}},{"value":"/ as soon as it finds a `false`, given that no matter what else happens,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9262002,"byte_end":9262076,"line_start":529,"line_end":529,"column_start":5,"column_end":79}},{"value":"/ the result will also be `false`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9262081,"byte_end":9262117,"line_start":530,"line_end":530,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9262122,"byte_end":9262125,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ An empty stream returns `true`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9262130,"byte_end":9262165,"line_start":532,"line_end":532,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9262170,"byte_end":9262173,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9262178,"byte_end":9262192,"line_start":534,"line_end":534,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9262197,"byte_end":9262200,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9262205,"byte_end":9262221,"line_start":536,"line_end":536,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9262226,"byte_end":9262229,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9262234,"byte_end":9262241,"line_start":538,"line_end":538,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9262246,"byte_end":9262266,"line_start":539,"line_end":539,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9262271,"byte_end":9262294,"line_start":540,"line_end":540,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9262299,"byte_end":9262340,"line_start":541,"line_end":541,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9262345,"byte_end":9262348,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9262353,"byte_end":9262375,"line_start":543,"line_end":543,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9262380,"byte_end":9262383,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ assert!(stream::iter(&a).all(|&x| x > 0).await);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9262388,"byte_end":9262440,"line_start":545,"line_end":545,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9262445,"byte_end":9262448,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ assert!(!stream::iter(&a).all(|&x| x > 2).await);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9262453,"byte_end":9262506,"line_start":547,"line_end":547,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9262511,"byte_end":9262518,"line_start":548,"line_end":548,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9262523,"byte_end":9262530,"line_start":549,"line_end":549,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9262535,"byte_end":9262538,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ Stopping at the first `false`:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9262543,"byte_end":9262577,"line_start":551,"line_end":551,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9262582,"byte_end":9262585,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9262590,"byte_end":9262597,"line_start":553,"line_end":553,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9262602,"byte_end":9262622,"line_start":554,"line_end":554,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9262627,"byte_end":9262650,"line_start":555,"line_end":555,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9262655,"byte_end":9262696,"line_start":556,"line_end":556,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9262701,"byte_end":9262704,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9262709,"byte_end":9262731,"line_start":558,"line_end":558,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9262736,"byte_end":9262739,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ let mut iter = stream::iter(&a);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9262744,"byte_end":9262780,"line_start":560,"line_end":560,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9262785,"byte_end":9262788,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ assert!(!iter.all(|&x| x != 2).await);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9262793,"byte_end":9262835,"line_start":562,"line_end":562,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9262840,"byte_end":9262843,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ // we can still use `iter`, as there are more elements.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9262848,"byte_end":9262907,"line_start":564,"line_end":564,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(iter.next().await, Some(&3));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9262912,"byte_end":9262956,"line_start":565,"line_end":565,"column_start":5,"column_end":49}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9262961,"byte_end":9262968,"line_start":566,"line_end":566,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9262973,"byte_end":9262980,"line_start":567,"line_end":567,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6797},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9264516,"byte_end":9264519,"line_start":621,"line_end":621,"column_start":8,"column_end":11},"name":"any","qualname":"::stream::StreamExt::any","value":"pub fn any<F>(&mut Self, F) -> AnyFuture<, Self, F> where Self: Unpin,\nF: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":6773},"children":[],"decl_id":null,"docs":" Tests if any element of the stream matches a predicate.","sig":null,"attributes":[{"value":"/ Tests if any element of the stream matches a predicate.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9263156,"byte_end":9263215,"line_start":576,"line_end":576,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9263220,"byte_end":9263223,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ `any()` takes a closure that returns `true` or `false`. It applies","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9263228,"byte_end":9263298,"line_start":578,"line_end":578,"column_start":5,"column_end":75}},{"value":"/ this closure to each element of the stream, and if any of them return","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9263303,"byte_end":9263376,"line_start":579,"line_end":579,"column_start":5,"column_end":78}},{"value":"/ `true`, then so does `any()`. If they all return `false`, it","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9263381,"byte_end":9263445,"line_start":580,"line_end":580,"column_start":5,"column_end":69}},{"value":"/ returns `false`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9263450,"byte_end":9263470,"line_start":581,"line_end":581,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9263475,"byte_end":9263478,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ `any()` is short-circuiting; in other words, it will stop processing","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9263483,"byte_end":9263555,"line_start":583,"line_end":583,"column_start":5,"column_end":77}},{"value":"/ as soon as it finds a `true`, given that no matter what else happens,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9263560,"byte_end":9263633,"line_start":584,"line_end":584,"column_start":5,"column_end":78}},{"value":"/ the result will also be `true`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9263638,"byte_end":9263673,"line_start":585,"line_end":585,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9263678,"byte_end":9263681,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ An empty stream returns `false`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9263686,"byte_end":9263722,"line_start":587,"line_end":587,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9263727,"byte_end":9263730,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9263735,"byte_end":9263751,"line_start":589,"line_end":589,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9263756,"byte_end":9263759,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9263764,"byte_end":9263771,"line_start":591,"line_end":591,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9263776,"byte_end":9263796,"line_start":592,"line_end":592,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9263801,"byte_end":9263824,"line_start":593,"line_end":593,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9263829,"byte_end":9263870,"line_start":594,"line_end":594,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9263875,"byte_end":9263878,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9263883,"byte_end":9263905,"line_start":596,"line_end":596,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9263910,"byte_end":9263913,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ assert!(stream::iter(&a).any(|&x| x > 0).await);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9263918,"byte_end":9263970,"line_start":598,"line_end":598,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9263975,"byte_end":9263978,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ assert!(!stream::iter(&a).any(|&x| x > 5).await);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9263983,"byte_end":9264036,"line_start":600,"line_end":600,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9264041,"byte_end":9264048,"line_start":601,"line_end":601,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9264053,"byte_end":9264060,"line_start":602,"line_end":602,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9264065,"byte_end":9264068,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ Stopping at the first `true`:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9264073,"byte_end":9264106,"line_start":604,"line_end":604,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9264111,"byte_end":9264114,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9264119,"byte_end":9264126,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9264131,"byte_end":9264151,"line_start":607,"line_end":607,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9264156,"byte_end":9264179,"line_start":608,"line_end":608,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9264184,"byte_end":9264225,"line_start":609,"line_end":609,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9264230,"byte_end":9264233,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9264238,"byte_end":9264260,"line_start":611,"line_end":611,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9264265,"byte_end":9264268,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ let mut iter = stream::iter(&a);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9264273,"byte_end":9264309,"line_start":613,"line_end":613,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9264314,"byte_end":9264317,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ assert!(iter.any(|&x| x != 2).await);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9264322,"byte_end":9264363,"line_start":615,"line_end":615,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9264368,"byte_end":9264371,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ // we can still use `iter`, as there are more elements.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9264376,"byte_end":9264435,"line_start":617,"line_end":617,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(iter.next().await, Some(&2));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9264440,"byte_end":9264484,"line_start":618,"line_end":618,"column_start":5,"column_end":49}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9264489,"byte_end":9264496,"line_start":619,"line_end":619,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9264501,"byte_end":9264508,"line_start":620,"line_end":620,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6799},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9265662,"byte_end":9265667,"line_start":656,"line_end":656,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::StreamExt::chain","value":"pub fn chain<U>(Self, U) -> Chain<Self, U> where U: Stream<Item = Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":6773},"children":[],"decl_id":null,"docs":" Combine two streams into one by first returning all values from the\n first stream then all values from the second stream.","sig":null,"attributes":[{"value":"/ Combine two streams into one by first returning all values from the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9264684,"byte_end":9264755,"line_start":629,"line_end":629,"column_start":5,"column_end":76}},{"value":"/ first stream then all values from the second stream.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9264760,"byte_end":9264816,"line_start":630,"line_end":630,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9264821,"byte_end":9264824,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ As long as `self` still has values to emit, no values from `other` are","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9264829,"byte_end":9264903,"line_start":632,"line_end":632,"column_start":5,"column_end":79}},{"value":"/ emitted, even if some are ready.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9264908,"byte_end":9264944,"line_start":633,"line_end":633,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9264949,"byte_end":9264952,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9264957,"byte_end":9264971,"line_start":635,"line_end":635,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9264976,"byte_end":9264979,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9264984,"byte_end":9264991,"line_start":637,"line_end":637,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9264996,"byte_end":9265037,"line_start":638,"line_end":638,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9265042,"byte_end":9265045,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9265050,"byte_end":9265068,"line_start":640,"line_end":640,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9265073,"byte_end":9265094,"line_start":641,"line_end":641,"column_start":5,"column_end":26}},{"value":"/     let one = stream::iter(vec![1, 2, 3]);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9265099,"byte_end":9265145,"line_start":642,"line_end":642,"column_start":5,"column_end":51}},{"value":"/     let two = stream::iter(vec![4, 5, 6]);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9265150,"byte_end":9265196,"line_start":643,"line_end":643,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9265201,"byte_end":9265204,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/     let mut stream = one.chain(two);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9265209,"byte_end":9265249,"line_start":645,"line_end":645,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9265254,"byte_end":9265257,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9265262,"byte_end":9265311,"line_start":647,"line_end":647,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9265316,"byte_end":9265365,"line_start":648,"line_end":648,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9265370,"byte_end":9265419,"line_start":649,"line_end":649,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(4));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9265424,"byte_end":9265473,"line_start":650,"line_end":650,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(5));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9265478,"byte_end":9265527,"line_start":651,"line_end":651,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(6));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9265532,"byte_end":9265581,"line_start":652,"line_end":652,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9265586,"byte_end":9265632,"line_start":653,"line_end":653,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9265637,"byte_end":9265642,"line_start":654,"line_end":654,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9265647,"byte_end":9265654,"line_start":655,"line_end":655,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6801},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9266260,"byte_end":9266264,"line_start":680,"line_end":680,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::StreamExt::fold","value":"pub fn fold<B, F>(Self, B, F) -> FoldFuture<Self, B, F> where Self: Sized,\nF: FnMut(B, Self::Item) -> B","parent":{"krate":0,"index":6773},"children":[],"decl_id":null,"docs":" A combinator that applies a function to every element in a stream\n producing a single, final value.","sig":null,"attributes":[{"value":"/ A combinator that applies a function to every element in a stream","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9265823,"byte_end":9265892,"line_start":664,"line_end":664,"column_start":5,"column_end":74}},{"value":"/ producing a single, final value.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9265897,"byte_end":9265933,"line_start":665,"line_end":665,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9265938,"byte_end":9265941,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9265946,"byte_end":9265960,"line_start":667,"line_end":667,"column_start":5,"column_end":19}},{"value":"/ Basic usage:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9265965,"byte_end":9265981,"line_start":668,"line_end":668,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9265986,"byte_end":9265993,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9265998,"byte_end":9266018,"line_start":670,"line_end":670,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9266023,"byte_end":9266046,"line_start":671,"line_end":671,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, *};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9266051,"byte_end":9266084,"line_start":672,"line_end":672,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9266089,"byte_end":9266092,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ let s = stream::iter(vec![1u8, 2, 3]);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9266097,"byte_end":9266139,"line_start":674,"line_end":674,"column_start":5,"column_end":47}},{"value":"/ let sum = s.fold(0, |acc, x| acc + x).await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9266144,"byte_end":9266192,"line_start":675,"line_end":675,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9266197,"byte_end":9266200,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum, 6);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9266205,"byte_end":9266228,"line_start":677,"line_end":677,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9266233,"byte_end":9266240,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9266245,"byte_end":9266252,"line_start":679,"line_end":679,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6804},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9268577,"byte_end":9268584,"line_start":752,"line_end":752,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::StreamExt::collect","value":"pub fn collect<T>(Self) -> Collect<Self, T> where T: FromStream<Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":6773},"children":[],"decl_id":null,"docs":" Drain stream pushing all emitted values into a collection.","sig":null,"attributes":[{"value":"/ Drain stream pushing all emitted values into a collection.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9266443,"byte_end":9266505,"line_start":688,"line_end":688,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9266510,"byte_end":9266513,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ `collect` streams all values, awaiting as needed. Values are pushed into","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9266518,"byte_end":9266594,"line_start":690,"line_end":690,"column_start":5,"column_end":81}},{"value":"/ a collection. A number of different target collection types are","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9266599,"byte_end":9266666,"line_start":691,"line_end":691,"column_start":5,"column_end":72}},{"value":"/ supported, including [`Vec`](std::vec::Vec),","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9266671,"byte_end":9266719,"line_start":692,"line_end":692,"column_start":5,"column_end":53}},{"value":"/ [`String`](std::string::String), and [`Bytes`](bytes::Bytes).","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9266724,"byte_end":9266789,"line_start":693,"line_end":693,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9266794,"byte_end":9266797,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ # `Result`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9266802,"byte_end":9266816,"line_start":695,"line_end":695,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9266821,"byte_end":9266824,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ `collect()` can also be used with streams of type `Result<T, E>` where","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9266829,"byte_end":9266903,"line_start":697,"line_end":697,"column_start":5,"column_end":79}},{"value":"/ `T: FromStream<_>`. In this case, `collect()` will stream as long as","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9266908,"byte_end":9266980,"line_start":698,"line_end":698,"column_start":5,"column_end":77}},{"value":"/ values yielded from the stream are `Ok(_)`. If `Err(_)` is encountered,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9266985,"byte_end":9267060,"line_start":699,"line_end":699,"column_start":5,"column_end":80}},{"value":"/ streaming is terminated and `collect()` returns the `Err`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9267065,"byte_end":9267127,"line_start":700,"line_end":700,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9267132,"byte_end":9267135,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9267140,"byte_end":9267151,"line_start":702,"line_end":702,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9267156,"byte_end":9267159,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ `FromStream` is currently a sealed trait. Stabilization is pending","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9267164,"byte_end":9267234,"line_start":704,"line_end":704,"column_start":5,"column_end":75}},{"value":"/ enhancements to the Rust language.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9267239,"byte_end":9267277,"line_start":705,"line_end":705,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9267282,"byte_end":9267285,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9267290,"byte_end":9267304,"line_start":707,"line_end":707,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9267309,"byte_end":9267312,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9267317,"byte_end":9267333,"line_start":709,"line_end":709,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9267338,"byte_end":9267341,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9267346,"byte_end":9267353,"line_start":711,"line_end":711,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9267358,"byte_end":9267399,"line_start":712,"line_end":712,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9267404,"byte_end":9267407,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9267412,"byte_end":9267430,"line_start":714,"line_end":714,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9267435,"byte_end":9267456,"line_start":715,"line_end":715,"column_start":5,"column_end":26}},{"value":"/     let doubled: Vec<i32> =","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9267461,"byte_end":9267492,"line_start":716,"line_end":716,"column_start":5,"column_end":36}},{"value":"/         stream::iter(vec![1, 2, 3])","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9267497,"byte_end":9267536,"line_start":717,"line_end":717,"column_start":5,"column_end":44}},{"value":"/             .map(|x| x * 2)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9267541,"byte_end":9267572,"line_start":718,"line_end":718,"column_start":5,"column_end":36}},{"value":"/             .collect()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9267577,"byte_end":9267603,"line_start":719,"line_end":719,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9267608,"byte_end":9267631,"line_start":720,"line_end":720,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9267636,"byte_end":9267639,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(vec![2, 4, 6], doubled);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9267644,"byte_end":9267687,"line_start":722,"line_end":722,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9267692,"byte_end":9267697,"line_start":723,"line_end":723,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9267702,"byte_end":9267709,"line_start":724,"line_end":724,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9267714,"byte_end":9267717,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ Collecting a stream of `Result` values","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9267722,"byte_end":9267764,"line_start":726,"line_end":726,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9267769,"byte_end":9267772,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9267777,"byte_end":9267784,"line_start":728,"line_end":728,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9267789,"byte_end":9267830,"line_start":729,"line_end":729,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9267835,"byte_end":9267838,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9267843,"byte_end":9267861,"line_start":731,"line_end":731,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9267866,"byte_end":9267887,"line_start":732,"line_end":732,"column_start":5,"column_end":26}},{"value":"/     // A stream containing only `Ok` values will be collected","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9267892,"byte_end":9267957,"line_start":733,"line_end":733,"column_start":5,"column_end":70}},{"value":"/     let values: Result<Vec<i32>, &str> =","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9267962,"byte_end":9268006,"line_start":734,"line_end":734,"column_start":5,"column_end":49}},{"value":"/         stream::iter(vec![Ok(1), Ok(2), Ok(3)])","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9268011,"byte_end":9268062,"line_start":735,"line_end":735,"column_start":5,"column_end":56}},{"value":"/             .collect()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9268067,"byte_end":9268093,"line_start":736,"line_end":736,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9268098,"byte_end":9268121,"line_start":737,"line_end":737,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9268126,"byte_end":9268129,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Ok(vec![1, 2, 3]), values);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9268134,"byte_end":9268180,"line_start":739,"line_end":739,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9268185,"byte_end":9268188,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/     // A stream containing `Err` values will return the first error.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9268193,"byte_end":9268265,"line_start":741,"line_end":741,"column_start":5,"column_end":77}},{"value":"/     let results = vec![Ok(1), Err(\"no\"), Ok(2), Ok(3), Err(\"nein\")];","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9268270,"byte_end":9268342,"line_start":742,"line_end":742,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9268347,"byte_end":9268350,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/     let values: Result<Vec<i32>, &str> =","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9268355,"byte_end":9268399,"line_start":744,"line_end":744,"column_start":5,"column_end":49}},{"value":"/         stream::iter(results)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9268404,"byte_end":9268437,"line_start":745,"line_end":745,"column_start":5,"column_end":38}},{"value":"/             .collect()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9268442,"byte_end":9268468,"line_start":746,"line_end":746,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9268473,"byte_end":9268496,"line_start":747,"line_end":747,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9268501,"byte_end":9268504,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Err(\"no\"), values);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9268509,"byte_end":9268547,"line_start":749,"line_end":749,"column_start":5,"column_end":43}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9268552,"byte_end":9268557,"line_start":750,"line_end":750,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9268562,"byte_end":9268569,"line_start":751,"line_end":751,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6806},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9271239,"byte_end":9271246,"line_start":816,"line_end":816,"column_start":8,"column_end":15},"name":"timeout","qualname":"::stream::StreamExt::timeout","value":"pub fn timeout(Self, Duration) -> Timeout<Self> where Self: Sized","parent":{"krate":0,"index":6773},"children":[],"decl_id":null,"docs":" Applies a per-item timeout to the passed stream.","sig":null,"attributes":[{"value":"/ Applies a per-item timeout to the passed stream.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9268724,"byte_end":9268776,"line_start":760,"line_end":760,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9268781,"byte_end":9268784,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ `timeout()` takes a `Duration` that represents the maximum amount of","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9268789,"byte_end":9268861,"line_start":762,"line_end":762,"column_start":5,"column_end":77}},{"value":"/ time each element of the stream has to complete before timing out.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9268866,"byte_end":9268936,"line_start":763,"line_end":763,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9268941,"byte_end":9268944,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ If the wrapped stream yields a value before the deadline is reached, the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9268949,"byte_end":9269025,"line_start":765,"line_end":765,"column_start":5,"column_end":81}},{"value":"/ value is returned. Otherwise, an error is returned. The caller may decide","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9269030,"byte_end":9269107,"line_start":766,"line_end":766,"column_start":5,"column_end":82}},{"value":"/ to continue consuming the stream and will eventually get the next source","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9269112,"byte_end":9269188,"line_start":767,"line_end":767,"column_start":5,"column_end":81}},{"value":"/ stream value once it becomes available.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9269193,"byte_end":9269236,"line_start":768,"line_end":768,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9269241,"byte_end":9269244,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9269249,"byte_end":9269260,"line_start":770,"line_end":770,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9269265,"byte_end":9269268,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ This function consumes the stream passed into it and returns a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9269273,"byte_end":9269339,"line_start":772,"line_end":772,"column_start":5,"column_end":71}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9269344,"byte_end":9269370,"line_start":773,"line_end":773,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9269375,"byte_end":9269378,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ Polling the returned stream will continue to poll the inner stream even","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9269383,"byte_end":9269458,"line_start":775,"line_end":775,"column_start":5,"column_end":80}},{"value":"/ if one or more items time out.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9269463,"byte_end":9269497,"line_start":776,"line_end":776,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9269502,"byte_end":9269505,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9269510,"byte_end":9269524,"line_start":778,"line_end":778,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9269529,"byte_end":9269532,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ Suppose we have a stream `int_stream` that yields 3 numbers (1, 2, 3):","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9269537,"byte_end":9269611,"line_start":780,"line_end":780,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9269616,"byte_end":9269619,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9269624,"byte_end":9269631,"line_start":782,"line_end":782,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9269636,"byte_end":9269656,"line_start":783,"line_end":783,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9269661,"byte_end":9269684,"line_start":784,"line_end":784,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9269689,"byte_end":9269730,"line_start":785,"line_end":785,"column_start":5,"column_end":46}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9269735,"byte_end":9269763,"line_start":786,"line_end":786,"column_start":5,"column_end":33}},{"value":"/ # let int_stream = stream::iter(1..=3);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9269768,"byte_end":9269811,"line_start":787,"line_end":787,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9269816,"byte_end":9269819,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ let mut int_stream = int_stream.timeout(Duration::from_secs(1));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9269824,"byte_end":9269892,"line_start":789,"line_end":789,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9269897,"byte_end":9269900,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ // When no items time out, we get the 3 elements in succession:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9269905,"byte_end":9269972,"line_start":791,"line_end":791,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9269977,"byte_end":9270034,"line_start":792,"line_end":792,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(2)));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9270039,"byte_end":9270096,"line_start":793,"line_end":793,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(3)));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9270101,"byte_end":9270158,"line_start":794,"line_end":794,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9270163,"byte_end":9270217,"line_start":795,"line_end":795,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9270222,"byte_end":9270225,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ // If the second item times out, we get an error and continue polling the stream:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9270230,"byte_end":9270315,"line_start":797,"line_end":797,"column_start":5,"column_end":90}},{"value":"/ # let mut int_stream = stream::iter(vec![Ok(1), Err(()), Ok(2), Ok(3)]);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9270320,"byte_end":9270396,"line_start":798,"line_end":798,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9270401,"byte_end":9270458,"line_start":799,"line_end":799,"column_start":5,"column_end":62}},{"value":"/ assert!(int_stream.try_next().await.is_err());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9270463,"byte_end":9270513,"line_start":800,"line_end":800,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(2)));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9270518,"byte_end":9270575,"line_start":801,"line_end":801,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(3)));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9270580,"byte_end":9270637,"line_start":802,"line_end":802,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9270642,"byte_end":9270696,"line_start":803,"line_end":803,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9270701,"byte_end":9270704,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ // If we want to stop consuming the source stream the first time an","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9270709,"byte_end":9270780,"line_start":805,"line_end":805,"column_start":5,"column_end":76}},{"value":"/ // element times out, we can use the `take_while` operator:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9270785,"byte_end":9270848,"line_start":806,"line_end":806,"column_start":5,"column_end":68}},{"value":"/ # let int_stream = stream::iter(vec![Ok(1), Err(()), Ok(2), Ok(3)]);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9270853,"byte_end":9270925,"line_start":807,"line_end":807,"column_start":5,"column_end":77}},{"value":"/ let mut int_stream = int_stream.take_while(Result::is_ok);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9270930,"byte_end":9270992,"line_start":808,"line_end":808,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9270997,"byte_end":9271000,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9271005,"byte_end":9271062,"line_start":810,"line_end":810,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9271067,"byte_end":9271121,"line_start":811,"line_end":811,"column_start":5,"column_end":59}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9271126,"byte_end":9271133,"line_start":812,"line_end":812,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9271138,"byte_end":9271145,"line_start":813,"line_end":813,"column_start":5,"column_end":12}},{"value":"cfg(all(feature = \"time\"))","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9271150,"byte_end":9271179,"line_start":814,"line_end":814,"column_start":5,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":6911},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":6912},{"krate":0,"index":6922},{"krate":0,"index":6923},{"krate":0,"index":6924},{"krate":0,"index":6925},{"krate":0,"index":7112},{"krate":0,"index":7539},{"krate":0,"index":7627},{"krate":0,"index":7628},{"krate":0,"index":7629},{"krate":0,"index":7630},{"krate":0,"index":7631},{"krate":0,"index":7632},{"krate":0,"index":7681},{"krate":0,"index":7682},{"krate":0,"index":7801},{"krate":0,"index":7892},{"krate":0,"index":8030},{"krate":0,"index":8055},{"krate":0,"index":8056},{"krate":0,"index":8057},{"krate":0,"index":8058},{"krate":0,"index":8059},{"krate":0,"index":8162},{"krate":0,"index":8163},{"krate":0,"index":8164},{"krate":0,"index":8165},{"krate":0,"index":8166},{"krate":0,"index":8211},{"krate":0,"index":8212}],"decl_id":null,"docs":" Synchronization primitives for use in asynchronous contexts.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":21286,"byte_end":21310,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"/ Synchronization primitives for use in asynchronous contexts.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9350387,"byte_end":9350451,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9350452,"byte_end":9350455,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Tokio programs tend to be organized as a set of [tasks] where each task","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9350456,"byte_end":9350531,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ operates independently and may be executed on separate physical threads. The","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9350532,"byte_end":9350612,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ synchronization primitives provided in this module permit these independent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9350613,"byte_end":9350692,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ tasks to communicate together.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9350693,"byte_end":9350727,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9350728,"byte_end":9350731,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [tasks]: crate::task","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9350732,"byte_end":9350756,"line_start":10,"line_end":10,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9350757,"byte_end":9350760,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Message passing","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9350761,"byte_end":9350782,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9350783,"byte_end":9350786,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The most common form of synchronization in a Tokio program is message","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9350787,"byte_end":9350860,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ passing. Two tasks operate independently and send messages to each other to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9350861,"byte_end":9350940,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ synchronize. Doing so has the advantage of avoiding shared state.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9350941,"byte_end":9351010,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9351011,"byte_end":9351014,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Message passing is implemented using channels. A channel supports sending a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9351015,"byte_end":9351094,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ message from one producer task to one or more consumer tasks. There are a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9351095,"byte_end":9351172,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ few flavors of channels provided by Tokio. Each channel flavor supports","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9351173,"byte_end":9351248,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ different message passing patterns. When a channel supports multiple","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9351249,"byte_end":9351321,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ producers, many separate tasks may **send** messages. When a channel","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9351322,"byte_end":9351394,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ supports muliple consumers, many different separate tasks may **receive**","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9351395,"byte_end":9351472,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/ messages.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9351473,"byte_end":9351486,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9351487,"byte_end":9351490,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Tokio provides many different channel flavors as different message passing","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9351491,"byte_end":9351569,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ patterns are best handled with different implementations.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9351570,"byte_end":9351631,"line_start":27,"line_end":27,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9351632,"byte_end":9351635,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## `oneshot` channel","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9351636,"byte_end":9351660,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9351661,"byte_end":9351664,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ The [`oneshot` channel][oneshot] supports sending a **single** value from a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9351665,"byte_end":9351744,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ single producer to a single consumer. This channel is usually used to send","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9351745,"byte_end":9351823,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ the result of a computation to a waiter.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9351824,"byte_end":9351868,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9351869,"byte_end":9351872,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ **Example:** using a [`oneshot` channel][oneshot] to receive the result of a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9351873,"byte_end":9351953,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/ computation.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9351954,"byte_end":9351970,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9351971,"byte_end":9351974,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9351975,"byte_end":9351982,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9351983,"byte_end":9352012,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9352013,"byte_end":9352016,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation() -> String {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9352017,"byte_end":9352060,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/     \"represents the result of the computation\".to_string()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9352061,"byte_end":9352123,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9352124,"byte_end":9352129,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9352130,"byte_end":9352133,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9352134,"byte_end":9352152,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9352153,"byte_end":9352174,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9352175,"byte_end":9352217,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9352218,"byte_end":9352221,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9352222,"byte_end":9352255,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/         let res = some_computation().await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9352256,"byte_end":9352303,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"/         tx.send(res).unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9352304,"byte_end":9352338,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9352339,"byte_end":9352350,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9352351,"byte_end":9352354,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/     // Do other work while the computation is happening in the background","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9352355,"byte_end":9352432,"line_start":54,"line_end":54,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9352433,"byte_end":9352436,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/     // Wait for the computation result","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9352437,"byte_end":9352479,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/     let res = rx.await.unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9352480,"byte_end":9352516,"line_start":57,"line_end":57,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9352517,"byte_end":9352522,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9352523,"byte_end":9352530,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9352531,"byte_end":9352534,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Note, if the task produces a computation result as its final","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9352535,"byte_end":9352599,"line_start":61,"line_end":61,"column_start":1,"column_end":65}},{"value":"/ action before terminating, the [`JoinHandle`] can be used to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9352600,"byte_end":9352664,"line_start":62,"line_end":62,"column_start":1,"column_end":65}},{"value":"/ receive that value instead of allocating resources for the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9352665,"byte_end":9352727,"line_start":63,"line_end":63,"column_start":1,"column_end":63}},{"value":"/ `oneshot` channel. Awaiting on [`JoinHandle`] returns `Result`. If","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9352728,"byte_end":9352798,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/ the task panics, the `Joinhandle` yields `Err` with the panic","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9352799,"byte_end":9352864,"line_start":65,"line_end":65,"column_start":1,"column_end":66}},{"value":"/ cause.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9352865,"byte_end":9352875,"line_start":66,"line_end":66,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9352876,"byte_end":9352879,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ **Example:**","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9352880,"byte_end":9352896,"line_start":68,"line_end":68,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9352897,"byte_end":9352900,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9352901,"byte_end":9352908,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ async fn some_computation() -> String {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9352909,"byte_end":9352952,"line_start":71,"line_end":71,"column_start":1,"column_end":44}},{"value":"/     \"the result of the computation\".to_string()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9352953,"byte_end":9353004,"line_start":72,"line_end":72,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9353005,"byte_end":9353010,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9353011,"byte_end":9353014,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9353015,"byte_end":9353033,"line_start":75,"line_end":75,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9353034,"byte_end":9353055,"line_start":76,"line_end":76,"column_start":1,"column_end":22}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9353056,"byte_end":9353107,"line_start":77,"line_end":77,"column_start":1,"column_end":52}},{"value":"/         some_computation().await","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9353108,"byte_end":9353144,"line_start":78,"line_end":78,"column_start":1,"column_end":37}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9353145,"byte_end":9353156,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9353157,"byte_end":9353160,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/     // Do other work while the computation is happening in the background","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9353161,"byte_end":9353238,"line_start":81,"line_end":81,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9353239,"byte_end":9353242,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     // Wait for the computation result","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9353243,"byte_end":9353285,"line_start":83,"line_end":83,"column_start":1,"column_end":43}},{"value":"/     let res = join_handle.await.unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9353286,"byte_end":9353331,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9353332,"byte_end":9353337,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9353338,"byte_end":9353345,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9353346,"byte_end":9353349,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [oneshot]: oneshot","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9353350,"byte_end":9353372,"line_start":88,"line_end":88,"column_start":1,"column_end":23}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9353373,"byte_end":9353416,"line_start":89,"line_end":89,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9353417,"byte_end":9353420,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ## `mpsc` channel","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9353421,"byte_end":9353442,"line_start":91,"line_end":91,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9353443,"byte_end":9353446,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ The [`mpsc` channel][mpsc] supports sending **many** values from **many**","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9353447,"byte_end":9353524,"line_start":93,"line_end":93,"column_start":1,"column_end":78}},{"value":"/ producers to a single consumer. This channel is often used to send work to a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9353525,"byte_end":9353605,"line_start":94,"line_end":94,"column_start":1,"column_end":81}},{"value":"/ task or to receive the result of many computations.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9353606,"byte_end":9353661,"line_start":95,"line_end":95,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9353662,"byte_end":9353665,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ **Example:** using an mpsc to incrementally stream the results of a series","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9353666,"byte_end":9353744,"line_start":97,"line_end":97,"column_start":1,"column_end":79}},{"value":"/ of computations.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9353745,"byte_end":9353765,"line_start":98,"line_end":98,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9353766,"byte_end":9353769,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9353770,"byte_end":9353777,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9353778,"byte_end":9353804,"line_start":101,"line_end":101,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9353805,"byte_end":9353808,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation(input: u32) -> String {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9353809,"byte_end":9353862,"line_start":103,"line_end":103,"column_start":1,"column_end":54}},{"value":"/     format!(\"the result of computation {}\", input)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9353863,"byte_end":9353917,"line_start":104,"line_end":104,"column_start":1,"column_end":55}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9353918,"byte_end":9353923,"line_start":105,"line_end":105,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9353924,"byte_end":9353927,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9353928,"byte_end":9353946,"line_start":107,"line_end":107,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9353947,"byte_end":9353968,"line_start":108,"line_end":108,"column_start":1,"column_end":22}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9353969,"byte_end":9354019,"line_start":109,"line_end":109,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9354020,"byte_end":9354023,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9354024,"byte_end":9354057,"line_start":111,"line_end":111,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9354058,"byte_end":9354086,"line_start":112,"line_end":112,"column_start":1,"column_end":29}},{"value":"/             let res = some_computation(i).await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9354087,"byte_end":9354139,"line_start":113,"line_end":113,"column_start":1,"column_end":53}},{"value":"/             tx.send(res).await.unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9354140,"byte_end":9354184,"line_start":114,"line_end":114,"column_start":1,"column_end":45}},{"value":"/         }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9354185,"byte_end":9354198,"line_start":115,"line_end":115,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9354199,"byte_end":9354210,"line_start":116,"line_end":116,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9354211,"byte_end":9354214,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/     while let Some(res) = rx.recv().await {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9354215,"byte_end":9354262,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/         println!(\"got = {}\", res);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9354263,"byte_end":9354301,"line_start":119,"line_end":119,"column_start":1,"column_end":39}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9354302,"byte_end":9354311,"line_start":120,"line_end":120,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9354312,"byte_end":9354317,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9354318,"byte_end":9354325,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9354326,"byte_end":9354329,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The argument to `mpsc::channel` is the channel capacity. This is the maximum","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9354330,"byte_end":9354410,"line_start":124,"line_end":124,"column_start":1,"column_end":81}},{"value":"/ number of values that can be stored in the channel pending receipt at any","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9354411,"byte_end":9354488,"line_start":125,"line_end":125,"column_start":1,"column_end":78}},{"value":"/ given time. Properly setting this value is key in implementing robust","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9354489,"byte_end":9354562,"line_start":126,"line_end":126,"column_start":1,"column_end":74}},{"value":"/ programs as the channel capacity plays a critical part in handling back","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9354563,"byte_end":9354638,"line_start":127,"line_end":127,"column_start":1,"column_end":76}},{"value":"/ pressure.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9354639,"byte_end":9354652,"line_start":128,"line_end":128,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9354653,"byte_end":9354656,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ A common concurrency pattern for resource management is to spawn a task","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9354657,"byte_end":9354732,"line_start":130,"line_end":130,"column_start":1,"column_end":76}},{"value":"/ dedicated to managing that resource and using message passing between other","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9354733,"byte_end":9354812,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"/ tasks to interact with the resource. The resource may be anything that may","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9354813,"byte_end":9354891,"line_start":132,"line_end":132,"column_start":1,"column_end":79}},{"value":"/ not be concurrently used. Some examples include a socket and program state.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9354892,"byte_end":9354971,"line_start":133,"line_end":133,"column_start":1,"column_end":80}},{"value":"/ For example, if multiple tasks need to send data over a single socket, spawn","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9354972,"byte_end":9355052,"line_start":134,"line_end":134,"column_start":1,"column_end":81}},{"value":"/ a task to manage the socket and use a channel to synchronize.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9355053,"byte_end":9355118,"line_start":135,"line_end":135,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9355119,"byte_end":9355122,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ **Example:** sending data from many tasks over a single socket using message","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9355123,"byte_end":9355203,"line_start":137,"line_end":137,"column_start":1,"column_end":81}},{"value":"/ passing.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9355204,"byte_end":9355216,"line_start":138,"line_end":138,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9355217,"byte_end":9355220,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9355221,"byte_end":9355234,"line_start":140,"line_end":140,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncWriteExt};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9355235,"byte_end":9355276,"line_start":141,"line_end":141,"column_start":1,"column_end":42}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9355277,"byte_end":9355307,"line_start":142,"line_end":142,"column_start":1,"column_end":31}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9355308,"byte_end":9355334,"line_start":143,"line_end":143,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9355335,"byte_end":9355338,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9355339,"byte_end":9355357,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9355358,"byte_end":9355397,"line_start":146,"line_end":146,"column_start":1,"column_end":40}},{"value":"/     let mut socket = TcpStream::connect(\"www.example.com:1234\").await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9355398,"byte_end":9355473,"line_start":147,"line_end":147,"column_start":1,"column_end":76}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9355474,"byte_end":9355520,"line_start":148,"line_end":148,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9355521,"byte_end":9355524,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/     for _ in 0..10 {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9355525,"byte_end":9355549,"line_start":150,"line_end":150,"column_start":1,"column_end":25}},{"value":"/         // Each task needs its own `tx` handle. This is done by cloning the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9355550,"byte_end":9355629,"line_start":151,"line_end":151,"column_start":1,"column_end":80}},{"value":"/         // original handle.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9355630,"byte_end":9355661,"line_start":152,"line_end":152,"column_start":1,"column_end":32}},{"value":"/         let mut tx = tx.clone();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9355662,"byte_end":9355698,"line_start":153,"line_end":153,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9355699,"byte_end":9355702,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9355703,"byte_end":9355740,"line_start":155,"line_end":155,"column_start":1,"column_end":38}},{"value":"/             tx.send(&b\"data to write\"[..]).await.unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9355741,"byte_end":9355803,"line_start":156,"line_end":156,"column_start":1,"column_end":63}},{"value":"/         });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9355804,"byte_end":9355819,"line_start":157,"line_end":157,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9355820,"byte_end":9355829,"line_start":158,"line_end":158,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9355830,"byte_end":9355833,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/     // The `rx` half of the channel returns `None` once **all** `tx` clones","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9355834,"byte_end":9355913,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/     // drop. To ensure `None` is returned, drop the handle owned by the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9355914,"byte_end":9355989,"line_start":161,"line_end":161,"column_start":1,"column_end":76}},{"value":"/     // current task. If this `tx` handle is not dropped, there will always","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9355990,"byte_end":9356068,"line_start":162,"line_end":162,"column_start":1,"column_end":79}},{"value":"/     // be a single outstanding `tx` handle.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9356069,"byte_end":9356116,"line_start":163,"line_end":163,"column_start":1,"column_end":48}},{"value":"/     drop(tx);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9356117,"byte_end":9356134,"line_start":164,"line_end":164,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9356135,"byte_end":9356138,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/     while let Some(res) = rx.recv().await {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9356139,"byte_end":9356186,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/         socket.write_all(res).await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9356187,"byte_end":9356228,"line_start":167,"line_end":167,"column_start":1,"column_end":42}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9356229,"byte_end":9356238,"line_start":168,"line_end":168,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9356239,"byte_end":9356242,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9356243,"byte_end":9356257,"line_start":170,"line_end":170,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9356258,"byte_end":9356263,"line_start":171,"line_end":171,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9356264,"byte_end":9356271,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9356272,"byte_end":9356275,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ The [`mpsc`][mpsc] and [`oneshot`][oneshot] channels can be combined to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9356276,"byte_end":9356351,"line_start":174,"line_end":174,"column_start":1,"column_end":76}},{"value":"/ provide a request / response type synchronization pattern with a shared","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9356352,"byte_end":9356427,"line_start":175,"line_end":175,"column_start":1,"column_end":76}},{"value":"/ resource. A task is spawned to synchronize a resource and waits on commands","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9356428,"byte_end":9356507,"line_start":176,"line_end":176,"column_start":1,"column_end":80}},{"value":"/ received on a [`mpsc`][mpsc] channel. Each command includes a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9356508,"byte_end":9356573,"line_start":177,"line_end":177,"column_start":1,"column_end":66}},{"value":"/ [`oneshot`][oneshot] `Sender` on which the result of the command is sent.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9356574,"byte_end":9356651,"line_start":178,"line_end":178,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9356652,"byte_end":9356655,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ **Example:** use a task to synchronize a `u64` counter. Each task sends an","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9356656,"byte_end":9356734,"line_start":180,"line_end":180,"column_start":1,"column_end":79}},{"value":"/ \"fetch and increment\" command. The counter value **before** the increment is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9356735,"byte_end":9356815,"line_start":181,"line_end":181,"column_start":1,"column_end":81}},{"value":"/ sent over the provided `oneshot` channel.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9356816,"byte_end":9356861,"line_start":182,"line_end":182,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9356862,"byte_end":9356865,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9356866,"byte_end":9356873,"line_start":184,"line_end":184,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::{oneshot, mpsc};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9356874,"byte_end":9356911,"line_start":185,"line_end":185,"column_start":1,"column_end":38}},{"value":"/ use Command::Increment;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9356912,"byte_end":9356939,"line_start":186,"line_end":186,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9356940,"byte_end":9356943,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ enum Command {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9356944,"byte_end":9356962,"line_start":188,"line_end":188,"column_start":1,"column_end":19}},{"value":"/     Increment,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9356963,"byte_end":9356981,"line_start":189,"line_end":189,"column_start":1,"column_end":19}},{"value":"/     // Other commands can be added here","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9356982,"byte_end":9357025,"line_start":190,"line_end":190,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9357026,"byte_end":9357031,"line_start":191,"line_end":191,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9357032,"byte_end":9357035,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9357036,"byte_end":9357054,"line_start":193,"line_end":193,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9357055,"byte_end":9357076,"line_start":194,"line_end":194,"column_start":1,"column_end":22}},{"value":"/     let (cmd_tx, mut cmd_rx) = mpsc::channel::<(Command, oneshot::Sender<u64>)>(100);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9357077,"byte_end":9357166,"line_start":195,"line_end":195,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9357167,"byte_end":9357170,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/     // Spawn a task to manage the counter","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9357171,"byte_end":9357216,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9357217,"byte_end":9357250,"line_start":198,"line_end":198,"column_start":1,"column_end":34}},{"value":"/         let mut counter: u64 = 0;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9357251,"byte_end":9357288,"line_start":199,"line_end":199,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9357289,"byte_end":9357292,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/         while let Some((cmd, response)) = cmd_rx.recv().await {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9357293,"byte_end":9357360,"line_start":201,"line_end":201,"column_start":1,"column_end":68}},{"value":"/             match cmd {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9357361,"byte_end":9357388,"line_start":202,"line_end":202,"column_start":1,"column_end":28}},{"value":"/                 Increment => {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9357389,"byte_end":9357423,"line_start":203,"line_end":203,"column_start":1,"column_end":35}},{"value":"/                     let prev = counter;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9357424,"byte_end":9357467,"line_start":204,"line_end":204,"column_start":1,"column_end":44}},{"value":"/                     counter += 1;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9357468,"byte_end":9357505,"line_start":205,"line_end":205,"column_start":1,"column_end":38}},{"value":"/                     response.send(prev).unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9357506,"byte_end":9357559,"line_start":206,"line_end":206,"column_start":1,"column_end":54}},{"value":"/                 }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9357560,"byte_end":9357581,"line_start":207,"line_end":207,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9357582,"byte_end":9357599,"line_start":208,"line_end":208,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9357600,"byte_end":9357613,"line_start":209,"line_end":209,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9357614,"byte_end":9357625,"line_start":210,"line_end":210,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9357626,"byte_end":9357629,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/     let mut join_handles = vec![];","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9357630,"byte_end":9357668,"line_start":212,"line_end":212,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9357669,"byte_end":9357672,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/     // Spawn tasks that will send the increment command.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9357673,"byte_end":9357733,"line_start":214,"line_end":214,"column_start":1,"column_end":61}},{"value":"/     for _ in 0..10 {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9357734,"byte_end":9357758,"line_start":215,"line_end":215,"column_start":1,"column_end":25}},{"value":"/         let mut cmd_tx = cmd_tx.clone();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9357759,"byte_end":9357803,"line_start":216,"line_end":216,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9357804,"byte_end":9357807,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/         join_handles.push(tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9357808,"byte_end":9357863,"line_start":218,"line_end":218,"column_start":1,"column_end":56}},{"value":"/             let (resp_tx, resp_rx) = oneshot::channel();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9357864,"byte_end":9357924,"line_start":219,"line_end":219,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9357925,"byte_end":9357928,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/             cmd_tx.send((Increment, resp_tx)).await.ok().unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9357929,"byte_end":9357999,"line_start":221,"line_end":221,"column_start":1,"column_end":71}},{"value":"/             let res = resp_rx.await.unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9358000,"byte_end":9358049,"line_start":222,"line_end":222,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9358050,"byte_end":9358053,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/             println!(\"previous value = {}\", res);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9358054,"byte_end":9358107,"line_start":224,"line_end":224,"column_start":1,"column_end":54}},{"value":"/         }));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9358108,"byte_end":9358124,"line_start":225,"line_end":225,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9358125,"byte_end":9358134,"line_start":226,"line_end":226,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9358135,"byte_end":9358138,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/     // Wait for all tasks to complete","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9358139,"byte_end":9358180,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/     for join_handle in join_handles.drain(..) {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9358181,"byte_end":9358232,"line_start":229,"line_end":229,"column_start":1,"column_end":52}},{"value":"/         join_handle.await.unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9358233,"byte_end":9358272,"line_start":230,"line_end":230,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9358273,"byte_end":9358282,"line_start":231,"line_end":231,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9358283,"byte_end":9358288,"line_start":232,"line_end":232,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9358289,"byte_end":9358296,"line_start":233,"line_end":233,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9358297,"byte_end":9358300,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ [mpsc]: mpsc","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9358301,"byte_end":9358317,"line_start":235,"line_end":235,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9358318,"byte_end":9358321,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ ## `broadcast` channel","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9358322,"byte_end":9358348,"line_start":237,"line_end":237,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9358349,"byte_end":9358352,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The [`broadcast` channel] supports sending **many** values from","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9358353,"byte_end":9358420,"line_start":239,"line_end":239,"column_start":1,"column_end":68}},{"value":"/ **many** producers to **many** consumers. Each consumer will receive","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9358421,"byte_end":9358493,"line_start":240,"line_end":240,"column_start":1,"column_end":73}},{"value":"/ **each** value. This channel can be used to implement \"fan out\" style","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9358494,"byte_end":9358567,"line_start":241,"line_end":241,"column_start":1,"column_end":74}},{"value":"/ patterns common with pub / sub or \"chat\" systems.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9358568,"byte_end":9358621,"line_start":242,"line_end":242,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9358622,"byte_end":9358625,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ This channel tends to be used less often than `oneshot` and `mpsc` but still","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9358626,"byte_end":9358706,"line_start":244,"line_end":244,"column_start":1,"column_end":81}},{"value":"/ has its use cases.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9358707,"byte_end":9358729,"line_start":245,"line_end":245,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9358730,"byte_end":9358733,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9358734,"byte_end":9358749,"line_start":247,"line_end":247,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9358750,"byte_end":9358753,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9358754,"byte_end":9358761,"line_start":249,"line_end":249,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9358762,"byte_end":9358793,"line_start":250,"line_end":250,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9358794,"byte_end":9358797,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9358798,"byte_end":9358816,"line_start":252,"line_end":252,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9358817,"byte_end":9358838,"line_start":253,"line_end":253,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9358839,"byte_end":9358890,"line_start":254,"line_end":254,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9358891,"byte_end":9358928,"line_start":255,"line_end":255,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9358929,"byte_end":9358932,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9358933,"byte_end":9358966,"line_start":257,"line_end":257,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9358967,"byte_end":9359021,"line_start":258,"line_end":258,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9359022,"byte_end":9359076,"line_start":259,"line_end":259,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9359077,"byte_end":9359088,"line_start":260,"line_end":260,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9359089,"byte_end":9359092,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9359093,"byte_end":9359126,"line_start":262,"line_end":262,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9359127,"byte_end":9359181,"line_start":263,"line_end":263,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9359182,"byte_end":9359236,"line_start":264,"line_end":264,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9359237,"byte_end":9359248,"line_start":265,"line_end":265,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9359249,"byte_end":9359252,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9359253,"byte_end":9359282,"line_start":267,"line_end":267,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9359283,"byte_end":9359312,"line_start":268,"line_end":268,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9359313,"byte_end":9359318,"line_start":269,"line_end":269,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9359319,"byte_end":9359326,"line_start":270,"line_end":270,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9359327,"byte_end":9359330,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ [`broadcast` channel]: crate::sync::broadcast","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9359331,"byte_end":9359380,"line_start":272,"line_end":272,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9359381,"byte_end":9359384,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ ## `watch` channel","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9359385,"byte_end":9359407,"line_start":274,"line_end":274,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9359408,"byte_end":9359411,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ The [`watch` channel] supports sending **many** values from a **single**","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9359412,"byte_end":9359488,"line_start":276,"line_end":276,"column_start":1,"column_end":77}},{"value":"/ producer to **many** consumers. However, only the **most recent** value is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9359489,"byte_end":9359567,"line_start":277,"line_end":277,"column_start":1,"column_end":79}},{"value":"/ stored in the channel. Consumers are notified when a new value is sent, but","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9359568,"byte_end":9359647,"line_start":278,"line_end":278,"column_start":1,"column_end":80}},{"value":"/ there is no guarantee that consumers will see **all** values.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9359648,"byte_end":9359713,"line_start":279,"line_end":279,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9359714,"byte_end":9359717,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ The [`watch` channel] is similar to a [`broadcast` channel] with capacity 1.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9359718,"byte_end":9359798,"line_start":281,"line_end":281,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9359799,"byte_end":9359802,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ Use cases for the [`watch` channel] include broadcasting configuration","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9359803,"byte_end":9359877,"line_start":283,"line_end":283,"column_start":1,"column_end":75}},{"value":"/ changes or signalling program state changes, such as transitioning to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9359878,"byte_end":9359951,"line_start":284,"line_end":284,"column_start":1,"column_end":74}},{"value":"/ shutdown.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9359952,"byte_end":9359965,"line_start":285,"line_end":285,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9359966,"byte_end":9359969,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ **Example:** use a [`watch` channel] to notify tasks of configuration","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9359970,"byte_end":9360043,"line_start":287,"line_end":287,"column_start":1,"column_end":74}},{"value":"/ changes. In this example, a configuration file is checked periodically. When","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9360044,"byte_end":9360124,"line_start":288,"line_end":288,"column_start":1,"column_end":81}},{"value":"/ the file changes, the configuration changes are signalled to consumers.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9360125,"byte_end":9360200,"line_start":289,"line_end":289,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9360201,"byte_end":9360204,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9360205,"byte_end":9360212,"line_start":291,"line_end":291,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9360213,"byte_end":9360240,"line_start":292,"line_end":292,"column_start":1,"column_end":28}},{"value":"/ use tokio::time::{self, Duration, Instant};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9360241,"byte_end":9360288,"line_start":293,"line_end":293,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9360289,"byte_end":9360292,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/ use std::io;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9360293,"byte_end":9360309,"line_start":295,"line_end":295,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9360310,"byte_end":9360313,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, Clone, Eq, PartialEq)]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9360314,"byte_end":9360356,"line_start":297,"line_end":297,"column_start":1,"column_end":43}},{"value":"/ struct Config {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9360357,"byte_end":9360376,"line_start":298,"line_end":298,"column_start":1,"column_end":20}},{"value":"/     timeout: Duration,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9360377,"byte_end":9360403,"line_start":299,"line_end":299,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9360404,"byte_end":9360409,"line_start":300,"line_end":300,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9360410,"byte_end":9360413,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ impl Config {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9360414,"byte_end":9360431,"line_start":302,"line_end":302,"column_start":1,"column_end":18}},{"value":"/     async fn load_from_file() -> io::Result<Config> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9360432,"byte_end":9360489,"line_start":303,"line_end":303,"column_start":1,"column_end":58}},{"value":"/         // file loading and deserialization logic here","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9360490,"byte_end":9360548,"line_start":304,"line_end":304,"column_start":1,"column_end":59}},{"value":"/ # Ok(Config { timeout: Duration::from_secs(1) })","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9360549,"byte_end":9360601,"line_start":305,"line_end":305,"column_start":1,"column_end":53}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9360602,"byte_end":9360611,"line_start":306,"line_end":306,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9360612,"byte_end":9360617,"line_start":307,"line_end":307,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9360618,"byte_end":9360621,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ async fn my_async_operation() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9360622,"byte_end":9360657,"line_start":309,"line_end":309,"column_start":1,"column_end":36}},{"value":"/     // Do something here","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9360658,"byte_end":9360686,"line_start":310,"line_end":310,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9360687,"byte_end":9360692,"line_start":311,"line_end":311,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9360693,"byte_end":9360696,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9360697,"byte_end":9360715,"line_start":313,"line_end":313,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9360716,"byte_end":9360737,"line_start":314,"line_end":314,"column_start":1,"column_end":22}},{"value":"/     // Load initial configuration value","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9360738,"byte_end":9360781,"line_start":315,"line_end":315,"column_start":1,"column_end":44}},{"value":"/     let mut config = Config::load_from_file().await.unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9360782,"byte_end":9360847,"line_start":316,"line_end":316,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9360848,"byte_end":9360851,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/     // Create the watch channel, initialized with the loaded configuration","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9360852,"byte_end":9360930,"line_start":318,"line_end":318,"column_start":1,"column_end":79}},{"value":"/     let (tx, rx) = watch::channel(config.clone());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9360931,"byte_end":9360985,"line_start":319,"line_end":319,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9360986,"byte_end":9360989,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/     // Spawn a task to monitor the file.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9360990,"byte_end":9361034,"line_start":321,"line_end":321,"column_start":1,"column_end":45}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9361035,"byte_end":9361068,"line_start":322,"line_end":322,"column_start":1,"column_end":34}},{"value":"/         loop {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9361069,"byte_end":9361087,"line_start":323,"line_end":323,"column_start":1,"column_end":19}},{"value":"/             // Wait 10 seconds between checks","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9361088,"byte_end":9361137,"line_start":324,"line_end":324,"column_start":1,"column_end":50}},{"value":"/             time::delay_for(Duration::from_secs(10)).await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9361138,"byte_end":9361201,"line_start":325,"line_end":325,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9361202,"byte_end":9361205,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/             // Load the configuration file","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9361206,"byte_end":9361252,"line_start":327,"line_end":327,"column_start":1,"column_end":47}},{"value":"/             let new_config = Config::load_from_file().await.unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9361253,"byte_end":9361326,"line_start":328,"line_end":328,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9361327,"byte_end":9361330,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/             // If the configuration changed, send the new config value","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9361331,"byte_end":9361405,"line_start":330,"line_end":330,"column_start":1,"column_end":75}},{"value":"/             // on the watch channel.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9361406,"byte_end":9361446,"line_start":331,"line_end":331,"column_start":1,"column_end":41}},{"value":"/             if new_config != config {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9361447,"byte_end":9361488,"line_start":332,"line_end":332,"column_start":1,"column_end":42}},{"value":"/                 tx.broadcast(new_config.clone()).unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9361489,"byte_end":9361551,"line_start":333,"line_end":333,"column_start":1,"column_end":63}},{"value":"/                 config = new_config;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9361552,"byte_end":9361592,"line_start":334,"line_end":334,"column_start":1,"column_end":41}},{"value":"/             }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9361593,"byte_end":9361610,"line_start":335,"line_end":335,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9361611,"byte_end":9361624,"line_start":336,"line_end":336,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9361625,"byte_end":9361636,"line_start":337,"line_end":337,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9361637,"byte_end":9361640,"line_start":338,"line_end":338,"column_start":1,"column_end":4}},{"value":"/     let mut handles = vec![];","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9361641,"byte_end":9361674,"line_start":339,"line_end":339,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9361675,"byte_end":9361678,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/     // Spawn tasks that runs the async operation for at most `timeout`. If","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9361679,"byte_end":9361757,"line_start":341,"line_end":341,"column_start":1,"column_end":79}},{"value":"/     // the timeout elapses, restart the operation.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9361758,"byte_end":9361812,"line_start":342,"line_end":342,"column_start":1,"column_end":55}},{"value":"/     //","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9361813,"byte_end":9361823,"line_start":343,"line_end":343,"column_start":1,"column_end":11}},{"value":"/     // The task simultaneously watches the `Config` for changes. When the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9361824,"byte_end":9361901,"line_start":344,"line_end":344,"column_start":1,"column_end":78}},{"value":"/     // timeout duration changes, the timeout is updated without restarting","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9361902,"byte_end":9361980,"line_start":345,"line_end":345,"column_start":1,"column_end":79}},{"value":"/     // the in-flight operation.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9361981,"byte_end":9362016,"line_start":346,"line_end":346,"column_start":1,"column_end":36}},{"value":"/     for _ in 0..5 {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9362017,"byte_end":9362040,"line_start":347,"line_end":347,"column_start":1,"column_end":24}},{"value":"/         // Clone a config watch handle for use in this task","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9362041,"byte_end":9362104,"line_start":348,"line_end":348,"column_start":1,"column_end":64}},{"value":"/         let mut rx = rx.clone();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9362105,"byte_end":9362141,"line_start":349,"line_end":349,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9362142,"byte_end":9362145,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/         let handle = tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9362146,"byte_end":9362196,"line_start":351,"line_end":351,"column_start":1,"column_end":51}},{"value":"/             // Start the initial operation and pin the future to the stack.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9362197,"byte_end":9362276,"line_start":352,"line_end":352,"column_start":1,"column_end":80}},{"value":"/             // Pinning to the stack is required to resume the operation","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9362277,"byte_end":9362352,"line_start":353,"line_end":353,"column_start":1,"column_end":76}},{"value":"/             // across multiple calls to `select!`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9362353,"byte_end":9362406,"line_start":354,"line_end":354,"column_start":1,"column_end":54}},{"value":"/             let op = my_async_operation();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9362407,"byte_end":9362453,"line_start":355,"line_end":355,"column_start":1,"column_end":47}},{"value":"/             tokio::pin!(op);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9362454,"byte_end":9362486,"line_start":356,"line_end":356,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9362487,"byte_end":9362490,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/             // Receive the **initial** configuration value. As this is the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9362491,"byte_end":9362569,"line_start":358,"line_end":358,"column_start":1,"column_end":79}},{"value":"/             // first time the config is received from the watch, it will","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9362570,"byte_end":9362646,"line_start":359,"line_end":359,"column_start":1,"column_end":77}},{"value":"/             // always complete immediatedly.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9362647,"byte_end":9362695,"line_start":360,"line_end":360,"column_start":1,"column_end":49}},{"value":"/             let mut conf = rx.recv().await.unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9362696,"byte_end":9362752,"line_start":361,"line_end":361,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9362753,"byte_end":9362756,"line_start":362,"line_end":362,"column_start":1,"column_end":4}},{"value":"/             let mut op_start = Instant::now();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9362757,"byte_end":9362807,"line_start":363,"line_end":363,"column_start":1,"column_end":51}},{"value":"/             let mut delay = time::delay_until(op_start + conf.timeout);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9362808,"byte_end":9362883,"line_start":364,"line_end":364,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9362884,"byte_end":9362887,"line_start":365,"line_end":365,"column_start":1,"column_end":4}},{"value":"/             loop {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9362888,"byte_end":9362910,"line_start":366,"line_end":366,"column_start":1,"column_end":23}},{"value":"/                 tokio::select! {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9362911,"byte_end":9362947,"line_start":367,"line_end":367,"column_start":1,"column_end":37}},{"value":"/                     _ = &mut delay => {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9362948,"byte_end":9362991,"line_start":368,"line_end":368,"column_start":1,"column_end":44}},{"value":"/                         // The operation elapsed. Restart it","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9362992,"byte_end":9363056,"line_start":369,"line_end":369,"column_start":1,"column_end":65}},{"value":"/                         op.set(my_async_operation());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9363057,"byte_end":9363114,"line_start":370,"line_end":370,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9363115,"byte_end":9363118,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/                         // Track the new start time","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9363119,"byte_end":9363174,"line_start":372,"line_end":372,"column_start":1,"column_end":56}},{"value":"/                         op_start = Instant::now();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9363175,"byte_end":9363229,"line_start":373,"line_end":373,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9363230,"byte_end":9363233,"line_start":374,"line_end":374,"column_start":1,"column_end":4}},{"value":"/                         // Restart the timeout","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9363234,"byte_end":9363284,"line_start":375,"line_end":375,"column_start":1,"column_end":51}},{"value":"/                         delay = time::delay_until(op_start + conf.timeout);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9363285,"byte_end":9363364,"line_start":376,"line_end":376,"column_start":1,"column_end":80}},{"value":"/                     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9363365,"byte_end":9363390,"line_start":377,"line_end":377,"column_start":1,"column_end":26}},{"value":"/                     new_conf = rx.recv() => {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9363391,"byte_end":9363440,"line_start":378,"line_end":378,"column_start":1,"column_end":50}},{"value":"/                         conf = new_conf.unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9363441,"byte_end":9363494,"line_start":379,"line_end":379,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9363495,"byte_end":9363498,"line_start":380,"line_end":380,"column_start":1,"column_end":4}},{"value":"/                         // The configuration has been updated. Update the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9363499,"byte_end":9363576,"line_start":381,"line_end":381,"column_start":1,"column_end":78}},{"value":"/                         // `delay` using the new `timeout` value.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9363577,"byte_end":9363646,"line_start":382,"line_end":382,"column_start":1,"column_end":70}},{"value":"/                         delay.reset(op_start + conf.timeout);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9363647,"byte_end":9363712,"line_start":383,"line_end":383,"column_start":1,"column_end":66}},{"value":"/                     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9363713,"byte_end":9363738,"line_start":384,"line_end":384,"column_start":1,"column_end":26}},{"value":"/                     _ = &mut op => {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9363739,"byte_end":9363779,"line_start":385,"line_end":385,"column_start":1,"column_end":41}},{"value":"/                         // The operation completed!","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9363780,"byte_end":9363835,"line_start":386,"line_end":386,"column_start":1,"column_end":56}},{"value":"/                         return","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9363836,"byte_end":9363870,"line_start":387,"line_end":387,"column_start":1,"column_end":35}},{"value":"/                     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9363871,"byte_end":9363896,"line_start":388,"line_end":388,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9363897,"byte_end":9363918,"line_start":389,"line_end":389,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9363919,"byte_end":9363936,"line_start":390,"line_end":390,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9363937,"byte_end":9363952,"line_start":391,"line_end":391,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9363953,"byte_end":9363956,"line_start":392,"line_end":392,"column_start":1,"column_end":4}},{"value":"/         handles.push(handle);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9363957,"byte_end":9363990,"line_start":393,"line_end":393,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9363991,"byte_end":9364000,"line_start":394,"line_end":394,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9364001,"byte_end":9364004,"line_start":395,"line_end":395,"column_start":1,"column_end":4}},{"value":"/     for handle in handles.drain(..) {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9364005,"byte_end":9364046,"line_start":396,"line_end":396,"column_start":1,"column_end":42}},{"value":"/         handle.await.unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9364047,"byte_end":9364081,"line_start":397,"line_end":397,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9364082,"byte_end":9364091,"line_start":398,"line_end":398,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9364092,"byte_end":9364097,"line_start":399,"line_end":399,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9364098,"byte_end":9364105,"line_start":400,"line_end":400,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9364106,"byte_end":9364109,"line_start":401,"line_end":401,"column_start":1,"column_end":4}},{"value":"/ [`watch` channel]: mod@crate::sync::watch","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9364110,"byte_end":9364155,"line_start":402,"line_end":402,"column_start":1,"column_end":46}},{"value":"/ [`broadcast` channel]: mod@crate::sync::broadcast","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9364156,"byte_end":9364209,"line_start":403,"line_end":403,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9364210,"byte_end":9364213,"line_start":404,"line_end":404,"column_start":1,"column_end":4}},{"value":"/ # State synchronization","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9364214,"byte_end":9364241,"line_start":405,"line_end":405,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9364242,"byte_end":9364245,"line_start":406,"line_end":406,"column_start":1,"column_end":4}},{"value":"/ The remaining synchronization primitives focus on synchronizing state.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9364246,"byte_end":9364320,"line_start":407,"line_end":407,"column_start":1,"column_end":75}},{"value":"/ These are asynchronous equivalents to versions provided by `std`. They","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9364321,"byte_end":9364395,"line_start":408,"line_end":408,"column_start":1,"column_end":75}},{"value":"/ operate in a similar way as their `std` counterparts parts but will wait","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9364396,"byte_end":9364472,"line_start":409,"line_end":409,"column_start":1,"column_end":77}},{"value":"/ asynchronously instead of blocking the thread.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9364473,"byte_end":9364523,"line_start":410,"line_end":410,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9364524,"byte_end":9364527,"line_start":411,"line_end":411,"column_start":1,"column_end":4}},{"value":"/ * [`Barrier`](Barrier) Ensures multiple tasks will wait for each other to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9364528,"byte_end":9364605,"line_start":412,"line_end":412,"column_start":1,"column_end":78}},{"value":"/   reach a point in the program, before continuing execution all together.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9364606,"byte_end":9364683,"line_start":413,"line_end":413,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9364684,"byte_end":9364687,"line_start":414,"line_end":414,"column_start":1,"column_end":4}},{"value":"/ * [`Mutex`](Mutex) Mutual Exclusion mechanism, which ensures that at most","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9364688,"byte_end":9364765,"line_start":415,"line_end":415,"column_start":1,"column_end":78}},{"value":"/   one thread at a time is able to access some data.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9364766,"byte_end":9364821,"line_start":416,"line_end":416,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9364822,"byte_end":9364825,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ * [`Notify`](Notify) Basic task notification. `Notify` supports notifying a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9364826,"byte_end":9364905,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/   receiving task without sending data. In this case, the task wakes up and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9364906,"byte_end":9364984,"line_start":419,"line_end":419,"column_start":1,"column_end":79}},{"value":"/   resumes processing.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9364985,"byte_end":9365010,"line_start":420,"line_end":420,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9365011,"byte_end":9365014,"line_start":421,"line_end":421,"column_start":1,"column_end":4}},{"value":"/ * [`RwLock`](RwLock) Provides a mutual exclusion mechanism which allows","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9365015,"byte_end":9365090,"line_start":422,"line_end":422,"column_start":1,"column_end":76}},{"value":"/   multiple readers at the same time, while allowing only one writer at a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9365091,"byte_end":9365167,"line_start":423,"line_end":423,"column_start":1,"column_end":77}},{"value":"/   time. In some cases, this can be more efficient than a mutex.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9365168,"byte_end":9365235,"line_start":424,"line_end":424,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9365236,"byte_end":9365239,"line_start":425,"line_end":425,"column_start":1,"column_end":4}},{"value":"/ * [`Semaphore`](Semaphore) Limits the amount of concurrency. A semaphore","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9365240,"byte_end":9365316,"line_start":426,"line_end":426,"column_start":1,"column_end":77}},{"value":"/   holds a number of permits, which tasks may request in order to enter a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9365317,"byte_end":9365393,"line_start":427,"line_end":427,"column_start":1,"column_end":77}},{"value":"/   critical section. Semaphores are useful for implementing limiting or","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9365394,"byte_end":9365468,"line_start":428,"line_end":428,"column_start":1,"column_end":75}},{"value":"/   bounding of any kind.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9365469,"byte_end":9365496,"line_start":429,"line_end":429,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":8300},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9367630,"byte_end":9367637,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"Barrier","qualname":"::sync::barrier::Barrier","value":"Barrier {  }","parent":null,"children":[{"krate":0,"index":8301},{"krate":0,"index":8302},{"krate":0,"index":8303}],"decl_id":null,"docs":" A barrier enables multiple threads to synchronize the beginning of some computation.","sig":null,"attributes":[{"value":"/ A barrier enables multiple threads to synchronize the beginning of some computation.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9366677,"byte_end":9366765,"line_start":5,"line_end":5,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9366766,"byte_end":9366769,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9366770,"byte_end":9366777,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9366778,"byte_end":9366798,"line_start":8,"line_end":8,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9366799,"byte_end":9366822,"line_start":9,"line_end":9,"column_start":1,"column_end":24}},{"value":"/ use tokio::sync::Barrier;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9366823,"byte_end":9366852,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9366853,"byte_end":9366856,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ use futures::future::join_all;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9366857,"byte_end":9366891,"line_start":12,"line_end":12,"column_start":1,"column_end":35}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9366892,"byte_end":9366915,"line_start":13,"line_end":13,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9366916,"byte_end":9366919,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let mut handles = Vec::with_capacity(10);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9366920,"byte_end":9366965,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/ let barrier = Arc::new(Barrier::new(10));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9366966,"byte_end":9367011,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/ for _ in 0..10 {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9367012,"byte_end":9367032,"line_start":17,"line_end":17,"column_start":1,"column_end":21}},{"value":"/     let c = barrier.clone();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9367033,"byte_end":9367065,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/     // The same messages will be printed together.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9367066,"byte_end":9367120,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/     // You will NOT see any interleaving.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9367121,"byte_end":9367166,"line_start":20,"line_end":20,"column_start":1,"column_end":46}},{"value":"/     handles.push(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9367167,"byte_end":9367200,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/         println!(\"before wait\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9367201,"byte_end":9367237,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/         let wr = c.wait().await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9367238,"byte_end":9367274,"line_start":23,"line_end":23,"column_start":1,"column_end":37}},{"value":"/         println!(\"after wait\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9367275,"byte_end":9367310,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/         wr","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9367311,"byte_end":9367325,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9367326,"byte_end":9367337,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9367338,"byte_end":9367343,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ // Will not resolve until all \"before wait\" messages have been printed","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9367344,"byte_end":9367418,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ let wrs = join_all(handles).await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9367419,"byte_end":9367457,"line_start":29,"line_end":29,"column_start":1,"column_end":39}},{"value":"/ // Exactly one barrier will resolve as the \"leader\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9367458,"byte_end":9367513,"line_start":30,"line_end":30,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(wrs.into_iter().filter(|wr| wr.is_leader()).count(), 1);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9367514,"byte_end":9367585,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9367586,"byte_end":9367593,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9367594,"byte_end":9367601,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6916},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9368100,"byte_end":9368103,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<Barrier>::new","value":"pub fn new(usize) -> Barrier","parent":null,"children":[],"decl_id":null,"docs":" Creates a new barrier that can block a given number of threads.","sig":null,"attributes":[{"value":"/ Creates a new barrier that can block a given number of threads.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9367860,"byte_end":9367927,"line_start":49,"line_end":49,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9367932,"byte_end":9367935,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ A barrier will block `n`-1 threads which call [`Barrier::wait`] and then wake up all","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9367940,"byte_end":9368028,"line_start":51,"line_end":51,"column_start":5,"column_end":93}},{"value":"/ threads at once when the `n`th thread calls `wait`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9368033,"byte_end":9368088,"line_start":52,"line_end":52,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":6917},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9369176,"byte_end":9369180,"line_start":82,"line_end":82,"column_start":18,"column_end":22},"name":"wait","qualname":"<Barrier>::wait","value":"pub async fn wait<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Does not resolve until all tasks have rendezvoused here.","sig":null,"attributes":[{"value":"/ Does not resolve until all tasks have rendezvoused here.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9368702,"byte_end":9368762,"line_start":74,"line_end":74,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9368767,"byte_end":9368770,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Barriers are re-usable after all threads have rendezvoused once, and can","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9368775,"byte_end":9368851,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ be used continuously.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9368856,"byte_end":9368881,"line_start":77,"line_end":77,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9368886,"byte_end":9368889,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ A single (arbitrary) future will receive a [`BarrierWaitResult`] that returns `true` from","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9368894,"byte_end":9368987,"line_start":79,"line_end":79,"column_start":5,"column_end":98}},{"value":"/ [`BarrierWaitResult::is_leader`] when returning from this function, and all other threads","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9368992,"byte_end":9369085,"line_start":80,"line_end":80,"column_start":5,"column_end":98}},{"value":"/ will receive a result that will return `false` from `is_leader`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9369090,"byte_end":9369158,"line_start":81,"line_end":81,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":8312},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9371102,"byte_end":9371119,"line_start":126,"line_end":126,"column_start":12,"column_end":29},"name":"BarrierWaitResult","qualname":"::sync::barrier::BarrierWaitResult","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `BarrierWaitResult` is returned by `wait` when all threads in the `Barrier` have rendezvoused.\n","sig":null,"attributes":[{"value":"/ A `BarrierWaitResult` is returned by `wait` when all threads in the `Barrier` have rendezvoused.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9370966,"byte_end":9371066,"line_start":124,"line_end":124,"column_start":1,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":6921},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9371367,"byte_end":9371376,"line_start":133,"line_end":133,"column_start":12,"column_end":21},"name":"is_leader","qualname":"<BarrierWaitResult>::is_leader","value":"pub fn is_leader(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this thread from wait is the \"leader thread\".","sig":null,"attributes":[{"value":"/ Returns `true` if this thread from wait is the \"leader thread\".","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9371157,"byte_end":9371224,"line_start":129,"line_end":129,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9371229,"byte_end":9371232,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Only one thread will have `true` returned from their result, all other threads will have","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9371237,"byte_end":9371329,"line_start":131,"line_end":131,"column_start":5,"column_end":97}},{"value":"/ `false` returned.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9371334,"byte_end":9371355,"line_start":132,"line_end":132,"column_start":5,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":6925},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"broadcast","qualname":"::sync::broadcast","value":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","parent":null,"children":[{"krate":0,"index":6926},{"krate":0,"index":6927},{"krate":0,"index":6928},{"krate":0,"index":6929},{"krate":0,"index":6930},{"krate":0,"index":6931},{"krate":0,"index":6932},{"krate":0,"index":6933},{"krate":0,"index":6934},{"krate":0,"index":6935},{"krate":0,"index":6936},{"krate":0,"index":6937},{"krate":0,"index":6938},{"krate":0,"index":15811},{"krate":0,"index":6939},{"krate":0,"index":6940},{"krate":0,"index":6941},{"krate":0,"index":15817},{"krate":0,"index":6942},{"krate":0,"index":6943},{"krate":0,"index":6944},{"krate":0,"index":6945},{"krate":0,"index":6946},{"krate":0,"index":6947},{"krate":0,"index":6950},{"krate":0,"index":8319},{"krate":0,"index":8323},{"krate":0,"index":8326},{"krate":0,"index":8336},{"krate":0,"index":8332},{"krate":0,"index":8333},{"krate":0,"index":8338},{"krate":0,"index":8350},{"krate":0,"index":8346},{"krate":0,"index":8347},{"krate":0,"index":6955},{"krate":0,"index":6961},{"krate":0,"index":6966},{"krate":0,"index":6972},{"krate":0,"index":6977},{"krate":0,"index":6981},{"krate":0,"index":6987},{"krate":0,"index":6991},{"krate":0,"index":6994},{"krate":0,"index":6998},{"krate":0,"index":7001},{"krate":0,"index":7004},{"krate":0,"index":7005},{"krate":0,"index":7007},{"krate":0,"index":7009},{"krate":0,"index":7011},{"krate":0,"index":7013},{"krate":0,"index":7015},{"krate":0,"index":7024},{"krate":0,"index":7026},{"krate":0,"index":7029},{"krate":0,"index":7032},{"krate":0,"index":7036},{"krate":0,"index":7056},{"krate":0,"index":7061},{"krate":0,"index":7066},{"krate":0,"index":7071},{"krate":0,"index":8352},{"krate":0,"index":8353},{"krate":0,"index":8357},{"krate":0,"index":7076},{"krate":0,"index":7082},{"krate":0,"index":7088},{"krate":0,"index":7091},{"krate":0,"index":7094},{"krate":0,"index":7099},{"krate":0,"index":7104},{"krate":0,"index":7106},{"krate":0,"index":7107},{"krate":0,"index":7109},{"krate":0,"index":7110}],"decl_id":null,"docs":" A multi-producer, multi-consumer broadcast queue. Each sent value is seen by\n all consumers.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":21286,"byte_end":21310,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"/ A multi-producer, multi-consumer broadcast queue. Each sent value is seen by","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9371418,"byte_end":9371498,"line_start":1,"line_end":1,"column_start":1,"column_end":81}},{"value":"/ all consumers.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9371499,"byte_end":9371517,"line_start":2,"line_end":2,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9371518,"byte_end":9371521,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ A [`Sender`] is used to broadcast values to **all** connected [`Receiver`]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9371522,"byte_end":9371600,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ values. [`Sender`] handles are clone-able, allowing concurrent send and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9371601,"byte_end":9371676,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ receive actions. [`Sender`] and [`Receiver`] are both `Send` and `Sync` as","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9371677,"byte_end":9371755,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ long as `T` is also `Send` or `Sync` respectively.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9371756,"byte_end":9371810,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9371811,"byte_end":9371814,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ When a value is sent, **all** [`Receiver`] handles are notified and will","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9371815,"byte_end":9371891,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ receive the value. The value is stored once inside the channel and cloned on","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9371892,"byte_end":9371972,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ demand for each receiver. Once all receivers have received a clone of the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9371973,"byte_end":9372050,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ value, the value is released from the channel.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9372051,"byte_end":9372101,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9372102,"byte_end":9372105,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ A channel is created by calling [`channel`], specifying the maximum number","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9372106,"byte_end":9372184,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ of messages the channel can retain at any given time.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9372185,"byte_end":9372242,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9372243,"byte_end":9372246,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ New [`Receiver`] handles are created by calling [`Sender::subscribe`]. The","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9372247,"byte_end":9372325,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ returned [`Receiver`] will receive values sent **after** the call to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9372326,"byte_end":9372398,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ `subscribe`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9372399,"byte_end":9372415,"line_start":19,"line_end":19,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9372416,"byte_end":9372419,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ## Lagging","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9372420,"byte_end":9372434,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9372435,"byte_end":9372438,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ As sent messages must be retained until **all** [`Receiver`] handles receive","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9372439,"byte_end":9372519,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ a clone, broadcast channels are susceptible to the \"slow receiver\" problem.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9372520,"byte_end":9372599,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ In this case, all but one receiver are able to receive values at the rate","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9372600,"byte_end":9372677,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ they are sent. Because one receiver is stalled, the channel starts to fill","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9372678,"byte_end":9372756,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ up.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9372757,"byte_end":9372764,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9372765,"byte_end":9372768,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This broadcast channel implementation handles this case by setting a hard","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9372769,"byte_end":9372846,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ upper bound on the number of values the channel may retain at any given","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9372847,"byte_end":9372922,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ time. This upper bound is passed to the [`channel`] function as an argument.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9372923,"byte_end":9373003,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9373004,"byte_end":9373007,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ If a value is sent when the channel is at capacity, the oldest value","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9373008,"byte_end":9373080,"line_start":33,"line_end":33,"column_start":1,"column_end":73}},{"value":"/ currently held by the channel is released. This frees up space for the new","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9373081,"byte_end":9373159,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ value. Any receiver that has not yet seen the released value will return","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9373160,"byte_end":9373236,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ [`RecvError::Lagged`] the next time [`recv`] is called.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9373237,"byte_end":9373296,"line_start":36,"line_end":36,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9373297,"byte_end":9373300,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Once [`RecvError::Lagged`] is returned, the lagging receiver's position is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9373301,"byte_end":9373379,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ updated to the oldest value contained by the channel. The next call to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9373380,"byte_end":9373454,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"/ [`recv`] will return this value.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9373455,"byte_end":9373491,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9373492,"byte_end":9373495,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ This behavior enables a receiver to detect when it has lagged so far behind","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9373496,"byte_end":9373575,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ that data has been dropped. The caller may decide how to respond to this:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9373576,"byte_end":9373653,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ either by aborting its task or by tolerating lost messages and resuming","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9373654,"byte_end":9373729,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/ consumption of the channel.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9373730,"byte_end":9373761,"line_start":45,"line_end":45,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9373762,"byte_end":9373765,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ## Closing","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9373766,"byte_end":9373780,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9373781,"byte_end":9373784,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ When **all** [`Sender`] handles have been dropped, no new values may be","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9373785,"byte_end":9373860,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/ sent. At this point, the channel is \"closed\". Once a receiver has received","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9373861,"byte_end":9373939,"line_start":50,"line_end":50,"column_start":1,"column_end":79}},{"value":"/ all values retained by the channel, the next call to [`recv`] will return","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9373940,"byte_end":9374017,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"/ with [`RecvError::Closed`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9374018,"byte_end":9374049,"line_start":52,"line_end":52,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9374050,"byte_end":9374053,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9374054,"byte_end":9374100,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9374101,"byte_end":9374169,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9374170,"byte_end":9374220,"line_start":56,"line_end":56,"column_start":1,"column_end":51}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9374221,"byte_end":9374269,"line_start":57,"line_end":57,"column_start":1,"column_end":49}},{"value":"/ [`RecvError::Lagged`]: crate::sync::broadcast::RecvError::Lagged","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9374270,"byte_end":9374338,"line_start":58,"line_end":58,"column_start":1,"column_end":69}},{"value":"/ [`RecvError::Closed`]: crate::sync::broadcast::RecvError::Closed","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9374339,"byte_end":9374407,"line_start":59,"line_end":59,"column_start":1,"column_end":69}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9374408,"byte_end":9374460,"line_start":60,"line_end":60,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9374461,"byte_end":9374464,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9374465,"byte_end":9374479,"line_start":62,"line_end":62,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9374480,"byte_end":9374483,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9374484,"byte_end":9374499,"line_start":64,"line_end":64,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9374500,"byte_end":9374503,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9374504,"byte_end":9374511,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9374512,"byte_end":9374543,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9374544,"byte_end":9374547,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9374548,"byte_end":9374566,"line_start":69,"line_end":69,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9374567,"byte_end":9374588,"line_start":70,"line_end":70,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9374589,"byte_end":9374640,"line_start":71,"line_end":71,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9374641,"byte_end":9374678,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9374679,"byte_end":9374682,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9374683,"byte_end":9374716,"line_start":74,"line_end":74,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9374717,"byte_end":9374771,"line_start":75,"line_end":75,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9374772,"byte_end":9374826,"line_start":76,"line_end":76,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9374827,"byte_end":9374838,"line_start":77,"line_end":77,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9374839,"byte_end":9374842,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9374843,"byte_end":9374876,"line_start":79,"line_end":79,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9374877,"byte_end":9374931,"line_start":80,"line_end":80,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9374932,"byte_end":9374986,"line_start":81,"line_end":81,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9374987,"byte_end":9374998,"line_start":82,"line_end":82,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9374999,"byte_end":9375002,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9375003,"byte_end":9375032,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9375033,"byte_end":9375062,"line_start":85,"line_end":85,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9375063,"byte_end":9375068,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9375069,"byte_end":9375076,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9375077,"byte_end":9375080,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ Handling lag","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9375081,"byte_end":9375097,"line_start":89,"line_end":89,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9375098,"byte_end":9375101,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9375102,"byte_end":9375109,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9375110,"byte_end":9375141,"line_start":92,"line_end":92,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9375142,"byte_end":9375145,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9375146,"byte_end":9375164,"line_start":94,"line_end":94,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9375165,"byte_end":9375186,"line_start":95,"line_end":95,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9375187,"byte_end":9375236,"line_start":96,"line_end":96,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9375237,"byte_end":9375240,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9375241,"byte_end":9375270,"line_start":98,"line_end":98,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9375271,"byte_end":9375300,"line_start":99,"line_end":99,"column_start":1,"column_end":30}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9375301,"byte_end":9375330,"line_start":100,"line_end":100,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9375331,"byte_end":9375334,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/     // The receiver lagged behind","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9375335,"byte_end":9375372,"line_start":102,"line_end":102,"column_start":1,"column_end":38}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9375373,"byte_end":9375415,"line_start":103,"line_end":103,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9375416,"byte_end":9375419,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9375420,"byte_end":9375489,"line_start":105,"line_end":105,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9375490,"byte_end":9375493,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9375494,"byte_end":9375543,"line_start":107,"line_end":107,"column_start":1,"column_end":50}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9375544,"byte_end":9375593,"line_start":108,"line_end":108,"column_start":1,"column_end":50}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9375594,"byte_end":9375599,"line_start":109,"line_end":109,"column_start":1,"column_end":6}}]},{"kind":"Struct","id":{"krate":0,"index":6947},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9376796,"byte_end":9376802,"line_start":156,"line_end":156,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::broadcast::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":6949}],"decl_id":null,"docs":" Sending-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Sending-half of the [`broadcast`] channel.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9376003,"byte_end":9376049,"line_start":125,"line_end":125,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9376050,"byte_end":9376053,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ May be used from many threads. Messages can be sent with","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9376054,"byte_end":9376114,"line_start":127,"line_end":127,"column_start":1,"column_end":61}},{"value":"/ [`send`][Sender::send].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9376115,"byte_end":9376142,"line_start":128,"line_end":128,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9376143,"byte_end":9376146,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9376147,"byte_end":9376161,"line_start":130,"line_end":130,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9376162,"byte_end":9376165,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9376166,"byte_end":9376173,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9376174,"byte_end":9376205,"line_start":133,"line_end":133,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9376206,"byte_end":9376209,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9376210,"byte_end":9376228,"line_start":135,"line_end":135,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9376229,"byte_end":9376250,"line_start":136,"line_end":136,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9376251,"byte_end":9376302,"line_start":137,"line_end":137,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9376303,"byte_end":9376340,"line_start":138,"line_end":138,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9376341,"byte_end":9376344,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9376345,"byte_end":9376378,"line_start":140,"line_end":140,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9376379,"byte_end":9376433,"line_start":141,"line_end":141,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9376434,"byte_end":9376488,"line_start":142,"line_end":142,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9376489,"byte_end":9376500,"line_start":143,"line_end":143,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9376501,"byte_end":9376504,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9376505,"byte_end":9376538,"line_start":145,"line_end":145,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9376539,"byte_end":9376593,"line_start":146,"line_end":146,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9376594,"byte_end":9376648,"line_start":147,"line_end":147,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9376649,"byte_end":9376660,"line_start":148,"line_end":148,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9376661,"byte_end":9376664,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9376665,"byte_end":9376694,"line_start":150,"line_end":150,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9376695,"byte_end":9376724,"line_start":151,"line_end":151,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9376725,"byte_end":9376730,"line_start":152,"line_end":152,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9376731,"byte_end":9376738,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9376739,"byte_end":9376742,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9376743,"byte_end":9376784,"line_start":155,"line_end":155,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":6950},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9377642,"byte_end":9377650,"line_start":191,"line_end":191,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::broadcast::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":6952},{"krate":0,"index":6953},{"krate":0,"index":6954}],"decl_id":null,"docs":" Receiving-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Receiving-half of the [`broadcast`] channel.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9376839,"byte_end":9376887,"line_start":160,"line_end":160,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9376888,"byte_end":9376891,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ Must not be used concurrently. Messages may be retrieved using","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9376892,"byte_end":9376958,"line_start":162,"line_end":162,"column_start":1,"column_end":67}},{"value":"/ [`recv`][Receiver::recv].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9376959,"byte_end":9376988,"line_start":163,"line_end":163,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9376989,"byte_end":9376992,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9376993,"byte_end":9377007,"line_start":165,"line_end":165,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9377008,"byte_end":9377011,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9377012,"byte_end":9377019,"line_start":167,"line_end":167,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9377020,"byte_end":9377051,"line_start":168,"line_end":168,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9377052,"byte_end":9377055,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9377056,"byte_end":9377074,"line_start":170,"line_end":170,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9377075,"byte_end":9377096,"line_start":171,"line_end":171,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9377097,"byte_end":9377148,"line_start":172,"line_end":172,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9377149,"byte_end":9377186,"line_start":173,"line_end":173,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9377187,"byte_end":9377190,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9377191,"byte_end":9377224,"line_start":175,"line_end":175,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9377225,"byte_end":9377279,"line_start":176,"line_end":176,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9377280,"byte_end":9377334,"line_start":177,"line_end":177,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9377335,"byte_end":9377346,"line_start":178,"line_end":178,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9377347,"byte_end":9377350,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9377351,"byte_end":9377384,"line_start":180,"line_end":180,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9377385,"byte_end":9377439,"line_start":181,"line_end":181,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9377440,"byte_end":9377494,"line_start":182,"line_end":182,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9377495,"byte_end":9377506,"line_start":183,"line_end":183,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9377507,"byte_end":9377510,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9377511,"byte_end":9377540,"line_start":185,"line_end":185,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9377541,"byte_end":9377570,"line_start":186,"line_end":186,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9377571,"byte_end":9377576,"line_start":187,"line_end":187,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9377577,"byte_end":9377584,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9377585,"byte_end":9377588,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9377589,"byte_end":9377630,"line_start":190,"line_end":190,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":8319},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9378193,"byte_end":9378202,"line_start":208,"line_end":208,"column_start":12,"column_end":21},"name":"SendError","qualname":"::sync::broadcast::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by [`Sender::send`][Sender::send].","sig":null,"attributes":[{"value":"/ Error returned by [`Sender::send`][Sender::send].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9377896,"byte_end":9377949,"line_start":202,"line_end":202,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9377950,"byte_end":9377953,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ A **send** operation can only fail if there are no active receivers,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9377954,"byte_end":9378026,"line_start":204,"line_end":204,"column_start":1,"column_end":73}},{"value":"/ implying that the message could never be received. The error contains the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9378027,"byte_end":9378104,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ message being sent as a payload so it can be recovered.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9378105,"byte_end":9378164,"line_start":206,"line_end":206,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":8322},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9378206,"byte_end":9378211,"line_start":208,"line_end":208,"column_start":25,"column_end":30},"name":"0","qualname":"::sync::broadcast::SendError::0","value":"T","parent":{"krate":0,"index":8319},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8327},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9378541,"byte_end":9378547,"line_start":218,"line_end":218,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::broadcast::RecvError::Closed","value":"RecvError::Closed","parent":{"krate":0,"index":8326},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9378444,"byte_end":9378519,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/ be sent.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9378524,"byte_end":9378536,"line_start":217,"line_end":217,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8329},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9378753,"byte_end":9378759,"line_start":224,"line_end":224,"column_start":5,"column_end":11},"name":"Lagged","qualname":"::sync::broadcast::RecvError::Lagged","value":"RecvError::Lagged(u64)","parent":{"krate":0,"index":8326},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind. Attempting to receive again will\n return the oldest message still retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind. Attempting to receive again will","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9378554,"byte_end":9378626,"line_start":220,"line_end":220,"column_start":5,"column_end":77}},{"value":"/ return the oldest message still retained by the channel.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9378631,"byte_end":9378691,"line_start":221,"line_end":221,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9378696,"byte_end":9378699,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9378704,"byte_end":9378748,"line_start":223,"line_end":223,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":8326},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9378428,"byte_end":9378437,"line_start":215,"line_end":215,"column_start":10,"column_end":19},"name":"RecvError","qualname":"::sync::broadcast::RecvError","value":"pub enum RecvError {\n\n    /// There are no more active senders implying no further messages will ever\n    /// be sent.\n    Closed,\n\n    /// The receiver lagged too far behind. Attempting to receive again will\n    /// return the oldest message still retained by the channel.\n    ///\n    /// Includes the number of skipped messages.\n    Lagged(u64),\n}","parent":null,"children":[{"krate":0,"index":8327},{"krate":0,"index":8329}],"decl_id":null,"docs":" An error returned from the [`recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`recv`] function on a [`Receiver`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9378215,"byte_end":9378282,"line_start":210,"line_end":210,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9378283,"byte_end":9378286,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9378287,"byte_end":9378339,"line_start":212,"line_end":212,"column_start":1,"column_end":53}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9378340,"byte_end":9378390,"line_start":213,"line_end":213,"column_start":1,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8339},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9379146,"byte_end":9379151,"line_start":235,"line_end":235,"column_start":5,"column_end":10},"name":"Empty","qualname":"::sync::broadcast::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":8338},"children":[],"decl_id":null,"docs":" The channel is currently empty. There are still active\n [`Sender`][Sender] handles, so data may yet become available.\n","sig":null,"attributes":[{"value":"/ The channel is currently empty. There are still active","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9379013,"byte_end":9379071,"line_start":233,"line_end":233,"column_start":5,"column_end":63}},{"value":"/ [`Sender`][Sender] handles, so data may yet become available.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9379076,"byte_end":9379141,"line_start":234,"line_end":234,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8341},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9379255,"byte_end":9379261,"line_start":239,"line_end":239,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::broadcast::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":8338},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9379158,"byte_end":9379233,"line_start":237,"line_end":237,"column_start":5,"column_end":80}},{"value":"/ be sent.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9379238,"byte_end":9379250,"line_start":238,"line_end":238,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8343},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9379510,"byte_end":9379516,"line_start":246,"line_end":246,"column_start":5,"column_end":11},"name":"Lagged","qualname":"::sync::broadcast::TryRecvError::Lagged","value":"TryRecvError::Lagged(u64)","parent":{"krate":0,"index":8338},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind and has been forcibly disconnected.\n Attempting to receive again will return the oldest message still\n retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind and has been forcibly disconnected.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9379268,"byte_end":9379342,"line_start":241,"line_end":241,"column_start":5,"column_end":79}},{"value":"/ Attempting to receive again will return the oldest message still","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9379347,"byte_end":9379415,"line_start":242,"line_end":242,"column_start":5,"column_end":73}},{"value":"/ retained by the channel.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9379420,"byte_end":9379448,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9379453,"byte_end":9379456,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9379461,"byte_end":9379505,"line_start":245,"line_end":245,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":8338},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9378994,"byte_end":9379006,"line_start":232,"line_end":232,"column_start":10,"column_end":22},"name":"TryRecvError","qualname":"::sync::broadcast::TryRecvError","value":"pub enum TryRecvError {\n\n    /// The channel is currently empty. There are still active\n    /// [`Sender`][Sender] handles, so data may yet become available.\n    Empty,\n\n    /// There are no more active senders implying no further messages will ever\n    /// be sent.\n    Closed,\n\n    /// The receiver lagged too far behind and has been forcibly disconnected.\n    /// Attempting to receive again will return the oldest message still\n    /// retained by the channel.\n    ///\n    /// Includes the number of skipped messages.\n    Lagged(u64),\n}","parent":null,"children":[{"krate":0,"index":8339},{"krate":0,"index":8341},{"krate":0,"index":8343}],"decl_id":null,"docs":" An error returned from the [`try_recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`try_recv`] function on a [`Receiver`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9378769,"byte_end":9378840,"line_start":227,"line_end":227,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9378841,"byte_end":9378844,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9378845,"byte_end":9378905,"line_start":229,"line_end":229,"column_start":1,"column_end":61}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9378906,"byte_end":9378956,"line_start":230,"line_end":230,"column_start":1,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":7005},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9383817,"byte_end":9383824,"line_start":403,"line_end":403,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::broadcast::channel","value":"pub fn channel<T>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a bounded, multi-producer, multi-consumer channel where each sent\n value is broadcasted to all active receivers.","sig":null,"attributes":[{"value":"/ Create a bounded, multi-producer, multi-consumer channel where each sent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9382205,"byte_end":9382281,"line_start":358,"line_end":358,"column_start":1,"column_end":77}},{"value":"/ value is broadcasted to all active receivers.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9382282,"byte_end":9382331,"line_start":359,"line_end":359,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9382332,"byte_end":9382335,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ All data sent on [`Sender`] will become available on every active","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9382336,"byte_end":9382405,"line_start":361,"line_end":361,"column_start":1,"column_end":70}},{"value":"/ [`Receiver`] in the same order as it was sent.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9382406,"byte_end":9382456,"line_start":362,"line_end":362,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9382457,"byte_end":9382460,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9382461,"byte_end":9382535,"line_start":364,"line_end":364,"column_start":1,"column_end":75}},{"value":"/ points in the process or it can be used concurrently from an `Arc`. New","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9382536,"byte_end":9382611,"line_start":365,"line_end":365,"column_start":1,"column_end":76}},{"value":"/ `Receiver` handles are created by calling [`Sender::subscribe`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9382612,"byte_end":9382680,"line_start":366,"line_end":366,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9382681,"byte_end":9382684,"line_start":367,"line_end":367,"column_start":1,"column_end":4}},{"value":"/ If all [`Receiver`] handles are dropped, the `send` method will return a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9382685,"byte_end":9382761,"line_start":368,"line_end":368,"column_start":1,"column_end":77}},{"value":"/ [`SendError`]. Similarly, if all [`Sender`] handles are dropped, the [`recv`]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9382762,"byte_end":9382843,"line_start":369,"line_end":369,"column_start":1,"column_end":82}},{"value":"/ method will return a [`RecvError`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9382844,"byte_end":9382883,"line_start":370,"line_end":370,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9382884,"byte_end":9382887,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9382888,"byte_end":9382934,"line_start":372,"line_end":372,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9382935,"byte_end":9383003,"line_start":373,"line_end":373,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9383004,"byte_end":9383054,"line_start":374,"line_end":374,"column_start":1,"column_end":51}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9383055,"byte_end":9383107,"line_start":375,"line_end":375,"column_start":1,"column_end":53}},{"value":"/ [`SendError`]: crate::sync::broadcast::SendError","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9383108,"byte_end":9383160,"line_start":376,"line_end":376,"column_start":1,"column_end":53}},{"value":"/ [`RecvError`]: crate::sync::broadcast::RecvError","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9383161,"byte_end":9383213,"line_start":377,"line_end":377,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9383214,"byte_end":9383217,"line_start":378,"line_end":378,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9383218,"byte_end":9383232,"line_start":379,"line_end":379,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9383233,"byte_end":9383236,"line_start":380,"line_end":380,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9383237,"byte_end":9383244,"line_start":381,"line_end":381,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9383245,"byte_end":9383276,"line_start":382,"line_end":382,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9383277,"byte_end":9383280,"line_start":383,"line_end":383,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9383281,"byte_end":9383299,"line_start":384,"line_end":384,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9383300,"byte_end":9383321,"line_start":385,"line_end":385,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9383322,"byte_end":9383373,"line_start":386,"line_end":386,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9383374,"byte_end":9383411,"line_start":387,"line_end":387,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9383412,"byte_end":9383415,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9383416,"byte_end":9383449,"line_start":389,"line_end":389,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9383450,"byte_end":9383504,"line_start":390,"line_end":390,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9383505,"byte_end":9383559,"line_start":391,"line_end":391,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9383560,"byte_end":9383571,"line_start":392,"line_end":392,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9383572,"byte_end":9383575,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9383576,"byte_end":9383609,"line_start":394,"line_end":394,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9383610,"byte_end":9383664,"line_start":395,"line_end":395,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9383665,"byte_end":9383719,"line_start":396,"line_end":396,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9383720,"byte_end":9383731,"line_start":397,"line_end":397,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9383732,"byte_end":9383735,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9383736,"byte_end":9383765,"line_start":399,"line_end":399,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9383766,"byte_end":9383795,"line_start":400,"line_end":400,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9383796,"byte_end":9383801,"line_start":401,"line_end":401,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9383802,"byte_end":9383809,"line_start":402,"line_end":402,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7017},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9386891,"byte_end":9386895,"line_start":501,"line_end":501,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(&Self, T) -> Result<usize, SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value to all active [`Receiver`] handles, returning\n it back if it could not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value to all active [`Receiver`] handles, returning","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9385041,"byte_end":9385115,"line_start":451,"line_end":451,"column_start":5,"column_end":79}},{"value":"/ it back if it could not be sent.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9385120,"byte_end":9385156,"line_start":452,"line_end":452,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9385161,"byte_end":9385164,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when there is at least one active [`Receiver`]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9385169,"byte_end":9385244,"line_start":454,"line_end":454,"column_start":5,"column_end":80}},{"value":"/ handle. An unsuccessful send would be one where all associated","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9385249,"byte_end":9385315,"line_start":455,"line_end":455,"column_start":5,"column_end":71}},{"value":"/ [`Receiver`] handles have already been dropped.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9385320,"byte_end":9385371,"line_start":456,"line_end":456,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9385376,"byte_end":9385379,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9385384,"byte_end":9385396,"line_start":458,"line_end":458,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9385401,"byte_end":9385404,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ On success, the number of subscribed [`Receiver`] handles is returned.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9385409,"byte_end":9385483,"line_start":460,"line_end":460,"column_start":5,"column_end":79}},{"value":"/ This does not mean that this number of receivers will see the message as","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9385488,"byte_end":9385564,"line_start":461,"line_end":461,"column_start":5,"column_end":81}},{"value":"/ a receiver may drop before receiving the message.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9385569,"byte_end":9385622,"line_start":462,"line_end":462,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9385627,"byte_end":9385630,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9385635,"byte_end":9385645,"line_start":464,"line_end":464,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9385650,"byte_end":9385653,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ A return value of `Ok` **does not** mean that the sent value will be","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9385658,"byte_end":9385730,"line_start":466,"line_end":466,"column_start":5,"column_end":77}},{"value":"/ observed by all or any of the active [`Receiver`] handles. [`Receiver`]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9385735,"byte_end":9385810,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ handles may be dropped before receiving the sent message.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9385815,"byte_end":9385876,"line_start":468,"line_end":468,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9385881,"byte_end":9385884,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ A return value of `Err` **does not** mean that future calls to `send`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9385889,"byte_end":9385962,"line_start":470,"line_end":470,"column_start":5,"column_end":78}},{"value":"/ will fail. New [`Receiver`] handles may be created by calling","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9385967,"byte_end":9386032,"line_start":471,"line_end":471,"column_start":5,"column_end":70}},{"value":"/ [`subscribe`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9386037,"byte_end":9386055,"line_start":472,"line_end":472,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9386060,"byte_end":9386063,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9386068,"byte_end":9386118,"line_start":474,"line_end":474,"column_start":5,"column_end":55}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9386123,"byte_end":9386183,"line_start":475,"line_end":475,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9386188,"byte_end":9386191,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9386196,"byte_end":9386210,"line_start":477,"line_end":477,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9386215,"byte_end":9386218,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9386223,"byte_end":9386230,"line_start":479,"line_end":479,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9386235,"byte_end":9386266,"line_start":480,"line_end":480,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9386271,"byte_end":9386274,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9386279,"byte_end":9386297,"line_start":482,"line_end":482,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9386302,"byte_end":9386323,"line_start":483,"line_end":483,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9386328,"byte_end":9386379,"line_start":484,"line_end":484,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9386384,"byte_end":9386421,"line_start":485,"line_end":485,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9386426,"byte_end":9386429,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9386434,"byte_end":9386467,"line_start":487,"line_end":487,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9386472,"byte_end":9386526,"line_start":488,"line_end":488,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9386531,"byte_end":9386585,"line_start":489,"line_end":489,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9386590,"byte_end":9386601,"line_start":490,"line_end":490,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9386606,"byte_end":9386609,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9386614,"byte_end":9386647,"line_start":492,"line_end":492,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9386652,"byte_end":9386706,"line_start":493,"line_end":493,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9386711,"byte_end":9386765,"line_start":494,"line_end":494,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9386770,"byte_end":9386781,"line_start":495,"line_end":495,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9386786,"byte_end":9386789,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9386794,"byte_end":9386823,"line_start":497,"line_end":497,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9386828,"byte_end":9386857,"line_start":498,"line_end":498,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9386862,"byte_end":9386867,"line_start":499,"line_end":499,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9386872,"byte_end":9386879,"line_start":500,"line_end":500,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7019},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9387655,"byte_end":9387664,"line_start":529,"line_end":529,"column_start":12,"column_end":21},"name":"subscribe","qualname":"<Sender<T>>::subscribe","value":"pub fn subscribe(&Self) -> Receiver<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Receiver`] handle that will receive values sent **after**\n this call to `subscribe`.","sig":null,"attributes":[{"value":"/ Creates a new [`Receiver`] handle that will receive values sent **after**","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9387060,"byte_end":9387137,"line_start":506,"line_end":506,"column_start":5,"column_end":82}},{"value":"/ this call to `subscribe`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9387142,"byte_end":9387171,"line_start":507,"line_end":507,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9387176,"byte_end":9387179,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9387184,"byte_end":9387198,"line_start":509,"line_end":509,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9387203,"byte_end":9387206,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9387211,"byte_end":9387218,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9387223,"byte_end":9387254,"line_start":512,"line_end":512,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9387259,"byte_end":9387262,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9387267,"byte_end":9387285,"line_start":514,"line_end":514,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9387290,"byte_end":9387311,"line_start":515,"line_end":515,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx) = broadcast::channel(16);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9387316,"byte_end":9387363,"line_start":516,"line_end":516,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9387368,"byte_end":9387371,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/     // Will not be seen","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9387376,"byte_end":9387403,"line_start":518,"line_end":518,"column_start":5,"column_end":32}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9387408,"byte_end":9387437,"line_start":519,"line_end":519,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9387442,"byte_end":9387445,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/     let mut rx = tx.subscribe();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9387450,"byte_end":9387486,"line_start":521,"line_end":521,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9387491,"byte_end":9387494,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9387499,"byte_end":9387528,"line_start":523,"line_end":523,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9387533,"byte_end":9387536,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/     let value = rx.recv().await.unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9387541,"byte_end":9387586,"line_start":525,"line_end":525,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(20, value);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9387591,"byte_end":9387621,"line_start":526,"line_end":526,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9387626,"byte_end":9387631,"line_start":527,"line_end":527,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9387636,"byte_end":9387643,"line_start":528,"line_end":528,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7020},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9389251,"byte_end":9389265,"line_start":586,"line_end":586,"column_start":12,"column_end":26},"name":"receiver_count","qualname":"<Sender<T>>::receiver_count","value":"pub fn receiver_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of active receivers","sig":null,"attributes":[{"value":"/ Returns the number of active receivers","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9388099,"byte_end":9388141,"line_start":550,"line_end":550,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9388146,"byte_end":9388149,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ An active receiver is a [`Receiver`] handle returned from [`channel`] or","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9388154,"byte_end":9388230,"line_start":552,"line_end":552,"column_start":5,"column_end":81}},{"value":"/ [`subscribe`]. These are the handles that will receive values sent on","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9388235,"byte_end":9388308,"line_start":553,"line_end":553,"column_start":5,"column_end":78}},{"value":"/ this [`Sender`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9388313,"byte_end":9388333,"line_start":554,"line_end":554,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9388338,"byte_end":9388341,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9388346,"byte_end":9388356,"line_start":556,"line_end":556,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9388361,"byte_end":9388364,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ It is not guaranteed that a sent message will reach this number of","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9388369,"byte_end":9388439,"line_start":558,"line_end":558,"column_start":5,"column_end":75}},{"value":"/ receivers. Active receivers may never call [`recv`] again before","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9388444,"byte_end":9388512,"line_start":559,"line_end":559,"column_start":5,"column_end":73}},{"value":"/ dropping.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9388517,"byte_end":9388530,"line_start":560,"line_end":560,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9388535,"byte_end":9388538,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9388543,"byte_end":9388595,"line_start":562,"line_end":562,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9388600,"byte_end":9388650,"line_start":563,"line_end":563,"column_start":5,"column_end":55}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9388655,"byte_end":9388701,"line_start":564,"line_end":564,"column_start":5,"column_end":51}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9388706,"byte_end":9388766,"line_start":565,"line_end":565,"column_start":5,"column_end":65}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9388771,"byte_end":9388819,"line_start":566,"line_end":566,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9388824,"byte_end":9388827,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9388832,"byte_end":9388846,"line_start":568,"line_end":568,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9388851,"byte_end":9388854,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9388859,"byte_end":9388866,"line_start":570,"line_end":570,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9388871,"byte_end":9388902,"line_start":571,"line_end":571,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9388907,"byte_end":9388910,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9388915,"byte_end":9388933,"line_start":573,"line_end":573,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9388938,"byte_end":9388959,"line_start":574,"line_end":574,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx1) = broadcast::channel(16);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9388964,"byte_end":9389012,"line_start":575,"line_end":575,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9389017,"byte_end":9389020,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(1, tx.receiver_count());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9389025,"byte_end":9389068,"line_start":577,"line_end":577,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9389073,"byte_end":9389076,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/     let mut _rx2 = tx.subscribe();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9389081,"byte_end":9389119,"line_start":579,"line_end":579,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9389124,"byte_end":9389127,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(2, tx.receiver_count());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9389132,"byte_end":9389175,"line_start":581,"line_end":581,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9389180,"byte_end":9389183,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9389188,"byte_end":9389217,"line_start":583,"line_end":583,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9389222,"byte_end":9389227,"line_start":584,"line_end":584,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9389232,"byte_end":9389239,"line_start":585,"line_end":585,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7038},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9397979,"byte_end":9397987,"line_start":831,"line_end":831,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without awaiting.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without awaiting.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9396320,"byte_end":9396393,"line_start":791,"line_end":791,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9396398,"byte_end":9396401,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9396406,"byte_end":9396478,"line_start":793,"line_end":793,"column_start":5,"column_end":77}},{"value":"/ await on a receiver.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9396483,"byte_end":9396507,"line_start":794,"line_end":794,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9396512,"byte_end":9396515,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ Compared with [`recv`], this function has three failure cases instead of one","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9396520,"byte_end":9396600,"line_start":796,"line_end":796,"column_start":5,"column_end":85}},{"value":"/ (one for closed, one for an empty buffer, one for a lagging receiver).","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9396605,"byte_end":9396679,"line_start":797,"line_end":797,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9396684,"byte_end":9396687,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ `Err(TryRecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9396692,"byte_end":9396765,"line_start":799,"line_end":799,"column_start":5,"column_end":78}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9396770,"byte_end":9396844,"line_start":800,"line_end":800,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9396849,"byte_end":9396852,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9396857,"byte_end":9396933,"line_start":802,"line_end":802,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9396938,"byte_end":9397014,"line_start":803,"line_end":803,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(TryRecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9397019,"byte_end":9397090,"line_start":804,"line_end":804,"column_start":5,"column_end":76}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9397095,"byte_end":9397168,"line_start":805,"line_end":805,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`try_recv`] will return this value","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9397173,"byte_end":9397246,"line_start":806,"line_end":806,"column_start":5,"column_end":78}},{"value":"/ **unless** it has been since overwritten. If there are no values to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9397251,"byte_end":9397322,"line_start":807,"line_end":807,"column_start":5,"column_end":76}},{"value":"/ receive, `Err(TryRecvError::Empty)` is returned.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9397327,"byte_end":9397379,"line_start":808,"line_end":808,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9397384,"byte_end":9397387,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9397392,"byte_end":9397444,"line_start":810,"line_end":810,"column_start":5,"column_end":57}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9397449,"byte_end":9397509,"line_start":811,"line_end":811,"column_start":5,"column_end":65}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9397514,"byte_end":9397564,"line_start":812,"line_end":812,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9397569,"byte_end":9397572,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9397577,"byte_end":9397591,"line_start":814,"line_end":814,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9397596,"byte_end":9397599,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9397604,"byte_end":9397611,"line_start":816,"line_end":816,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9397616,"byte_end":9397647,"line_start":817,"line_end":817,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9397652,"byte_end":9397655,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9397660,"byte_end":9397678,"line_start":819,"line_end":819,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9397683,"byte_end":9397704,"line_start":820,"line_end":820,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(16);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9397709,"byte_end":9397759,"line_start":821,"line_end":821,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9397764,"byte_end":9397767,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/     assert!(rx.try_recv().is_err());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9397772,"byte_end":9397812,"line_start":823,"line_end":823,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9397817,"byte_end":9397820,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9397825,"byte_end":9397854,"line_start":825,"line_end":825,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9397859,"byte_end":9397862,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/     let value = rx.try_recv().unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9397867,"byte_end":9397910,"line_start":827,"line_end":827,"column_start":5,"column_end":48}},{"value":"/     assert_eq!(10, value);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9397915,"byte_end":9397945,"line_start":828,"line_end":828,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9397950,"byte_end":9397955,"line_start":829,"line_end":829,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9397960,"byte_end":9397967,"line_start":830,"line_end":830,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7039},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9398229,"byte_end":9398238,"line_start":838,"line_end":838,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Receiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Result<T, RecvError>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.2.21\", note = \"use async fn recv()\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9398156,"byte_end":9398217,"line_start":837,"line_end":837,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":7053},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9402269,"byte_end":9402273,"line_start":952,"line_end":952,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9400053,"byte_end":9400099,"line_start":888,"line_end":888,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9400104,"byte_end":9400107,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ Each [`Receiver`] handle will receive a clone of all values sent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9400112,"byte_end":9400180,"line_start":890,"line_end":890,"column_start":5,"column_end":73}},{"value":"/ **after** it has subscribed.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9400185,"byte_end":9400217,"line_start":891,"line_end":891,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9400222,"byte_end":9400225,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ `Err(RecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9400230,"byte_end":9400300,"line_start":893,"line_end":893,"column_start":5,"column_end":75}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9400305,"byte_end":9400379,"line_start":894,"line_end":894,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9400384,"byte_end":9400387,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9400392,"byte_end":9400468,"line_start":896,"line_end":896,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9400473,"byte_end":9400549,"line_start":897,"line_end":897,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(RecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9400554,"byte_end":9400622,"line_start":898,"line_end":898,"column_start":5,"column_end":73}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9400627,"byte_end":9400700,"line_start":899,"line_end":899,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`recv`] will return this value","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9400705,"byte_end":9400774,"line_start":900,"line_end":900,"column_start":5,"column_end":74}},{"value":"/ **unless** it has been since overwritten.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9400779,"byte_end":9400824,"line_start":901,"line_end":901,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9400829,"byte_end":9400832,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9400837,"byte_end":9400887,"line_start":903,"line_end":903,"column_start":5,"column_end":55}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9400892,"byte_end":9400944,"line_start":904,"line_end":904,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9400949,"byte_end":9400952,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9400957,"byte_end":9400971,"line_start":906,"line_end":906,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9400976,"byte_end":9400979,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9400984,"byte_end":9400991,"line_start":908,"line_end":908,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9400996,"byte_end":9401027,"line_start":909,"line_end":909,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9401032,"byte_end":9401035,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9401040,"byte_end":9401058,"line_start":911,"line_end":911,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9401063,"byte_end":9401084,"line_start":912,"line_end":912,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9401089,"byte_end":9401140,"line_start":913,"line_end":913,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9401145,"byte_end":9401182,"line_start":914,"line_end":914,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9401187,"byte_end":9401190,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9401195,"byte_end":9401228,"line_start":916,"line_end":916,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9401233,"byte_end":9401287,"line_start":917,"line_end":917,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9401292,"byte_end":9401346,"line_start":918,"line_end":918,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9401351,"byte_end":9401362,"line_start":919,"line_end":919,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9401367,"byte_end":9401370,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9401375,"byte_end":9401408,"line_start":921,"line_end":921,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9401413,"byte_end":9401467,"line_start":922,"line_end":922,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9401472,"byte_end":9401526,"line_start":923,"line_end":923,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9401531,"byte_end":9401542,"line_start":924,"line_end":924,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9401547,"byte_end":9401550,"line_start":925,"line_end":925,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9401555,"byte_end":9401584,"line_start":926,"line_end":926,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9401589,"byte_end":9401618,"line_start":927,"line_end":927,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9401623,"byte_end":9401628,"line_start":928,"line_end":928,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9401633,"byte_end":9401640,"line_start":929,"line_end":929,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9401645,"byte_end":9401648,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ Handling lag","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9401653,"byte_end":9401669,"line_start":931,"line_end":931,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9401674,"byte_end":9401677,"line_start":932,"line_end":932,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9401682,"byte_end":9401689,"line_start":933,"line_end":933,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9401694,"byte_end":9401725,"line_start":934,"line_end":934,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9401730,"byte_end":9401733,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9401738,"byte_end":9401756,"line_start":936,"line_end":936,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9401761,"byte_end":9401782,"line_start":937,"line_end":937,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9401787,"byte_end":9401836,"line_start":938,"line_end":938,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9401841,"byte_end":9401844,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9401849,"byte_end":9401878,"line_start":940,"line_end":940,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9401883,"byte_end":9401912,"line_start":941,"line_end":941,"column_start":5,"column_end":34}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9401917,"byte_end":9401946,"line_start":942,"line_end":942,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9401951,"byte_end":9401954,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/     // The receiver lagged behind","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9401959,"byte_end":9401996,"line_start":944,"line_end":944,"column_start":5,"column_end":42}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9402001,"byte_end":9402043,"line_start":945,"line_end":945,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9402048,"byte_end":9402051,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9402056,"byte_end":9402125,"line_start":947,"line_end":947,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9402130,"byte_end":9402133,"line_start":948,"line_end":948,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9402138,"byte_end":9402187,"line_start":949,"line_end":949,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9402192,"byte_end":9402241,"line_start":950,"line_end":950,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9402246,"byte_end":9402251,"line_start":951,"line_end":951,"column_start":5,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":8355},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9406927,"byte_end":9406938,"line_start":1111,"line_end":1111,"column_start":16,"column_end":27},"name":"into_stream","qualname":"<Receiver<T>>::into_stream","value":"pub fn into_stream(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Convert the receiver into a `Stream`.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":7112},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpsc","qualname":"::sync::mpsc","value":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","parent":null,"children":[{"krate":0,"index":7113},{"krate":0,"index":7186},{"krate":0,"index":7246},{"krate":0,"index":7247},{"krate":0,"index":7248},{"krate":0,"index":7249},{"krate":0,"index":7250},{"krate":0,"index":7414},{"krate":0,"index":7460},{"krate":0,"index":7507},{"krate":0,"index":7508},{"krate":0,"index":7509},{"krate":0,"index":7510},{"krate":0,"index":7511},{"krate":0,"index":7538}],"decl_id":null,"docs":" A multi-producer, single-consumer queue for sending values across\n asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":21286,"byte_end":21310,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"/ A multi-producer, single-consumer queue for sending values across","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9410592,"byte_end":9410661,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/ asynchronous tasks.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9410662,"byte_end":9410685,"line_start":4,"line_end":4,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9410686,"byte_end":9410689,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Similar to `std`, channel creation provides [`Receiver`] and [`Sender`]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9410690,"byte_end":9410765,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ handles. [`Receiver`] implements `Stream` and allows a task to read values","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9410766,"byte_end":9410844,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ out of the channel. If there is no message to read, the current task will be","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9410845,"byte_end":9410925,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/ notified when a new value is sent. If the channel is at capacity, the send","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9410926,"byte_end":9411004,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ is rejected and the task will be notified when additional capacity is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9411005,"byte_end":9411078,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/ available. In other words, the channel provides backpressure.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9411079,"byte_end":9411144,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9411145,"byte_end":9411148,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This module provides two variants of the channel: bounded and unbounded. The","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9411149,"byte_end":9411229,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ bounded variant has a limit on the number of messages that the channel can","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9411230,"byte_end":9411308,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ store, and if this limit is reached, trying to send another message will","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9411309,"byte_end":9411385,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/ wait until a message is received from the channel. An unbounded channel has","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9411386,"byte_end":9411465,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ an infinite capacity, so the `send` method never does any kind of sleeping.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9411466,"byte_end":9411545,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ This makes the [`UnboundedSender`] usable from both synchronous and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9411546,"byte_end":9411617,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ asynchronous code.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9411618,"byte_end":9411640,"line_start":19,"line_end":19,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9411641,"byte_end":9411644,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Disconnection","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9411645,"byte_end":9411664,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9411665,"byte_end":9411668,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ When all [`Sender`] handles have been dropped, it is no longer","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9411669,"byte_end":9411735,"line_start":23,"line_end":23,"column_start":1,"column_end":67}},{"value":"/ possible to send values into the channel. This is considered the termination","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9411736,"byte_end":9411816,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ event of the stream. As such, `Receiver::poll` returns `Ok(Ready(None))`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9411817,"byte_end":9411894,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9411895,"byte_end":9411898,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ If the [`Receiver`] handle is dropped, then messages can no longer","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9411899,"byte_end":9411969,"line_start":27,"line_end":27,"column_start":1,"column_end":71}},{"value":"/ be read out of the channel. In this case, all further attempts to send will","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9411970,"byte_end":9412049,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ result in an error.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9412050,"byte_end":9412073,"line_start":29,"line_end":29,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9412074,"byte_end":9412077,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Clean Shutdown","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9412078,"byte_end":9412098,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9412099,"byte_end":9412102,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ When the [`Receiver`] is dropped, it is possible for unprocessed messages to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9412103,"byte_end":9412183,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ remain in the channel. Instead, it is usually desirable to perform a \"clean\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9412184,"byte_end":9412264,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ shutdown. To do this, the receiver first calls `close`, which will prevent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9412265,"byte_end":9412343,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ any further messages to be sent into the channel. Then, the receiver","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9412344,"byte_end":9412416,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ consumes the channel to completion, at which point the receiver can be","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9412417,"byte_end":9412491,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/ dropped.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9412492,"byte_end":9412504,"line_start":38,"line_end":38,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9412505,"byte_end":9412508,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Communicating between sync and async code","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9412509,"byte_end":9412556,"line_start":40,"line_end":40,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9412557,"byte_end":9412560,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ When you want to communicate between synchronous and asynchronous code, there","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9412561,"byte_end":9412642,"line_start":42,"line_end":42,"column_start":1,"column_end":82}},{"value":"/ are two situations to consider:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9412643,"byte_end":9412678,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9412679,"byte_end":9412682,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ **Bounded channel**: If you need a bounded channel, you should use a bounded","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9412683,"byte_end":9412763,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/ Tokio `mpsc` channel for both directions of communication. To call the async","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9412764,"byte_end":9412844,"line_start":46,"line_end":46,"column_start":1,"column_end":81}},{"value":"/ [`send`][bounded-send] or [`recv`][bounded-recv] methods in sync code, you","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9412845,"byte_end":9412923,"line_start":47,"line_end":47,"column_start":1,"column_end":79}},{"value":"/ will need to use [`Handle::block_on`], which allow you to execute an async","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9412924,"byte_end":9413002,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ method in synchronous code. This is necessary because a bounded channel may","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9413003,"byte_end":9413082,"line_start":49,"line_end":49,"column_start":1,"column_end":80}},{"value":"/ need to wait for additional capacity to become available.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9413083,"byte_end":9413144,"line_start":50,"line_end":50,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9413145,"byte_end":9413148,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ **Unbounded channel**: You should use the kind of channel that matches where","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9413149,"byte_end":9413229,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ the receiver is. So for sending a message _from async to sync_, you should","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9413230,"byte_end":9413308,"line_start":53,"line_end":53,"column_start":1,"column_end":79}},{"value":"/ use [the standard library unbounded channel][std-unbounded] or","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9413309,"byte_end":9413375,"line_start":54,"line_end":54,"column_start":1,"column_end":67}},{"value":"/ [crossbeam][crossbeam-unbounded].  Similarly, for sending a message _from sync","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9413376,"byte_end":9413458,"line_start":55,"line_end":55,"column_start":1,"column_end":83}},{"value":"/ to async_, you should use an unbounded Tokio `mpsc` channel.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9413459,"byte_end":9413523,"line_start":56,"line_end":56,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9413524,"byte_end":9413527,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::mpsc::Sender","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9413528,"byte_end":9413569,"line_start":58,"line_end":58,"column_start":1,"column_end":42}},{"value":"/ [`Receiver`]: crate::sync::mpsc::Receiver","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9413570,"byte_end":9413615,"line_start":59,"line_end":59,"column_start":1,"column_end":46}},{"value":"/ [bounded-send]: crate::sync::mpsc::Sender::send()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9413616,"byte_end":9413669,"line_start":60,"line_end":60,"column_start":1,"column_end":54}},{"value":"/ [bounded-recv]: crate::sync::mpsc::Receiver::recv()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9413670,"byte_end":9413725,"line_start":61,"line_end":61,"column_start":1,"column_end":56}},{"value":"/ [`UnboundedSender`]: crate::sync::mpsc::UnboundedSender","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9413726,"byte_end":9413785,"line_start":62,"line_end":62,"column_start":1,"column_end":60}},{"value":"/ [`Handle::block_on`]: crate::runtime::Handle::block_on()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9413786,"byte_end":9413846,"line_start":63,"line_end":63,"column_start":1,"column_end":61}},{"value":"/ [std-unbounded]: std::sync::mpsc::channel","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9413847,"byte_end":9413892,"line_start":64,"line_end":64,"column_start":1,"column_end":46}},{"value":"/ [crossbeam-unbounded]: https://docs.rs/crossbeam/*/crossbeam/channel/fn.unbounded.html","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9413893,"byte_end":9413983,"line_start":65,"line_end":65,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":7198},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9427848,"byte_end":9427854,"line_start":16,"line_end":16,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::mpsc::bounded::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":7200}],"decl_id":null,"docs":" Send values to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `Receiver`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9427723,"byte_end":9427768,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9427769,"byte_end":9427772,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9427773,"byte_end":9427836,"line_start":15,"line_end":15,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":7207},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9428363,"byte_end":9428371,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::mpsc::bounded::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":7209}],"decl_id":null,"docs":" Receive values from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `Sender`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9428235,"byte_end":9428283,"line_start":36,"line_end":36,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9428284,"byte_end":9428287,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9428288,"byte_end":9428351,"line_start":38,"line_end":38,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":7213},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9429759,"byte_end":9429766,"line_start":88,"line_end":88,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::mpsc::bounded::channel","value":"pub fn channel<T>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a bounded mpsc channel for communicating between asynchronous tasks,\n returning the sender/receiver halves.","sig":null,"attributes":[{"value":"/ Creates a bounded mpsc channel for communicating between asynchronous tasks,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9428652,"byte_end":9428732,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ returning the sender/receiver halves.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9428733,"byte_end":9428774,"line_start":53,"line_end":53,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9428775,"byte_end":9428778,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ All data sent on `Sender` will become available on `Receiver` in the same","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9428779,"byte_end":9428856,"line_start":55,"line_end":55,"column_start":1,"column_end":78}},{"value":"/ order as it was sent.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9428857,"byte_end":9428882,"line_start":56,"line_end":56,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9428883,"byte_end":9428886,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple code","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9428887,"byte_end":9428966,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/ locations. Only one `Receiver` is supported.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9428967,"byte_end":9429015,"line_start":59,"line_end":59,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9429016,"byte_end":9429019,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ If the `Receiver` is disconnected while trying to `send`, the `send` method","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9429020,"byte_end":9429099,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ will return a `SendError`. Similarly, if `Sender` is disconnected while","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9429100,"byte_end":9429175,"line_start":62,"line_end":62,"column_start":1,"column_end":76}},{"value":"/ trying to `recv`, the `recv` method will return a `RecvError`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9429176,"byte_end":9429242,"line_start":63,"line_end":63,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9429243,"byte_end":9429246,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9429247,"byte_end":9429261,"line_start":65,"line_end":65,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9429262,"byte_end":9429265,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9429266,"byte_end":9429277,"line_start":67,"line_end":67,"column_start":1,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9429278,"byte_end":9429304,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9429305,"byte_end":9429308,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9429309,"byte_end":9429327,"line_start":70,"line_end":70,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9429328,"byte_end":9429349,"line_start":71,"line_end":71,"column_start":1,"column_end":22}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9429350,"byte_end":9429400,"line_start":72,"line_end":72,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9429401,"byte_end":9429404,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9429405,"byte_end":9429438,"line_start":74,"line_end":74,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9429439,"byte_end":9429467,"line_start":75,"line_end":75,"column_start":1,"column_end":29}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9429468,"byte_end":9429518,"line_start":76,"line_end":76,"column_start":1,"column_end":51}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9429519,"byte_end":9429568,"line_start":77,"line_end":77,"column_start":1,"column_end":50}},{"value":"/                 return;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9429569,"byte_end":9429596,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"/             }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9429597,"byte_end":9429614,"line_start":79,"line_end":79,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9429615,"byte_end":9429628,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9429629,"byte_end":9429640,"line_start":81,"line_end":81,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9429641,"byte_end":9429644,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9429645,"byte_end":9429690,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9429691,"byte_end":9429727,"line_start":84,"line_end":84,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9429728,"byte_end":9429737,"line_start":85,"line_end":85,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9429738,"byte_end":9429743,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9429744,"byte_end":9429751,"line_start":87,"line_end":87,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7219},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9431448,"byte_end":9431452,"line_start":147,"line_end":147,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9430366,"byte_end":9430412,"line_start":108,"line_end":108,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9430417,"byte_end":9430420,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ `None` is returned when all `Sender` halves have dropped, indicating","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9430425,"byte_end":9430497,"line_start":110,"line_end":110,"column_start":5,"column_end":77}},{"value":"/ that no further values can be sent on the channel.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9430502,"byte_end":9430556,"line_start":111,"line_end":111,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9430561,"byte_end":9430564,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9430569,"byte_end":9430583,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9430588,"byte_end":9430591,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9430596,"byte_end":9430603,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9430608,"byte_end":9430634,"line_start":116,"line_end":116,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9430639,"byte_end":9430642,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9430647,"byte_end":9430665,"line_start":118,"line_end":118,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9430670,"byte_end":9430691,"line_start":119,"line_end":119,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9430696,"byte_end":9430746,"line_start":120,"line_end":120,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9430751,"byte_end":9430754,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9430759,"byte_end":9430792,"line_start":122,"line_end":122,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").await.unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9430797,"byte_end":9430841,"line_start":123,"line_end":123,"column_start":5,"column_end":49}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9430846,"byte_end":9430857,"line_start":124,"line_end":124,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9430862,"byte_end":9430865,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9430870,"byte_end":9430921,"line_start":126,"line_end":126,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9430926,"byte_end":9430968,"line_start":127,"line_end":127,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9430973,"byte_end":9430978,"line_start":128,"line_end":128,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9430983,"byte_end":9430990,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9430995,"byte_end":9430998,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9431003,"byte_end":9431027,"line_start":131,"line_end":131,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9431032,"byte_end":9431035,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9431040,"byte_end":9431047,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9431052,"byte_end":9431078,"line_start":134,"line_end":134,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9431083,"byte_end":9431086,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9431091,"byte_end":9431109,"line_start":136,"line_end":136,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9431114,"byte_end":9431135,"line_start":137,"line_end":137,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9431140,"byte_end":9431190,"line_start":138,"line_end":138,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9431195,"byte_end":9431198,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").await.unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9431203,"byte_end":9431243,"line_start":140,"line_end":140,"column_start":5,"column_end":45}},{"value":"/     tx.send(\"world\").await.unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9431248,"byte_end":9431288,"line_start":141,"line_end":141,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9431293,"byte_end":9431296,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9431301,"byte_end":9431352,"line_start":143,"line_end":143,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9431357,"byte_end":9431408,"line_start":144,"line_end":144,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9431413,"byte_end":9431418,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9431423,"byte_end":9431430,"line_start":146,"line_end":146,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7224},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9431618,"byte_end":9431627,"line_start":154,"line_end":154,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Receiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7225},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9432283,"byte_end":9432291,"line_start":169,"line_end":169,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without blocking.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without blocking.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9431720,"byte_end":9431793,"line_start":158,"line_end":158,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9431798,"byte_end":9431801,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ This method will never block the caller in order to wait for data to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9431806,"byte_end":9431878,"line_start":160,"line_end":160,"column_start":5,"column_end":77}},{"value":"/ become available. Instead, this will always return immediately with","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9431883,"byte_end":9431954,"line_start":161,"line_end":161,"column_start":5,"column_end":76}},{"value":"/ a possible option of pending data on the channel.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9431959,"byte_end":9432012,"line_start":162,"line_end":162,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9432017,"byte_end":9432020,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9432025,"byte_end":9432097,"line_start":164,"line_end":164,"column_start":5,"column_end":77}},{"value":"/ block on a receiver.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9432102,"byte_end":9432126,"line_start":165,"line_end":165,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9432131,"byte_end":9432134,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Compared with recv, this function has two failure cases instead of","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9432139,"byte_end":9432209,"line_start":167,"line_end":167,"column_start":5,"column_end":75}},{"value":"/ one (one for disconnection, one for an empty buffer).","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9432214,"byte_end":9432271,"line_start":168,"line_end":168,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":7226},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9432609,"byte_end":9432614,"line_start":177,"line_end":177,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9432372,"byte_end":9432436,"line_start":173,"line_end":173,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9432441,"byte_end":9432444,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9432449,"byte_end":9432524,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9432529,"byte_end":9432597,"line_start":176,"line_end":176,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":7232},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9434704,"byte_end":9434708,"line_start":244,"line_end":244,"column_start":18,"column_end":22},"name":"send","qualname":"<Sender<T>>::send","value":"pub async fn send<'_>(&'_ mut Self, T) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9433060,"byte_end":9433111,"line_start":199,"line_end":199,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9433116,"byte_end":9433119,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9433124,"byte_end":9433200,"line_start":201,"line_end":201,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9433205,"byte_end":9433281,"line_start":202,"line_end":202,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been closed. Note that a return","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9433286,"byte_end":9433360,"line_start":203,"line_end":203,"column_start":5,"column_end":79}},{"value":"/ value of `Err` means that the data will never be received, but a return","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9433365,"byte_end":9433440,"line_start":204,"line_end":204,"column_start":5,"column_end":80}},{"value":"/ value of `Ok` does not mean that the data will be received. It is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9433445,"byte_end":9433514,"line_start":205,"line_end":205,"column_start":5,"column_end":74}},{"value":"/ possible for the corresponding receiver to hang up immediately after","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9433519,"byte_end":9433591,"line_start":206,"line_end":206,"column_start":5,"column_end":77}},{"value":"/ this function returns `Ok`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9433596,"byte_end":9433627,"line_start":207,"line_end":207,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9433632,"byte_end":9433635,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9433640,"byte_end":9433652,"line_start":209,"line_end":209,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9433657,"byte_end":9433660,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9433665,"byte_end":9433738,"line_start":211,"line_end":211,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9433743,"byte_end":9433817,"line_start":212,"line_end":212,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9433822,"byte_end":9433882,"line_start":213,"line_end":213,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9433887,"byte_end":9433890,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9433895,"byte_end":9433925,"line_start":215,"line_end":215,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9433930,"byte_end":9433956,"line_start":216,"line_end":216,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9433961,"byte_end":9433964,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9433969,"byte_end":9433983,"line_start":218,"line_end":218,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9433988,"byte_end":9433991,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send` will block until the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9433996,"byte_end":9434066,"line_start":220,"line_end":220,"column_start":5,"column_end":75}},{"value":"/ previously sent value was received.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9434071,"byte_end":9434110,"line_start":221,"line_end":221,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9434115,"byte_end":9434118,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9434123,"byte_end":9434134,"line_start":223,"line_end":223,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9434139,"byte_end":9434165,"line_start":224,"line_end":224,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9434170,"byte_end":9434173,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9434178,"byte_end":9434196,"line_start":226,"line_end":226,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9434201,"byte_end":9434222,"line_start":227,"line_end":227,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9434227,"byte_end":9434275,"line_start":228,"line_end":228,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9434280,"byte_end":9434283,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9434288,"byte_end":9434321,"line_start":230,"line_end":230,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9434326,"byte_end":9434354,"line_start":231,"line_end":231,"column_start":5,"column_end":33}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9434359,"byte_end":9434409,"line_start":232,"line_end":232,"column_start":5,"column_end":55}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9434414,"byte_end":9434463,"line_start":233,"line_end":233,"column_start":5,"column_end":54}},{"value":"/                 return;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9434468,"byte_end":9434495,"line_start":234,"line_end":234,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9434500,"byte_end":9434517,"line_start":235,"line_end":235,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9434522,"byte_end":9434535,"line_start":236,"line_end":236,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9434540,"byte_end":9434551,"line_start":237,"line_end":237,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9434556,"byte_end":9434559,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9434564,"byte_end":9434609,"line_start":239,"line_end":239,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9434614,"byte_end":9434650,"line_start":240,"line_end":240,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9434655,"byte_end":9434664,"line_start":241,"line_end":241,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9434669,"byte_end":9434674,"line_start":242,"line_end":242,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9434679,"byte_end":9434686,"line_start":243,"line_end":243,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7237},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9437441,"byte_end":9437449,"line_start":320,"line_end":320,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"pub fn try_send(&mut Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to immediately send a message on this `Sender`","sig":null,"attributes":[{"value":"/ Attempts to immediately send a message on this `Sender`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9435129,"byte_end":9435188,"line_start":258,"line_end":258,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9435193,"byte_end":9435196,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This method differs from [`send`] by returning immediately if the channel's","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9435201,"byte_end":9435280,"line_start":260,"line_end":260,"column_start":5,"column_end":84}},{"value":"/ buffer is full or no receiver is waiting to acquire some data. Compared","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9435285,"byte_end":9435360,"line_start":261,"line_end":261,"column_start":5,"column_end":80}},{"value":"/ with [`send`], this function has two failure cases instead of one (one for","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9435365,"byte_end":9435443,"line_start":262,"line_end":262,"column_start":5,"column_end":83}},{"value":"/ disconnection, one for a full buffer).","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9435448,"byte_end":9435490,"line_start":263,"line_end":263,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9435495,"byte_end":9435498,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ This function may be paired with [`poll_ready`] in order to wait for","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9435503,"byte_end":9435575,"line_start":265,"line_end":265,"column_start":5,"column_end":77}},{"value":"/ channel capacity before trying to send a value.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9435580,"byte_end":9435631,"line_start":266,"line_end":266,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9435636,"byte_end":9435639,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9435644,"byte_end":9435656,"line_start":268,"line_end":268,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9435661,"byte_end":9435664,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ If the channel capacity has been reached, i.e., the channel has `n`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9435669,"byte_end":9435740,"line_start":270,"line_end":270,"column_start":5,"column_end":76}},{"value":"/ buffered values where `n` is the argument passed to [`channel`], then an","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9435745,"byte_end":9435821,"line_start":271,"line_end":271,"column_start":5,"column_end":81}},{"value":"/ error is returned.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9435826,"byte_end":9435848,"line_start":272,"line_end":272,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9435853,"byte_end":9435856,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9435861,"byte_end":9435934,"line_start":274,"line_end":274,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9435939,"byte_end":9436013,"line_start":275,"line_end":275,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9436018,"byte_end":9436078,"line_start":276,"line_end":276,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9436083,"byte_end":9436086,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9436091,"byte_end":9436117,"line_start":278,"line_end":278,"column_start":5,"column_end":31}},{"value":"/ [`poll_ready`]: Sender::poll_ready","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9436122,"byte_end":9436160,"line_start":279,"line_end":279,"column_start":5,"column_end":43}},{"value":"/ [`channel`]: channel","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9436165,"byte_end":9436189,"line_start":280,"line_end":280,"column_start":5,"column_end":29}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9436194,"byte_end":9436224,"line_start":281,"line_end":281,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9436229,"byte_end":9436232,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9436237,"byte_end":9436251,"line_start":283,"line_end":283,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9436256,"byte_end":9436259,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9436264,"byte_end":9436271,"line_start":285,"line_end":285,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9436276,"byte_end":9436302,"line_start":286,"line_end":286,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9436307,"byte_end":9436310,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9436315,"byte_end":9436333,"line_start":288,"line_end":288,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9436338,"byte_end":9436359,"line_start":289,"line_end":289,"column_start":5,"column_end":26}},{"value":"/     // Create a channel with buffer size 1","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9436364,"byte_end":9436410,"line_start":290,"line_end":290,"column_start":5,"column_end":51}},{"value":"/     let (mut tx1, mut rx) = mpsc::channel(1);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9436415,"byte_end":9436464,"line_start":291,"line_end":291,"column_start":5,"column_end":54}},{"value":"/     let mut tx2 = tx1.clone();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9436469,"byte_end":9436503,"line_start":292,"line_end":292,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9436508,"byte_end":9436511,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9436516,"byte_end":9436549,"line_start":294,"line_end":294,"column_start":5,"column_end":38}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9436554,"byte_end":9436593,"line_start":295,"line_end":295,"column_start":5,"column_end":44}},{"value":"/         tx1.send(2).await.unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9436598,"byte_end":9436637,"line_start":296,"line_end":296,"column_start":5,"column_end":44}},{"value":"/         // task waits until the receiver receives a value.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9436642,"byte_end":9436704,"line_start":297,"line_end":297,"column_start":5,"column_end":67}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9436709,"byte_end":9436720,"line_start":298,"line_end":298,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9436725,"byte_end":9436728,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9436733,"byte_end":9436766,"line_start":300,"line_end":300,"column_start":5,"column_end":38}},{"value":"/         // This will return an error and send","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9436771,"byte_end":9436820,"line_start":301,"line_end":301,"column_start":5,"column_end":54}},{"value":"/         // no message if the buffer is full","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9436825,"byte_end":9436872,"line_start":302,"line_end":302,"column_start":5,"column_end":52}},{"value":"/         let _ = tx2.try_send(3);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9436877,"byte_end":9436913,"line_start":303,"line_end":303,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9436918,"byte_end":9436929,"line_start":304,"line_end":304,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9436934,"byte_end":9436937,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/     let mut msg;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9436942,"byte_end":9436962,"line_start":306,"line_end":306,"column_start":5,"column_end":25}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9436967,"byte_end":9437006,"line_start":307,"line_end":307,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9437011,"byte_end":9437056,"line_start":308,"line_end":308,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9437061,"byte_end":9437064,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9437069,"byte_end":9437108,"line_start":310,"line_end":310,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9437113,"byte_end":9437158,"line_start":311,"line_end":311,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9437163,"byte_end":9437166,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/     // Third message may have never been sent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9437171,"byte_end":9437220,"line_start":313,"line_end":313,"column_start":5,"column_end":54}},{"value":"/     match rx.recv().await {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9437225,"byte_end":9437256,"line_start":314,"line_end":314,"column_start":5,"column_end":36}},{"value":"/         Some(msg) => println!(\"message {} received\", msg),","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9437261,"byte_end":9437323,"line_start":315,"line_end":315,"column_start":5,"column_end":67}},{"value":"/         None => println!(\"the third message was never sent\"),","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9437328,"byte_end":9437393,"line_start":316,"line_end":316,"column_start":5,"column_end":70}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9437398,"byte_end":9437407,"line_start":317,"line_end":317,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9437412,"byte_end":9437417,"line_start":318,"line_end":318,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9437422,"byte_end":9437429,"line_start":319,"line_end":319,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7238},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9439266,"byte_end":9439278,"line_start":372,"line_end":372,"column_start":18,"column_end":30},"name":"send_timeout","qualname":"<Sender<T>>::send_timeout","value":"pub async fn send_timeout<'_>(&'_ mut Self, T, Duration) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity, but only for a limited time.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity, but only for a limited time.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9437570,"byte_end":9437650,"line_start":325,"line_end":325,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9437655,"byte_end":9437658,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ Shares the same success and error conditions as [`send`], adding one more","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9437663,"byte_end":9437740,"line_start":327,"line_end":327,"column_start":5,"column_end":82}},{"value":"/ condition for an unsuccessful send, which is when the provided timeout has","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9437745,"byte_end":9437823,"line_start":328,"line_end":328,"column_start":5,"column_end":83}},{"value":"/ elapsed, and there is no capacity available.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9437828,"byte_end":9437876,"line_start":329,"line_end":329,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9437881,"byte_end":9437884,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9437889,"byte_end":9437915,"line_start":331,"line_end":331,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9437920,"byte_end":9437923,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9437928,"byte_end":9437940,"line_start":333,"line_end":333,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9437945,"byte_end":9437948,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9437953,"byte_end":9438026,"line_start":335,"line_end":335,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] having been dropped,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9438031,"byte_end":9438088,"line_start":336,"line_end":336,"column_start":5,"column_end":62}},{"value":"/ the function returns an error. The error includes the value passed to `send`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9438093,"byte_end":9438174,"line_start":337,"line_end":337,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9438179,"byte_end":9438182,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9438187,"byte_end":9438217,"line_start":339,"line_end":339,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9438222,"byte_end":9438248,"line_start":340,"line_end":340,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9438253,"byte_end":9438256,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9438261,"byte_end":9438275,"line_start":342,"line_end":342,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9438280,"byte_end":9438283,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send_timeout` will block until the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9438288,"byte_end":9438366,"line_start":344,"line_end":344,"column_start":5,"column_end":83}},{"value":"/ previously sent value was received, unless the timeout has elapsed.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9438371,"byte_end":9438442,"line_start":345,"line_end":345,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9438447,"byte_end":9438450,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9438455,"byte_end":9438466,"line_start":347,"line_end":347,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9438471,"byte_end":9438497,"line_start":348,"line_end":348,"column_start":5,"column_end":31}},{"value":"/ use tokio::time::{delay_for, Duration};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9438502,"byte_end":9438545,"line_start":349,"line_end":349,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9438550,"byte_end":9438553,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9438558,"byte_end":9438576,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9438581,"byte_end":9438602,"line_start":352,"line_end":352,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9438607,"byte_end":9438655,"line_start":353,"line_end":353,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9438660,"byte_end":9438663,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9438668,"byte_end":9438701,"line_start":355,"line_end":355,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9438706,"byte_end":9438734,"line_start":356,"line_end":356,"column_start":5,"column_end":33}},{"value":"/             if let Err(e) = tx.send_timeout(i, Duration::from_millis(100)).await {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9438739,"byte_end":9438825,"line_start":357,"line_end":357,"column_start":5,"column_end":91}},{"value":"/                 println!(\"send error: #{:?}\", e);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9438830,"byte_end":9438883,"line_start":358,"line_end":358,"column_start":5,"column_end":58}},{"value":"/                 return;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9438888,"byte_end":9438915,"line_start":359,"line_end":359,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9438920,"byte_end":9438937,"line_start":360,"line_end":360,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9438942,"byte_end":9438955,"line_start":361,"line_end":361,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9438960,"byte_end":9438971,"line_start":362,"line_end":362,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9438976,"byte_end":9438979,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9438984,"byte_end":9439029,"line_start":364,"line_end":364,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9439034,"byte_end":9439070,"line_start":365,"line_end":365,"column_start":5,"column_end":41}},{"value":"/         delay_for(Duration::from_millis(200)).await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9439075,"byte_end":9439131,"line_start":366,"line_end":366,"column_start":5,"column_end":61}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9439136,"byte_end":9439145,"line_start":367,"line_end":367,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9439150,"byte_end":9439155,"line_start":368,"line_end":368,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9439160,"byte_end":9439167,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"time\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9439172,"byte_end":9439196,"line_start":370,"line_end":370,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":7243},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9441062,"byte_end":9441072,"line_start":413,"line_end":413,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<Sender<T>>::poll_ready","value":"pub fn poll_ready(&mut Self, &mut Context) -> Poll<Result<(), ClosedError>>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Poll::Ready(Ok(()))` when the channel is able to accept another item.","sig":null,"attributes":[{"value":"/ Returns `Poll::Ready(Ok(()))` when the channel is able to accept another item.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9439981,"byte_end":9440063,"line_start":396,"line_end":396,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9440068,"byte_end":9440071,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ If the channel is full, then `Poll::Pending` is returned and the task is notified when a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9440076,"byte_end":9440168,"line_start":398,"line_end":398,"column_start":5,"column_end":97}},{"value":"/ slot becomes available.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9440173,"byte_end":9440200,"line_start":399,"line_end":399,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9440205,"byte_end":9440208,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ Once `poll_ready` returns `Poll::Ready(Ok(()))`, a call to `try_send` will succeed unless","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9440213,"byte_end":9440306,"line_start":401,"line_end":401,"column_start":5,"column_end":98}},{"value":"/ the channel has since been closed. To provide this guarantee, the channel reserves one slot","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9440311,"byte_end":9440406,"line_start":402,"line_end":402,"column_start":5,"column_end":100}},{"value":"/ in the channel for the coming send. This reserved slot is not available to other `Sender`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9440411,"byte_end":9440504,"line_start":403,"line_end":403,"column_start":5,"column_end":98}},{"value":"/ instances, so you need to be careful to not end up with deadlocks by blocking after calling","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9440509,"byte_end":9440604,"line_start":404,"line_end":404,"column_start":5,"column_end":100}},{"value":"/ `poll_ready` but before sending an element.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9440609,"byte_end":9440656,"line_start":405,"line_end":405,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9440661,"byte_end":9440664,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ If, after `poll_ready` succeeds, you decide you do not wish to send an item after all, you","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9440669,"byte_end":9440763,"line_start":407,"line_end":407,"column_start":5,"column_end":99}},{"value":"/ can use [`disarm`](Sender::disarm) to release the reserved slot.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9440768,"byte_end":9440836,"line_start":408,"line_end":408,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9440841,"byte_end":9440844,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ Until an item is sent or [`disarm`](Sender::disarm) is called, repeated calls to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9440849,"byte_end":9440933,"line_start":410,"line_end":410,"column_start":5,"column_end":89}},{"value":"/ `poll_ready` will return either `Poll::Ready(Ok(()))` or `Poll::Ready(Err(_))` if channel","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9440938,"byte_end":9441031,"line_start":411,"line_end":411,"column_start":5,"column_end":98}},{"value":"/ is closed.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9441036,"byte_end":9441050,"line_start":412,"line_end":412,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":7245},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9443628,"byte_end":9443634,"line_start":471,"line_end":471,"column_start":12,"column_end":18},"name":"disarm","qualname":"<Sender<T>>::disarm","value":"pub fn disarm(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Undo a successful call to `poll_ready`.","sig":null,"attributes":[{"value":"/ Undo a successful call to `poll_ready`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9441217,"byte_end":9441260,"line_start":417,"line_end":417,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9441265,"byte_end":9441268,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ Once a call to `poll_ready` returns `Poll::Ready(Ok(()))`, it holds up one slot in the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9441273,"byte_end":9441363,"line_start":419,"line_end":419,"column_start":5,"column_end":95}},{"value":"/ channel to make room for the coming send. `disarm` allows you to give up that slot if you","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9441368,"byte_end":9441461,"line_start":420,"line_end":420,"column_start":5,"column_end":98}},{"value":"/ decide you do not wish to send an item after all. After calling `disarm`, you must call","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9441466,"byte_end":9441557,"line_start":421,"line_end":421,"column_start":5,"column_end":96}},{"value":"/ `poll_ready` until it returns `Poll::Ready(Ok(()))` before attempting to send again.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9441562,"byte_end":9441650,"line_start":422,"line_end":422,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9441655,"byte_end":9441658,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ Returns `false` if no slot is reserved for this sender (usually because `poll_ready` was","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9441663,"byte_end":9441755,"line_start":424,"line_end":424,"column_start":5,"column_end":97}},{"value":"/ not previously called, or did not succeed).","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9441760,"byte_end":9441807,"line_start":425,"line_end":425,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9441812,"byte_end":9441815,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ # Motivation","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9441820,"byte_end":9441836,"line_start":427,"line_end":427,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9441841,"byte_end":9441844,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ Since `poll_ready` takes up one of the finite number of slots in a bounded channel, callers","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9441849,"byte_end":9441944,"line_start":429,"line_end":429,"column_start":5,"column_end":100}},{"value":"/ need to send an item shortly after `poll_ready` succeeds. If they do not, idle senders may","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9441949,"byte_end":9442043,"line_start":430,"line_end":430,"column_start":5,"column_end":99}},{"value":"/ take up all the slots of the channel, and prevent active senders from getting any requests","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9442048,"byte_end":9442142,"line_start":431,"line_end":431,"column_start":5,"column_end":99}},{"value":"/ through. Consider this code that forwards from one channel to another:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9442147,"byte_end":9442221,"line_start":432,"line_end":432,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9442226,"byte_end":9442229,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9442234,"byte_end":9442252,"line_start":434,"line_end":434,"column_start":5,"column_end":23}},{"value":"/ loop {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9442257,"byte_end":9442267,"line_start":435,"line_end":435,"column_start":5,"column_end":15}},{"value":"/   ready!(tx.poll_ready(cx))?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9442272,"byte_end":9442305,"line_start":436,"line_end":436,"column_start":5,"column_end":38}},{"value":"/   if let Some(item) = ready!(rx.poll_recv(cx)) {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9442310,"byte_end":9442362,"line_start":437,"line_end":437,"column_start":5,"column_end":57}},{"value":"/     tx.try_send(item)?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9442367,"byte_end":9442394,"line_start":438,"line_end":438,"column_start":5,"column_end":32}},{"value":"/   } else {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9442399,"byte_end":9442413,"line_start":439,"line_end":439,"column_start":5,"column_end":19}},{"value":"/     break;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9442418,"byte_end":9442432,"line_start":440,"line_end":440,"column_start":5,"column_end":19}},{"value":"/   }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9442437,"byte_end":9442444,"line_start":441,"line_end":441,"column_start":5,"column_end":12}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9442449,"byte_end":9442454,"line_start":442,"line_end":442,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9442459,"byte_end":9442466,"line_start":443,"line_end":443,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9442471,"byte_end":9442474,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ If many such forwarders exist, and they all forward into a single (cloned) `Sender`, then","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9442479,"byte_end":9442572,"line_start":445,"line_end":445,"column_start":5,"column_end":98}},{"value":"/ any number of forwarders may be waiting for `rx.poll_recv` at the same time. While they do,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9442577,"byte_end":9442672,"line_start":446,"line_end":446,"column_start":5,"column_end":100}},{"value":"/ they are effectively each reducing the channel's capacity by 1. If enough of these","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9442677,"byte_end":9442763,"line_start":447,"line_end":447,"column_start":5,"column_end":91}},{"value":"/ forwarders are idle, forwarders whose `rx` _do_ have elements will be unable to find a spot","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9442768,"byte_end":9442863,"line_start":448,"line_end":448,"column_start":5,"column_end":100}},{"value":"/ for them through `poll_ready`, and the system will deadlock.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9442868,"byte_end":9442932,"line_start":449,"line_end":449,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9442937,"byte_end":9442940,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ `disarm` solves this problem by allowing you to give up the reserved slot if you find that","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9442945,"byte_end":9443039,"line_start":451,"line_end":451,"column_start":5,"column_end":99}},{"value":"/ you have to block. We can then fix the code above by writing:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9443044,"byte_end":9443109,"line_start":452,"line_end":452,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9443114,"byte_end":9443117,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9443122,"byte_end":9443140,"line_start":454,"line_end":454,"column_start":5,"column_end":23}},{"value":"/ loop {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9443145,"byte_end":9443155,"line_start":455,"line_end":455,"column_start":5,"column_end":15}},{"value":"/   ready!(tx.poll_ready(cx))?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9443160,"byte_end":9443193,"line_start":456,"line_end":456,"column_start":5,"column_end":38}},{"value":"/   let item = rx.poll_recv(cx);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9443198,"byte_end":9443232,"line_start":457,"line_end":457,"column_start":5,"column_end":39}},{"value":"/   if let Poll::Ready(Ok(_)) = item {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9443237,"byte_end":9443277,"line_start":458,"line_end":458,"column_start":5,"column_end":45}},{"value":"/     // we're going to send the item below, so don't disarm","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9443282,"byte_end":9443344,"line_start":459,"line_end":459,"column_start":5,"column_end":67}},{"value":"/   } else {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9443349,"byte_end":9443363,"line_start":460,"line_end":460,"column_start":5,"column_end":19}},{"value":"/     // give up our send slot, we won't need it for a while","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9443368,"byte_end":9443430,"line_start":461,"line_end":461,"column_start":5,"column_end":67}},{"value":"/     tx.disarm();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9443435,"byte_end":9443455,"line_start":462,"line_end":462,"column_start":5,"column_end":25}},{"value":"/   }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9443460,"byte_end":9443467,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/   if let Some(item) = ready!(item) {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9443472,"byte_end":9443512,"line_start":464,"line_end":464,"column_start":5,"column_end":45}},{"value":"/     tx.try_send(item)?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9443517,"byte_end":9443544,"line_start":465,"line_end":465,"column_start":5,"column_end":32}},{"value":"/   } else {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9443549,"byte_end":9443563,"line_start":466,"line_end":466,"column_start":5,"column_end":19}},{"value":"/     break;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9443568,"byte_end":9443582,"line_start":467,"line_end":467,"column_start":5,"column_end":19}},{"value":"/   }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9443587,"byte_end":9443594,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9443599,"byte_end":9443604,"line_start":469,"line_end":469,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9443609,"byte_end":9443616,"line_start":470,"line_end":470,"column_start":5,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":7296},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/chan.rs","byte_start":9445626,"byte_end":9445632,"line_start":72,"line_end":72,"column_start":10,"column_end":16},"name":"Permit","qualname":"::sync::mpsc::chan::Semaphore::Permit","value":"type Permit;","parent":{"krate":0,"index":7295},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7470},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9469525,"byte_end":9469540,"line_start":12,"line_end":12,"column_start":12,"column_end":27},"name":"UnboundedSender","qualname":"::sync::mpsc::unbounded::UnboundedSender","value":"UnboundedSender {  }","parent":null,"children":[{"krate":0,"index":7472}],"decl_id":null,"docs":" Send values to the associated `UnboundedReceiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `UnboundedReceiver`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9469367,"byte_end":9469421,"line_start":8,"line_end":8,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9469422,"byte_end":9469425,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9469426,"byte_end":9469458,"line_start":10,"line_end":10,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9469459,"byte_end":9469513,"line_start":11,"line_end":11,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":7479},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9470118,"byte_end":9470135,"line_start":36,"line_end":36,"column_start":12,"column_end":29},"name":"UnboundedReceiver","qualname":"::sync::mpsc::unbounded::UnboundedReceiver","value":"UnboundedReceiver {  }","parent":null,"children":[{"krate":0,"index":7481}],"decl_id":null,"docs":" Receive values from the associated `UnboundedSender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `UnboundedSender`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9469957,"byte_end":9470014,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9470015,"byte_end":9470018,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9470019,"byte_end":9470051,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9470052,"byte_end":9470106,"line_start":35,"line_end":35,"column_start":1,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":7485},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9470946,"byte_end":9470963,"line_start":59,"line_end":59,"column_start":8,"column_end":25},"name":"unbounded_channel","qualname":"::sync::mpsc::unbounded::unbounded_channel","value":"pub fn unbounded_channel<T>() -> (UnboundedSender<T>, UnboundedReceiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an unbounded mpsc channel for communicating between asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Creates an unbounded mpsc channel for communicating between asynchronous","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9470434,"byte_end":9470510,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"/ tasks.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9470511,"byte_end":9470521,"line_start":50,"line_end":50,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9470522,"byte_end":9470525,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ A `send` on this channel will always succeed as long as the receive half has","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9470526,"byte_end":9470606,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ not been closed. If the receiver falls behind, messages will be arbitrarily","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9470607,"byte_end":9470686,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ buffered.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9470687,"byte_end":9470700,"line_start":54,"line_end":54,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9470701,"byte_end":9470704,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ **Note** that the amount of available system memory is an implicit bound to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9470705,"byte_end":9470784,"line_start":56,"line_end":56,"column_start":1,"column_end":80}},{"value":"/ the channel. Using an `unbounded` channel has the ability of causing the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9470785,"byte_end":9470861,"line_start":57,"line_end":57,"column_start":1,"column_end":77}},{"value":"/ process to run out of memory. In this case, the process will be aborted.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9470862,"byte_end":9470938,"line_start":58,"line_end":58,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":7491},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9471411,"byte_end":9471420,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UnboundedReceiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7492},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9472583,"byte_end":9472587,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnboundedReceiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9471513,"byte_end":9471559,"line_start":81,"line_end":81,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9471564,"byte_end":9471567,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ `None` is returned when all `Sender` halves have dropped, indicating","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9471572,"byte_end":9471644,"line_start":83,"line_end":83,"column_start":5,"column_end":77}},{"value":"/ that no further values can be sent on the channel.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9471649,"byte_end":9471703,"line_start":84,"line_end":84,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9471708,"byte_end":9471711,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9471716,"byte_end":9471730,"line_start":86,"line_end":86,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9471735,"byte_end":9471738,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9471743,"byte_end":9471750,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9471755,"byte_end":9471781,"line_start":89,"line_end":89,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9471786,"byte_end":9471789,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9471794,"byte_end":9471812,"line_start":91,"line_end":91,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9471817,"byte_end":9471838,"line_start":92,"line_end":92,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9471843,"byte_end":9471896,"line_start":93,"line_end":93,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9471901,"byte_end":9471904,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9471909,"byte_end":9471942,"line_start":95,"line_end":95,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9471947,"byte_end":9471985,"line_start":96,"line_end":96,"column_start":5,"column_end":43}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9471990,"byte_end":9472001,"line_start":97,"line_end":97,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9472006,"byte_end":9472009,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9472014,"byte_end":9472065,"line_start":99,"line_end":99,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9472070,"byte_end":9472112,"line_start":100,"line_end":100,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9472117,"byte_end":9472122,"line_start":101,"line_end":101,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9472127,"byte_end":9472134,"line_start":102,"line_end":102,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9472139,"byte_end":9472142,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9472147,"byte_end":9472171,"line_start":104,"line_end":104,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9472176,"byte_end":9472179,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9472184,"byte_end":9472191,"line_start":106,"line_end":106,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9472196,"byte_end":9472222,"line_start":107,"line_end":107,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9472227,"byte_end":9472230,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9472235,"byte_end":9472253,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9472258,"byte_end":9472279,"line_start":110,"line_end":110,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9472284,"byte_end":9472337,"line_start":111,"line_end":111,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9472342,"byte_end":9472345,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9472350,"byte_end":9472384,"line_start":113,"line_end":113,"column_start":5,"column_end":39}},{"value":"/     tx.send(\"world\").unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9472389,"byte_end":9472423,"line_start":114,"line_end":114,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9472428,"byte_end":9472431,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9472436,"byte_end":9472487,"line_start":116,"line_end":116,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9472492,"byte_end":9472543,"line_start":117,"line_end":117,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9472548,"byte_end":9472553,"line_start":118,"line_end":118,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9472558,"byte_end":9472565,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7497},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9473272,"byte_end":9473280,"line_start":137,"line_end":137,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<UnboundedReceiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without blocking.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without blocking.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9472709,"byte_end":9472782,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9472787,"byte_end":9472790,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This method will never block the caller in order to wait for data to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9472795,"byte_end":9472867,"line_start":128,"line_end":128,"column_start":5,"column_end":77}},{"value":"/ become available. Instead, this will always return immediately with","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9472872,"byte_end":9472943,"line_start":129,"line_end":129,"column_start":5,"column_end":76}},{"value":"/ a possible option of pending data on the channel.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9472948,"byte_end":9473001,"line_start":130,"line_end":130,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9473006,"byte_end":9473009,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9473014,"byte_end":9473086,"line_start":132,"line_end":132,"column_start":5,"column_end":77}},{"value":"/ block on a receiver.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9473091,"byte_end":9473115,"line_start":133,"line_end":133,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9473120,"byte_end":9473123,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Compared with recv, this function has two failure cases instead of","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9473128,"byte_end":9473198,"line_start":135,"line_end":135,"column_start":5,"column_end":75}},{"value":"/ one (one for disconnection, one for an empty buffer).","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9473203,"byte_end":9473260,"line_start":136,"line_end":136,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":7498},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9473598,"byte_end":9473603,"line_start":145,"line_end":145,"column_start":12,"column_end":17},"name":"close","qualname":"<UnboundedReceiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9473361,"byte_end":9473425,"line_start":141,"line_end":141,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9473430,"byte_end":9473433,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9473438,"byte_end":9473513,"line_start":143,"line_end":143,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9473518,"byte_end":9473586,"line_start":144,"line_end":144,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":7506},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9474726,"byte_end":9474730,"line_start":176,"line_end":176,"column_start":12,"column_end":16},"name":"send","qualname":"<UnboundedSender<T>>::send","value":"pub fn send(&Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `UnboundedSender` without blocking.","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `UnboundedSender` without blocking.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9474038,"byte_end":9474112,"line_start":164,"line_end":164,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9474117,"byte_end":9474120,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This method is not marked async because sending a message to an unbounded channel","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9474125,"byte_end":9474210,"line_start":166,"line_end":166,"column_start":5,"column_end":90}},{"value":"/ never requires any form of waiting. Because of this, the `send` method can be","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9474215,"byte_end":9474296,"line_start":167,"line_end":167,"column_start":5,"column_end":86}},{"value":"/ used in both synchronous and asynchronous code without problems.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9474301,"byte_end":9474369,"line_start":168,"line_end":168,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9474374,"byte_end":9474377,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9474382,"byte_end":9474455,"line_start":170,"line_end":170,"column_start":5,"column_end":78}},{"value":"/ being called or the [`UnboundedReceiver`] having been dropped, this","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9474460,"byte_end":9474531,"line_start":171,"line_end":171,"column_start":5,"column_end":76}},{"value":"/ function returns an error. The error includes the value passed to `send`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9474536,"byte_end":9474613,"line_start":172,"line_end":172,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9474618,"byte_end":9474621,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ [`close`]: UnboundedReceiver::close","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9474626,"byte_end":9474665,"line_start":174,"line_end":174,"column_start":5,"column_end":44}},{"value":"/ [`UnboundedReceiver`]: UnboundedReceiver","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9474670,"byte_end":9474714,"line_start":175,"line_end":175,"column_start":5,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":7511},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::sync::mpsc::error","value":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","parent":null,"children":[{"krate":0,"index":7512},{"krate":0,"index":7513},{"krate":0,"index":8383},{"krate":0,"index":8387},{"krate":0,"index":7514},{"krate":0,"index":7517},{"krate":0,"index":8390},{"krate":0,"index":8398},{"krate":0,"index":7519},{"krate":0,"index":7521},{"krate":0,"index":7524},{"krate":0,"index":8401},{"krate":0,"index":8404},{"krate":0,"index":7527},{"krate":0,"index":7529},{"krate":0,"index":8406},{"krate":0,"index":8414},{"krate":0,"index":8411},{"krate":0,"index":8412},{"krate":0,"index":7530},{"krate":0,"index":7532},{"krate":0,"index":8416},{"krate":0,"index":8419},{"krate":0,"index":7533},{"krate":0,"index":7535},{"krate":0,"index":7537},{"krate":0,"index":8426},{"krate":0,"index":8434},{"krate":0,"index":8421},{"krate":0,"index":8423}],"decl_id":null,"docs":" Channel error types\n","sig":null,"attributes":[{"value":"/ Channel error types","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9474848,"byte_end":9474871,"line_start":1,"line_end":1,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":8383},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9474975,"byte_end":9474984,"line_start":8,"line_end":8,"column_start":12,"column_end":21},"name":"SendError","qualname":"::sync::mpsc::error::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Sender`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Sender`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9474911,"byte_end":9474946,"line_start":6,"line_end":6,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":8386},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9474988,"byte_end":9474993,"line_start":8,"line_end":8,"column_start":25,"column_end":30},"name":"0","qualname":"::sync::mpsc::error::SendError::0","value":"T","parent":{"krate":0,"index":8383},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8392},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9475537,"byte_end":9475541,"line_start":26,"line_end":26,"column_start":5,"column_end":9},"name":"Full","qualname":"::sync::mpsc::error::TrySendError::Full","value":"TrySendError::Full(T)","parent":{"krate":0,"index":8390},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n currently full and sending would require blocking.\n","sig":null,"attributes":[{"value":"/ The data could not be sent on the channel because the channel is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9475405,"byte_end":9475473,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/ currently full and sending would require blocking.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9475478,"byte_end":9475532,"line_start":25,"line_end":25,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8395},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9475642,"byte_end":9475648,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::mpsc::error::TrySendError::Closed","value":"TrySendError::Closed(T)","parent":{"krate":0,"index":8390},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[{"value":"/ The receive half of the channel was explicitly closed or has been","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9475551,"byte_end":9475620,"line_start":28,"line_end":28,"column_start":5,"column_end":74}},{"value":"/ dropped.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9475625,"byte_end":9475637,"line_start":29,"line_end":29,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":8390},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9475383,"byte_end":9475395,"line_start":23,"line_end":23,"column_start":10,"column_end":22},"name":"TrySendError","qualname":"::sync::mpsc::error::TrySendError","value":"pub enum TrySendError<T> {\n\n    /// The data could not be sent on the channel because the channel is\n    /// currently full and sending would require blocking.\n    Full(T),\n\n    /// The receive half of the channel was explicitly closed or has been\n    /// dropped.\n    Closed(T),\n}","parent":null,"children":[{"krate":0,"index":8392},{"krate":0,"index":8395}],"decl_id":null,"docs":" This enumeration is the list of the possible error outcomes for the\n [try_send](super::Sender::try_send) method.\n","sig":null,"attributes":[{"value":"/ This enumeration is the list of the possible error outcomes for the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9475237,"byte_end":9475308,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ [try_send](super::Sender::try_send) method.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9475309,"byte_end":9475356,"line_start":21,"line_end":21,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":8401},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9476286,"byte_end":9476295,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"RecvError","qualname":"::sync::mpsc::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Receiver`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9476224,"byte_end":9476257,"line_start":56,"line_end":56,"column_start":1,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8407},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9476800,"byte_end":9476805,"line_start":76,"line_end":76,"column_start":5,"column_end":10},"name":"Empty","qualname":"::sync::mpsc::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":8406},"children":[],"decl_id":null,"docs":" This channel is currently empty, but the Sender(s) have not yet\n disconnected, so data may yet become available.\n","sig":null,"attributes":[{"value":"/ This channel is currently empty, but the Sender(s) have not yet","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9476672,"byte_end":9476739,"line_start":74,"line_end":74,"column_start":5,"column_end":72}},{"value":"/ disconnected, so data may yet become available.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9476744,"byte_end":9476795,"line_start":75,"line_end":75,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8409},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9476925,"byte_end":9476931,"line_start":79,"line_end":79,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::mpsc::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":8406},"children":[],"decl_id":null,"docs":" The channel's sending half has been closed, and there will\n never be any more data received on it.\n","sig":null,"attributes":[{"value":"/ The channel's sending half has been closed, and there will","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9476811,"byte_end":9476873,"line_start":77,"line_end":77,"column_start":5,"column_end":67}},{"value":"/ never be any more data received on it.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9476878,"byte_end":9476920,"line_start":78,"line_end":78,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":8406},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9476653,"byte_end":9476665,"line_start":73,"line_end":73,"column_start":10,"column_end":22},"name":"TryRecvError","qualname":"::sync::mpsc::error::TryRecvError","value":"pub enum TryRecvError {\n\n    /// This channel is currently empty, but the Sender(s) have not yet\n    /// disconnected, so data may yet become available.\n    Empty,\n\n    /// The channel's sending half has been closed, and there will\n    /// never be any more data received on it.\n    Closed,\n}","parent":null,"children":[{"krate":0,"index":8407},{"krate":0,"index":8409}],"decl_id":null,"docs":" This enumeration is the list of the possible reasons that try_recv\n could not return data when called.\n","sig":null,"attributes":[{"value":"/ This enumeration is the list of the possible reasons that try_recv","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9476506,"byte_end":9476576,"line_start":70,"line_end":70,"column_start":1,"column_end":71}},{"value":"/ could not return data when called.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9476577,"byte_end":9476615,"line_start":71,"line_end":71,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":8416},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9477422,"byte_end":9477433,"line_start":101,"line_end":101,"column_start":12,"column_end":23},"name":"ClosedError","qualname":"::sync::mpsc::error::ClosedError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by [`Sender::poll_ready`](super::Sender::poll_ready).\n","sig":null,"attributes":[{"value":"/ Error returned by [`Sender::poll_ready`](super::Sender::poll_ready).","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9477321,"byte_end":9477393,"line_start":99,"line_end":99,"column_start":1,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8428},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9478039,"byte_end":9478046,"line_start":125,"line_end":125,"column_start":9,"column_end":16},"name":"Timeout","qualname":"::sync::mpsc::error::SendTimeoutError::Timeout","value":"SendTimeoutError::Timeout(T)","parent":{"krate":0,"index":8426},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n full, and the timeout to send has elapsed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8431},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9478159,"byte_end":9478165,"line_start":129,"line_end":129,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::mpsc::error::SendTimeoutError::Closed","value":"SendTimeoutError::Closed(T)","parent":{"krate":0,"index":8426},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8426},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9477877,"byte_end":9477893,"line_start":122,"line_end":122,"column_start":14,"column_end":30},"name":"SendTimeoutError","qualname":"::sync::mpsc::error::SendTimeoutError","value":"pub enum SendTimeoutError<T> {\n\n    #[doc =\n      r\" The data could not be sent on the channel because the channel is\"]\n    #[doc = r\" full, and the timeout to send has elapsed.\"]\n    Timeout(T),\n\n    #[doc =\n      r\" The receive half of the channel was explicitly closed or has been\"]\n    #[doc = r\" dropped.\"]\n    Closed(T),\n}","parent":null,"children":[{"krate":0,"index":8428},{"krate":0,"index":8431}],"decl_id":null,"docs":" Error returned by [`Sender::send_timeout`](super::Sender::send_timeout)].\n","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":23137,"byte_end":23161,"line_start":324,"line_end":324,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":7548},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9483079,"byte_end":9483084,"line_start":118,"line_end":118,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::sync::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":7550},{"krate":0,"index":7551}],"decl_id":null,"docs":" An asynchronous `Mutex`-like type.","sig":null,"attributes":[{"value":"/ An asynchronous `Mutex`-like type.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9478826,"byte_end":9478864,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9478865,"byte_end":9478868,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type acts similarly to an asynchronous [`std::sync::Mutex`], with one","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9478869,"byte_end":9478947,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ major difference: [`lock`] does not block and the lock guard can be held","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9478948,"byte_end":9479024,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ across await points.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9479025,"byte_end":9479049,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9479050,"byte_end":9479053,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Which kind of mutex should you use?","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9479054,"byte_end":9479095,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9479096,"byte_end":9479099,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Contrary to popular belief, it is ok and often preferred to use the ordinary","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9479100,"byte_end":9479180,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/ [`Mutex`][std] from the standard library in asynchronous code. This section","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9479181,"byte_end":9479260,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ will help you decide on which kind of mutex you should use.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9479261,"byte_end":9479324,"line_start":19,"line_end":19,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9479325,"byte_end":9479328,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The primary use case of the async mutex is to provide shared mutable access","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9479329,"byte_end":9479408,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ to IO resources such as a database connection. If the data stored behind the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9479409,"byte_end":9479489,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ mutex is just data, it is often better to use a blocking mutex such as the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9479490,"byte_end":9479568,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ one in the standard library or [`parking_lot`]. This is because the feature","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9479569,"byte_end":9479648,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ that the async mutex offers over the blocking mutex is that it is possible","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9479649,"byte_end":9479727,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ to keep the mutex locked across an `.await` point, which is rarely necessary","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9479728,"byte_end":9479808,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ for data.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9479809,"byte_end":9479822,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9479823,"byte_end":9479826,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ A common pattern is to wrap the `Arc<Mutex<...>>` in a struct that provides","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9479827,"byte_end":9479906,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ non-async methods for performing operations on the data within, and only","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9479907,"byte_end":9479983,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ lock the mutex inside these methods. The [mini-redis] example provides an","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9479984,"byte_end":9480061,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/ illustration of this pattern.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9480062,"byte_end":9480095,"line_start":32,"line_end":32,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9480096,"byte_end":9480099,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Additionally, when you _do_ want shared access to an IO resource, it is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9480100,"byte_end":9480175,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ often better to spawn a task to manage the IO resource, and to use message","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9480176,"byte_end":9480254,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ passing to communicate with that task.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9480255,"byte_end":9480297,"line_start":36,"line_end":36,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9480298,"byte_end":9480301,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [std]: std::sync::Mutex","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9480302,"byte_end":9480329,"line_start":38,"line_end":38,"column_start":1,"column_end":28}},{"value":"/ [`parking_lot`]: https://docs.rs/parking_lot","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9480330,"byte_end":9480378,"line_start":39,"line_end":39,"column_start":1,"column_end":49}},{"value":"/ [mini-redis]: https://github.com/tokio-rs/mini-redis/blob/master/src/db.rs","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9480379,"byte_end":9480457,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9480458,"byte_end":9480461,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Examples:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9480462,"byte_end":9480477,"line_start":42,"line_end":42,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9480478,"byte_end":9480481,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9480482,"byte_end":9480500,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9480501,"byte_end":9480528,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9480529,"byte_end":9480552,"line_start":46,"line_end":46,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9480553,"byte_end":9480556,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9480557,"byte_end":9480575,"line_start":48,"line_end":48,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9480576,"byte_end":9480597,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/     let data1 = Arc::new(Mutex::new(0));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9480598,"byte_end":9480642,"line_start":50,"line_end":50,"column_start":1,"column_end":45}},{"value":"/     let data2 = Arc::clone(&data1);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9480643,"byte_end":9480682,"line_start":51,"line_end":51,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9480683,"byte_end":9480686,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9480687,"byte_end":9480720,"line_start":53,"line_end":53,"column_start":1,"column_end":34}},{"value":"/         let mut lock = data2.lock().await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9480721,"byte_end":9480767,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"/         *lock += 1;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9480768,"byte_end":9480791,"line_start":55,"line_end":55,"column_start":1,"column_end":24}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9480792,"byte_end":9480803,"line_start":56,"line_end":56,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9480804,"byte_end":9480807,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/     let mut lock = data1.lock().await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9480808,"byte_end":9480850,"line_start":58,"line_end":58,"column_start":1,"column_end":43}},{"value":"/     *lock += 1;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9480851,"byte_end":9480870,"line_start":59,"line_end":59,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9480871,"byte_end":9480876,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9480877,"byte_end":9480884,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9480885,"byte_end":9480888,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9480889,"byte_end":9480892,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9480893,"byte_end":9480911,"line_start":64,"line_end":64,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9480912,"byte_end":9480939,"line_start":65,"line_end":65,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9480940,"byte_end":9480963,"line_start":66,"line_end":66,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9480964,"byte_end":9480967,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9480968,"byte_end":9480986,"line_start":68,"line_end":68,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9480987,"byte_end":9481008,"line_start":69,"line_end":69,"column_start":1,"column_end":22}},{"value":"/     let count = Arc::new(Mutex::new(0));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9481009,"byte_end":9481053,"line_start":70,"line_end":70,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9481054,"byte_end":9481057,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/     for _ in 0..5 {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9481058,"byte_end":9481081,"line_start":72,"line_end":72,"column_start":1,"column_end":24}},{"value":"/         let my_count = Arc::clone(&count);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9481082,"byte_end":9481128,"line_start":73,"line_end":73,"column_start":1,"column_end":47}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9481129,"byte_end":9481166,"line_start":74,"line_end":74,"column_start":1,"column_end":38}},{"value":"/             for _ in 0..10 {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9481167,"byte_end":9481199,"line_start":75,"line_end":75,"column_start":1,"column_end":33}},{"value":"/                 let mut lock = my_count.lock().await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9481200,"byte_end":9481257,"line_start":76,"line_end":76,"column_start":1,"column_end":58}},{"value":"/                 *lock += 1;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9481258,"byte_end":9481289,"line_start":77,"line_end":77,"column_start":1,"column_end":32}},{"value":"/                 println!(\"{}\", lock);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9481290,"byte_end":9481331,"line_start":78,"line_end":78,"column_start":1,"column_end":42}},{"value":"/             }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9481332,"byte_end":9481349,"line_start":79,"line_end":79,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9481350,"byte_end":9481365,"line_start":80,"line_end":80,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9481366,"byte_end":9481375,"line_start":81,"line_end":81,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9481376,"byte_end":9481379,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9481380,"byte_end":9481394,"line_start":83,"line_end":83,"column_start":1,"column_end":15}},{"value":"/         if *count.lock().await >= 50 {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9481395,"byte_end":9481437,"line_start":84,"line_end":84,"column_start":1,"column_end":43}},{"value":"/             break;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9481438,"byte_end":9481460,"line_start":85,"line_end":85,"column_start":1,"column_end":23}},{"value":"/         }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9481461,"byte_end":9481474,"line_start":86,"line_end":86,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9481475,"byte_end":9481484,"line_start":87,"line_end":87,"column_start":1,"column_end":10}},{"value":"/     println!(\"Count hit 50.\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9481485,"byte_end":9481519,"line_start":88,"line_end":88,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9481520,"byte_end":9481525,"line_start":89,"line_end":89,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9481526,"byte_end":9481533,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/ There are a few things of note here to pay attention to in this example.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9481534,"byte_end":9481610,"line_start":91,"line_end":91,"column_start":1,"column_end":77}},{"value":"/ 1. The mutex is wrapped in an [`Arc`] to allow it to be shared across","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9481611,"byte_end":9481684,"line_start":92,"line_end":92,"column_start":1,"column_end":74}},{"value":"/    threads.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9481685,"byte_end":9481700,"line_start":93,"line_end":93,"column_start":1,"column_end":16}},{"value":"/ 2. Each spawned task obtains a lock and releases it on every iteration.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9481701,"byte_end":9481776,"line_start":94,"line_end":94,"column_start":1,"column_end":76}},{"value":"/ 3. Mutation of the data protected by the Mutex is done by de-referencing","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9481777,"byte_end":9481853,"line_start":95,"line_end":95,"column_start":1,"column_end":77}},{"value":"/    the obtained lock as seen on lines 12 and 19.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9481854,"byte_end":9481906,"line_start":96,"line_end":96,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9481907,"byte_end":9481910,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ Tokio's Mutex works in a simple FIFO (first in, first out) style where all","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9481911,"byte_end":9481989,"line_start":98,"line_end":98,"column_start":1,"column_end":79}},{"value":"/ calls to [`lock`] complete in the order they were performed. In that way the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9481990,"byte_end":9482070,"line_start":99,"line_end":99,"column_start":1,"column_end":81}},{"value":"/ Mutex is \"fair\" and predictable in how it distributes the locks to inner","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9482071,"byte_end":9482147,"line_start":100,"line_end":100,"column_start":1,"column_end":77}},{"value":"/ data. This is why the output of the program above is an in-order count to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9482148,"byte_end":9482225,"line_start":101,"line_end":101,"column_start":1,"column_end":78}},{"value":"/ 50. Locks are released and reacquired after every iteration, so basically,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9482226,"byte_end":9482304,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"/ each thread goes to the back of the line after it increments the value once.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9482305,"byte_end":9482385,"line_start":103,"line_end":103,"column_start":1,"column_end":81}},{"value":"/ Finally, since there is only a single valid lock at any given time, there is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9482386,"byte_end":9482466,"line_start":104,"line_end":104,"column_start":1,"column_end":81}},{"value":"/ no possibility of a race condition when mutating the inner value.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9482467,"byte_end":9482536,"line_start":105,"line_end":105,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9482537,"byte_end":9482540,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ Note that in contrast to [`std::sync::Mutex`], this implementation does not","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9482541,"byte_end":9482620,"line_start":107,"line_end":107,"column_start":1,"column_end":80}},{"value":"/ poison the mutex when a thread holding the [`MutexGuard`] panics. In such a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9482621,"byte_end":9482700,"line_start":108,"line_end":108,"column_start":1,"column_end":80}},{"value":"/ case, the mutex will be unlocked. If the panic is caught, this might leave","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9482701,"byte_end":9482779,"line_start":109,"line_end":109,"column_start":1,"column_end":79}},{"value":"/ the data protected by the mutex in an inconsistent state.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9482780,"byte_end":9482841,"line_start":110,"line_end":110,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9482842,"byte_end":9482845,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@Mutex","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9482846,"byte_end":9482873,"line_start":112,"line_end":112,"column_start":1,"column_end":28}},{"value":"/ [`MutexGuard`]: struct@MutexGuard","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9482874,"byte_end":9482911,"line_start":113,"line_end":113,"column_start":1,"column_end":38}},{"value":"/ [`Arc`]: struct@std::sync::Arc","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9482912,"byte_end":9482946,"line_start":114,"line_end":114,"column_start":1,"column_end":35}},{"value":"/ [`std::sync::Mutex`]: struct@std::sync::Mutex","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9482947,"byte_end":9482996,"line_start":115,"line_end":115,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9482997,"byte_end":9483034,"line_start":116,"line_end":116,"column_start":1,"column_end":38}},{"value":"/ [`lock`]: method@Mutex::lock","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9483035,"byte_end":9483067,"line_start":117,"line_end":117,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":7552},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9483513,"byte_end":9483523,"line_start":131,"line_end":131,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::sync::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":7555}],"decl_id":null,"docs":" A handle to a held `Mutex`.","sig":null,"attributes":[{"value":"/ A handle to a held `Mutex`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9483152,"byte_end":9483183,"line_start":123,"line_end":123,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9483184,"byte_end":9483187,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9483188,"byte_end":9483267,"line_start":125,"line_end":125,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally borrows the `Mutex`, so the mutex will not be","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9483268,"byte_end":9483343,"line_start":126,"line_end":126,"column_start":1,"column_end":76}},{"value":"/ dropped while a guard exists.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9483344,"byte_end":9483377,"line_start":127,"line_end":127,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9483378,"byte_end":9483381,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9483382,"byte_end":9483460,"line_start":129,"line_end":129,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9483461,"byte_end":9483501,"line_start":130,"line_end":130,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":7556},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9484310,"byte_end":9484325,"line_start":150,"line_end":150,"column_start":12,"column_end":27},"name":"OwnedMutexGuard","qualname":"::sync::mutex::OwnedMutexGuard","value":"OwnedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":7558}],"decl_id":null,"docs":" An owned handle to a held `Mutex`.","sig":null,"attributes":[{"value":"/ An owned handle to a held `Mutex`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9483568,"byte_end":9483606,"line_start":135,"line_end":135,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9483607,"byte_end":9483610,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ This guard is only available from a `Mutex` that is wrapped in an [`Arc`]. It","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9483611,"byte_end":9483692,"line_start":137,"line_end":137,"column_start":1,"column_end":82}},{"value":"/ is identical to `MutexGuard`, except that rather than borrowing the `Mutex`,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9483693,"byte_end":9483773,"line_start":138,"line_end":138,"column_start":1,"column_end":81}},{"value":"/ it clones the `Arc`, incrementing the reference count. This means that","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9483774,"byte_end":9483848,"line_start":139,"line_end":139,"column_start":1,"column_end":75}},{"value":"/ unlike `MutexGuard`, it will have the `'static` lifetime.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9483849,"byte_end":9483910,"line_start":140,"line_end":140,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9483911,"byte_end":9483914,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9483915,"byte_end":9483994,"line_start":142,"line_end":142,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally keeps a reference-couned pointer to the original","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9483995,"byte_end":9484073,"line_start":143,"line_end":143,"column_start":1,"column_end":79}},{"value":"/ `Mutex`, so even if the lock goes away, the guard remains valid.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9484074,"byte_end":9484142,"line_start":144,"line_end":144,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9484143,"byte_end":9484146,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9484147,"byte_end":9484225,"line_start":146,"line_end":146,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9484226,"byte_end":9484266,"line_start":147,"line_end":147,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9484267,"byte_end":9484270,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9484271,"byte_end":9484298,"line_start":149,"line_end":149,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":8437},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9485033,"byte_end":9485045,"line_start":168,"line_end":168,"column_start":12,"column_end":24},"name":"TryLockError","qualname":"::sync::mutex::TryLockError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Mutex::try_lock`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Mutex::try_lock`] function.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9484825,"byte_end":9484882,"line_start":162,"line_end":162,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9484883,"byte_end":9484886,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ A `try_lock` operation can only fail if the mutex is already locked.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9484887,"byte_end":9484959,"line_start":164,"line_end":164,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9484960,"byte_end":9484963,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ [`Mutex::try_lock`]: Mutex::try_lock","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9484964,"byte_end":9485004,"line_start":166,"line_end":166,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":7572},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9486261,"byte_end":9486264,"line_start":212,"line_end":212,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"pub fn new(T) -> Self where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new lock in an unlocked state ready for use.","sig":null,"attributes":[{"value":"/ Creates a new lock in an unlocked state ready for use.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9486058,"byte_end":9486116,"line_start":203,"line_end":203,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9486121,"byte_end":9486124,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9486129,"byte_end":9486143,"line_start":205,"line_end":205,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9486148,"byte_end":9486151,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9486156,"byte_end":9486163,"line_start":207,"line_end":207,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9486168,"byte_end":9486195,"line_start":208,"line_end":208,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9486200,"byte_end":9486203,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ let lock = Mutex::new(5);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9486208,"byte_end":9486237,"line_start":210,"line_end":210,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9486242,"byte_end":9486249,"line_start":211,"line_end":211,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7573},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9486889,"byte_end":9486893,"line_start":239,"line_end":239,"column_start":18,"column_end":22},"name":"lock","qualname":"<Mutex<T>>::lock","value":"pub async fn lock<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task\n to yield until the lock has been acquired.\n When the lock has been acquired, function returns a [`MutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9486429,"byte_end":9486475,"line_start":222,"line_end":222,"column_start":5,"column_end":51}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9486480,"byte_end":9486526,"line_start":223,"line_end":223,"column_start":5,"column_end":51}},{"value":"/ When the lock has been acquired, function returns a [`MutexGuard`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9486531,"byte_end":9486602,"line_start":224,"line_end":224,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9486607,"byte_end":9486610,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9486615,"byte_end":9486629,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9486634,"byte_end":9486637,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9486642,"byte_end":9486649,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9486654,"byte_end":9486681,"line_start":229,"line_end":229,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9486686,"byte_end":9486689,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9486694,"byte_end":9486712,"line_start":231,"line_end":231,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9486717,"byte_end":9486738,"line_start":232,"line_end":232,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9486743,"byte_end":9486777,"line_start":233,"line_end":233,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9486782,"byte_end":9486785,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.lock().await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9486790,"byte_end":9486829,"line_start":235,"line_end":235,"column_start":5,"column_end":44}},{"value":"/     *n = 2;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9486834,"byte_end":9486849,"line_start":236,"line_end":236,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9486854,"byte_end":9486859,"line_start":237,"line_end":237,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9486864,"byte_end":9486871,"line_start":238,"line_end":238,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7576},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9487920,"byte_end":9487930,"line_start":270,"line_end":270,"column_start":18,"column_end":28},"name":"lock_owned","qualname":"<Mutex<T>>::lock_owned","value":"pub async fn lock_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task to yield until the lock has\n been acquired. When the lock has been acquired, this returns an\n [`OwnedMutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task to yield until the lock has","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9486999,"byte_end":9487073,"line_start":244,"line_end":244,"column_start":5,"column_end":79}},{"value":"/ been acquired. When the lock has been acquired, this returns an","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9487078,"byte_end":9487145,"line_start":245,"line_end":245,"column_start":5,"column_end":72}},{"value":"/ [`OwnedMutexGuard`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9487150,"byte_end":9487174,"line_start":246,"line_end":246,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9487179,"byte_end":9487182,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::lock`], except that the returned","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9487187,"byte_end":9487260,"line_start":248,"line_end":248,"column_start":5,"column_end":78}},{"value":"/ guard references the `Mutex` with an [`Arc`] rather than by borrowing","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9487265,"byte_end":9487338,"line_start":249,"line_end":249,"column_start":5,"column_end":78}},{"value":"/ it. Therefore, the `Mutex` must be wrapped in an `Arc` to call this","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9487343,"byte_end":9487414,"line_start":250,"line_end":250,"column_start":5,"column_end":76}},{"value":"/ method, and the guard will live for the `'static` lifetime, as it keeps","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9487419,"byte_end":9487494,"line_start":251,"line_end":251,"column_start":5,"column_end":80}},{"value":"/ the `Mutex` alive by holding an `Arc`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9487499,"byte_end":9487541,"line_start":252,"line_end":252,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9487546,"byte_end":9487549,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9487554,"byte_end":9487568,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9487573,"byte_end":9487576,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9487581,"byte_end":9487588,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9487593,"byte_end":9487620,"line_start":257,"line_end":257,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9487625,"byte_end":9487648,"line_start":258,"line_end":258,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9487653,"byte_end":9487656,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9487661,"byte_end":9487679,"line_start":260,"line_end":260,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9487684,"byte_end":9487705,"line_start":261,"line_end":261,"column_start":5,"column_end":26}},{"value":"/     let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9487710,"byte_end":9487754,"line_start":262,"line_end":262,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9487759,"byte_end":9487762,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.clone().lock_owned().await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9487767,"byte_end":9487820,"line_start":264,"line_end":264,"column_start":5,"column_end":58}},{"value":"/     *n = 2;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9487825,"byte_end":9487840,"line_start":265,"line_end":265,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9487845,"byte_end":9487850,"line_start":266,"line_end":266,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9487855,"byte_end":9487862,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9487867,"byte_end":9487870,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9487875,"byte_end":9487902,"line_start":269,"line_end":269,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7583},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9488807,"byte_end":9488815,"line_start":300,"line_end":300,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"pub fn try_lock(&Self) -> Result<MutexGuard<, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the\n lock is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9488339,"byte_end":9488408,"line_start":283,"line_end":283,"column_start":5,"column_end":74}},{"value":"/ lock is currently held somewhere else.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9488413,"byte_end":9488455,"line_start":284,"line_end":284,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9488460,"byte_end":9488463,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9488468,"byte_end":9488502,"line_start":286,"line_end":286,"column_start":5,"column_end":39}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9488507,"byte_end":9488521,"line_start":287,"line_end":287,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9488526,"byte_end":9488529,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9488534,"byte_end":9488541,"line_start":289,"line_end":289,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9488546,"byte_end":9488573,"line_start":290,"line_end":290,"column_start":5,"column_end":32}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9488578,"byte_end":9488641,"line_start":291,"line_end":291,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9488646,"byte_end":9488649,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(1);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9488654,"byte_end":9488684,"line_start":293,"line_end":293,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9488689,"byte_end":9488692,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.try_lock()?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9488697,"byte_end":9488727,"line_start":295,"line_end":295,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9488732,"byte_end":9488754,"line_start":296,"line_end":296,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9488759,"byte_end":9488771,"line_start":297,"line_end":297,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9488776,"byte_end":9488783,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9488788,"byte_end":9488795,"line_start":299,"line_end":299,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7584},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9489936,"byte_end":9489950,"line_start":331,"line_end":331,"column_start":12,"column_end":26},"name":"try_lock_owned","qualname":"<Mutex<T>>::try_lock_owned","value":"pub fn try_lock_owned(Arc<Self>) -> Result<OwnedMutexGuard<T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the lock\n is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the lock","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9489024,"byte_end":9489098,"line_start":307,"line_end":307,"column_start":5,"column_end":79}},{"value":"/ is currently held somewhere else.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9489103,"byte_end":9489140,"line_start":308,"line_end":308,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9489145,"byte_end":9489148,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::try_lock`], except that the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9489153,"byte_end":9489221,"line_start":310,"line_end":310,"column_start":5,"column_end":73}},{"value":"/ returned  guard references the `Mutex` with an [`Arc`] rather than by","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9489226,"byte_end":9489299,"line_start":311,"line_end":311,"column_start":5,"column_end":78}},{"value":"/ borrowing it. Therefore, the `Mutex` must be wrapped in an `Arc` to call","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9489304,"byte_end":9489380,"line_start":312,"line_end":312,"column_start":5,"column_end":81}},{"value":"/ this method, and the guard will live for the `'static` lifetime, as it","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9489385,"byte_end":9489459,"line_start":313,"line_end":313,"column_start":5,"column_end":79}},{"value":"/ keeps the `Mutex` alive by holding an `Arc`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9489464,"byte_end":9489512,"line_start":314,"line_end":314,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9489517,"byte_end":9489520,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9489525,"byte_end":9489559,"line_start":316,"line_end":316,"column_start":5,"column_end":39}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9489564,"byte_end":9489591,"line_start":317,"line_end":317,"column_start":5,"column_end":32}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9489596,"byte_end":9489610,"line_start":318,"line_end":318,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9489615,"byte_end":9489618,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9489623,"byte_end":9489630,"line_start":320,"line_end":320,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9489635,"byte_end":9489662,"line_start":321,"line_end":321,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9489667,"byte_end":9489690,"line_start":322,"line_end":322,"column_start":5,"column_end":28}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9489695,"byte_end":9489758,"line_start":323,"line_end":323,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9489763,"byte_end":9489766,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9489771,"byte_end":9489811,"line_start":325,"line_end":325,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9489816,"byte_end":9489819,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.clone().try_lock_owned()?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9489824,"byte_end":9489868,"line_start":327,"line_end":327,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9489873,"byte_end":9489895,"line_start":328,"line_end":328,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9489900,"byte_end":9489912,"line_start":329,"line_end":329,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9489917,"byte_end":9489924,"line_start":330,"line_end":330,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7585},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9490508,"byte_end":9490518,"line_start":352,"line_end":352,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"pub fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes the mutex, returning the underlying data.\n # Examples","sig":null,"attributes":[{"value":"/ Consumes the mutex, returning the underlying data.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9490175,"byte_end":9490229,"line_start":338,"line_end":338,"column_start":5,"column_end":59}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9490234,"byte_end":9490248,"line_start":339,"line_end":339,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9490253,"byte_end":9490256,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9490261,"byte_end":9490268,"line_start":341,"line_end":341,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9490273,"byte_end":9490300,"line_start":342,"line_end":342,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9490305,"byte_end":9490308,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9490313,"byte_end":9490331,"line_start":344,"line_end":344,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9490336,"byte_end":9490357,"line_start":345,"line_end":345,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9490362,"byte_end":9490396,"line_start":346,"line_end":346,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9490401,"byte_end":9490404,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/     let n = mutex.into_inner();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9490409,"byte_end":9490444,"line_start":348,"line_end":348,"column_start":5,"column_end":40}},{"value":"/     assert_eq!(n, 1);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9490449,"byte_end":9490474,"line_start":349,"line_end":349,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9490479,"byte_end":9490484,"line_start":350,"line_end":350,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9490489,"byte_end":9490496,"line_start":351,"line_end":351,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8442},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9495923,"byte_end":9495929,"line_start":102,"line_end":102,"column_start":12,"column_end":18},"name":"Notify","qualname":"::sync::notify::Notify","value":"Notify {  }","parent":null,"children":[{"krate":0,"index":8443},{"krate":0,"index":8444}],"decl_id":null,"docs":" Notify a single task to wake up.","sig":null,"attributes":[{"value":"/ Notify a single task to wake up.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9493113,"byte_end":9493149,"line_start":13,"line_end":13,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9493150,"byte_end":9493153,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ `Notify` provides a basic mechanism to notify a single task of an event.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9493154,"byte_end":9493230,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/ `Notify` itself does not carry any data. Instead, it is to be used to signal","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9493231,"byte_end":9493311,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ another task to perform an operation.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9493312,"byte_end":9493353,"line_start":17,"line_end":17,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9493354,"byte_end":9493357,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ `Notify` can be thought of as a [`Semaphore`] starting with 0 permits.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9493358,"byte_end":9493432,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ [`notified().await`] waits for a permit to become available, and [`notify()`]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9493433,"byte_end":9493514,"line_start":20,"line_end":20,"column_start":1,"column_end":82}},{"value":"/ sets a permit **if there currently are no available permits**.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9493515,"byte_end":9493581,"line_start":21,"line_end":21,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9493582,"byte_end":9493585,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The synchronization details of `Notify` are similar to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9493586,"byte_end":9493644,"line_start":23,"line_end":23,"column_start":1,"column_end":59}},{"value":"/ [`thread::park`][park] and [`Thread::unpark`][unpark] from std. A [`Notify`]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9493645,"byte_end":9493725,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ value contains a single permit. [`notified().await`] waits for the permit to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9493726,"byte_end":9493806,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ be made available, consumes the permit, and resumes.  [`notify()`] sets the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9493807,"byte_end":9493886,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ permit, waking a pending task if there is one.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9493887,"byte_end":9493937,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9493938,"byte_end":9493941,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ If `notify()` is called **before** `notfied().await`, then the next call to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9493942,"byte_end":9494021,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ `notified().await` will complete immediately, consuming the permit. Any","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9494022,"byte_end":9494097,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ subsequent calls to `notified().await` will wait for a new permit.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9494098,"byte_end":9494168,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9494169,"byte_end":9494172,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ If `notify()` is called **multiple** times before `notified().await`, only a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9494173,"byte_end":9494253,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ **single** permit is stored. The next call to `notified().await` will","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9494254,"byte_end":9494327,"line_start":34,"line_end":34,"column_start":1,"column_end":74}},{"value":"/ complete immediately, but the one after will wait for a new permit.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9494328,"byte_end":9494399,"line_start":35,"line_end":35,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9494400,"byte_end":9494403,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9494404,"byte_end":9494418,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9494419,"byte_end":9494422,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Basic usage.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9494423,"byte_end":9494439,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9494440,"byte_end":9494443,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9494444,"byte_end":9494451,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9494452,"byte_end":9494480,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9494481,"byte_end":9494504,"line_start":43,"line_end":43,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9494505,"byte_end":9494508,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9494509,"byte_end":9494527,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9494528,"byte_end":9494549,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9494550,"byte_end":9494595,"line_start":47,"line_end":47,"column_start":1,"column_end":46}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9494596,"byte_end":9494633,"line_start":48,"line_end":48,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9494634,"byte_end":9494637,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9494638,"byte_end":9494671,"line_start":50,"line_end":50,"column_start":1,"column_end":34}},{"value":"/         notify2.notified().await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9494672,"byte_end":9494709,"line_start":51,"line_end":51,"column_start":1,"column_end":38}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9494710,"byte_end":9494756,"line_start":52,"line_end":52,"column_start":1,"column_end":47}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9494757,"byte_end":9494768,"line_start":53,"line_end":53,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9494769,"byte_end":9494772,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9494773,"byte_end":9494814,"line_start":55,"line_end":55,"column_start":1,"column_end":42}},{"value":"/     notify.notify();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9494815,"byte_end":9494839,"line_start":56,"line_end":56,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9494840,"byte_end":9494845,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9494846,"byte_end":9494853,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9494854,"byte_end":9494857,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Unbound mpsc channel.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9494858,"byte_end":9494883,"line_start":60,"line_end":60,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9494884,"byte_end":9494887,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9494888,"byte_end":9494895,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9494896,"byte_end":9494924,"line_start":63,"line_end":63,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9494925,"byte_end":9494928,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ use std::collections::VecDeque;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9494929,"byte_end":9494964,"line_start":65,"line_end":65,"column_start":1,"column_end":36}},{"value":"/ use std::sync::Mutex;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9494965,"byte_end":9494990,"line_start":66,"line_end":66,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9494991,"byte_end":9494994,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ struct Channel<T> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9494995,"byte_end":9495018,"line_start":68,"line_end":68,"column_start":1,"column_end":24}},{"value":"/     values: Mutex<VecDeque<T>>,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9495019,"byte_end":9495054,"line_start":69,"line_end":69,"column_start":1,"column_end":36}},{"value":"/     notify: Notify,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9495055,"byte_end":9495078,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9495079,"byte_end":9495084,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9495085,"byte_end":9495088,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ impl<T> Channel<T> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9495089,"byte_end":9495113,"line_start":73,"line_end":73,"column_start":1,"column_end":25}},{"value":"/     pub fn send(&self, value: T) {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9495114,"byte_end":9495152,"line_start":74,"line_end":74,"column_start":1,"column_end":39}},{"value":"/         self.values.lock().unwrap()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9495153,"byte_end":9495192,"line_start":75,"line_end":75,"column_start":1,"column_end":40}},{"value":"/             .push_back(value);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9495193,"byte_end":9495227,"line_start":76,"line_end":76,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9495228,"byte_end":9495231,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/         // Notify the consumer a value is available","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9495232,"byte_end":9495287,"line_start":78,"line_end":78,"column_start":1,"column_end":56}},{"value":"/         self.notify.notify();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9495288,"byte_end":9495321,"line_start":79,"line_end":79,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9495322,"byte_end":9495331,"line_start":80,"line_end":80,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9495332,"byte_end":9495335,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/     pub async fn recv(&self) -> T {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9495336,"byte_end":9495375,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"/         loop {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9495376,"byte_end":9495394,"line_start":83,"line_end":83,"column_start":1,"column_end":19}},{"value":"/             // Drain values","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9495395,"byte_end":9495426,"line_start":84,"line_end":84,"column_start":1,"column_end":32}},{"value":"/             if let Some(value) = self.values.lock().unwrap().pop_front() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9495427,"byte_end":9495505,"line_start":85,"line_end":85,"column_start":1,"column_end":79}},{"value":"/                 return value;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9495506,"byte_end":9495539,"line_start":86,"line_end":86,"column_start":1,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9495540,"byte_end":9495557,"line_start":87,"line_end":87,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9495558,"byte_end":9495561,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/             // Wait for values to be available","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9495562,"byte_end":9495612,"line_start":89,"line_end":89,"column_start":1,"column_end":51}},{"value":"/             self.notify.notified().await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9495613,"byte_end":9495658,"line_start":90,"line_end":90,"column_start":1,"column_end":46}},{"value":"/         }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9495659,"byte_end":9495672,"line_start":91,"line_end":91,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9495673,"byte_end":9495682,"line_start":92,"line_end":92,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9495683,"byte_end":9495688,"line_start":93,"line_end":93,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9495689,"byte_end":9495696,"line_start":94,"line_end":94,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9495697,"byte_end":9495700,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ [park]: std::thread::park","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9495701,"byte_end":9495730,"line_start":96,"line_end":96,"column_start":1,"column_end":30}},{"value":"/ [unpark]: std::thread::Thread::unpark","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9495731,"byte_end":9495772,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9495773,"byte_end":9495817,"line_start":98,"line_end":98,"column_start":1,"column_end":45}},{"value":"/ [`notify()`]: Notify::notify()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9495818,"byte_end":9495852,"line_start":99,"line_end":99,"column_start":1,"column_end":35}},{"value":"/ [`Semaphore`]: crate::sync::Semaphore","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9495853,"byte_end":9495894,"line_start":100,"line_end":100,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":7656},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9497161,"byte_end":9497164,"line_start":164,"line_end":164,"column_start":12,"column_end":15},"name":"new","qualname":"<Notify>::new","value":"pub fn new() -> Notify","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Notify`, initialized without a permit.","sig":null,"attributes":[{"value":"/ Create a new `Notify`, initialized without a permit.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9496957,"byte_end":9497013,"line_start":155,"line_end":155,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9497018,"byte_end":9497021,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9497026,"byte_end":9497040,"line_start":157,"line_end":157,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9497045,"byte_end":9497048,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9497053,"byte_end":9497060,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9497065,"byte_end":9497093,"line_start":160,"line_end":160,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9497098,"byte_end":9497101,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ let notify = Notify::new();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9497106,"byte_end":9497137,"line_start":162,"line_end":162,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9497142,"byte_end":9497149,"line_start":163,"line_end":163,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7657},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9498236,"byte_end":9498244,"line_start":200,"line_end":200,"column_start":18,"column_end":26},"name":"notified","qualname":"<Notify>::notified","value":"pub async fn notified<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for a notification.","sig":null,"attributes":[{"value":"/ Wait for a notification.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9497306,"byte_end":9497334,"line_start":171,"line_end":171,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9497339,"byte_end":9497342,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Each `Notify` value holds a single permit. If a permit is available from","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9497347,"byte_end":9497423,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/ an earlier call to [`notify()`], then `notified().await` will complete","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9497428,"byte_end":9497502,"line_start":174,"line_end":174,"column_start":5,"column_end":79}},{"value":"/ immediately, consuming that permit. Otherwise, `notified().await` waits","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9497507,"byte_end":9497582,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/ for a permit to be made available by the next call to `notify()`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9497587,"byte_end":9497656,"line_start":176,"line_end":176,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9497661,"byte_end":9497664,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ [`notify()`]: Notify::notify","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9497669,"byte_end":9497701,"line_start":178,"line_end":178,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9497706,"byte_end":9497709,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9497714,"byte_end":9497728,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9497733,"byte_end":9497736,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9497741,"byte_end":9497748,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9497753,"byte_end":9497781,"line_start":183,"line_end":183,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9497786,"byte_end":9497809,"line_start":184,"line_end":184,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9497814,"byte_end":9497817,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9497822,"byte_end":9497840,"line_start":186,"line_end":186,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9497845,"byte_end":9497866,"line_start":187,"line_end":187,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9497871,"byte_end":9497916,"line_start":188,"line_end":188,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9497921,"byte_end":9497958,"line_start":189,"line_end":189,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9497963,"byte_end":9497966,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9497971,"byte_end":9498004,"line_start":191,"line_end":191,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9498009,"byte_end":9498046,"line_start":192,"line_end":192,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9498051,"byte_end":9498097,"line_start":193,"line_end":193,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9498102,"byte_end":9498113,"line_start":194,"line_end":194,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9498118,"byte_end":9498121,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9498126,"byte_end":9498167,"line_start":196,"line_end":196,"column_start":5,"column_end":46}},{"value":"/     notify.notify();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9498172,"byte_end":9498196,"line_start":197,"line_end":197,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9498201,"byte_end":9498206,"line_start":198,"line_end":198,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9498211,"byte_end":9498218,"line_start":199,"line_end":199,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7660},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9499740,"byte_end":9499746,"line_start":248,"line_end":248,"column_start":12,"column_end":18},"name":"notify","qualname":"<Notify>::notify","value":"pub fn notify(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Notifies a waiting task","sig":null,"attributes":[{"value":"/ Notifies a waiting task","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9498581,"byte_end":9498608,"line_start":214,"line_end":214,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9498613,"byte_end":9498616,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ If a task is currently waiting, that task is notified. Otherwise, a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9498621,"byte_end":9498692,"line_start":216,"line_end":216,"column_start":5,"column_end":76}},{"value":"/ permit is stored in this `Notify` value and the **next** call to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9498697,"byte_end":9498765,"line_start":217,"line_end":217,"column_start":5,"column_end":73}},{"value":"/ [`notified().await`] will complete immediately consuming the permit made","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9498770,"byte_end":9498846,"line_start":218,"line_end":218,"column_start":5,"column_end":81}},{"value":"/ available by this call to `notify()`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9498851,"byte_end":9498892,"line_start":219,"line_end":219,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9498897,"byte_end":9498900,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ At most one permit may be stored by `Notify`. Many sequential calls to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9498905,"byte_end":9498979,"line_start":221,"line_end":221,"column_start":5,"column_end":79}},{"value":"/ `notify` will result in a single permit being stored. The next call to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9498984,"byte_end":9499058,"line_start":222,"line_end":222,"column_start":5,"column_end":79}},{"value":"/ `notified().await` will complete immediately, but the one after that","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9499063,"byte_end":9499135,"line_start":223,"line_end":223,"column_start":5,"column_end":77}},{"value":"/ will wait.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9499140,"byte_end":9499154,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9499159,"byte_end":9499162,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9499167,"byte_end":9499211,"line_start":226,"line_end":226,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9499216,"byte_end":9499219,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9499224,"byte_end":9499238,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9499243,"byte_end":9499246,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9499251,"byte_end":9499258,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9499263,"byte_end":9499291,"line_start":231,"line_end":231,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9499296,"byte_end":9499319,"line_start":232,"line_end":232,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9499324,"byte_end":9499327,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9499332,"byte_end":9499350,"line_start":234,"line_end":234,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9499355,"byte_end":9499376,"line_start":235,"line_end":235,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9499381,"byte_end":9499426,"line_start":236,"line_end":236,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9499431,"byte_end":9499468,"line_start":237,"line_end":237,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9499473,"byte_end":9499476,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9499481,"byte_end":9499514,"line_start":239,"line_end":239,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9499519,"byte_end":9499556,"line_start":240,"line_end":240,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9499561,"byte_end":9499607,"line_start":241,"line_end":241,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9499612,"byte_end":9499623,"line_start":242,"line_end":242,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9499628,"byte_end":9499631,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9499636,"byte_end":9499677,"line_start":244,"line_end":244,"column_start":5,"column_end":46}},{"value":"/     notify.notify();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9499682,"byte_end":9499706,"line_start":245,"line_end":245,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9499711,"byte_end":9499716,"line_start":246,"line_end":246,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9499721,"byte_end":9499728,"line_start":247,"line_end":247,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":7682},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oneshot","qualname":"::sync::oneshot","value":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","parent":null,"children":[{"krate":0,"index":7683},{"krate":0,"index":7684},{"krate":0,"index":7685},{"krate":0,"index":7686},{"krate":0,"index":7687},{"krate":0,"index":7688},{"krate":0,"index":7689},{"krate":0,"index":7690},{"krate":0,"index":7691},{"krate":0,"index":7692},{"krate":0,"index":16053},{"krate":0,"index":7693},{"krate":0,"index":16055},{"krate":0,"index":7694},{"krate":0,"index":7695},{"krate":0,"index":16057},{"krate":0,"index":7696},{"krate":0,"index":16059},{"krate":0,"index":7697},{"krate":0,"index":7698},{"krate":0,"index":7699},{"krate":0,"index":7700},{"krate":0,"index":8471},{"krate":0,"index":8474},{"krate":0,"index":8477},{"krate":0,"index":8480},{"krate":0,"index":7701},{"krate":0,"index":7709},{"krate":0,"index":7710},{"krate":0,"index":8508},{"krate":0,"index":8512},{"krate":0,"index":8511},{"krate":0,"index":7716},{"krate":0,"index":7718},{"krate":0,"index":7731},{"krate":0,"index":7734},{"krate":0,"index":7738},{"krate":0,"index":7741},{"krate":0,"index":7745},{"krate":0,"index":7769},{"krate":0,"index":7771},{"krate":0,"index":7773},{"krate":0,"index":7777},{"krate":0,"index":7781},{"krate":0,"index":7782},{"krate":0,"index":7783},{"krate":0,"index":7784},{"krate":0,"index":7785},{"krate":0,"index":7799}],"decl_id":null,"docs":" A channel for sending a single message between asynchronous tasks.\n","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":21286,"byte_end":21310,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"/ A channel for sending a single message between asynchronous tasks.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9511522,"byte_end":9511592,"line_start":3,"line_end":3,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":8471},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9512071,"byte_end":9512077,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::oneshot::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":8473}],"decl_id":null,"docs":" Sends a value to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Sends a value to the associated `Receiver`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9511924,"byte_end":9511971,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9511972,"byte_end":9511975,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9511976,"byte_end":9512042,"line_start":19,"line_end":19,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":8477},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9512269,"byte_end":9512277,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::oneshot::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":8479}],"decl_id":null,"docs":" Receive a value from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receive a value from the associated `Sender`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9512120,"byte_end":9512169,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9512170,"byte_end":9512173,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9512174,"byte_end":9512240,"line_start":27,"line_end":27,"column_start":1,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":7701},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9512328,"byte_end":9512333,"line_start":33,"line_end":33,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::oneshot::error","value":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","parent":null,"children":[{"krate":0,"index":7702},{"krate":0,"index":8483},{"krate":0,"index":8493},{"krate":0,"index":8490},{"krate":0,"index":8491},{"krate":0,"index":8486},{"krate":0,"index":8487},{"krate":0,"index":8495},{"krate":0,"index":8506},{"krate":0,"index":8503},{"krate":0,"index":8504},{"krate":0,"index":8500},{"krate":0,"index":8501},{"krate":0,"index":7703},{"krate":0,"index":7705},{"krate":0,"index":7706},{"krate":0,"index":7708}],"decl_id":null,"docs":" Oneshot error types\n","sig":null,"attributes":[{"value":"/ Oneshot error types","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9512340,"byte_end":9512363,"line_start":34,"line_end":34,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":8483},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9512505,"byte_end":9512514,"line_start":40,"line_end":40,"column_start":16,"column_end":25},"name":"RecvError","qualname":"::sync::oneshot::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Future` implementation for `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Future` implementation for `Receiver`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9512388,"byte_end":9512453,"line_start":38,"line_end":38,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8496},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9512736,"byte_end":9512741,"line_start":46,"line_end":46,"column_start":9,"column_end":14},"name":"Empty","qualname":"::sync::oneshot::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":8495},"children":[],"decl_id":null,"docs":" The send half of the channel has not yet sent a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel has not yet sent a value.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9512669,"byte_end":9512727,"line_start":45,"line_end":45,"column_start":9,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8498},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9512830,"byte_end":9512836,"line_start":49,"line_end":49,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::oneshot::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":8495},"children":[],"decl_id":null,"docs":" The send half of the channel was dropped without sending a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel was dropped without sending a value.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9512752,"byte_end":9512821,"line_start":48,"line_end":48,"column_start":9,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":8495},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9512646,"byte_end":9512658,"line_start":44,"line_end":44,"column_start":14,"column_end":26},"name":"TryRecvError","qualname":"::sync::oneshot::error::TryRecvError","value":"pub enum TryRecvError {\n\n    /// The send half of the channel has not yet sent a value.\n    Empty,\n\n    /// The send half of the channel was dropped without sending a value.\n    Closed,\n}","parent":null,"children":[{"krate":0,"index":8496},{"krate":0,"index":8498}],"decl_id":null,"docs":" Error returned by the `try_recv` function on `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `try_recv` function on `Receiver`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9512536,"byte_end":9512596,"line_start":42,"line_end":42,"column_start":5,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":7716},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9514833,"byte_end":9514840,"line_start":126,"line_end":126,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::oneshot::channel","value":"pub fn channel<T>() -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a new one-shot channel for sending single values across asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Create a new one-shot channel for sending single values across asynchronous","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9514018,"byte_end":9514097,"line_start":96,"line_end":96,"column_start":1,"column_end":80}},{"value":"/ tasks.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9514098,"byte_end":9514108,"line_start":97,"line_end":97,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9514109,"byte_end":9514112,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ The function returns separate \"send\" and \"receive\" handles. The `Sender`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9514113,"byte_end":9514189,"line_start":99,"line_end":99,"column_start":1,"column_end":77}},{"value":"/ handle is used by the producer to send the value. The `Receiver` handle is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9514190,"byte_end":9514268,"line_start":100,"line_end":100,"column_start":1,"column_end":79}},{"value":"/ used by the consumer to receive the value.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9514269,"byte_end":9514315,"line_start":101,"line_end":101,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9514316,"byte_end":9514319,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ Each handle can be used on separate tasks.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9514320,"byte_end":9514366,"line_start":103,"line_end":103,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9514367,"byte_end":9514370,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9514371,"byte_end":9514385,"line_start":105,"line_end":105,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9514386,"byte_end":9514389,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9514390,"byte_end":9514397,"line_start":107,"line_end":107,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9514398,"byte_end":9514427,"line_start":108,"line_end":108,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9514428,"byte_end":9514431,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9514432,"byte_end":9514450,"line_start":110,"line_end":110,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9514451,"byte_end":9514472,"line_start":111,"line_end":111,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9514473,"byte_end":9514515,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9514516,"byte_end":9514519,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9514520,"byte_end":9514553,"line_start":114,"line_end":114,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9514554,"byte_end":9514594,"line_start":115,"line_end":115,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9514595,"byte_end":9514644,"line_start":116,"line_end":116,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9514645,"byte_end":9514658,"line_start":117,"line_end":117,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9514659,"byte_end":9514670,"line_start":118,"line_end":118,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9514671,"byte_end":9514674,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9514675,"byte_end":9514699,"line_start":120,"line_end":120,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9514700,"byte_end":9514747,"line_start":121,"line_end":121,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9514748,"byte_end":9514801,"line_start":122,"line_end":122,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9514802,"byte_end":9514811,"line_start":123,"line_end":123,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9514812,"byte_end":9514817,"line_start":124,"line_end":124,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9514818,"byte_end":9514825,"line_start":125,"line_end":125,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7720},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9516876,"byte_end":9516880,"line_start":184,"line_end":184,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(Self, T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value on this channel, returning it back if it could\n not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value on this channel, returning it back if it could","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9515305,"byte_end":9515380,"line_start":144,"line_end":144,"column_start":5,"column_end":80}},{"value":"/ not be sent.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9515385,"byte_end":9515401,"line_start":145,"line_end":145,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9515406,"byte_end":9515409,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This method consumes `self` as only one value may ever be sent on a oneshot","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9515414,"byte_end":9515493,"line_start":147,"line_end":147,"column_start":5,"column_end":84}},{"value":"/ channel. It is not marked async because sending a message to an oneshot","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9515498,"byte_end":9515573,"line_start":148,"line_end":148,"column_start":5,"column_end":80}},{"value":"/ channel never requires any form of waiting.  Because of this, the `send`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9515578,"byte_end":9515654,"line_start":149,"line_end":149,"column_start":5,"column_end":81}},{"value":"/ method can be used in both synchronous and asynchronous code without","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9515659,"byte_end":9515731,"line_start":150,"line_end":150,"column_start":5,"column_end":77}},{"value":"/ problems.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9515736,"byte_end":9515749,"line_start":151,"line_end":151,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9515754,"byte_end":9515757,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9515762,"byte_end":9515838,"line_start":153,"line_end":153,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9515843,"byte_end":9515919,"line_start":154,"line_end":154,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been deallocated. Note that a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9515924,"byte_end":9515996,"line_start":155,"line_end":155,"column_start":5,"column_end":77}},{"value":"/ return value of `Err` means that the data will never be received, but","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9516001,"byte_end":9516074,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/ a return value of `Ok` does *not* mean that the data will be received.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9516079,"byte_end":9516153,"line_start":157,"line_end":157,"column_start":5,"column_end":79}},{"value":"/ It is possible for the corresponding receiver to hang up immediately","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9516158,"byte_end":9516230,"line_start":158,"line_end":158,"column_start":5,"column_end":77}},{"value":"/ after this function returns `Ok`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9516235,"byte_end":9516272,"line_start":159,"line_end":159,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9516277,"byte_end":9516280,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9516285,"byte_end":9516299,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9516304,"byte_end":9516307,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Send a value to another task","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9516312,"byte_end":9516344,"line_start":163,"line_end":163,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9516349,"byte_end":9516352,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9516357,"byte_end":9516364,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9516369,"byte_end":9516398,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9516403,"byte_end":9516406,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9516411,"byte_end":9516429,"line_start":168,"line_end":168,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9516434,"byte_end":9516455,"line_start":169,"line_end":169,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9516460,"byte_end":9516502,"line_start":170,"line_end":170,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9516507,"byte_end":9516510,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9516515,"byte_end":9516548,"line_start":172,"line_end":172,"column_start":5,"column_end":38}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9516553,"byte_end":9516593,"line_start":173,"line_end":173,"column_start":5,"column_end":45}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9516598,"byte_end":9516647,"line_start":174,"line_end":174,"column_start":5,"column_end":54}},{"value":"/         }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9516652,"byte_end":9516665,"line_start":175,"line_end":175,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9516670,"byte_end":9516681,"line_start":176,"line_end":176,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9516686,"byte_end":9516689,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/     match rx.await {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9516694,"byte_end":9516718,"line_start":178,"line_end":178,"column_start":5,"column_end":29}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9516723,"byte_end":9516770,"line_start":179,"line_end":179,"column_start":5,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9516775,"byte_end":9516828,"line_start":180,"line_end":180,"column_start":5,"column_end":58}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9516833,"byte_end":9516842,"line_start":181,"line_end":181,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9516847,"byte_end":9516852,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9516857,"byte_end":9516864,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7723},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9517281,"byte_end":9517292,"line_start":201,"line_end":201,"column_start":12,"column_end":23},"name":"poll_closed","qualname":"<Sender<T>>::poll_closed","value":"pub fn poll_closed(&mut Self, &mut Context) -> Poll<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7725},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9520534,"byte_end":9520540,"line_start":316,"line_end":316,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for the associated [`Receiver`] handle to close.","sig":null,"attributes":[{"value":"/ Waits for the associated [`Receiver`] handle to close.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9518649,"byte_end":9518707,"line_start":249,"line_end":249,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9518712,"byte_end":9518715,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9518720,"byte_end":9518794,"line_start":251,"line_end":251,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9518799,"byte_end":9518833,"line_start":252,"line_end":252,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9518838,"byte_end":9518841,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ This function is useful when paired with `select!` to abort a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9518846,"byte_end":9518911,"line_start":254,"line_end":254,"column_start":5,"column_end":70}},{"value":"/ computation when the receiver is no longer interested in the result.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9518916,"byte_end":9518988,"line_start":255,"line_end":255,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9518993,"byte_end":9518996,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9519001,"byte_end":9519013,"line_start":257,"line_end":257,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9519018,"byte_end":9519021,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ Returns a `Future` which must be awaited on.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9519026,"byte_end":9519074,"line_start":259,"line_end":259,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9519079,"byte_end":9519082,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9519087,"byte_end":9519113,"line_start":261,"line_end":261,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9519118,"byte_end":9519148,"line_start":262,"line_end":262,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9519153,"byte_end":9519156,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9519161,"byte_end":9519175,"line_start":264,"line_end":264,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9519180,"byte_end":9519183,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9519188,"byte_end":9519203,"line_start":266,"line_end":266,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9519208,"byte_end":9519211,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9519216,"byte_end":9519223,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9519228,"byte_end":9519257,"line_start":269,"line_end":269,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9519262,"byte_end":9519265,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9519270,"byte_end":9519288,"line_start":271,"line_end":271,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9519293,"byte_end":9519314,"line_start":272,"line_end":272,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel::<()>();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9519319,"byte_end":9519371,"line_start":273,"line_end":273,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9519376,"byte_end":9519379,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9519384,"byte_end":9519417,"line_start":275,"line_end":275,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9519422,"byte_end":9519443,"line_start":276,"line_end":276,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9519448,"byte_end":9519459,"line_start":277,"line_end":277,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9519464,"byte_end":9519467,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/     tx.closed().await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9519472,"byte_end":9519498,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/     println!(\"the receiver dropped\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9519503,"byte_end":9519544,"line_start":280,"line_end":280,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9519549,"byte_end":9519554,"line_start":281,"line_end":281,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9519559,"byte_end":9519566,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9519571,"byte_end":9519574,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ Paired with select","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9519579,"byte_end":9519601,"line_start":284,"line_end":284,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9519606,"byte_end":9519609,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9519614,"byte_end":9519621,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9519626,"byte_end":9519655,"line_start":287,"line_end":287,"column_start":5,"column_end":34}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9519660,"byte_end":9519698,"line_start":288,"line_end":288,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9519703,"byte_end":9519706,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ use futures::{select, FutureExt};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9519711,"byte_end":9519748,"line_start":290,"line_end":290,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9519753,"byte_end":9519756,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ async fn compute() -> String {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9519761,"byte_end":9519795,"line_start":292,"line_end":292,"column_start":5,"column_end":39}},{"value":"/     // Complex computation returning a `String`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9519800,"byte_end":9519851,"line_start":293,"line_end":293,"column_start":5,"column_end":56}},{"value":"/ # \"hello\".to_string()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9519856,"byte_end":9519881,"line_start":294,"line_end":294,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9519886,"byte_end":9519891,"line_start":295,"line_end":295,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9519896,"byte_end":9519899,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9519904,"byte_end":9519922,"line_start":297,"line_end":297,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9519927,"byte_end":9519948,"line_start":298,"line_end":298,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9519953,"byte_end":9519999,"line_start":299,"line_end":299,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9520004,"byte_end":9520007,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9520012,"byte_end":9520045,"line_start":301,"line_end":301,"column_start":5,"column_end":38}},{"value":"/         select! {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9520050,"byte_end":9520071,"line_start":302,"line_end":302,"column_start":5,"column_end":26}},{"value":"/             _ = tx.closed().fuse() => {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9520076,"byte_end":9520119,"line_start":303,"line_end":303,"column_start":5,"column_end":48}},{"value":"/                 // The receiver dropped, no need to do any further work","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9520124,"byte_end":9520199,"line_start":304,"line_end":304,"column_start":5,"column_end":80}},{"value":"/             }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9520204,"byte_end":9520221,"line_start":305,"line_end":305,"column_start":5,"column_end":22}},{"value":"/             value = compute().fuse() => {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9520226,"byte_end":9520271,"line_start":306,"line_end":306,"column_start":5,"column_end":50}},{"value":"/                 tx.send(value).unwrap()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9520276,"byte_end":9520319,"line_start":307,"line_end":307,"column_start":5,"column_end":48}},{"value":"/             }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9520324,"byte_end":9520341,"line_start":308,"line_end":308,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9520346,"byte_end":9520359,"line_start":309,"line_end":309,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9520364,"byte_end":9520375,"line_start":310,"line_end":310,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9520380,"byte_end":9520383,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/     // Wait for up to 10 seconds","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9520388,"byte_end":9520424,"line_start":312,"line_end":312,"column_start":5,"column_end":41}},{"value":"/     let _ = time::timeout(Duration::from_secs(10), rx).await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9520429,"byte_end":9520494,"line_start":313,"line_end":313,"column_start":5,"column_end":70}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9520499,"byte_end":9520504,"line_start":314,"line_end":314,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9520509,"byte_end":9520516,"line_start":315,"line_end":315,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7730},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9521410,"byte_end":9521419,"line_start":349,"line_end":349,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the associated [`Receiver`] handle has been dropped.","sig":null,"attributes":[{"value":"/ Returns `true` if the associated [`Receiver`] handle has been dropped.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9520651,"byte_end":9520725,"line_start":322,"line_end":322,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9520730,"byte_end":9520733,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9520738,"byte_end":9520812,"line_start":324,"line_end":324,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9520817,"byte_end":9520851,"line_start":325,"line_end":325,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9520856,"byte_end":9520859,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ If `true` is returned, a call to `send` will always result in an error.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9520864,"byte_end":9520939,"line_start":327,"line_end":327,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9520944,"byte_end":9520947,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9520952,"byte_end":9520978,"line_start":329,"line_end":329,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9520983,"byte_end":9521013,"line_start":330,"line_end":330,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9521018,"byte_end":9521021,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9521026,"byte_end":9521040,"line_start":332,"line_end":332,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9521045,"byte_end":9521048,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9521053,"byte_end":9521060,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9521065,"byte_end":9521094,"line_start":335,"line_end":335,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9521099,"byte_end":9521102,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9521107,"byte_end":9521125,"line_start":337,"line_end":337,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9521130,"byte_end":9521151,"line_start":338,"line_end":338,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9521156,"byte_end":9521198,"line_start":339,"line_end":339,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9521203,"byte_end":9521206,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9521211,"byte_end":9521244,"line_start":341,"line_end":341,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9521249,"byte_end":9521252,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/     drop(rx);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9521257,"byte_end":9521274,"line_start":343,"line_end":343,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9521279,"byte_end":9521282,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9521287,"byte_end":9521319,"line_start":345,"line_end":345,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9521324,"byte_end":9521376,"line_start":346,"line_end":346,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9521381,"byte_end":9521386,"line_start":347,"line_end":347,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9521391,"byte_end":9521398,"line_start":348,"line_end":348,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7736},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9523397,"byte_end":9523402,"line_start":422,"line_end":422,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Prevents the associated [`Sender`] handle from sending a value.","sig":null,"attributes":[{"value":"/ Prevents the associated [`Sender`] handle from sending a value.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9521759,"byte_end":9521826,"line_start":366,"line_end":366,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9521831,"byte_end":9521834,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ Any `send` operation which happens after calling `close` is guaranteed","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9521839,"byte_end":9521913,"line_start":368,"line_end":368,"column_start":5,"column_end":79}},{"value":"/ to fail. After calling `close`, [`try_recv`] should be called to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9521918,"byte_end":9521986,"line_start":369,"line_end":369,"column_start":5,"column_end":73}},{"value":"/ receive a value if one was sent **before** the call to `close`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9521991,"byte_end":9522057,"line_start":370,"line_end":370,"column_start":5,"column_end":71}},{"value":"/ completed.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9522062,"byte_end":9522076,"line_start":371,"line_end":371,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9522081,"byte_end":9522084,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ This function is useful to perform a graceful shutdown and ensure that a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9522089,"byte_end":9522165,"line_start":373,"line_end":373,"column_start":5,"column_end":81}},{"value":"/ value will not be sent into the channel and never received.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9522170,"byte_end":9522233,"line_start":374,"line_end":374,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9522238,"byte_end":9522241,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: Sender","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9522246,"byte_end":9522268,"line_start":376,"line_end":376,"column_start":5,"column_end":27}},{"value":"/ [`try_recv`]: Receiver::try_recv","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9522273,"byte_end":9522309,"line_start":377,"line_end":377,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9522314,"byte_end":9522317,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9522322,"byte_end":9522336,"line_start":379,"line_end":379,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9522341,"byte_end":9522344,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ Prevent a value from being sent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9522349,"byte_end":9522384,"line_start":381,"line_end":381,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9522389,"byte_end":9522392,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9522397,"byte_end":9522404,"line_start":383,"line_end":383,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9522409,"byte_end":9522438,"line_start":384,"line_end":384,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9522443,"byte_end":9522493,"line_start":385,"line_end":385,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9522498,"byte_end":9522501,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9522506,"byte_end":9522524,"line_start":387,"line_end":387,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9522529,"byte_end":9522550,"line_start":388,"line_end":388,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9522555,"byte_end":9522601,"line_start":389,"line_end":389,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9522606,"byte_end":9522609,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9522614,"byte_end":9522647,"line_start":391,"line_end":391,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9522652,"byte_end":9522655,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9522660,"byte_end":9522679,"line_start":393,"line_end":393,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9522684,"byte_end":9522687,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9522692,"byte_end":9522724,"line_start":395,"line_end":395,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9522729,"byte_end":9522781,"line_start":396,"line_end":396,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9522786,"byte_end":9522789,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9522794,"byte_end":9522823,"line_start":398,"line_end":398,"column_start":5,"column_end":34}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9522828,"byte_end":9522871,"line_start":399,"line_end":399,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9522876,"byte_end":9522908,"line_start":400,"line_end":400,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9522913,"byte_end":9522922,"line_start":401,"line_end":401,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9522927,"byte_end":9522932,"line_start":402,"line_end":402,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9522937,"byte_end":9522944,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9522949,"byte_end":9522952,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ Receive a value sent **before** calling `close`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9522957,"byte_end":9523008,"line_start":405,"line_end":405,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9523013,"byte_end":9523016,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9523021,"byte_end":9523028,"line_start":407,"line_end":407,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9523033,"byte_end":9523062,"line_start":408,"line_end":408,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9523067,"byte_end":9523070,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9523075,"byte_end":9523093,"line_start":410,"line_end":410,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9523098,"byte_end":9523119,"line_start":411,"line_end":411,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9523124,"byte_end":9523170,"line_start":412,"line_end":412,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9523175,"byte_end":9523178,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.send(\"will receive\").is_ok());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9523183,"byte_end":9523232,"line_start":414,"line_end":414,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9523237,"byte_end":9523240,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9523245,"byte_end":9523264,"line_start":416,"line_end":416,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9523269,"byte_end":9523272,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/     let msg = rx.try_recv().unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9523277,"byte_end":9523318,"line_start":418,"line_end":418,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(msg, \"will receive\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9523323,"byte_end":9523363,"line_start":419,"line_end":419,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9523368,"byte_end":9523373,"line_start":420,"line_end":420,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9523378,"byte_end":9523385,"line_start":421,"line_end":421,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7737},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9525385,"byte_end":9525393,"line_start":490,"line_end":490,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a value.","sig":null,"attributes":[{"value":"/ Attempts to receive a value.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9523500,"byte_end":9523532,"line_start":427,"line_end":427,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9523537,"byte_end":9523540,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ If a pending value exists in the channel, it is returned. If no value","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9523545,"byte_end":9523618,"line_start":429,"line_end":429,"column_start":5,"column_end":78}},{"value":"/ has been sent, the current task **will not** be registered for","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9523623,"byte_end":9523689,"line_start":430,"line_end":430,"column_start":5,"column_end":71}},{"value":"/ future notification.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9523694,"byte_end":9523718,"line_start":431,"line_end":431,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9523723,"byte_end":9523726,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ This function is useful to call from outside the context of an","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9523731,"byte_end":9523797,"line_start":433,"line_end":433,"column_start":5,"column_end":71}},{"value":"/ asynchronous task.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9523802,"byte_end":9523824,"line_start":434,"line_end":434,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9523829,"byte_end":9523832,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9523837,"byte_end":9523849,"line_start":436,"line_end":436,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9523854,"byte_end":9523857,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ - `Ok(T)` if a value is pending in the channel.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9523862,"byte_end":9523913,"line_start":438,"line_end":438,"column_start":5,"column_end":56}},{"value":"/ - `Err(TryRecvError::Empty)` if no value has been sent yet.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9523918,"byte_end":9523981,"line_start":439,"line_end":439,"column_start":5,"column_end":68}},{"value":"/ - `Err(TryRecvError::Closed)` if the sender has dropped without sending","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9523986,"byte_end":9524061,"line_start":440,"line_end":440,"column_start":5,"column_end":80}},{"value":"/   a value.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9524066,"byte_end":9524080,"line_start":441,"line_end":441,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9524085,"byte_end":9524088,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9524093,"byte_end":9524107,"line_start":443,"line_end":443,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9524112,"byte_end":9524115,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ `try_recv` before a value is sent, then after.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9524120,"byte_end":9524170,"line_start":445,"line_end":445,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9524175,"byte_end":9524178,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9524183,"byte_end":9524190,"line_start":447,"line_end":447,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9524195,"byte_end":9524224,"line_start":448,"line_end":448,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9524229,"byte_end":9524279,"line_start":449,"line_end":449,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9524284,"byte_end":9524287,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9524292,"byte_end":9524310,"line_start":451,"line_end":451,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9524315,"byte_end":9524336,"line_start":452,"line_end":452,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9524341,"byte_end":9524387,"line_start":453,"line_end":453,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9524392,"byte_end":9524395,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9524400,"byte_end":9524429,"line_start":455,"line_end":455,"column_start":5,"column_end":34}},{"value":"/         // The channel is currently empty","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9524434,"byte_end":9524479,"line_start":456,"line_end":456,"column_start":5,"column_end":50}},{"value":"/         Err(TryRecvError::Empty) => {}","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9524484,"byte_end":9524526,"line_start":457,"line_end":457,"column_start":5,"column_end":47}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9524531,"byte_end":9524563,"line_start":458,"line_end":458,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9524568,"byte_end":9524577,"line_start":459,"line_end":459,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9524582,"byte_end":9524585,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/     // Send a value","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9524590,"byte_end":9524613,"line_start":461,"line_end":461,"column_start":5,"column_end":28}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9524618,"byte_end":9524652,"line_start":462,"line_end":462,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9524657,"byte_end":9524660,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9524665,"byte_end":9524694,"line_start":464,"line_end":464,"column_start":5,"column_end":34}},{"value":"/         Ok(value) => assert_eq!(value, \"hello\"),","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9524699,"byte_end":9524751,"line_start":465,"line_end":465,"column_start":5,"column_end":57}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9524756,"byte_end":9524788,"line_start":466,"line_end":466,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9524793,"byte_end":9524802,"line_start":467,"line_end":467,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9524807,"byte_end":9524812,"line_start":468,"line_end":468,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9524817,"byte_end":9524824,"line_start":469,"line_end":469,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9524829,"byte_end":9524832,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ `try_recv` when the sender dropped before sending a value","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9524837,"byte_end":9524898,"line_start":471,"line_end":471,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9524903,"byte_end":9524906,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9524911,"byte_end":9524918,"line_start":473,"line_end":473,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9524923,"byte_end":9524952,"line_start":474,"line_end":474,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9524957,"byte_end":9525007,"line_start":475,"line_end":475,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9525012,"byte_end":9525015,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9525020,"byte_end":9525038,"line_start":477,"line_end":477,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9525043,"byte_end":9525064,"line_start":478,"line_end":478,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel::<()>();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9525069,"byte_end":9525121,"line_start":479,"line_end":479,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9525126,"byte_end":9525129,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/     drop(tx);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9525134,"byte_end":9525151,"line_start":481,"line_end":481,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9525156,"byte_end":9525159,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9525164,"byte_end":9525193,"line_start":483,"line_end":483,"column_start":5,"column_end":34}},{"value":"/         // The channel will never receive a value.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9525198,"byte_end":9525252,"line_start":484,"line_end":484,"column_start":5,"column_end":59}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9525257,"byte_end":9525300,"line_start":485,"line_end":485,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9525305,"byte_end":9525337,"line_start":486,"line_end":486,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9525342,"byte_end":9525351,"line_start":487,"line_end":487,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9525356,"byte_end":9525361,"line_start":488,"line_end":488,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9525366,"byte_end":9525373,"line_start":489,"line_end":489,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8575},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9593958,"byte_end":9593967,"line_start":16,"line_end":16,"column_start":12,"column_end":21},"name":"Semaphore","qualname":"::sync::semaphore::Semaphore","value":"Semaphore {  }","parent":null,"children":[{"krate":0,"index":8576}],"decl_id":null,"docs":" Counting semaphore performing asynchronous permit aquisition.","sig":null,"attributes":[{"value":"/ Counting semaphore performing asynchronous permit aquisition.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9593307,"byte_end":9593372,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9593373,"byte_end":9593376,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ A semaphore maintains a set of permits. Permits are used to synchronize","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9593377,"byte_end":9593452,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ access to a shared resource. A semaphore differs from a mutex in that it","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9593453,"byte_end":9593529,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ can allow more than one concurrent caller to access the shared resource at a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9593530,"byte_end":9593610,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/ time.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9593611,"byte_end":9593620,"line_start":9,"line_end":9,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9593621,"byte_end":9593624,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ When `acquire` is called and the semaphore has remaining permits, the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9593625,"byte_end":9593698,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/ function immediately returns a permit. However, if no remaining permits are","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9593699,"byte_end":9593778,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ available, `acquire` (asynchronously) waits until an outstanding permit is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9593779,"byte_end":9593857,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ dropped. At this point, the freed permit is assigned to the caller.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9593858,"byte_end":9593929,"line_start":14,"line_end":14,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":8579},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9594216,"byte_end":9594231,"line_start":28,"line_end":28,"column_start":12,"column_end":27},"name":"SemaphorePermit","qualname":"::sync::semaphore::SemaphorePermit","value":"SemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":8581},{"krate":0,"index":8582}],"decl_id":null,"docs":" A permit from the semaphore.","sig":null,"attributes":[{"value":"/ A permit from the semaphore.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9594032,"byte_end":9594064,"line_start":21,"line_end":21,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9594065,"byte_end":9594068,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire`] method.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9594069,"byte_end":9594120,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9594121,"byte_end":9594124,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`acquire`]: crate::sync::Semaphore::acquire()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9594125,"byte_end":9594175,"line_start":25,"line_end":25,"column_start":1,"column_end":51}},{"value":"must_use","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9594176,"byte_end":9594187,"line_start":26,"line_end":26,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8586},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9594492,"byte_end":9594512,"line_start":40,"line_end":40,"column_start":12,"column_end":32},"name":"OwnedSemaphorePermit","qualname":"::sync::semaphore::OwnedSemaphorePermit","value":"OwnedSemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":8587},{"krate":0,"index":8588}],"decl_id":null,"docs":" An owned permit from the semaphore.","sig":null,"attributes":[{"value":"/ An owned permit from the semaphore.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9594283,"byte_end":9594322,"line_start":33,"line_end":33,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9594323,"byte_end":9594326,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire_owned`] method.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9594327,"byte_end":9594384,"line_start":35,"line_end":35,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9594385,"byte_end":9594388,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [`acquire_owned`]: crate::sync::Semaphore::acquire_owned()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9594389,"byte_end":9594451,"line_start":37,"line_end":37,"column_start":1,"column_end":63}},{"value":"must_use","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9594452,"byte_end":9594463,"line_start":38,"line_end":38,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8591},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9594808,"byte_end":9594823,"line_start":52,"line_end":52,"column_start":12,"column_end":27},"name":"TryAcquireError","qualname":"::sync::semaphore::TryAcquireError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Semaphore::try_acquire`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Semaphore::try_acquire`] function.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9594561,"byte_end":9594625,"line_start":45,"line_end":45,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9594626,"byte_end":9594629,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ A `try_acquire` operation can only fail if the semaphore has no available","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9594630,"byte_end":9594707,"line_start":47,"line_end":47,"column_start":1,"column_end":78}},{"value":"/ permits.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9594708,"byte_end":9594720,"line_start":48,"line_end":48,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9594721,"byte_end":9594724,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore::try_acquire`]: Semaphore::try_acquire","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9594725,"byte_end":9594779,"line_start":50,"line_end":50,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":8034},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9595377,"byte_end":9595380,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"new","qualname":"<Semaphore>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new semaphore with the initial number of permits.\n","sig":null,"attributes":[{"value":"/ Creates a new semaphore with the initial number of permits.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9595302,"byte_end":9595365,"line_start":70,"line_end":70,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":8035},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9595556,"byte_end":9595573,"line_start":78,"line_end":78,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<Semaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.\n","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9595492,"byte_end":9595544,"line_start":77,"line_end":77,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":8036},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9595820,"byte_end":9595831,"line_start":85,"line_end":85,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<Semaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9595643,"byte_end":9595685,"line_start":82,"line_end":82,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9595690,"byte_end":9595693,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function will panic if the limit is exceeded.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9595698,"byte_end":9595808,"line_start":84,"line_end":84,"column_start":5,"column_end":115}}]},{"kind":"Method","id":{"krate":0,"index":8037},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9595951,"byte_end":9595958,"line_start":90,"line_end":90,"column_start":18,"column_end":25},"name":"acquire","qualname":"<Semaphore>::acquire","value":"pub async fn acquire<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires permit from the semaphore.\n","sig":null,"attributes":[{"value":"/ Acquires permit from the semaphore.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9595894,"byte_end":9595933,"line_start":89,"line_end":89,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":8040},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9596194,"byte_end":9596205,"line_start":99,"line_end":99,"column_start":12,"column_end":23},"name":"try_acquire","qualname":"<Semaphore>::try_acquire","value":"pub fn try_acquire(&Self) -> Result<SemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.\n","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9596133,"byte_end":9596182,"line_start":98,"line_end":98,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":8041},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9596666,"byte_end":9596679,"line_start":114,"line_end":114,"column_start":18,"column_end":31},"name":"acquire_owned","qualname":"<Semaphore>::acquire_owned","value":"pub async fn acquire_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires permit from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires permit from the semaphore.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9596488,"byte_end":9596527,"line_start":109,"line_end":109,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9596532,"byte_end":9596535,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9596540,"byte_end":9596608,"line_start":111,"line_end":111,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9596613,"byte_end":9596616,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9596621,"byte_end":9596648,"line_start":113,"line_end":113,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":8044},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9597059,"byte_end":9597076,"line_start":127,"line_end":127,"column_start":12,"column_end":29},"name":"try_acquire_owned","qualname":"<Semaphore>::try_acquire_owned","value":"pub fn try_acquire_owned(Arc<Self>)\n-> Result<OwnedSemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9596877,"byte_end":9596926,"line_start":122,"line_end":122,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9596931,"byte_end":9596934,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9596939,"byte_end":9597007,"line_start":124,"line_end":124,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9597012,"byte_end":9597015,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9597020,"byte_end":9597047,"line_start":126,"line_end":126,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":8047},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9597591,"byte_end":9597597,"line_start":142,"line_end":142,"column_start":12,"column_end":18},"name":"forget","qualname":"<SemaphorePermit>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9597416,"byte_end":9597486,"line_start":139,"line_end":139,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9597491,"byte_end":9597560,"line_start":140,"line_end":140,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9597565,"byte_end":9597579,"line_start":141,"line_end":141,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":8049},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9597852,"byte_end":9597858,"line_start":151,"line_end":151,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedSemaphorePermit>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9597677,"byte_end":9597747,"line_start":148,"line_end":148,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9597752,"byte_end":9597821,"line_start":149,"line_end":149,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9597826,"byte_end":9597840,"line_start":150,"line_end":150,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":8596},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9600910,"byte_end":9600916,"line_start":74,"line_end":74,"column_start":12,"column_end":18},"name":"RwLock","qualname":"::sync::rwlock::RwLock","value":"RwLock {  }","parent":null,"children":[{"krate":0,"index":8598},{"krate":0,"index":8599}],"decl_id":null,"docs":" An asynchronous reader-writer lock","sig":null,"attributes":[{"value":"/ An asynchronous reader-writer lock","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9598380,"byte_end":9598418,"line_start":14,"line_end":14,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9598419,"byte_end":9598422,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This type of lock allows a number of readers or at most one writer at any","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9598423,"byte_end":9598500,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ point in time. The write portion of this lock typically allows modification","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9598501,"byte_end":9598580,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ of the underlying data (exclusive access) and the read portion of this lock","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9598581,"byte_end":9598660,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ typically allows for read-only access (shared access).","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9598661,"byte_end":9598719,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9598720,"byte_end":9598723,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ In comparison, a [`Mutex`] does not distinguish between readers or writers","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9598724,"byte_end":9598802,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ that acquire the lock, therefore causing any tasks waiting for the lock to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9598803,"byte_end":9598881,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ become available to yield. An `RwLock` will allow any number of readers to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9598882,"byte_end":9598960,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ acquire the lock as long as a writer is not holding the lock.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9598961,"byte_end":9599026,"line_start":24,"line_end":24,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9599027,"byte_end":9599030,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The priority policy of Tokio's read-write lock is _fair_ (or","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9599031,"byte_end":9599095,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/ [_write-preferring_]), in order to ensure that readers cannot starve","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9599096,"byte_end":9599168,"line_start":27,"line_end":27,"column_start":1,"column_end":73}},{"value":"/ writers. Fairness is ensured using a first-in, first-out queue for the tasks","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9599169,"byte_end":9599249,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ awaiting the lock; if a task that wishes to acquire the write lock is at the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9599250,"byte_end":9599330,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"/ head of the queue, read locks will not be given out until the write lock has","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9599331,"byte_end":9599411,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ been released. This is in contrast to the Rust standard library's","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9599412,"byte_end":9599481,"line_start":31,"line_end":31,"column_start":1,"column_end":70}},{"value":"/ `std::sync::RwLock`, where the priority policy is dependent on the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9599482,"byte_end":9599552,"line_start":32,"line_end":32,"column_start":1,"column_end":71}},{"value":"/ operating system's implementation.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9599553,"byte_end":9599591,"line_start":33,"line_end":33,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9599592,"byte_end":9599595,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ The type parameter `T` represents the data that this lock protects. It is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9599596,"byte_end":9599673,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ required that `T` satisfies [`Send`] to be shared across threads. The RAII guards","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9599674,"byte_end":9599759,"line_start":36,"line_end":36,"column_start":1,"column_end":86}},{"value":"/ returned from the locking methods implement [`Deref`](trait@std::ops::Deref)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9599760,"byte_end":9599840,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ (and [`DerefMut`](trait@std::ops::DerefMut)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9599841,"byte_end":9599888,"line_start":38,"line_end":38,"column_start":1,"column_end":48}},{"value":"/ for the `write` methods) to allow access to the content of the lock.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9599889,"byte_end":9599961,"line_start":39,"line_end":39,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9599962,"byte_end":9599965,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9599966,"byte_end":9599980,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9599981,"byte_end":9599984,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9599985,"byte_end":9599992,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9599993,"byte_end":9600021,"line_start":44,"line_end":44,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9600022,"byte_end":9600025,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9600026,"byte_end":9600044,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9600045,"byte_end":9600066,"line_start":47,"line_end":47,"column_start":1,"column_end":22}},{"value":"/     let lock = RwLock::new(5);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9600067,"byte_end":9600101,"line_start":48,"line_end":48,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9600102,"byte_end":9600105,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/     // many reader locks can be held at once","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9600106,"byte_end":9600154,"line_start":50,"line_end":50,"column_start":1,"column_end":49}},{"value":"/     {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9600155,"byte_end":9600164,"line_start":51,"line_end":51,"column_start":1,"column_end":10}},{"value":"/         let r1 = lock.read().await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9600165,"byte_end":9600204,"line_start":52,"line_end":52,"column_start":1,"column_end":40}},{"value":"/         let r2 = lock.read().await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9600205,"byte_end":9600244,"line_start":53,"line_end":53,"column_start":1,"column_end":40}},{"value":"/         assert_eq!(*r1, 5);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9600245,"byte_end":9600276,"line_start":54,"line_end":54,"column_start":1,"column_end":32}},{"value":"/         assert_eq!(*r2, 5);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9600277,"byte_end":9600308,"line_start":55,"line_end":55,"column_start":1,"column_end":32}},{"value":"/     } // read locks are dropped at this point","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9600309,"byte_end":9600358,"line_start":56,"line_end":56,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9600359,"byte_end":9600362,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/     // only one write lock may be held, however","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9600363,"byte_end":9600414,"line_start":58,"line_end":58,"column_start":1,"column_end":52}},{"value":"/     {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9600415,"byte_end":9600424,"line_start":59,"line_end":59,"column_start":1,"column_end":10}},{"value":"/         let mut w = lock.write().await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9600425,"byte_end":9600468,"line_start":60,"line_end":60,"column_start":1,"column_end":44}},{"value":"/         *w += 1;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9600469,"byte_end":9600489,"line_start":61,"line_end":61,"column_start":1,"column_end":21}},{"value":"/         assert_eq!(*w, 6);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9600490,"byte_end":9600520,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/     } // write lock is dropped here","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9600521,"byte_end":9600560,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9600561,"byte_end":9600566,"line_start":64,"line_end":64,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9600567,"byte_end":9600574,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9600575,"byte_end":9600578,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@super::Mutex","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9600579,"byte_end":9600613,"line_start":67,"line_end":67,"column_start":1,"column_end":35}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9600614,"byte_end":9600643,"line_start":68,"line_end":68,"column_start":1,"column_end":30}},{"value":"/ [`RwLockReadGuard`]: struct@RwLockReadGuard","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9600644,"byte_end":9600691,"line_start":69,"line_end":69,"column_start":1,"column_end":48}},{"value":"/ [`RwLockWriteGuard`]: struct@RwLockWriteGuard","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9600692,"byte_end":9600741,"line_start":70,"line_end":70,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9600742,"byte_end":9600779,"line_start":71,"line_end":71,"column_start":1,"column_end":38}},{"value":"/ [_write-preferring_]: https://en.wikipedia.org/wiki/Readers%E2%80%93writer_lock#Priority_policies","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9600780,"byte_end":9600881,"line_start":72,"line_end":72,"column_start":1,"column_end":102}}]},{"kind":"Struct","id":{"krate":0,"index":8067},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9601291,"byte_end":9601306,"line_start":90,"line_end":90,"column_start":12,"column_end":27},"name":"RwLockReadGuard","qualname":"::sync::rwlock::RwLockReadGuard","value":"RwLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":8070},{"krate":0,"index":8071},{"krate":0,"index":8072}],"decl_id":null,"docs":" RAII structure used to release the shared read access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the shared read access of a lock when","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9601050,"byte_end":9601122,"line_start":82,"line_end":82,"column_start":1,"column_end":73}},{"value":"/ dropped.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9601123,"byte_end":9601135,"line_start":83,"line_end":83,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9601136,"byte_end":9601139,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`read`] method on","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9601140,"byte_end":9601195,"line_start":85,"line_end":85,"column_start":1,"column_end":56}},{"value":"/ [`RwLock`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9601196,"byte_end":9601211,"line_start":86,"line_end":86,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9601212,"byte_end":9601215,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [`read`]: method@RwLock::read","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9601216,"byte_end":9601249,"line_start":88,"line_end":88,"column_start":1,"column_end":34}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9601250,"byte_end":9601279,"line_start":89,"line_end":89,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":8076},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9602624,"byte_end":9602627,"line_start":131,"line_end":131,"column_start":12,"column_end":15},"name":"map","qualname":"<RwLockReadGuard>::map","value":"pub fn map<F, U: ?Sized>(Self, F) -> RwLockReadGuard where F: FnOnce(&T) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Make a new `RwLockReadGuard` for a component of the locked data.","sig":null,"attributes":[{"value":"/ Make a new `RwLockReadGuard` for a component of the locked data.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9601450,"byte_end":9601518,"line_start":97,"line_end":97,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9601523,"byte_end":9601526,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockReadGuard` passed in already","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9601531,"byte_end":9601604,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ locked the data.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9601609,"byte_end":9601629,"line_start":100,"line_end":100,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9601634,"byte_end":9601637,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9601642,"byte_end":9601693,"line_start":102,"line_end":102,"column_start":5,"column_end":56}},{"value":"/ used as `RwLockReadGuard::map(...)`. A method would interfere with","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9601698,"byte_end":9601768,"line_start":103,"line_end":103,"column_start":5,"column_end":75}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9601773,"byte_end":9601837,"line_start":104,"line_end":104,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9601842,"byte_end":9601845,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockReadGuard::map`] from the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9601850,"byte_end":9601922,"line_start":106,"line_end":106,"column_start":5,"column_end":77}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9601927,"byte_end":9601953,"line_start":107,"line_end":107,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9601958,"byte_end":9601961,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ [`RwLockReadGuard::map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockReadGuard.html#method.map","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9601966,"byte_end":9602075,"line_start":109,"line_end":109,"column_start":5,"column_end":114}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9602080,"byte_end":9602143,"line_start":110,"line_end":110,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9602148,"byte_end":9602151,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9602156,"byte_end":9602170,"line_start":112,"line_end":112,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9602175,"byte_end":9602178,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9602183,"byte_end":9602190,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockReadGuard};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9602195,"byte_end":9602242,"line_start":115,"line_end":115,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9602247,"byte_end":9602250,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9602255,"byte_end":9602303,"line_start":117,"line_end":117,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9602308,"byte_end":9602328,"line_start":118,"line_end":118,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9602333,"byte_end":9602336,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9602341,"byte_end":9602361,"line_start":120,"line_end":120,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9602366,"byte_end":9602389,"line_start":121,"line_end":121,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9602394,"byte_end":9602429,"line_start":122,"line_end":122,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9602434,"byte_end":9602437,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read().await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9602442,"byte_end":9602476,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/ let guard = RwLockReadGuard::map(guard, |f| &f.0);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9602481,"byte_end":9602535,"line_start":125,"line_end":125,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9602540,"byte_end":9602543,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9602548,"byte_end":9602574,"line_start":127,"line_end":127,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9602579,"byte_end":9602586,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9602591,"byte_end":9602598,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9602603,"byte_end":9602612,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8079},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9604322,"byte_end":9604329,"line_start":182,"line_end":182,"column_start":12,"column_end":19},"name":"try_map","qualname":"<RwLockReadGuard>::try_map","value":"pub fn try_map<F, U: ?Sized>(Self, F) -> Result<RwLockReadGuard, Self> where\nF: FnOnce(&T) -> Option<&U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`RwLockReadGuard`] for a component of the\n locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`RwLockReadGuard`] for a component of the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9603005,"byte_end":9603074,"line_start":146,"line_end":146,"column_start":5,"column_end":74}},{"value":"/ locked data. The original guard is returned if the closure returns","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9603079,"byte_end":9603149,"line_start":147,"line_end":147,"column_start":5,"column_end":75}},{"value":"/ `None`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9603154,"byte_end":9603165,"line_start":148,"line_end":148,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9603170,"byte_end":9603173,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockReadGuard` passed in already","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9603178,"byte_end":9603251,"line_start":150,"line_end":150,"column_start":5,"column_end":78}},{"value":"/ locked the data.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9603256,"byte_end":9603276,"line_start":151,"line_end":151,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9603281,"byte_end":9603284,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9603289,"byte_end":9603348,"line_start":153,"line_end":153,"column_start":5,"column_end":64}},{"value":"/ `RwLockReadGuard::try_map(..)`. A method would interfere with methods of the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9603353,"byte_end":9603433,"line_start":154,"line_end":154,"column_start":5,"column_end":85}},{"value":"/ same name on the contents of the locked data.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9603438,"byte_end":9603487,"line_start":155,"line_end":155,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9603492,"byte_end":9603495,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockReadGuard::try_map`] from the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9603500,"byte_end":9603576,"line_start":157,"line_end":157,"column_start":5,"column_end":81}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9603581,"byte_end":9603607,"line_start":158,"line_end":158,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9603612,"byte_end":9603615,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ [`RwLockReadGuard::try_map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockReadGuard.html#method.try_map","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9603620,"byte_end":9603737,"line_start":160,"line_end":160,"column_start":5,"column_end":122}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9603742,"byte_end":9603805,"line_start":161,"line_end":161,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9603810,"byte_end":9603813,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9603818,"byte_end":9603832,"line_start":163,"line_end":163,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9603837,"byte_end":9603840,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9603845,"byte_end":9603852,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockReadGuard};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9603857,"byte_end":9603904,"line_start":166,"line_end":166,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9603909,"byte_end":9603912,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9603917,"byte_end":9603965,"line_start":168,"line_end":168,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9603970,"byte_end":9603990,"line_start":169,"line_end":169,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9603995,"byte_end":9603998,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9604003,"byte_end":9604023,"line_start":171,"line_end":171,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9604028,"byte_end":9604051,"line_start":172,"line_end":172,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9604056,"byte_end":9604091,"line_start":173,"line_end":173,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9604096,"byte_end":9604099,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read().await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9604104,"byte_end":9604138,"line_start":175,"line_end":175,"column_start":5,"column_end":39}},{"value":"/ let guard = RwLockReadGuard::try_map(guard, |f| Some(&f.0)).expect(\"should not fail\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9604143,"byte_end":9604233,"line_start":176,"line_end":176,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9604238,"byte_end":9604241,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9604246,"byte_end":9604272,"line_start":178,"line_end":178,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9604277,"byte_end":9604284,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9604289,"byte_end":9604296,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9604301,"byte_end":9604310,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":8094},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9605578,"byte_end":9605594,"line_start":233,"line_end":233,"column_start":12,"column_end":28},"name":"RwLockWriteGuard","qualname":"::sync::rwlock::RwLockWriteGuard","value":"RwLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":8097},{"krate":0,"index":8098},{"krate":0,"index":8099}],"decl_id":null,"docs":" RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9605326,"byte_end":9605402,"line_start":225,"line_end":225,"column_start":1,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9605403,"byte_end":9605415,"line_start":226,"line_end":226,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9605416,"byte_end":9605419,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`write`] and method","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9605420,"byte_end":9605477,"line_start":228,"line_end":228,"column_start":1,"column_end":58}},{"value":"/ on [`RwLock`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9605478,"byte_end":9605496,"line_start":229,"line_end":229,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9605497,"byte_end":9605500,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ [`write`]: method@RwLock::write","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9605501,"byte_end":9605536,"line_start":231,"line_end":231,"column_start":1,"column_end":36}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9605537,"byte_end":9605566,"line_start":232,"line_end":232,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":8103},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9606979,"byte_end":9606982,"line_start":276,"line_end":276,"column_start":12,"column_end":15},"name":"map","qualname":"<RwLockWriteGuard>::map","value":"pub fn map<F, U: ?Sized>(Self, F) -> RwLockWriteGuard where F: FnOnce(&mut T)\n-> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Make a new `RwLockWriteGuard` for a component of the locked data.","sig":null,"attributes":[{"value":"/ Make a new `RwLockWriteGuard` for a component of the locked data.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9605749,"byte_end":9605818,"line_start":240,"line_end":240,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9605823,"byte_end":9605826,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockWriteGuard` passed in already","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9605831,"byte_end":9605905,"line_start":242,"line_end":242,"column_start":5,"column_end":79}},{"value":"/ locked the data.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9605910,"byte_end":9605930,"line_start":243,"line_end":243,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9605935,"byte_end":9605938,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9605943,"byte_end":9606002,"line_start":245,"line_end":245,"column_start":5,"column_end":64}},{"value":"/ `RwLockWriteGuard::map(..)`. A method would interfere with methods of","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9606007,"byte_end":9606080,"line_start":246,"line_end":246,"column_start":5,"column_end":78}},{"value":"/ the same name on the contents of the locked data.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9606085,"byte_end":9606138,"line_start":247,"line_end":247,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9606143,"byte_end":9606146,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockWriteGuard::map`] from the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9606151,"byte_end":9606224,"line_start":249,"line_end":249,"column_start":5,"column_end":78}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9606229,"byte_end":9606255,"line_start":250,"line_end":250,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9606260,"byte_end":9606263,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ [`RwLockWriteGuard::map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockWriteGuard.html#method.map","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9606268,"byte_end":9606379,"line_start":252,"line_end":252,"column_start":5,"column_end":116}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9606384,"byte_end":9606447,"line_start":253,"line_end":253,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9606452,"byte_end":9606455,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9606460,"byte_end":9606474,"line_start":255,"line_end":255,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9606479,"byte_end":9606482,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9606487,"byte_end":9606494,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockWriteGuard};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9606499,"byte_end":9606547,"line_start":258,"line_end":258,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9606552,"byte_end":9606555,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9606560,"byte_end":9606608,"line_start":260,"line_end":260,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9606613,"byte_end":9606633,"line_start":261,"line_end":261,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9606638,"byte_end":9606641,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9606646,"byte_end":9606666,"line_start":263,"line_end":263,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9606671,"byte_end":9606694,"line_start":264,"line_end":264,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9606699,"byte_end":9606734,"line_start":265,"line_end":265,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9606739,"byte_end":9606742,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9606747,"byte_end":9606752,"line_start":267,"line_end":267,"column_start":5,"column_end":10}},{"value":"/     let mut mapped = RwLockWriteGuard::map(lock.write().await, |f| &mut f.0);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9606757,"byte_end":9606838,"line_start":268,"line_end":268,"column_start":5,"column_end":86}},{"value":"/     *mapped = 2;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9606843,"byte_end":9606863,"line_start":269,"line_end":269,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9606868,"byte_end":9606873,"line_start":270,"line_end":270,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9606878,"byte_end":9606881,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9606886,"byte_end":9606929,"line_start":272,"line_end":272,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9606934,"byte_end":9606941,"line_start":273,"line_end":273,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9606946,"byte_end":9606953,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9606958,"byte_end":9606967,"line_start":275,"line_end":275,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8106},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9608781,"byte_end":9608788,"line_start":330,"line_end":330,"column_start":12,"column_end":19},"name":"try_map","qualname":"<RwLockWriteGuard>::try_map","value":"pub fn try_map<F, U: ?Sized>(Self, F) -> Result<RwLockWriteGuard, Self> where\nF: FnOnce(&mut T) -> Option<&mut U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make  a new [`RwLockWriteGuard`] for a component of\n the locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make  a new [`RwLockWriteGuard`] for a component of","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9607376,"byte_end":9607443,"line_start":291,"line_end":291,"column_start":5,"column_end":72}},{"value":"/ the locked data. The original guard is returned if the closure returns","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9607448,"byte_end":9607522,"line_start":292,"line_end":292,"column_start":5,"column_end":79}},{"value":"/ `None`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9607527,"byte_end":9607538,"line_start":293,"line_end":293,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9607543,"byte_end":9607546,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockWriteGuard` passed in already","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9607551,"byte_end":9607625,"line_start":295,"line_end":295,"column_start":5,"column_end":79}},{"value":"/ locked the data.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9607630,"byte_end":9607650,"line_start":296,"line_end":296,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9607655,"byte_end":9607658,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9607663,"byte_end":9607714,"line_start":298,"line_end":298,"column_start":5,"column_end":56}},{"value":"/ used as `RwLockWriteGuard::try_map(...)`. A method would interfere with","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9607719,"byte_end":9607794,"line_start":299,"line_end":299,"column_start":5,"column_end":80}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9607799,"byte_end":9607863,"line_start":300,"line_end":300,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9607868,"byte_end":9607871,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockWriteGuard::try_map`] from","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9607876,"byte_end":9607949,"line_start":302,"line_end":302,"column_start":5,"column_end":78}},{"value":"/ the [`parking_lot` crate].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9607954,"byte_end":9607984,"line_start":303,"line_end":303,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9607989,"byte_end":9607992,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ [`RwLockWriteGuard::try_map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockWriteGuard.html#method.try_map","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9607997,"byte_end":9608116,"line_start":305,"line_end":305,"column_start":5,"column_end":124}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9608121,"byte_end":9608184,"line_start":306,"line_end":306,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9608189,"byte_end":9608192,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9608197,"byte_end":9608211,"line_start":308,"line_end":308,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9608216,"byte_end":9608219,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9608224,"byte_end":9608231,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockWriteGuard};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9608236,"byte_end":9608284,"line_start":311,"line_end":311,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9608289,"byte_end":9608292,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9608297,"byte_end":9608345,"line_start":313,"line_end":313,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9608350,"byte_end":9608370,"line_start":314,"line_end":314,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9608375,"byte_end":9608378,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9608383,"byte_end":9608403,"line_start":316,"line_end":316,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9608408,"byte_end":9608431,"line_start":317,"line_end":317,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9608436,"byte_end":9608471,"line_start":318,"line_end":318,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9608476,"byte_end":9608479,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9608484,"byte_end":9608489,"line_start":320,"line_end":320,"column_start":5,"column_end":10}},{"value":"/     let guard = lock.write().await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9608494,"byte_end":9608533,"line_start":321,"line_end":321,"column_start":5,"column_end":44}},{"value":"/     let mut guard = RwLockWriteGuard::try_map(guard, |f| Some(&mut f.0)).expect(\"should not fail\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9608538,"byte_end":9608641,"line_start":322,"line_end":322,"column_start":5,"column_end":108}},{"value":"/     *guard = 2;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9608646,"byte_end":9608665,"line_start":323,"line_end":323,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9608670,"byte_end":9608675,"line_start":324,"line_end":324,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9608680,"byte_end":9608683,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9608688,"byte_end":9608731,"line_start":326,"line_end":326,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9608736,"byte_end":9608743,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9608748,"byte_end":9608755,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9608760,"byte_end":9608769,"line_start":329,"line_end":329,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8135},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9611891,"byte_end":9611894,"line_start":426,"line_end":426,"column_start":12,"column_end":15},"name":"new","qualname":"<RwLock<T>>::new","value":"pub fn new(T) -> RwLock<T> where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an `RwLock<T>` which is unlocked.","sig":null,"attributes":[{"value":"/ Creates a new instance of an `RwLock<T>` which is unlocked.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9611681,"byte_end":9611744,"line_start":417,"line_end":417,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9611749,"byte_end":9611752,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9611757,"byte_end":9611771,"line_start":419,"line_end":419,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9611776,"byte_end":9611779,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9611784,"byte_end":9611791,"line_start":421,"line_end":421,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9611796,"byte_end":9611824,"line_start":422,"line_end":422,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9611829,"byte_end":9611832,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(5);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9611837,"byte_end":9611867,"line_start":424,"line_end":424,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9611872,"byte_end":9611879,"line_start":425,"line_end":425,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8136},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9613109,"byte_end":9613113,"line_start":467,"line_end":467,"column_start":18,"column_end":22},"name":"read","qualname":"<RwLock<T>>::read","value":"pub async fn read<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this rwlock with shared read access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this rwlock with shared read access, causing the current task","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9612071,"byte_end":9612142,"line_start":436,"line_end":436,"column_start":5,"column_end":76}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9612147,"byte_end":9612193,"line_start":437,"line_end":437,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9612198,"byte_end":9612201,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield until there are no more writers which","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9612206,"byte_end":9612275,"line_start":439,"line_end":439,"column_start":5,"column_end":74}},{"value":"/ hold the lock. There may be other readers currently inside the lock when","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9612280,"byte_end":9612356,"line_start":440,"line_end":440,"column_start":5,"column_end":81}},{"value":"/ this method returns.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9612361,"byte_end":9612385,"line_start":441,"line_end":441,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9612390,"byte_end":9612393,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9612398,"byte_end":9612412,"line_start":443,"line_end":443,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9612417,"byte_end":9612420,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9612425,"byte_end":9612432,"line_start":445,"line_end":445,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9612437,"byte_end":9612460,"line_start":446,"line_end":446,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9612465,"byte_end":9612493,"line_start":447,"line_end":447,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9612498,"byte_end":9612501,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9612506,"byte_end":9612524,"line_start":449,"line_end":449,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9612529,"byte_end":9612550,"line_start":450,"line_end":450,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9612555,"byte_end":9612599,"line_start":451,"line_end":451,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9612604,"byte_end":9612638,"line_start":452,"line_end":452,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9612643,"byte_end":9612646,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/     let n = lock.read().await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9612651,"byte_end":9612685,"line_start":454,"line_end":454,"column_start":5,"column_end":39}},{"value":"/     assert_eq!(*n, 1);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9612690,"byte_end":9612716,"line_start":455,"line_end":455,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9612721,"byte_end":9612724,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9612729,"byte_end":9612762,"line_start":457,"line_end":457,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9612767,"byte_end":9612837,"line_start":458,"line_end":458,"column_start":5,"column_end":75}},{"value":"/         let r = c_lock.read().await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9612842,"byte_end":9612882,"line_start":459,"line_end":459,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(*r, 1);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9612887,"byte_end":9612917,"line_start":460,"line_end":460,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has paniced\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9612922,"byte_end":9612978,"line_start":461,"line_end":461,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9612983,"byte_end":9612986,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard after the spawned task finishes.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9612991,"byte_end":9613049,"line_start":463,"line_end":463,"column_start":5,"column_end":63}},{"value":"/     drop(n);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9613054,"byte_end":9613070,"line_start":464,"line_end":464,"column_start":5,"column_end":21}},{"value":"/}","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9613075,"byte_end":9613079,"line_start":465,"line_end":465,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9613084,"byte_end":9613091,"line_start":466,"line_end":466,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8140},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9614201,"byte_end":9614206,"line_start":502,"line_end":502,"column_start":18,"column_end":23},"name":"write","qualname":"<RwLock<T>>::write","value":"pub async fn write<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this rwlock with exclusive write access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this rwlock with exclusive write access, causing the current task","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9613560,"byte_end":9613635,"line_start":480,"line_end":480,"column_start":5,"column_end":80}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9613640,"byte_end":9613686,"line_start":481,"line_end":481,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9613691,"byte_end":9613694,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ This function will not return while other writers or other readers","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9613699,"byte_end":9613769,"line_start":483,"line_end":483,"column_start":5,"column_end":75}},{"value":"/ currently have access to the lock.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9613774,"byte_end":9613812,"line_start":484,"line_end":484,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9613817,"byte_end":9613820,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop the write access of this rwlock","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9613825,"byte_end":9613898,"line_start":486,"line_end":486,"column_start":5,"column_end":78}},{"value":"/ when dropped.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9613903,"byte_end":9613920,"line_start":487,"line_end":487,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9613925,"byte_end":9613928,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9613933,"byte_end":9613947,"line_start":489,"line_end":489,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9613952,"byte_end":9613955,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9613960,"byte_end":9613967,"line_start":491,"line_end":491,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9613972,"byte_end":9614000,"line_start":492,"line_end":492,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9614005,"byte_end":9614008,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9614013,"byte_end":9614031,"line_start":494,"line_end":494,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9614036,"byte_end":9614057,"line_start":495,"line_end":495,"column_start":5,"column_end":26}},{"value":"/   let lock = RwLock::new(1);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9614062,"byte_end":9614094,"line_start":496,"line_end":496,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9614099,"byte_end":9614102,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/   let mut n = lock.write().await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9614107,"byte_end":9614144,"line_start":498,"line_end":498,"column_start":5,"column_end":42}},{"value":"/   *n = 2;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9614149,"byte_end":9614162,"line_start":499,"line_end":499,"column_start":5,"column_end":18}},{"value":"/}","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9614167,"byte_end":9614171,"line_start":500,"line_end":500,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9614176,"byte_end":9614183,"line_start":501,"line_end":501,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8144},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9614735,"byte_end":9614745,"line_start":516,"line_end":516,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<RwLock<T>>::into_inner","value":"pub fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes the lock, returning the underlying data.\n","sig":null,"attributes":[{"value":"/ Consumes the lock, returning the underlying data.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9614670,"byte_end":9614723,"line_start":515,"line_end":515,"column_start":5,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":8212},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"watch","qualname":"::sync::watch","value":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","parent":null,"children":[{"krate":0,"index":8213},{"krate":0,"index":8214},{"krate":0,"index":8215},{"krate":0,"index":8216},{"krate":0,"index":8217},{"krate":0,"index":8218},{"krate":0,"index":8219},{"krate":0,"index":16201},{"krate":0,"index":8220},{"krate":0,"index":16203},{"krate":0,"index":8221},{"krate":0,"index":8222},{"krate":0,"index":8223},{"krate":0,"index":8224},{"krate":0,"index":8225},{"krate":0,"index":8226},{"krate":0,"index":8227},{"krate":0,"index":8228},{"krate":0,"index":16215},{"krate":0,"index":8229},{"krate":0,"index":16217},{"krate":0,"index":8230},{"krate":0,"index":8231},{"krate":0,"index":8232},{"krate":0,"index":8603},{"krate":0,"index":8607},{"krate":0,"index":8610},{"krate":0,"index":8613},{"krate":0,"index":8616},{"krate":0,"index":8620},{"krate":0,"index":8233},{"krate":0,"index":8630},{"krate":0,"index":8636},{"krate":0,"index":8240},{"krate":0,"index":8639},{"krate":0,"index":8644},{"krate":0,"index":8642},{"krate":0,"index":8646},{"krate":0,"index":8649},{"krate":0,"index":8241},{"krate":0,"index":8242},{"krate":0,"index":8246},{"krate":0,"index":8251},{"krate":0,"index":8258},{"krate":0,"index":8263},{"krate":0,"index":8266},{"krate":0,"index":8269},{"krate":0,"index":8277},{"krate":0,"index":8279},{"krate":0,"index":8282},{"krate":0,"index":8286},{"krate":0,"index":8289},{"krate":0,"index":8291},{"krate":0,"index":8293},{"krate":0,"index":8294},{"krate":0,"index":8297}],"decl_id":null,"docs":" A single-producer, multi-consumer channel that only retains the *last* sent\n value.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":21286,"byte_end":21310,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"/ A single-producer, multi-consumer channel that only retains the *last* sent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9628244,"byte_end":9628323,"line_start":1,"line_end":1,"column_start":1,"column_end":80}},{"value":"/ value.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9628324,"byte_end":9628334,"line_start":2,"line_end":2,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9628335,"byte_end":9628338,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ This channel is useful for watching for changes to a value from multiple","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9628339,"byte_end":9628415,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"/ points in the code base, for example, changes to configuration values.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9628416,"byte_end":9628490,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9628491,"byte_end":9628494,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9628495,"byte_end":9628506,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9628507,"byte_end":9628510,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`channel`] returns a [`Sender`] / [`Receiver`] pair. These are","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9628511,"byte_end":9628578,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"/ the producer and sender halves of the channel. The channel is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9628579,"byte_end":9628644,"line_start":10,"line_end":10,"column_start":1,"column_end":66}},{"value":"/ created with an initial value. [`Receiver::recv`] will always","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9628645,"byte_end":9628710,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"/ be ready upon creation and will yield either this initial value or","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9628711,"byte_end":9628781,"line_start":12,"line_end":12,"column_start":1,"column_end":71}},{"value":"/ the latest value that has been sent by `Sender`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9628782,"byte_end":9628834,"line_start":13,"line_end":13,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9628835,"byte_end":9628838,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Calls to [`Receiver::recv`] will always yield the latest value.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9628839,"byte_end":9628906,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9628907,"byte_end":9628910,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9628911,"byte_end":9628925,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9628926,"byte_end":9628929,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9628930,"byte_end":9628937,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9628938,"byte_end":9628965,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9628966,"byte_end":9628969,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9628970,"byte_end":9629034,"line_start":22,"line_end":22,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9629035,"byte_end":9629086,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9629087,"byte_end":9629090,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9629091,"byte_end":9629124,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/         while let Some(value) = rx.recv().await {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9629125,"byte_end":9629178,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/             println!(\"received = {:?}\", value);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9629179,"byte_end":9629230,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"/         }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9629231,"byte_end":9629244,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9629245,"byte_end":9629256,"line_start":29,"line_end":29,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9629257,"byte_end":9629260,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/     tx.broadcast(\"world\")?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9629261,"byte_end":9629292,"line_start":31,"line_end":31,"column_start":1,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9629293,"byte_end":9629305,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9629306,"byte_end":9629313,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9629314,"byte_end":9629321,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9629322,"byte_end":9629325,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Closing","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9629326,"byte_end":9629339,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9629340,"byte_end":9629343,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`Sender::closed`] allows the producer to detect when all [`Receiver`]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9629344,"byte_end":9629418,"line_start":38,"line_end":38,"column_start":1,"column_end":75}},{"value":"/ handles have been dropped. This indicates that there is no further interest","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9629419,"byte_end":9629498,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ in the values being produced and work can be stopped.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9629499,"byte_end":9629556,"line_start":40,"line_end":40,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9629557,"byte_end":9629560,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Thread safety","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9629561,"byte_end":9629580,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9629581,"byte_end":9629584,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Both [`Sender`] and [`Receiver`] are thread safe. They can be moved to other","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9629585,"byte_end":9629665,"line_start":44,"line_end":44,"column_start":1,"column_end":81}},{"value":"/ threads and can be used in a concurrent environment. Clones of [`Receiver`]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9629666,"byte_end":9629745,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"/ handles may be moved to separate threads and also used concurrently.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9629746,"byte_end":9629818,"line_start":46,"line_end":46,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9629819,"byte_end":9629822,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::watch::Sender","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9629823,"byte_end":9629865,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"/ [`Receiver`]: crate::sync::watch::Receiver","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9629866,"byte_end":9629912,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"/ [`Receiver::recv`]: crate::sync::watch::Receiver::recv","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9629913,"byte_end":9629971,"line_start":50,"line_end":50,"column_start":1,"column_end":59}},{"value":"/ [`channel`]: crate::sync::watch::channel","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9629972,"byte_end":9630016,"line_start":51,"line_end":51,"column_start":1,"column_end":45}},{"value":"/ [`Sender::closed`]: crate::sync::watch::Sender::closed","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9630017,"byte_end":9630075,"line_start":52,"line_end":52,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":8603},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9630563,"byte_end":9630571,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::watch::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":8605},{"krate":0,"index":8606}],"decl_id":null,"docs":" Receives values from the associated [`Sender`](struct@Sender).","sig":null,"attributes":[{"value":"/ Receives values from the associated [`Sender`](struct@Sender).","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9630397,"byte_end":9630463,"line_start":65,"line_end":65,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9630464,"byte_end":9630467,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9630468,"byte_end":9630534,"line_start":67,"line_end":67,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":8610},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9630878,"byte_end":9630884,"line_start":81,"line_end":81,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::watch::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":8612}],"decl_id":null,"docs":" Sends values to the associated [`Receiver`](struct@Receiver).","sig":null,"attributes":[{"value":"/ Sends values to the associated [`Receiver`](struct@Receiver).","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9630713,"byte_end":9630778,"line_start":77,"line_end":77,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9630779,"byte_end":9630782,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9630783,"byte_end":9630849,"line_start":79,"line_end":79,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":8616},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9631205,"byte_end":9631208,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"Ref","qualname":"::sync::watch::Ref","value":"Ref {  }","parent":null,"children":[{"krate":0,"index":8619}],"decl_id":null,"docs":" Returns a reference to the inner value","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9630922,"byte_end":9630964,"line_start":85,"line_end":85,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9630965,"byte_end":9630968,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ Outstanding borrows hold a read lock on the inner value. This means that","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9630969,"byte_end":9631045,"line_start":87,"line_end":87,"column_start":1,"column_end":77}},{"value":"/ long lived borrows could cause the produce half to block. It is recommended","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9631046,"byte_end":9631125,"line_start":88,"line_end":88,"column_start":1,"column_end":80}},{"value":"/ to keep the borrow as short lived as possible.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9631126,"byte_end":9631176,"line_start":89,"line_end":89,"column_start":1,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":8233},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9631264,"byte_end":9631269,"line_start":95,"line_end":95,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::watch::error","value":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","parent":null,"children":[{"krate":0,"index":8234},{"krate":0,"index":8624},{"krate":0,"index":8627},{"krate":0,"index":8235},{"krate":0,"index":8238}],"decl_id":null,"docs":" Watch error types\n","sig":null,"attributes":[{"value":"/ Watch error types","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9631276,"byte_end":9631297,"line_start":96,"line_end":96,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":8624},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9631405,"byte_end":9631414,"line_start":102,"line_end":102,"column_start":16,"column_end":25},"name":"SendError","qualname":"::sync::watch::error::SendError","value":"SendError {  }","parent":null,"children":[{"krate":0,"index":8626}],"decl_id":null,"docs":" Error produced when sending a value fails.\n","sig":null,"attributes":[{"value":"/ Error produced when sending a value fails.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9631322,"byte_end":9631368,"line_start":100,"line_end":100,"column_start":5,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":8242},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9633193,"byte_end":9633200,"line_start":177,"line_end":177,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::watch::channel","value":"pub fn channel<T: Clone>(T) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new watch channel, returning the \"send\" and \"receive\" handles.","sig":null,"attributes":[{"value":"/ Creates a new watch channel, returning the \"send\" and \"receive\" handles.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9632425,"byte_end":9632501,"line_start":150,"line_end":150,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9632502,"byte_end":9632505,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ All values sent by [`Sender`] will become visible to the [`Receiver`] handles.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9632506,"byte_end":9632588,"line_start":152,"line_end":152,"column_start":1,"column_end":83}},{"value":"/ Only the last value sent is made available to the [`Receiver`] half. All","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9632589,"byte_end":9632665,"line_start":153,"line_end":153,"column_start":1,"column_end":77}},{"value":"/ intermediate values are dropped.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9632666,"byte_end":9632702,"line_start":154,"line_end":154,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9632703,"byte_end":9632706,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9632707,"byte_end":9632721,"line_start":156,"line_end":156,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9632722,"byte_end":9632725,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9632726,"byte_end":9632733,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9632734,"byte_end":9632761,"line_start":159,"line_end":159,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9632762,"byte_end":9632765,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9632766,"byte_end":9632830,"line_start":161,"line_end":161,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9632831,"byte_end":9632882,"line_start":162,"line_end":162,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9632883,"byte_end":9632886,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9632887,"byte_end":9632920,"line_start":164,"line_end":164,"column_start":1,"column_end":34}},{"value":"/         while let Some(value) = rx.recv().await {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9632921,"byte_end":9632974,"line_start":165,"line_end":165,"column_start":1,"column_end":54}},{"value":"/             println!(\"received = {:?}\", value);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9632975,"byte_end":9633026,"line_start":166,"line_end":166,"column_start":1,"column_end":52}},{"value":"/         }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9633027,"byte_end":9633040,"line_start":167,"line_end":167,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9633041,"byte_end":9633052,"line_start":168,"line_end":168,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9633053,"byte_end":9633056,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/     tx.broadcast(\"world\")?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9633057,"byte_end":9633088,"line_start":170,"line_end":170,"column_start":1,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9633089,"byte_end":9633101,"line_start":171,"line_end":171,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9633102,"byte_end":9633109,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9633110,"byte_end":9633117,"line_start":173,"line_end":173,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9633118,"byte_end":9633121,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: struct@Sender","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9633122,"byte_end":9633151,"line_start":175,"line_end":175,"column_start":1,"column_end":30}},{"value":"/ [`Receiver`]: struct@Receiver","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9633152,"byte_end":9633185,"line_start":176,"line_end":176,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":8248},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9634369,"byte_end":9634375,"line_start":219,"line_end":219,"column_start":12,"column_end":18},"name":"borrow","qualname":"<Receiver<T>>::borrow","value":"pub fn borrow(&Self) -> Ref<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently sent value","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently sent value","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9633907,"byte_end":9633962,"line_start":205,"line_end":205,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9633967,"byte_end":9633970,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ Outstanding borrows hold a read lock. This means that long lived borrows","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9633975,"byte_end":9634051,"line_start":207,"line_end":207,"column_start":5,"column_end":81}},{"value":"/ could cause the send half to block. It is recommended to keep the borrow","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9634056,"byte_end":9634132,"line_start":208,"line_end":208,"column_start":5,"column_end":81}},{"value":"/ as short lived as possible.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9634137,"byte_end":9634168,"line_start":209,"line_end":209,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9634173,"byte_end":9634176,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9634181,"byte_end":9634195,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9634200,"byte_end":9634203,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9634208,"byte_end":9634215,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9634220,"byte_end":9634247,"line_start":214,"line_end":214,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9634252,"byte_end":9634255,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ let (_, rx) = watch::channel(\"hello\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9634260,"byte_end":9634302,"line_start":216,"line_end":216,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*rx.borrow(), \"hello\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9634307,"byte_end":9634345,"line_start":217,"line_end":217,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9634350,"byte_end":9634357,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8249},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9634535,"byte_end":9634548,"line_start":226,"line_end":226,"column_start":12,"column_end":25},"name":"poll_recv_ref","qualname":"<Receiver<T>>::poll_recv_ref","value":"pub fn poll_recv_ref<'a>(&'a mut Self, &mut Context) -> Poll<Option<Ref>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8253},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9636269,"byte_end":9636273,"line_start":282,"line_end":282,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Attempts to clone the latest value sent via the channel.","sig":null,"attributes":[{"value":"/ Attempts to clone the latest value sent via the channel.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9635187,"byte_end":9635247,"line_start":249,"line_end":249,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9635252,"byte_end":9635255,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ If this is the first time the function is called on a `Receiver`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9635260,"byte_end":9635328,"line_start":251,"line_end":251,"column_start":5,"column_end":73}},{"value":"/ instance, then the function completes immediately with the **current**","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9635333,"byte_end":9635407,"line_start":252,"line_end":252,"column_start":5,"column_end":79}},{"value":"/ value held by the channel. On the next call, the function waits until","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9635412,"byte_end":9635485,"line_start":253,"line_end":253,"column_start":5,"column_end":78}},{"value":"/ a new value is sent in the channel.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9635490,"byte_end":9635529,"line_start":254,"line_end":254,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9635534,"byte_end":9635537,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if the `Sender` half is dropped.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9635542,"byte_end":9635597,"line_start":256,"line_end":256,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9635602,"byte_end":9635605,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9635610,"byte_end":9635624,"line_start":258,"line_end":258,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9635629,"byte_end":9635632,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9635637,"byte_end":9635644,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9635649,"byte_end":9635676,"line_start":261,"line_end":261,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9635681,"byte_end":9635684,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9635689,"byte_end":9635707,"line_start":263,"line_end":263,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9635712,"byte_end":9635733,"line_start":264,"line_end":264,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9635738,"byte_end":9635789,"line_start":265,"line_end":265,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9635794,"byte_end":9635797,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/     let v = rx.recv().await.unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9635802,"byte_end":9635843,"line_start":267,"line_end":267,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(v, \"hello\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9635848,"byte_end":9635879,"line_start":268,"line_end":268,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9635884,"byte_end":9635887,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9635892,"byte_end":9635925,"line_start":270,"line_end":270,"column_start":5,"column_end":38}},{"value":"/         tx.broadcast(\"goodbye\").unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9635930,"byte_end":9635975,"line_start":271,"line_end":271,"column_start":5,"column_end":50}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9635980,"byte_end":9635991,"line_start":272,"line_end":272,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9635996,"byte_end":9635999,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/     // Waits for the new task to spawn and send the value.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9636004,"byte_end":9636066,"line_start":274,"line_end":274,"column_start":5,"column_end":67}},{"value":"/     let v = rx.recv().await.unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9636071,"byte_end":9636112,"line_start":275,"line_end":275,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(v, \"goodbye\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9636117,"byte_end":9636150,"line_start":276,"line_end":276,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9636155,"byte_end":9636158,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/     let v = rx.recv().await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9636163,"byte_end":9636195,"line_start":278,"line_end":278,"column_start":5,"column_end":37}},{"value":"/     assert!(v.is_none());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9636200,"byte_end":9636229,"line_start":279,"line_end":279,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9636234,"byte_end":9636239,"line_start":280,"line_end":280,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9636244,"byte_end":9636251,"line_start":281,"line_end":281,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8271},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9637339,"byte_end":9637348,"line_start":322,"line_end":322,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<Sender<T>>::broadcast","value":"pub fn broadcast(&Self, T) -> Result<(), error::SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Broadcasts a new value via the channel, notifying all receivers.\n","sig":null,"attributes":[{"value":"/ Broadcasts a new value via the channel, notifying all receivers.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9637259,"byte_end":9637327,"line_start":321,"line_end":321,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":8272},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9638179,"byte_end":9638185,"line_start":348,"line_end":348,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when all receivers have dropped.","sig":null,"attributes":[{"value":"/ Completes when all receivers have dropped.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9637968,"byte_end":9638014,"line_start":344,"line_end":344,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9638019,"byte_end":9638022,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ This allows the producer to get notified when interest in the produced","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9638027,"byte_end":9638101,"line_start":346,"line_end":346,"column_start":5,"column_end":79}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9638106,"byte_end":9638161,"line_start":347,"line_end":347,"column_start":5,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":8651},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":8653},{"krate":0,"index":8655},{"krate":0,"index":8662},{"krate":0,"index":8663},{"krate":0,"index":8664},{"krate":0,"index":8665},{"krate":0,"index":8666},{"krate":0,"index":8670},{"krate":0,"index":8671},{"krate":0,"index":8677},{"krate":0,"index":8688},{"krate":0,"index":8766},{"krate":0,"index":8767},{"krate":0,"index":8768},{"krate":0,"index":8769},{"krate":0,"index":8830}],"decl_id":null,"docs":" Asynchronous green-threads.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":21598,"byte_end":21625,"line_start":247,"line_end":247,"column_start":13,"column_end":40}},{"value":"/ Asynchronous green-threads.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9639931,"byte_end":9639962,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9639963,"byte_end":9639966,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## What are Tasks?","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9639967,"byte_end":9639989,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9639990,"byte_end":9639993,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ A _task_ is a light weight, non-blocking unit of execution. A task is similar","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9639994,"byte_end":9640075,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"/ to an OS thread, but rather than being managed by the OS scheduler, they are","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9640076,"byte_end":9640156,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ managed by the [Tokio runtime][rt]. Another name for this general pattern is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9640157,"byte_end":9640237,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ [green threads]. If you are familiar with [Go's goroutines], [Kotlin's","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9640238,"byte_end":9640312,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ coroutines], or [Erlang's processes], you can think of Tokio's tasks as","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9640313,"byte_end":9640388,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ something similar.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9640389,"byte_end":9640411,"line_start":10,"line_end":10,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9640412,"byte_end":9640415,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Key points about tasks include:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9640416,"byte_end":9640451,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9640452,"byte_end":9640455,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **light weight**. Because tasks are scheduled by the Tokio","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9640456,"byte_end":9640530,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/   runtime rather than the operating system, creating new tasks or switching","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9640531,"byte_end":9640610,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/   between tasks does not require a context switch and has fairly low","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9640611,"byte_end":9640683,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/   overhead. Creating, running, and destroying large numbers of tasks is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9640684,"byte_end":9640759,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/   quite cheap, especially compared to OS threads.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9640760,"byte_end":9640813,"line_start":18,"line_end":18,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9640814,"byte_end":9640817,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * Tasks are scheduled **cooperatively**. Most operating systems implement","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9640818,"byte_end":9640895,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/   _preemptive multitasking_. This is a scheduling technique where the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9640896,"byte_end":9640969,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/   operating system allows each thread to run for a period of time, and then","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9640970,"byte_end":9641049,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/   _preempts_ it, temporarily pausing that thread and switching to another.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9641050,"byte_end":9641128,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/   Tasks, on the other hand, implement _cooperative multitasking_. In","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9641129,"byte_end":9641201,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/   cooperative multitasking, a task is allowed to run until it _yields_,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9641202,"byte_end":9641277,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/   indicating to the Tokio runtime's scheduler that it cannot currently","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9641278,"byte_end":9641352,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/   continue executing. When a task yields, the Tokio runtime switches to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9641353,"byte_end":9641428,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/   executing the next task.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9641429,"byte_end":9641459,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9641460,"byte_end":9641463,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **non-blocking**. Typically, when an OS thread performs I/O or","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9641464,"byte_end":9641542,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/   must synchronize with another thread, it _blocks_, allowing the OS to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9641543,"byte_end":9641618,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/   schedule another thread. When a task cannot continue executing, it must","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9641619,"byte_end":9641696,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/   yield instead, allowing the Tokio runtime to schedule another task. Tasks","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9641697,"byte_end":9641776,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/   should generally not perform system calls or other operations that could","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9641777,"byte_end":9641855,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/   block a thread, as this would prevent other tasks running on the same","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9641856,"byte_end":9641931,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/   thread from executing as well. Instead, this module provides APIs for","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9641932,"byte_end":9642007,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/   running blocking operations in an asynchronous context.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9642008,"byte_end":9642069,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9642070,"byte_end":9642073,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [rt]: crate::runtime","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9642074,"byte_end":9642098,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ [green threads]: https://en.wikipedia.org/wiki/Green_threads","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9642099,"byte_end":9642163,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/ [Go's goroutines]: https://tour.golang.org/concurrency/1","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9642164,"byte_end":9642224,"line_start":41,"line_end":41,"column_start":1,"column_end":61}},{"value":"/ [Kotlin's coroutines]: https://kotlinlang.org/docs/reference/coroutines-overview.html","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9642225,"byte_end":9642314,"line_start":42,"line_end":42,"column_start":1,"column_end":90}},{"value":"/ [Erlang's processes]: http://erlang.org/doc/getting_started/conc_prog.html#processes","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9642315,"byte_end":9642403,"line_start":43,"line_end":43,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9642404,"byte_end":9642407,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ## Working with Tasks","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9642408,"byte_end":9642433,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9642434,"byte_end":9642437,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ This module provides the following APIs for working with tasks:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9642438,"byte_end":9642505,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9642506,"byte_end":9642509,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ### Spawning","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9642510,"byte_end":9642526,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9642527,"byte_end":9642530,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Perhaps the most important function in this module is [`task::spawn`]. This","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9642531,"byte_end":9642610,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ function can be thought of as an async equivalent to the standard library's","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9642611,"byte_end":9642690,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ [`thread::spawn`][`std::thread::spawn`]. It takes an `async` block or other","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9642691,"byte_end":9642770,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ [future], and creates a new task to run that work concurrently:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9642771,"byte_end":9642838,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9642839,"byte_end":9642842,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9642843,"byte_end":9642850,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9642851,"byte_end":9642871,"line_start":57,"line_end":57,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9642872,"byte_end":9642875,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # async fn doc() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9642876,"byte_end":9642898,"line_start":59,"line_end":59,"column_start":1,"column_end":23}},{"value":"/ task::spawn(async {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9642899,"byte_end":9642922,"line_start":60,"line_end":60,"column_start":1,"column_end":24}},{"value":"/     // perform some work here...","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9642923,"byte_end":9642959,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"/ });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9642960,"byte_end":9642967,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9642968,"byte_end":9642975,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9642976,"byte_end":9642983,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9642984,"byte_end":9642987,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Like [`std::thread::spawn`], `task::spawn` returns a [`JoinHandle`] struct.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9642988,"byte_end":9643067,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ A `JoinHandle` is itself a future which may be used to await the output of","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9643068,"byte_end":9643146,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ the spawned task. For example:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9643147,"byte_end":9643181,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9643182,"byte_end":9643185,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9643186,"byte_end":9643193,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9643194,"byte_end":9643214,"line_start":71,"line_end":71,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9643215,"byte_end":9643218,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9643219,"byte_end":9643299,"line_start":73,"line_end":73,"column_start":1,"column_end":81}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9643300,"byte_end":9643334,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9643335,"byte_end":9643349,"line_start":75,"line_end":75,"column_start":1,"column_end":15}},{"value":"/     \"hello world!\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9643350,"byte_end":9643372,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"/ });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9643373,"byte_end":9643380,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9643381,"byte_end":9643384,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ // ...","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9643385,"byte_end":9643395,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9643396,"byte_end":9643399,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ // Await the result of the spawned task.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9643400,"byte_end":9643444,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"/ let result = join.await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9643445,"byte_end":9643474,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"hello world!\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9643475,"byte_end":9643514,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9643515,"byte_end":9643527,"line_start":84,"line_end":84,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9643528,"byte_end":9643535,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9643536,"byte_end":9643543,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9643544,"byte_end":9643547,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Again, like `std::thread`'s [`JoinHandle` type][thread_join], if the spawned","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9643548,"byte_end":9643628,"line_start":88,"line_end":88,"column_start":1,"column_end":81}},{"value":"/ task panics, awaiting its `JoinHandle` will return a [`JoinError`]`. For","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9643629,"byte_end":9643705,"line_start":89,"line_end":89,"column_start":1,"column_end":77}},{"value":"/ example:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9643706,"byte_end":9643718,"line_start":90,"line_end":90,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9643719,"byte_end":9643722,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9643723,"byte_end":9643730,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9643731,"byte_end":9643751,"line_start":93,"line_end":93,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9643752,"byte_end":9643755,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9643756,"byte_end":9643794,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9643795,"byte_end":9643829,"line_start":96,"line_end":96,"column_start":1,"column_end":35}},{"value":"/     panic!(\"something bad happened!\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9643830,"byte_end":9643871,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"/ });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9643872,"byte_end":9643879,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9643880,"byte_end":9643883,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ // The returned result indicates that the task failed.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9643884,"byte_end":9643942,"line_start":100,"line_end":100,"column_start":1,"column_end":59}},{"value":"/ assert!(join.await.is_err());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9643943,"byte_end":9643976,"line_start":101,"line_end":101,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9643977,"byte_end":9643984,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9643985,"byte_end":9643992,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9643993,"byte_end":9643996,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ `spawn`, `JoinHandle`, and `JoinError` are present when the \"rt-core\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9643997,"byte_end":9644070,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"/ feature flag is enabled.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9644071,"byte_end":9644099,"line_start":106,"line_end":106,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9644100,"byte_end":9644103,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn`]: crate::task::spawn()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9644104,"byte_end":9644145,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"/ [future]: std::future::Future","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9644146,"byte_end":9644179,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/ [`std::thread::spawn`]: std::thread::spawn","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9644180,"byte_end":9644226,"line_start":110,"line_end":110,"column_start":1,"column_end":47}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9644227,"byte_end":9644270,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"/ [thread_join]: std::thread::JoinHandle","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9644271,"byte_end":9644313,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/ [`JoinError`]: crate::task::JoinError","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9644314,"byte_end":9644355,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9644356,"byte_end":9644359,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ### Blocking and Yielding","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9644360,"byte_end":9644389,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9644390,"byte_end":9644393,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ As we discussed above, code running in asynchronous tasks should not perform","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9644394,"byte_end":9644474,"line_start":117,"line_end":117,"column_start":1,"column_end":81}},{"value":"/ operations that can block. A blocking operation performed in a task running","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9644475,"byte_end":9644554,"line_start":118,"line_end":118,"column_start":1,"column_end":80}},{"value":"/ on a thread that is also running other tasks would block the entire thread,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9644555,"byte_end":9644634,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"/ preventing other tasks from running.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9644635,"byte_end":9644675,"line_start":120,"line_end":120,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9644676,"byte_end":9644679,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ Instead, Tokio provides two APIs for running blocking operations in an","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9644680,"byte_end":9644754,"line_start":122,"line_end":122,"column_start":1,"column_end":75}},{"value":"/ asynchronous context: [`task::spawn_blocking`] and [`task::block_in_place`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9644755,"byte_end":9644835,"line_start":123,"line_end":123,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9644836,"byte_end":9644839,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ #### spawn_blocking","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9644840,"byte_end":9644863,"line_start":125,"line_end":125,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9644864,"byte_end":9644867,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ The `task::spawn_blocking` function is similar to the `task::spawn` function","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9644868,"byte_end":9644948,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/ discussed in the previous section, but rather than spawning an","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9644949,"byte_end":9645015,"line_start":128,"line_end":128,"column_start":1,"column_end":67}},{"value":"/ _non-blocking_ future on the Tokio runtime, it instead spawns a","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9645016,"byte_end":9645083,"line_start":129,"line_end":129,"column_start":1,"column_end":68}},{"value":"/ _blocking_ function on a dedicated thread pool for blocking tasks. For","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9645084,"byte_end":9645158,"line_start":130,"line_end":130,"column_start":1,"column_end":75}},{"value":"/ example:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9645159,"byte_end":9645171,"line_start":131,"line_end":131,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9645172,"byte_end":9645175,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9645176,"byte_end":9645183,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9645184,"byte_end":9645204,"line_start":134,"line_end":134,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9645205,"byte_end":9645208,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9645209,"byte_end":9645232,"line_start":136,"line_end":136,"column_start":1,"column_end":24}},{"value":"/ task::spawn_blocking(|| {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9645233,"byte_end":9645262,"line_start":137,"line_end":137,"column_start":1,"column_end":30}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9645263,"byte_end":9645325,"line_start":138,"line_end":138,"column_start":1,"column_end":63}},{"value":"/ });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9645326,"byte_end":9645333,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9645334,"byte_end":9645341,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9645342,"byte_end":9645349,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9645350,"byte_end":9645353,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ Just like `task::spawn`, `task::spawn_blocking` returns a `JoinHandle`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9645354,"byte_end":9645428,"line_start":143,"line_end":143,"column_start":1,"column_end":75}},{"value":"/ which we can use to await the result of the blocking operation:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9645429,"byte_end":9645496,"line_start":144,"line_end":144,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9645497,"byte_end":9645500,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9645501,"byte_end":9645512,"line_start":146,"line_end":146,"column_start":1,"column_end":12}},{"value":"/ # use tokio::task;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9645513,"byte_end":9645535,"line_start":147,"line_end":147,"column_start":1,"column_end":23}},{"value":"/ # async fn docs() -> Result<(), Box<dyn std::error::Error>>{","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9645536,"byte_end":9645600,"line_start":148,"line_end":148,"column_start":1,"column_end":65}},{"value":"/ let join = task::spawn_blocking(|| {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9645601,"byte_end":9645641,"line_start":149,"line_end":149,"column_start":1,"column_end":41}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9645642,"byte_end":9645704,"line_start":150,"line_end":150,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9645705,"byte_end":9645733,"line_start":151,"line_end":151,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9645734,"byte_end":9645741,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9645742,"byte_end":9645745,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ let result = join.await?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9645746,"byte_end":9645775,"line_start":154,"line_end":154,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9645776,"byte_end":9645821,"line_start":155,"line_end":155,"column_start":1,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9645822,"byte_end":9645834,"line_start":156,"line_end":156,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9645835,"byte_end":9645842,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9645843,"byte_end":9645850,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9645851,"byte_end":9645854,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ #### block_in_place","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9645855,"byte_end":9645878,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9645879,"byte_end":9645882,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ When using the [threaded runtime][rt-threaded], the [`task::block_in_place`]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9645883,"byte_end":9645963,"line_start":162,"line_end":162,"column_start":1,"column_end":81}},{"value":"/ function is also available. Like `task::spawn_blocking`, this function","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9645964,"byte_end":9646038,"line_start":163,"line_end":163,"column_start":1,"column_end":75}},{"value":"/ allows running a blocking operation from an asynchronous context. Unlike","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9646039,"byte_end":9646115,"line_start":164,"line_end":164,"column_start":1,"column_end":77}},{"value":"/ `spawn_blocking`, however, `block_in_place` works by transitioning the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9646116,"byte_end":9646190,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"/ _current_ worker thread to a blocking thread, moving other tasks running on","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9646191,"byte_end":9646270,"line_start":166,"line_end":166,"column_start":1,"column_end":80}},{"value":"/ that thread to another worker thread. This can improve performance by avoiding","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9646271,"byte_end":9646353,"line_start":167,"line_end":167,"column_start":1,"column_end":83}},{"value":"/ context switches.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9646354,"byte_end":9646375,"line_start":168,"line_end":168,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9646376,"byte_end":9646379,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9646380,"byte_end":9646396,"line_start":170,"line_end":170,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9646397,"byte_end":9646400,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9646401,"byte_end":9646408,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9646409,"byte_end":9646429,"line_start":173,"line_end":173,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9646430,"byte_end":9646433,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9646434,"byte_end":9646457,"line_start":175,"line_end":175,"column_start":1,"column_end":24}},{"value":"/ let result = task::block_in_place(|| {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9646458,"byte_end":9646500,"line_start":176,"line_end":176,"column_start":1,"column_end":43}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9646501,"byte_end":9646563,"line_start":177,"line_end":177,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9646564,"byte_end":9646592,"line_start":178,"line_end":178,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9646593,"byte_end":9646600,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9646601,"byte_end":9646604,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9646605,"byte_end":9646650,"line_start":181,"line_end":181,"column_start":1,"column_end":46}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9646651,"byte_end":9646658,"line_start":182,"line_end":182,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9646659,"byte_end":9646666,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9646667,"byte_end":9646670,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ #### yield_now","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9646671,"byte_end":9646689,"line_start":185,"line_end":185,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9646690,"byte_end":9646693,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ In addition, this module provides a [`task::yield_now`] async function","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9646694,"byte_end":9646768,"line_start":187,"line_end":187,"column_start":1,"column_end":75}},{"value":"/ that is analogous to the standard library's [`thread::yield_now`]. Calling","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9646769,"byte_end":9646847,"line_start":188,"line_end":188,"column_start":1,"column_end":79}},{"value":"/ and `await`ing this function will cause the current task to yield to the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9646848,"byte_end":9646924,"line_start":189,"line_end":189,"column_start":1,"column_end":77}},{"value":"/ Tokio runtime's scheduler, allowing other tasks to be","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9646925,"byte_end":9646982,"line_start":190,"line_end":190,"column_start":1,"column_end":58}},{"value":"/ scheduled. Eventually, the yielding task will be polled again, allowing it","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9646983,"byte_end":9647061,"line_start":191,"line_end":191,"column_start":1,"column_end":79}},{"value":"/ to execute. For example:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9647062,"byte_end":9647090,"line_start":192,"line_end":192,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9647091,"byte_end":9647094,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9647095,"byte_end":9647106,"line_start":194,"line_end":194,"column_start":1,"column_end":12}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9647107,"byte_end":9647127,"line_start":195,"line_end":195,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9647128,"byte_end":9647131,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9647132,"byte_end":9647170,"line_start":197,"line_end":197,"column_start":1,"column_end":39}},{"value":"/ async {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9647171,"byte_end":9647182,"line_start":198,"line_end":198,"column_start":1,"column_end":12}},{"value":"/     task::spawn(async {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9647183,"byte_end":9647210,"line_start":199,"line_end":199,"column_start":1,"column_end":28}},{"value":"/         // ...","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9647211,"byte_end":9647229,"line_start":200,"line_end":200,"column_start":1,"column_end":19}},{"value":"/         println!(\"spawned task done!\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9647230,"byte_end":9647272,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9647273,"byte_end":9647284,"line_start":202,"line_end":202,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9647285,"byte_end":9647288,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/     // Yield, allowing the newly-spawned task to execute first.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9647289,"byte_end":9647356,"line_start":204,"line_end":204,"column_start":1,"column_end":68}},{"value":"/     task::yield_now().await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9647357,"byte_end":9647389,"line_start":205,"line_end":205,"column_start":1,"column_end":33}},{"value":"/     println!(\"main task done!\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9647390,"byte_end":9647426,"line_start":206,"line_end":206,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9647427,"byte_end":9647432,"line_start":207,"line_end":207,"column_start":1,"column_end":6}},{"value":"/ # .await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9647433,"byte_end":9647446,"line_start":208,"line_end":208,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9647447,"byte_end":9647454,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9647455,"byte_end":9647462,"line_start":210,"line_end":210,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9647463,"byte_end":9647466,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: crate::task::spawn_blocking","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9647467,"byte_end":9647524,"line_start":212,"line_end":212,"column_start":1,"column_end":58}},{"value":"/ [`task::block_in_place`]: crate::task::block_in_place","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9647525,"byte_end":9647582,"line_start":213,"line_end":213,"column_start":1,"column_end":58}},{"value":"/ [rt-threaded]: ../runtime/index.html#threaded-scheduler","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9647583,"byte_end":9647642,"line_start":214,"line_end":214,"column_start":1,"column_end":60}},{"value":"/ [`task::yield_now`]: crate::task::yield_now()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9647643,"byte_end":9647692,"line_start":215,"line_end":215,"column_start":1,"column_end":50}},{"value":"/ [`thread::yield_now`]: std::thread::yield_now","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/mod.rs","byte_start":9647693,"byte_end":9647742,"line_start":216,"line_end":216,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":8656},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/blocking.rs","byte_start":9650342,"byte_end":9650356,"line_start":48,"line_end":48,"column_start":12,"column_end":26},"name":"block_in_place","qualname":"::task::blocking::block_in_place","value":"pub fn block_in_place<F, R>(F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided blocking function on the current thread without\n blocking the executor.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-threaded\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":22068,"byte_end":22099,"line_start":272,"line_end":272,"column_start":13,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":8659},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/blocking.rs","byte_start":9653245,"byte_end":9653259,"line_start":112,"line_end":112,"column_start":12,"column_end":26},"name":"spawn_blocking","qualname":"::task::blocking::spawn_blocking","value":"pub fn spawn_blocking<F, R>(F) -> JoinHandle<R> where F: FnOnce() -> R +\nSend + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided closure on a thread where blocking is acceptable.","sig":null,"attributes":[{"value":"cfg(feature = \"blocking\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":16603,"byte_end":16631,"line_start":15,"line_end":15,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":8678},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/spawn.rs","byte_start":9657431,"byte_end":9657436,"line_start":125,"line_end":125,"column_start":12,"column_end":17},"name":"spawn","qualname":"::task::spawn::spawn","value":"pub fn spawn<T>(T) -> JoinHandle<T::Output> where T: Future + Send + 'static,\nT::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a new asynchronous task, returning a\n [`JoinHandle`](super::JoinHandle) for it.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":21740,"byte_end":21767,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":8680},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/yield_now.rs","byte_start":9658509,"byte_end":9658518,"line_start":16,"line_end":16,"column_start":18,"column_end":27},"name":"yield_now","qualname":"::task::yield_now::yield_now","value":"pub async fn yield_now() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Yields execution back to the Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":21740,"byte_end":21767,"line_start":256,"line_end":256,"column_start":13,"column_end":40}},{"value":"must_use = \"yield_now does nothing unless polled/`await`-ed\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/yield_now.rs","byte_start":9658428,"byte_end":9658491,"line_start":15,"line_end":15,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":8831},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9662916,"byte_end":9662924,"line_start":112,"line_end":112,"column_start":16,"column_end":24},"name":"LocalSet","qualname":"::task::local::LocalSet","value":"LocalSet {  }","parent":null,"children":[{"krate":0,"index":8832},{"krate":0,"index":8833},{"krate":0,"index":8834}],"decl_id":null,"docs":" A set of tasks which are executed on the same thread.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-util\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":22281,"byte_end":22308,"line_start":282,"line_end":282,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":8840},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9664936,"byte_end":9664947,"line_start":193,"line_end":193,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"::task::local::spawn_local","value":"pub fn spawn_local<F>(F) -> JoinHandle<F::Output> where F: Future + 'static,\nF::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` future on the local task set.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-util\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":22281,"byte_end":22308,"line_start":282,"line_end":282,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":8721},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9665844,"byte_end":9665847,"line_start":223,"line_end":223,"column_start":12,"column_end":15},"name":"new","qualname":"<LocalSet>::new","value":"pub fn new() -> LocalSet","parent":null,"children":[],"decl_id":null,"docs":" Returns a new local task set.\n","sig":null,"attributes":[{"value":"/ Returns a new local task set.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9665799,"byte_end":9665832,"line_start":222,"line_end":222,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":8722},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9667552,"byte_end":9667563,"line_start":276,"line_end":276,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"<LocalSet>::spawn_local","value":"pub fn spawn_local<F>(&Self, F) -> JoinHandle<F::Output> where F: Future +\n'static, F::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` task onto the local task set.","sig":null,"attributes":[{"value":"/ Spawns a `!Send` task onto the local task set.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9666389,"byte_end":9666439,"line_start":240,"line_end":240,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9666444,"byte_end":9666447,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ This task is guaranteed to be run on the current thread.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9666452,"byte_end":9666512,"line_start":242,"line_end":242,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9666517,"byte_end":9666520,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ Unlike the free function [`spawn_local`], this method may be used to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9666525,"byte_end":9666597,"line_start":244,"line_end":244,"column_start":5,"column_end":77}},{"value":"/ spawn local tasks when the task set is _not_ running. For example:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9666602,"byte_end":9666672,"line_start":245,"line_end":245,"column_start":5,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9666677,"byte_end":9666688,"line_start":246,"line_end":246,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9666693,"byte_end":9666713,"line_start":247,"line_end":247,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9666718,"byte_end":9666721,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9666726,"byte_end":9666744,"line_start":249,"line_end":249,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9666749,"byte_end":9666770,"line_start":250,"line_end":250,"column_start":5,"column_end":26}},{"value":"/     let local = task::LocalSet::new();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9666775,"byte_end":9666817,"line_start":251,"line_end":251,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9666822,"byte_end":9666825,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/     // Spawn a future on the local set. This future will be run when","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9666830,"byte_end":9666902,"line_start":253,"line_end":253,"column_start":5,"column_end":77}},{"value":"/     // we call `run_until` to drive the task set.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9666907,"byte_end":9666960,"line_start":254,"line_end":254,"column_start":5,"column_end":58}},{"value":"/     local.spawn_local(async {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9666965,"byte_end":9666998,"line_start":255,"line_end":255,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9667003,"byte_end":9667020,"line_start":256,"line_end":256,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9667025,"byte_end":9667036,"line_start":257,"line_end":257,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9667041,"byte_end":9667044,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/     // Run the local task set.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9667049,"byte_end":9667083,"line_start":259,"line_end":259,"column_start":5,"column_end":39}},{"value":"/     local.run_until(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9667088,"byte_end":9667124,"line_start":260,"line_end":260,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9667129,"byte_end":9667147,"line_start":261,"line_end":261,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9667152,"byte_end":9667169,"line_start":262,"line_end":262,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9667174,"byte_end":9667177,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/     // When `run` finishes, we can spawn _more_ futures, which will","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9667182,"byte_end":9667253,"line_start":264,"line_end":264,"column_start":5,"column_end":76}},{"value":"/     // run in subsequent calls to `run_until`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9667258,"byte_end":9667308,"line_start":265,"line_end":265,"column_start":5,"column_end":55}},{"value":"/     local.spawn_local(async {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9667313,"byte_end":9667346,"line_start":266,"line_end":266,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9667351,"byte_end":9667368,"line_start":267,"line_end":267,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9667373,"byte_end":9667384,"line_start":268,"line_end":268,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9667389,"byte_end":9667392,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/     local.run_until(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9667397,"byte_end":9667433,"line_start":270,"line_end":270,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9667438,"byte_end":9667456,"line_start":271,"line_end":271,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9667461,"byte_end":9667478,"line_start":272,"line_end":272,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9667483,"byte_end":9667488,"line_start":273,"line_end":273,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9667493,"byte_end":9667500,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9667505,"byte_end":9667540,"line_start":275,"line_end":275,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":8724},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9670298,"byte_end":9670306,"line_start":349,"line_end":349,"column_start":12,"column_end":20},"name":"block_on","qualname":"<LocalSet>::block_on","value":"pub fn block_on<F>(&Self, &mut crate::runtime::Runtime, F) -> F::Output where\nF: Future","parent":null,"children":[],"decl_id":null,"docs":" Runs a future to completion on the provided runtime, driving any local\n futures spawned on this task set on the current thread.","sig":null,"attributes":[{"value":"/ Runs a future to completion on the provided runtime, driving any local","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9667906,"byte_end":9667980,"line_start":287,"line_end":287,"column_start":5,"column_end":79}},{"value":"/ futures spawned on this task set on the current thread.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9667985,"byte_end":9668044,"line_start":288,"line_end":288,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9668049,"byte_end":9668052,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the runtime, blocking until it is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9668057,"byte_end":9668124,"line_start":290,"line_end":290,"column_start":5,"column_end":72}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9668129,"byte_end":9668202,"line_start":291,"line_end":291,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime. The future","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9668207,"byte_end":9668283,"line_start":292,"line_end":292,"column_start":5,"column_end":81}},{"value":"/ may also call [`spawn_local`] to spawn_local additional local futures on the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9668288,"byte_end":9668368,"line_start":293,"line_end":293,"column_start":5,"column_end":85}},{"value":"/ current thread.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9668373,"byte_end":9668392,"line_start":294,"line_end":294,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9668397,"byte_end":9668400,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ This method should not be called from an asynchronous context.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9668405,"byte_end":9668471,"line_start":296,"line_end":296,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9668476,"byte_end":9668479,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9668484,"byte_end":9668496,"line_start":298,"line_end":298,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9668501,"byte_end":9668504,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ This function panics if the executor is at capacity, if the provided","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9668509,"byte_end":9668581,"line_start":300,"line_end":300,"column_start":5,"column_end":77}},{"value":"/ future panics, or if called within an asynchronous execution context.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9668586,"byte_end":9668659,"line_start":301,"line_end":301,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9668664,"byte_end":9668667,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9668672,"byte_end":9668683,"line_start":303,"line_end":303,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9668688,"byte_end":9668691,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ Since this function internally calls [`Runtime::block_on`], and drives","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9668696,"byte_end":9668770,"line_start":305,"line_end":305,"column_start":5,"column_end":79}},{"value":"/ futures in the local task set inside that call to `block_on`, the local","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9668775,"byte_end":9668850,"line_start":306,"line_end":306,"column_start":5,"column_end":80}},{"value":"/ futures may not use [in-place blocking]. If a blocking call needs to be","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9668855,"byte_end":9668930,"line_start":307,"line_end":307,"column_start":5,"column_end":80}},{"value":"/ issued from a local task, the [`spawn_blocking`] API may be used instead.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9668935,"byte_end":9669012,"line_start":308,"line_end":308,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9669017,"byte_end":9669020,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ For example, this will panic:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9669025,"byte_end":9669058,"line_start":310,"line_end":310,"column_start":5,"column_end":38}},{"value":"/ ```should_panic","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9669063,"byte_end":9669082,"line_start":311,"line_end":311,"column_start":5,"column_end":24}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9669087,"byte_end":9669119,"line_start":312,"line_end":312,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9669124,"byte_end":9669144,"line_start":313,"line_end":313,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9669149,"byte_end":9669152,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9669157,"byte_end":9669198,"line_start":315,"line_end":315,"column_start":5,"column_end":46}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9669203,"byte_end":9669241,"line_start":316,"line_end":316,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&mut rt, async {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9669246,"byte_end":9669281,"line_start":317,"line_end":317,"column_start":5,"column_end":40}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9669286,"byte_end":9669330,"line_start":318,"line_end":318,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::block_in_place(|| {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9669335,"byte_end":9669394,"line_start":319,"line_end":319,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9669399,"byte_end":9669421,"line_start":320,"line_end":320,"column_start":5,"column_end":27}},{"value":"/         });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9669426,"byte_end":9669441,"line_start":321,"line_end":321,"column_start":5,"column_end":20}},{"value":"/         // ...","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9669446,"byte_end":9669464,"line_start":322,"line_end":322,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9669469,"byte_end":9669480,"line_start":323,"line_end":323,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9669485,"byte_end":9669513,"line_start":324,"line_end":324,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9669518,"byte_end":9669524,"line_start":325,"line_end":325,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9669529,"byte_end":9669536,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/ This, however, will not panic:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9669541,"byte_end":9669575,"line_start":327,"line_end":327,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9669580,"byte_end":9669587,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9669592,"byte_end":9669624,"line_start":329,"line_end":329,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9669629,"byte_end":9669649,"line_start":330,"line_end":330,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9669654,"byte_end":9669657,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9669662,"byte_end":9669703,"line_start":332,"line_end":332,"column_start":5,"column_end":46}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9669708,"byte_end":9669746,"line_start":333,"line_end":333,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&mut rt, async {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9669751,"byte_end":9669786,"line_start":334,"line_end":334,"column_start":5,"column_end":40}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9669791,"byte_end":9669835,"line_start":335,"line_end":335,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::spawn_blocking(|| {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9669840,"byte_end":9669899,"line_start":336,"line_end":336,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9669904,"byte_end":9669926,"line_start":337,"line_end":337,"column_start":5,"column_end":27}},{"value":"/         }).await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9669931,"byte_end":9669952,"line_start":338,"line_end":338,"column_start":5,"column_end":26}},{"value":"/         // ...","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9669957,"byte_end":9669975,"line_start":339,"line_end":339,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9669980,"byte_end":9669991,"line_start":340,"line_end":340,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9669996,"byte_end":9670024,"line_start":341,"line_end":341,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9670029,"byte_end":9670035,"line_start":342,"line_end":342,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9670040,"byte_end":9670047,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9670052,"byte_end":9670055,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9670060,"byte_end":9670095,"line_start":345,"line_end":345,"column_start":5,"column_end":40}},{"value":"/ [`Runtime::block_on`]: method@crate::runtime::Runtime::block_on","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9670100,"byte_end":9670167,"line_start":346,"line_end":346,"column_start":5,"column_end":72}},{"value":"/ [in-place blocking]: fn@crate::task::block_in_place","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9670172,"byte_end":9670227,"line_start":347,"line_end":347,"column_start":5,"column_end":60}},{"value":"/ [`spawn_blocking`]: fn@crate::task::spawn_blocking","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9670232,"byte_end":9670286,"line_start":348,"line_end":348,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":8726},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9671557,"byte_end":9671566,"line_start":384,"line_end":384,"column_start":18,"column_end":27},"name":"run_until","qualname":"<LocalSet>::run_until","value":"pub async fn run_until<F, '_>(&'_ Self, F) -> /*impl Trait*/ where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the local set, returning its output.","sig":null,"attributes":[{"value":"/ Run a future to completion on the local set, returning its output.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9670465,"byte_end":9670535,"line_start":356,"line_end":356,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9670540,"byte_end":9670543,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ This returns a future that runs the given future with a local set,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9670548,"byte_end":9670618,"line_start":358,"line_end":358,"column_start":5,"column_end":75}},{"value":"/ allowing it to call [`spawn_local`] to spawn additional `!Send` futures.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9670623,"byte_end":9670699,"line_start":359,"line_end":359,"column_start":5,"column_end":81}},{"value":"/ Any local futures spawned on the local set will be driven in the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9670704,"byte_end":9670772,"line_start":360,"line_end":360,"column_start":5,"column_end":73}},{"value":"/ background until the future passed to `run_until` completes. When the future","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9670777,"byte_end":9670857,"line_start":361,"line_end":361,"column_start":5,"column_end":85}},{"value":"/ passed to `run` finishes, any local futures which have not completed","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9670862,"byte_end":9670934,"line_start":362,"line_end":362,"column_start":5,"column_end":77}},{"value":"/ will remain on the local set, and will be driven on subsequent calls to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9670939,"byte_end":9671014,"line_start":363,"line_end":363,"column_start":5,"column_end":80}},{"value":"/ `run_until` or when [awaiting the local set] itself.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9671019,"byte_end":9671075,"line_start":364,"line_end":364,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9671080,"byte_end":9671083,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9671088,"byte_end":9671102,"line_start":366,"line_end":366,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9671107,"byte_end":9671110,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9671115,"byte_end":9671126,"line_start":368,"line_end":368,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9671131,"byte_end":9671151,"line_start":369,"line_end":369,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9671156,"byte_end":9671159,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9671164,"byte_end":9671182,"line_start":371,"line_end":371,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9671187,"byte_end":9671208,"line_start":372,"line_end":372,"column_start":5,"column_end":26}},{"value":"/     task::LocalSet::new().run_until(async {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9671213,"byte_end":9671260,"line_start":373,"line_end":373,"column_start":5,"column_end":52}},{"value":"/         task::spawn_local(async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9671265,"byte_end":9671307,"line_start":374,"line_end":374,"column_start":5,"column_end":47}},{"value":"/             // ...","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9671312,"byte_end":9671334,"line_start":375,"line_end":375,"column_start":5,"column_end":27}},{"value":"/         }).await.unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9671339,"byte_end":9671369,"line_start":376,"line_end":376,"column_start":5,"column_end":35}},{"value":"/         // ...","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9671374,"byte_end":9671392,"line_start":377,"line_end":377,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9671397,"byte_end":9671414,"line_start":378,"line_end":378,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9671419,"byte_end":9671424,"line_start":379,"line_end":379,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9671429,"byte_end":9671436,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9671441,"byte_end":9671444,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9671449,"byte_end":9671484,"line_start":382,"line_end":382,"column_start":5,"column_end":40}},{"value":"/ [awaiting the local set]: #awaiting-a-localset","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9671489,"byte_end":9671539,"line_start":383,"line_end":383,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":8783},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9680483,"byte_end":9680491,"line_start":93,"line_end":93,"column_start":12,"column_end":20},"name":"LocalKey","qualname":"::task::task_local::LocalKey","value":"LocalKey { inner }","parent":null,"children":[{"krate":0,"index":8785}],"decl_id":null,"docs":" A key for task-local data.","sig":null,"attributes":[{"value":"/ A key for task-local data.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9679650,"byte_end":9679680,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9679681,"byte_end":9679684,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ This type is generated by the `task_local!` macro.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9679685,"byte_end":9679739,"line_start":64,"line_end":64,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9679740,"byte_end":9679743,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Unlike [`std::thread::LocalKey`], `tokio::task::LocalKey` will","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9679744,"byte_end":9679810,"line_start":66,"line_end":66,"column_start":1,"column_end":67}},{"value":"/ _not_ lazily initialize the value on first access. Instead, the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9679811,"byte_end":9679878,"line_start":67,"line_end":67,"column_start":1,"column_end":68}},{"value":"/ value is first initialized when the future containing","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9679879,"byte_end":9679936,"line_start":68,"line_end":68,"column_start":1,"column_end":58}},{"value":"/ the task-local is first polled by a futures executor, like Tokio.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9679937,"byte_end":9680006,"line_start":69,"line_end":69,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9680007,"byte_end":9680010,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9680011,"byte_end":9680025,"line_start":71,"line_end":71,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9680026,"byte_end":9680029,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9680030,"byte_end":9680037,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/ # async fn dox() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9680038,"byte_end":9680060,"line_start":74,"line_end":74,"column_start":1,"column_end":23}},{"value":"/ tokio::task_local! {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9680061,"byte_end":9680085,"line_start":75,"line_end":75,"column_start":1,"column_end":25}},{"value":"/     static NUMBER: u32;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9680086,"byte_end":9680113,"line_start":76,"line_end":76,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9680114,"byte_end":9680119,"line_start":77,"line_end":77,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9680120,"byte_end":9680123,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9680124,"byte_end":9680156,"line_start":79,"line_end":79,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 1);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9680157,"byte_end":9680193,"line_start":80,"line_end":80,"column_start":1,"column_end":37}},{"value":"/ }).await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9680194,"byte_end":9680207,"line_start":81,"line_end":81,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9680208,"byte_end":9680211,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(2, async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9680212,"byte_end":9680244,"line_start":83,"line_end":83,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 2);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9680245,"byte_end":9680281,"line_start":84,"line_end":84,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9680282,"byte_end":9680285,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/     NUMBER.scope(3, async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9680286,"byte_end":9680322,"line_start":86,"line_end":86,"column_start":1,"column_end":37}},{"value":"/         assert_eq!(NUMBER.get(), 3);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9680323,"byte_end":9680363,"line_start":87,"line_end":87,"column_start":1,"column_end":41}},{"value":"/     }).await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9680364,"byte_end":9680381,"line_start":88,"line_end":88,"column_start":1,"column_end":18}},{"value":"/ }).await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9680382,"byte_end":9680395,"line_start":89,"line_end":89,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9680396,"byte_end":9680403,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9680404,"byte_end":9680411,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ [`std::thread::LocalKey`]: struct@std::thread::LocalKey","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9680412,"byte_end":9680471,"line_start":92,"line_end":92,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":8785},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9680533,"byte_end":9680538,"line_start":95,"line_end":95,"column_start":9,"column_end":14},"name":"inner","qualname":"::task::task_local::LocalKey::inner","value":"std::thread::LocalKey<std::cell::RefCell<std::option::Option<T>>>","parent":{"krate":0,"index":8783},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8788},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9681066,"byte_end":9681071,"line_start":116,"line_end":116,"column_start":18,"column_end":23},"name":"scope","qualname":"<LocalKey<T>>::scope","value":"pub async fn scope<F>(&'static Self, T, F) -> /*impl Trait*/ where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Sets a value `T` as the task-local value for the future `F`.","sig":null,"attributes":[{"value":"/ Sets a value `T` as the task-local value for the future `F`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9680616,"byte_end":9680680,"line_start":99,"line_end":99,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9680685,"byte_end":9680688,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ On completion of `scope`, the task-local will be dropped.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9680693,"byte_end":9680754,"line_start":101,"line_end":101,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9680759,"byte_end":9680762,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ### Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9680767,"byte_end":9680783,"line_start":103,"line_end":103,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9680788,"byte_end":9680791,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9680796,"byte_end":9680803,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/ # async fn dox() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9680808,"byte_end":9680830,"line_start":106,"line_end":106,"column_start":5,"column_end":27}},{"value":"/ tokio::task_local! {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9680835,"byte_end":9680859,"line_start":107,"line_end":107,"column_start":5,"column_end":29}},{"value":"/     static NUMBER: u32;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9680864,"byte_end":9680891,"line_start":108,"line_end":108,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9680896,"byte_end":9680901,"line_start":109,"line_end":109,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9680906,"byte_end":9680909,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9680914,"byte_end":9680946,"line_start":111,"line_end":111,"column_start":5,"column_end":37}},{"value":"/     println!(\"task local value: {}\", NUMBER.get());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9680951,"byte_end":9681006,"line_start":112,"line_end":112,"column_start":5,"column_end":60}},{"value":"/ }).await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9681011,"byte_end":9681024,"line_start":113,"line_end":113,"column_start":5,"column_end":18}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9681029,"byte_end":9681036,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9681041,"byte_end":9681048,"line_start":115,"line_end":115,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8792},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9681545,"byte_end":9681549,"line_start":134,"line_end":134,"column_start":12,"column_end":16},"name":"with","qualname":"<LocalKey<T>>::with","value":"pub fn with<F, R>(&'static Self, F) -> R where F: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9681296,"byte_end":9681362,"line_start":128,"line_end":128,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9681367,"byte_end":9681370,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9681375,"byte_end":9681387,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9681392,"byte_end":9681395,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9681400,"byte_end":9681461,"line_start":132,"line_end":132,"column_start":5,"column_end":66}},{"value":"/ of a future containing a task-local with the corresponding key.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9681466,"byte_end":9681533,"line_start":133,"line_end":133,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":8795},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9682037,"byte_end":9682045,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"try_with","qualname":"<LocalKey<T>>::try_with","value":"pub fn try_with<F, R>(&'static Self, F) -> Result<R, AccessError> where\nF: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9681790,"byte_end":9681856,"line_start":144,"line_end":144,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9681861,"byte_end":9681864,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ If the task-local with the accociated key is not present, this","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9681869,"byte_end":9681935,"line_start":146,"line_end":146,"column_start":5,"column_end":71}},{"value":"/ method will return an `AccessError`. For a panicking variant,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9681940,"byte_end":9682005,"line_start":147,"line_end":147,"column_start":5,"column_end":70}},{"value":"/ see `with`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9682010,"byte_end":9682025,"line_start":148,"line_end":148,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":8801},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9682505,"byte_end":9682508,"line_start":166,"line_end":166,"column_start":12,"column_end":15},"name":"get","qualname":"<LocalKey<T>>::get","value":"pub fn get(&'static Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the task-local value\n if the task-local value implements `Copy`.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the task-local value","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9682400,"byte_end":9682442,"line_start":164,"line_end":164,"column_start":5,"column_end":47}},{"value":"/ if the task-local value implements `Copy`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9682447,"byte_end":9682493,"line_start":165,"line_end":165,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":8843},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9683997,"byte_end":9684008,"line_start":224,"line_end":224,"column_start":12,"column_end":23},"name":"AccessError","qualname":"::task::task_local::AccessError","value":"AccessError {  }","parent":null,"children":[{"krate":0,"index":8844}],"decl_id":null,"docs":" An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).\n","sig":null,"attributes":[{"value":"/ An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9683872,"byte_end":9683947,"line_start":222,"line_end":222,"column_start":1,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":8855},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::time","value":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","parent":null,"children":[{"krate":0,"index":8856},{"krate":0,"index":8857},{"krate":0,"index":8858},{"krate":0,"index":8935},{"krate":0,"index":8936},{"krate":0,"index":8956},{"krate":0,"index":8957},{"krate":0,"index":8958},{"krate":0,"index":8959},{"krate":0,"index":8960},{"krate":0,"index":9140},{"krate":0,"index":9157},{"krate":0,"index":9158},{"krate":0,"index":9194},{"krate":0,"index":9195},{"krate":0,"index":9218},{"krate":0,"index":9219},{"krate":0,"index":9220},{"krate":0,"index":9221},{"krate":0,"index":9222},{"krate":0,"index":9256},{"krate":0,"index":9257},{"krate":0,"index":9258},{"krate":0,"index":9259},{"krate":0,"index":9260},{"krate":0,"index":9506},{"krate":0,"index":9530},{"krate":0,"index":9531},{"krate":0,"index":9532},{"krate":0,"index":9261},{"krate":0,"index":9325},{"krate":0,"index":9326},{"krate":0,"index":9331}],"decl_id":null,"docs":" Utilities for tracking time.","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/cfg.rs","byte_start":23137,"byte_end":23161,"line_start":324,"line_end":324,"column_start":13,"column_end":37}},{"value":"/ Utilities for tracking time.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9684381,"byte_end":9684413,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9684414,"byte_end":9684417,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides a number of types for executing code after a set period","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9684418,"byte_end":9684498,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ of time.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9684499,"byte_end":9684511,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9684512,"byte_end":9684515,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ * `Delay` is a future that does no work and completes at a specific `Instant`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9684516,"byte_end":9684597,"line_start":6,"line_end":6,"column_start":1,"column_end":82}},{"value":"/   in time.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9684598,"byte_end":9684612,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9684613,"byte_end":9684616,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * `Interval` is a stream yielding a value at a fixed period. It is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9684617,"byte_end":9684687,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/   initialized with a `Duration` and repeatedly yields each time the duration","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9684688,"byte_end":9684768,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/   elapses.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9684769,"byte_end":9684783,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9684784,"byte_end":9684787,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ * `Timeout`: Wraps a future or stream, setting an upper bound to the amount","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9684788,"byte_end":9684867,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/   of time it is allowed to execute. If the future or stream does not","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9684868,"byte_end":9684940,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/   complete in time, then it is canceled and an error is returned.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9684941,"byte_end":9685010,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9685011,"byte_end":9685014,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ * `DelayQueue`: A queue where items are returned once the requested delay","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9685015,"byte_end":9685092,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/   has expired.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9685093,"byte_end":9685111,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9685112,"byte_end":9685115,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ These types are sufficient for handling a large number of scenarios","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9685116,"byte_end":9685187,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ involving time.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9685188,"byte_end":9685207,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9685208,"byte_end":9685211,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ These types must be used from within the context of the `Runtime`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9685212,"byte_end":9685282,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9685283,"byte_end":9685286,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9685287,"byte_end":9685301,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9685302,"byte_end":9685305,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"100 ms have elapsed\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9685306,"byte_end":9685352,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9685353,"byte_end":9685356,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9685357,"byte_end":9685364,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::delay_for;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9685365,"byte_end":9685396,"line_start":30,"line_end":30,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9685397,"byte_end":9685400,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9685401,"byte_end":9685429,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9685430,"byte_end":9685433,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9685434,"byte_end":9685437,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9685438,"byte_end":9685456,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9685457,"byte_end":9685478,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/     delay_for(Duration::from_millis(100)).await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9685479,"byte_end":9685531,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9685532,"byte_end":9685572,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9685573,"byte_end":9685578,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9685579,"byte_end":9685586,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9685587,"byte_end":9685590,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Require that an operation takes no more than 300ms. Note that this uses the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9685591,"byte_end":9685670,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ `timeout` function on the `FutureExt` trait. This trait is included in the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9685671,"byte_end":9685749,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"/ prelude.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9685750,"byte_end":9685762,"line_start":44,"line_end":44,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9685763,"byte_end":9685766,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9685767,"byte_end":9685774,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{timeout, Duration};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9685775,"byte_end":9685816,"line_start":47,"line_end":47,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9685817,"byte_end":9685820,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ async fn long_future() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9685821,"byte_end":9685849,"line_start":49,"line_end":49,"column_start":1,"column_end":29}},{"value":"/     // do work here","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9685850,"byte_end":9685873,"line_start":50,"line_end":50,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9685874,"byte_end":9685879,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9685880,"byte_end":9685883,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9685884,"byte_end":9685906,"line_start":53,"line_end":53,"column_start":1,"column_end":23}},{"value":"/ let res = timeout(Duration::from_secs(1), long_future()).await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9685907,"byte_end":9685974,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9685975,"byte_end":9685978,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ if res.is_err() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9685979,"byte_end":9686000,"line_start":56,"line_end":56,"column_start":1,"column_end":22}},{"value":"/     println!(\"operation timed out\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9686001,"byte_end":9686041,"line_start":57,"line_end":57,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9686042,"byte_end":9686047,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9686048,"byte_end":9686055,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9686056,"byte_end":9686063,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9686064,"byte_end":9686067,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ A simple example using [`interval`] to execute a task every two seconds.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9686068,"byte_end":9686144,"line_start":62,"line_end":62,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9686145,"byte_end":9686148,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ The difference between [`interval`] and [`delay_for`] is that an","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9686149,"byte_end":9686217,"line_start":64,"line_end":64,"column_start":1,"column_end":69}},{"value":"/ [`interval`] measures the time since the last tick, which means that","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9686218,"byte_end":9686290,"line_start":65,"line_end":65,"column_start":1,"column_end":73}},{"value":"/ `.tick().await` may wait for a shorter time than the duration specified","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9686291,"byte_end":9686366,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"/ for the interval if some time has passed between calls to `.tick().await`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9686367,"byte_end":9686445,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9686446,"byte_end":9686449,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ If the tick in the example below was replaced with [`delay_for`], the task","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9686450,"byte_end":9686528,"line_start":69,"line_end":69,"column_start":1,"column_end":79}},{"value":"/ would only be executed once every three seconds, and not every two","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9686529,"byte_end":9686599,"line_start":70,"line_end":70,"column_start":1,"column_end":71}},{"value":"/ seconds.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9686600,"byte_end":9686612,"line_start":71,"line_end":71,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9686613,"byte_end":9686616,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9686617,"byte_end":9686624,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/ use tokio::time;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9686625,"byte_end":9686645,"line_start":74,"line_end":74,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9686646,"byte_end":9686649,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ async fn task_that_takes_a_second() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9686650,"byte_end":9686691,"line_start":76,"line_end":76,"column_start":1,"column_end":42}},{"value":"/     println!(\"hello\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9686692,"byte_end":9686718,"line_start":77,"line_end":77,"column_start":1,"column_end":27}},{"value":"/     time::delay_for(time::Duration::from_secs(1)).await","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9686719,"byte_end":9686778,"line_start":78,"line_end":78,"column_start":1,"column_end":60}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9686779,"byte_end":9686784,"line_start":79,"line_end":79,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9686785,"byte_end":9686788,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9686789,"byte_end":9686807,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9686808,"byte_end":9686829,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9686830,"byte_end":9686902,"line_start":83,"line_end":83,"column_start":1,"column_end":73}},{"value":"/     for _i in 0..5 {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9686903,"byte_end":9686927,"line_start":84,"line_end":84,"column_start":1,"column_end":25}},{"value":"/         interval.tick().await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9686928,"byte_end":9686962,"line_start":85,"line_end":85,"column_start":1,"column_end":35}},{"value":"/         task_that_takes_a_second().await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9686963,"byte_end":9687008,"line_start":86,"line_end":86,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9687009,"byte_end":9687018,"line_start":87,"line_end":87,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9687019,"byte_end":9687024,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9687025,"byte_end":9687032,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9687033,"byte_end":9687036,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ [`delay_for`]: crate::time::delay_for()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9687037,"byte_end":9687080,"line_start":91,"line_end":91,"column_start":1,"column_end":44}},{"value":"/ [`interval`]: crate::time::interval()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9687081,"byte_end":9687122,"line_start":92,"line_end":92,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":8858},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"delay_queue","qualname":"::time::delay_queue","value":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","parent":null,"children":[{"krate":0,"index":8859},{"krate":0,"index":8860},{"krate":0,"index":8861},{"krate":0,"index":8862},{"krate":0,"index":8863},{"krate":0,"index":8864},{"krate":0,"index":8865},{"krate":0,"index":8866},{"krate":0,"index":8867},{"krate":0,"index":8868},{"krate":0,"index":8869},{"krate":0,"index":8870},{"krate":0,"index":8871},{"krate":0,"index":16339},{"krate":0,"index":8872},{"krate":0,"index":8873},{"krate":0,"index":8874},{"krate":0,"index":8875},{"krate":0,"index":9348},{"krate":0,"index":9356},{"krate":0,"index":9359},{"krate":0,"index":9364},{"krate":0,"index":9367},{"krate":0,"index":9371},{"krate":0,"index":9369},{"krate":0,"index":9373},{"krate":0,"index":9377},{"krate":0,"index":9380},{"krate":0,"index":9387},{"krate":0,"index":8876},{"krate":0,"index":8877},{"krate":0,"index":8905},{"krate":0,"index":8907},{"krate":0,"index":8910},{"krate":0,"index":8914},{"krate":0,"index":8924},{"krate":0,"index":8927},{"krate":0,"index":8929}],"decl_id":null,"docs":" A queue of delayed elements.","sig":null,"attributes":[{"value":"/ A queue of delayed elements.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9693273,"byte_end":9693305,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9693306,"byte_end":9693309,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ See [`DelayQueue`] for more details.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9693310,"byte_end":9693350,"line_start":3,"line_end":3,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9693351,"byte_end":9693354,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9693355,"byte_end":9693392,"line_start":5,"line_end":5,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":9348},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9697703,"byte_end":9697713,"line_start":126,"line_end":126,"column_start":12,"column_end":22},"name":"DelayQueue","qualname":"::time::delay_queue::DelayQueue","value":"DelayQueue {  }","parent":null,"children":[{"krate":0,"index":9350},{"krate":0,"index":9351},{"krate":0,"index":9352},{"krate":0,"index":9353},{"krate":0,"index":9354},{"krate":0,"index":9355}],"decl_id":null,"docs":" A queue of delayed elements.","sig":null,"attributes":[{"value":"/ A queue of delayed elements.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9693633,"byte_end":9693665,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9693666,"byte_end":9693669,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Once an element is inserted into the `DelayQueue`, it is yielded once the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9693670,"byte_end":9693747,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ specified deadline has been reached.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9693748,"byte_end":9693788,"line_start":20,"line_end":20,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9693789,"byte_end":9693792,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9693793,"byte_end":9693804,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9693805,"byte_end":9693808,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Elements are inserted into `DelayQueue` using the [`insert`] or","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9693809,"byte_end":9693876,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ [`insert_at`] methods. A deadline is provided with the item and a [`Key`] is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9693877,"byte_end":9693957,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ returned. The key is used to remove the entry or to change the deadline at","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9693958,"byte_end":9694036,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ which it should be yielded back.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9694037,"byte_end":9694073,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9694074,"byte_end":9694077,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Once delays have been configured, the `DelayQueue` is used via its","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9694078,"byte_end":9694148,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ [`Stream`] implementation. [`poll_expired`] is called. If an entry has reached its","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9694149,"byte_end":9694235,"line_start":30,"line_end":30,"column_start":1,"column_end":87}},{"value":"/ deadline, it is returned. If not, `Poll::Pending` indicating that the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9694236,"byte_end":9694309,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ current task will be notified once the deadline has been reached.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9694310,"byte_end":9694379,"line_start":32,"line_end":32,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9694380,"byte_end":9694383,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # `Stream` implementation","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9694384,"byte_end":9694413,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9694414,"byte_end":9694417,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Items are retrieved from the queue via [`DelayQueue::poll_expired`]. If no delays have","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9694418,"byte_end":9694508,"line_start":36,"line_end":36,"column_start":1,"column_end":91}},{"value":"/ expired, no items are returned. In this case, `NotReady` is returned and the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9694509,"byte_end":9694589,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ current task is registered to be notified once the next item's delay has","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9694590,"byte_end":9694666,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/ expired.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9694667,"byte_end":9694679,"line_start":39,"line_end":39,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9694680,"byte_end":9694683,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ If no items are in the queue, i.e. `is_empty()` returns `true`, then `poll`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9694684,"byte_end":9694763,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ returns `Ready(None)`. This indicates that the stream has reached an end.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9694764,"byte_end":9694841,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ However, if a new item is inserted *after*, `poll` will once again start","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9694842,"byte_end":9694918,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/ returning items or `NotReady.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9694919,"byte_end":9694952,"line_start":44,"line_end":44,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9694953,"byte_end":9694956,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Items are returned ordered by their expirations. Items that are configured","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9694957,"byte_end":9695035,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"/ to expire first will be returned first. There are no ordering guarantees","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9695036,"byte_end":9695112,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"/ for items configured to expire the same instant. Also note that delays are","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9695113,"byte_end":9695191,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ rounded to the closest millisecond.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9695192,"byte_end":9695231,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9695232,"byte_end":9695235,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9695236,"byte_end":9695256,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9695257,"byte_end":9695260,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ The [`DelayQueue`] is backed by a separate instance of the same timer wheel used internally by","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9695261,"byte_end":9695359,"line_start":53,"line_end":53,"column_start":1,"column_end":99}},{"value":"/ Tokio's standalone timer utilities such as [`delay_for`]. Because of this, it offers the same","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9695360,"byte_end":9695457,"line_start":54,"line_end":54,"column_start":1,"column_end":98}},{"value":"/ performance and scalability benefits.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9695458,"byte_end":9695499,"line_start":55,"line_end":55,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9695500,"byte_end":9695503,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ State associated with each entry is stored in a [`slab`]. This amortizes the cost of allocation,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9695504,"byte_end":9695604,"line_start":57,"line_end":57,"column_start":1,"column_end":101}},{"value":"/ and allows reuse of the memory allocated for expired entires.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9695605,"byte_end":9695670,"line_start":58,"line_end":58,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9695671,"byte_end":9695674,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Capacity can be checked using [`capacity`] and allocated preemptively by using","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9695675,"byte_end":9695757,"line_start":60,"line_end":60,"column_start":1,"column_end":83}},{"value":"/ the [`reserve`] method.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9695758,"byte_end":9695785,"line_start":61,"line_end":61,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9695786,"byte_end":9695789,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9695790,"byte_end":9695801,"line_start":63,"line_end":63,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9695802,"byte_end":9695805,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Using `DelayQueue` to manage cache entries.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9695806,"byte_end":9695853,"line_start":65,"line_end":65,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9695854,"byte_end":9695857,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9695858,"byte_end":9695876,"line_start":67,"line_end":67,"column_start":1,"column_end":19}},{"value":"/ use tokio::time::{delay_queue, DelayQueue, Error};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9695877,"byte_end":9695931,"line_start":68,"line_end":68,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9695932,"byte_end":9695935,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ use futures::ready;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9695936,"byte_end":9695959,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9695960,"byte_end":9695994,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9695995,"byte_end":9696030,"line_start":72,"line_end":72,"column_start":1,"column_end":36}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9696031,"byte_end":9696059,"line_start":73,"line_end":73,"column_start":1,"column_end":29}},{"value":"/ # type CacheKey = String;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9696060,"byte_end":9696089,"line_start":74,"line_end":74,"column_start":1,"column_end":30}},{"value":"/ # type Value = String;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9696090,"byte_end":9696116,"line_start":75,"line_end":75,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9696117,"byte_end":9696120,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ struct Cache {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9696121,"byte_end":9696139,"line_start":77,"line_end":77,"column_start":1,"column_end":19}},{"value":"/     entries: HashMap<CacheKey, (Value, delay_queue::Key)>,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9696140,"byte_end":9696202,"line_start":78,"line_end":78,"column_start":1,"column_end":63}},{"value":"/     expirations: DelayQueue<CacheKey>,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9696203,"byte_end":9696245,"line_start":79,"line_end":79,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9696246,"byte_end":9696251,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9696252,"byte_end":9696255,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ const TTL_SECS: u64 = 30;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9696256,"byte_end":9696285,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9696286,"byte_end":9696289,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ impl Cache {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9696290,"byte_end":9696306,"line_start":84,"line_end":84,"column_start":1,"column_end":17}},{"value":"/     fn insert(&mut self, key: CacheKey, value: Value) {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9696307,"byte_end":9696366,"line_start":85,"line_end":85,"column_start":1,"column_end":60}},{"value":"/         let delay = self.expirations","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9696367,"byte_end":9696407,"line_start":86,"line_end":86,"column_start":1,"column_end":41}},{"value":"/             .insert(key.clone(), Duration::from_secs(TTL_SECS));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9696408,"byte_end":9696476,"line_start":87,"line_end":87,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9696477,"byte_end":9696480,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/         self.entries.insert(key, (value, delay));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9696481,"byte_end":9696534,"line_start":89,"line_end":89,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9696535,"byte_end":9696544,"line_start":90,"line_end":90,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9696545,"byte_end":9696548,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/     fn get(&self, key: &CacheKey) -> Option<&Value> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9696549,"byte_end":9696606,"line_start":92,"line_end":92,"column_start":1,"column_end":58}},{"value":"/         self.entries.get(key)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9696607,"byte_end":9696640,"line_start":93,"line_end":93,"column_start":1,"column_end":34}},{"value":"/             .map(|&(ref v, _)| v)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9696641,"byte_end":9696678,"line_start":94,"line_end":94,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9696679,"byte_end":9696688,"line_start":95,"line_end":95,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9696689,"byte_end":9696692,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn remove(&mut self, key: &CacheKey) {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9696693,"byte_end":9696739,"line_start":97,"line_end":97,"column_start":1,"column_end":47}},{"value":"/         if let Some((_, cache_key)) = self.entries.remove(key) {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9696740,"byte_end":9696808,"line_start":98,"line_end":98,"column_start":1,"column_end":69}},{"value":"/             self.expirations.remove(&cache_key);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9696809,"byte_end":9696861,"line_start":99,"line_end":99,"column_start":1,"column_end":53}},{"value":"/         }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9696862,"byte_end":9696875,"line_start":100,"line_end":100,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9696876,"byte_end":9696885,"line_start":101,"line_end":101,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9696886,"byte_end":9696889,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/     fn poll_purge(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Error>> {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9696890,"byte_end":9696973,"line_start":103,"line_end":103,"column_start":1,"column_end":84}},{"value":"/         while let Some(res) = ready!(self.expirations.poll_expired(cx)) {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9696974,"byte_end":9697051,"line_start":104,"line_end":104,"column_start":1,"column_end":78}},{"value":"/             let entry = res?;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9697052,"byte_end":9697085,"line_start":105,"line_end":105,"column_start":1,"column_end":34}},{"value":"/             self.entries.remove(entry.get_ref());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9697086,"byte_end":9697139,"line_start":106,"line_end":106,"column_start":1,"column_end":54}},{"value":"/         }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9697140,"byte_end":9697153,"line_start":107,"line_end":107,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9697154,"byte_end":9697157,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/         Poll::Ready(Ok(()))","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9697158,"byte_end":9697189,"line_start":109,"line_end":109,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9697190,"byte_end":9697199,"line_start":110,"line_end":110,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9697200,"byte_end":9697205,"line_start":111,"line_end":111,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9697206,"byte_end":9697213,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9697214,"byte_end":9697217,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ [`insert`]: method@Self::insert","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9697218,"byte_end":9697253,"line_start":114,"line_end":114,"column_start":1,"column_end":36}},{"value":"/ [`insert_at`]: method@Self::insert_at","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9697254,"byte_end":9697295,"line_start":115,"line_end":115,"column_start":1,"column_end":42}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9697296,"byte_end":9697319,"line_start":116,"line_end":116,"column_start":1,"column_end":24}},{"value":"/ [`Stream`]: https://docs.rs/futures/0.1/futures/stream/trait.Stream.html","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9697320,"byte_end":9697396,"line_start":117,"line_end":117,"column_start":1,"column_end":77}},{"value":"/ [`poll_expired`]: method@Self::poll_expired","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9697397,"byte_end":9697444,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/ [`Stream::poll_expired`]: method@Self::poll_expired","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9697445,"byte_end":9697500,"line_start":119,"line_end":119,"column_start":1,"column_end":56}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9697501,"byte_end":9697538,"line_start":120,"line_end":120,"column_start":1,"column_end":38}},{"value":"/ [`delay_for`]: fn@super::delay_for","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9697539,"byte_end":9697577,"line_start":121,"line_end":121,"column_start":1,"column_end":39}},{"value":"/ [`slab`]: slab","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9697578,"byte_end":9697596,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/ [`capacity`]: method@Self::capacity","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9697597,"byte_end":9697636,"line_start":123,"line_end":123,"column_start":1,"column_end":40}},{"value":"/ [`reserve`]: method@Self::reserve","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9697637,"byte_end":9697674,"line_start":124,"line_end":124,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":9359},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9698428,"byte_end":9698435,"line_start":153,"line_end":153,"column_start":12,"column_end":19},"name":"Expired","qualname":"::time::delay_queue::Expired","value":"Expired {  }","parent":null,"children":[{"krate":0,"index":9361},{"krate":0,"index":9362},{"krate":0,"index":9363}],"decl_id":null,"docs":" An entry in `DelayQueue` that has expired and removed.","sig":null,"attributes":[{"value":"/ An entry in `DelayQueue` that has expired and removed.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9698210,"byte_end":9698268,"line_start":147,"line_end":147,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9698269,"byte_end":9698272,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ Values are returned by [`DelayQueue::poll_expired`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9698273,"byte_end":9698329,"line_start":149,"line_end":149,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9698330,"byte_end":9698333,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue::poll_expired`]: method@DelayQueue::poll_expired","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9698334,"byte_end":9698399,"line_start":151,"line_end":151,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":9367},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9698903,"byte_end":9698906,"line_start":172,"line_end":172,"column_start":12,"column_end":15},"name":"Key","qualname":"::time::delay_queue::Key","value":"Key {  }","parent":null,"children":[{"krate":0,"index":9368}],"decl_id":null,"docs":" Token to a value stored in a `DelayQueue`.","sig":null,"attributes":[{"value":"/ Token to a value stored in a `DelayQueue`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9698603,"byte_end":9698649,"line_start":164,"line_end":164,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9698650,"byte_end":9698653,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ Instances of `Key` are returned by [`DelayQueue::insert`]. See [`DelayQueue`]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9698654,"byte_end":9698735,"line_start":166,"line_end":166,"column_start":1,"column_end":82}},{"value":"/ documentation for more details.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9698736,"byte_end":9698771,"line_start":167,"line_end":167,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9698772,"byte_end":9698775,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9698776,"byte_end":9698813,"line_start":169,"line_end":169,"column_start":1,"column_end":38}},{"value":"/ [`DelayQueue::insert`]: method@DelayQueue::insert","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9698814,"byte_end":9698867,"line_start":170,"line_end":170,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":8879},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9699884,"byte_end":9699887,"line_start":216,"line_end":216,"column_start":12,"column_end":15},"name":"new","qualname":"<DelayQueue<T>>::new","value":"pub fn new() -> DelayQueue<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty, `DelayQueue`","sig":null,"attributes":[{"value":"/ Creates a new, empty, `DelayQueue`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9699584,"byte_end":9699622,"line_start":206,"line_end":206,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9699627,"byte_end":9699630,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ The queue will not allocate storage until items are inserted into it.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9699635,"byte_end":9699708,"line_start":208,"line_end":208,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9699713,"byte_end":9699716,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9699721,"byte_end":9699735,"line_start":210,"line_end":210,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9699740,"byte_end":9699743,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9699748,"byte_end":9699759,"line_start":212,"line_end":212,"column_start":5,"column_end":16}},{"value":"/ # use tokio::time::DelayQueue;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9699764,"byte_end":9699798,"line_start":213,"line_end":213,"column_start":5,"column_end":39}},{"value":"/ let delay_queue: DelayQueue<u32> = DelayQueue::new();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9699803,"byte_end":9699860,"line_start":214,"line_end":214,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9699865,"byte_end":9699872,"line_start":215,"line_end":215,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8880},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9700805,"byte_end":9700818,"line_start":245,"line_end":245,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<DelayQueue<T>>::with_capacity","value":"pub fn with_capacity(usize) -> DelayQueue<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty, `DelayQueue` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates a new, empty, `DelayQueue` with the specified capacity.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9699957,"byte_end":9700024,"line_start":220,"line_end":220,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9700029,"byte_end":9700032,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ The queue will be able to hold at least `capacity` elements without","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9700037,"byte_end":9700108,"line_start":222,"line_end":222,"column_start":5,"column_end":76}},{"value":"/ reallocating. If `capacity` is 0, the queue will not allocate for","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9700113,"byte_end":9700182,"line_start":223,"line_end":223,"column_start":5,"column_end":74}},{"value":"/ storage.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9700187,"byte_end":9700199,"line_start":224,"line_end":224,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9700204,"byte_end":9700207,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9700212,"byte_end":9700226,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9700231,"byte_end":9700234,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9700239,"byte_end":9700250,"line_start":228,"line_end":228,"column_start":5,"column_end":16}},{"value":"/ # use tokio::time::DelayQueue;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9700255,"byte_end":9700289,"line_start":229,"line_end":229,"column_start":5,"column_end":39}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9700294,"byte_end":9700324,"line_start":230,"line_end":230,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9700329,"byte_end":9700332,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9700337,"byte_end":9700357,"line_start":232,"line_end":232,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9700362,"byte_end":9700385,"line_start":233,"line_end":233,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::with_capacity(10);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9700390,"byte_end":9700450,"line_start":234,"line_end":234,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9700455,"byte_end":9700458,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/     // These insertions are done without further allocation","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9700463,"byte_end":9700526,"line_start":236,"line_end":236,"column_start":5,"column_end":68}},{"value":"/     for i in 0..10 {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9700531,"byte_end":9700555,"line_start":237,"line_end":237,"column_start":5,"column_end":29}},{"value":"/         delay_queue.insert(i, Duration::from_secs(i));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9700560,"byte_end":9700618,"line_start":238,"line_end":238,"column_start":5,"column_end":63}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9700623,"byte_end":9700632,"line_start":239,"line_end":239,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9700637,"byte_end":9700640,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/     // This will make the queue allocate additional storage","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9700645,"byte_end":9700708,"line_start":241,"line_end":241,"column_start":5,"column_end":68}},{"value":"/     delay_queue.insert(11, Duration::from_secs(11));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9700713,"byte_end":9700769,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9700774,"byte_end":9700781,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9700786,"byte_end":9700793,"line_start":244,"line_end":244,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8881},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9702886,"byte_end":9702895,"line_start":303,"line_end":303,"column_start":12,"column_end":21},"name":"insert_at","qualname":"<DelayQueue<T>>::insert_at","value":"pub fn insert_at(&mut Self, T, Instant) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Inserts `value` into the queue set to expire at a specific instant in\n time.","sig":null,"attributes":[{"value":"/ Inserts `value` into the queue set to expire at a specific instant in","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9701117,"byte_end":9701190,"line_start":256,"line_end":256,"column_start":5,"column_end":78}},{"value":"/ time.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9701195,"byte_end":9701204,"line_start":257,"line_end":257,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9701209,"byte_end":9701212,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `insert`, but takes an `Instant` instead","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9701217,"byte_end":9701291,"line_start":259,"line_end":259,"column_start":5,"column_end":79}},{"value":"/ of a `Duration`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9701296,"byte_end":9701316,"line_start":260,"line_end":260,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9701321,"byte_end":9701324,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ `value` is stored in the queue until `when` is reached. At which point,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9701329,"byte_end":9701404,"line_start":262,"line_end":262,"column_start":5,"column_end":80}},{"value":"/ `value` will be returned from [`poll_expired`]. If `when` has already been","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9701409,"byte_end":9701487,"line_start":263,"line_end":263,"column_start":5,"column_end":83}},{"value":"/ reached, then `value` is immediately made available to poll.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9701492,"byte_end":9701556,"line_start":264,"line_end":264,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9701561,"byte_end":9701564,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ The return value represents the insertion and is used at an argument to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9701569,"byte_end":9701644,"line_start":266,"line_end":266,"column_start":5,"column_end":80}},{"value":"/ [`remove`] and [`reset`]. Note that [`Key`] is token and is reused once","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9701649,"byte_end":9701724,"line_start":267,"line_end":267,"column_start":5,"column_end":80}},{"value":"/ `value` is removed from the queue either by calling [`poll_expired`] after","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9701729,"byte_end":9701807,"line_start":268,"line_end":268,"column_start":5,"column_end":83}},{"value":"/ `when` is reached or by calling [`remove`]. At this point, the caller","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9701812,"byte_end":9701885,"line_start":269,"line_end":269,"column_start":5,"column_end":78}},{"value":"/ must take care to not use the returned [`Key`] again as it may reference","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9701890,"byte_end":9701966,"line_start":270,"line_end":270,"column_start":5,"column_end":81}},{"value":"/ a different item in the queue.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9701971,"byte_end":9702005,"line_start":271,"line_end":271,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9702010,"byte_end":9702013,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ See [type] level documentation for more details.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9702018,"byte_end":9702070,"line_start":273,"line_end":273,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9702075,"byte_end":9702078,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9702083,"byte_end":9702095,"line_start":275,"line_end":275,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9702100,"byte_end":9702103,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ This function panics if `when` is too far in the future.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9702108,"byte_end":9702168,"line_start":277,"line_end":277,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9702173,"byte_end":9702176,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9702181,"byte_end":9702195,"line_start":279,"line_end":279,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9702200,"byte_end":9702203,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9702208,"byte_end":9702223,"line_start":281,"line_end":281,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9702228,"byte_end":9702231,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9702236,"byte_end":9702247,"line_start":283,"line_end":283,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::{DelayQueue, Duration, Instant};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9702252,"byte_end":9702305,"line_start":284,"line_end":284,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9702310,"byte_end":9702313,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9702318,"byte_end":9702338,"line_start":286,"line_end":286,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9702343,"byte_end":9702366,"line_start":287,"line_end":287,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9702371,"byte_end":9702419,"line_start":288,"line_end":288,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert_at(","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9702424,"byte_end":9702464,"line_start":289,"line_end":289,"column_start":5,"column_end":45}},{"value":"/         \"foo\", Instant::now() + Duration::from_secs(5));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9702469,"byte_end":9702529,"line_start":290,"line_end":290,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9702534,"byte_end":9702537,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9702542,"byte_end":9702569,"line_start":292,"line_end":292,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9702574,"byte_end":9702618,"line_start":293,"line_end":293,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9702623,"byte_end":9702666,"line_start":294,"line_end":294,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9702671,"byte_end":9702678,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9702683,"byte_end":9702690,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9702695,"byte_end":9702698,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ [`poll_expired`]: method@Self::poll_expired","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9702703,"byte_end":9702750,"line_start":298,"line_end":298,"column_start":5,"column_end":52}},{"value":"/ [`remove`]: method@Self::remove","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9702755,"byte_end":9702790,"line_start":299,"line_end":299,"column_start":5,"column_end":40}},{"value":"/ [`reset`]: method@Self::reset","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9702795,"byte_end":9702828,"line_start":300,"line_end":300,"column_start":5,"column_end":38}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9702833,"byte_end":9702856,"line_start":301,"line_end":301,"column_start":5,"column_end":28}},{"value":"/ [type]: #","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9702861,"byte_end":9702874,"line_start":302,"line_end":302,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":8882},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9704255,"byte_end":9704267,"line_start":343,"line_end":343,"column_start":12,"column_end":24},"name":"poll_expired","qualname":"<DelayQueue<T>>::poll_expired","value":"pub fn poll_expired(&mut Self, &mut task::Context)\n-> Poll<Option<Result<Expired<T>, Error>>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to pull out the next value of the delay queue, registering the\n current task for wakeup if the value is not yet available, and returning\n None if the queue is exhausted.\n","sig":null,"attributes":[{"value":"/ Attempts to pull out the next value of the delay queue, registering the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9704047,"byte_end":9704122,"line_start":340,"line_end":340,"column_start":5,"column_end":80}},{"value":"/ current task for wakeup if the value is not yet available, and returning","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9704127,"byte_end":9704203,"line_start":341,"line_end":341,"column_start":5,"column_end":81}},{"value":"/ None if the queue is exhausted.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9704208,"byte_end":9704243,"line_start":342,"line_end":342,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":8885},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9706671,"byte_end":9706677,"line_start":411,"line_end":411,"column_start":12,"column_end":18},"name":"insert","qualname":"<DelayQueue<T>>::insert","value":"pub fn insert(&mut Self, T, Duration) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Inserts `value` into the queue set to expire after the requested duration\n elapses.","sig":null,"attributes":[{"value":"/ Inserts `value` into the queue set to expire after the requested duration","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9704884,"byte_end":9704961,"line_start":363,"line_end":363,"column_start":5,"column_end":82}},{"value":"/ elapses.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9704966,"byte_end":9704978,"line_start":364,"line_end":364,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9704983,"byte_end":9704986,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `insert_at`, but takes a `Duration`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9704991,"byte_end":9705060,"line_start":366,"line_end":366,"column_start":5,"column_end":74}},{"value":"/ instead of an `Instant`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9705065,"byte_end":9705093,"line_start":367,"line_end":367,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9705098,"byte_end":9705101,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ `value` is stored in the queue until `when` is reached. At which point,","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9705106,"byte_end":9705181,"line_start":369,"line_end":369,"column_start":5,"column_end":80}},{"value":"/ `value` will be returned from [`poll_expired`]. If `when` has already been","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9705186,"byte_end":9705264,"line_start":370,"line_end":370,"column_start":5,"column_end":83}},{"value":"/ reached, then `value` is immediately made available to poll.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9705269,"byte_end":9705333,"line_start":371,"line_end":371,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9705338,"byte_end":9705341,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ The return value represents the insertion and is used at an argument to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9705346,"byte_end":9705421,"line_start":373,"line_end":373,"column_start":5,"column_end":80}},{"value":"/ [`remove`] and [`reset`]. Note that [`Key`] is token and is reused once","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9705426,"byte_end":9705501,"line_start":374,"line_end":374,"column_start":5,"column_end":80}},{"value":"/ `value` is removed from the queue either by calling [`poll_expired`] after","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9705506,"byte_end":9705584,"line_start":375,"line_end":375,"column_start":5,"column_end":83}},{"value":"/ `when` is reached or by calling [`remove`]. At this point, the caller","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9705589,"byte_end":9705662,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ must take care to not use the returned [`Key`] again as it may reference","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9705667,"byte_end":9705743,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ a different item in the queue.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9705748,"byte_end":9705782,"line_start":378,"line_end":378,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9705787,"byte_end":9705790,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ See [type] level documentation for more details.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9705795,"byte_end":9705847,"line_start":380,"line_end":380,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9705852,"byte_end":9705855,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9705860,"byte_end":9705872,"line_start":382,"line_end":382,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9705877,"byte_end":9705880,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This function panics if `timeout` is greater than the maximum supported","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9705885,"byte_end":9705960,"line_start":384,"line_end":384,"column_start":5,"column_end":80}},{"value":"/ duration.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9705965,"byte_end":9705978,"line_start":385,"line_end":385,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9705983,"byte_end":9705986,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9705991,"byte_end":9706005,"line_start":387,"line_end":387,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9706010,"byte_end":9706013,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9706018,"byte_end":9706033,"line_start":389,"line_end":389,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9706038,"byte_end":9706041,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9706046,"byte_end":9706057,"line_start":391,"line_end":391,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9706062,"byte_end":9706094,"line_start":392,"line_end":392,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9706099,"byte_end":9706127,"line_start":393,"line_end":393,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9706132,"byte_end":9706135,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9706140,"byte_end":9706160,"line_start":395,"line_end":395,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9706165,"byte_end":9706188,"line_start":396,"line_end":396,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9706193,"byte_end":9706241,"line_start":397,"line_end":397,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9706246,"byte_end":9706314,"line_start":398,"line_end":398,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9706319,"byte_end":9706322,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9706327,"byte_end":9706354,"line_start":400,"line_end":400,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9706359,"byte_end":9706403,"line_start":401,"line_end":401,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9706408,"byte_end":9706451,"line_start":402,"line_end":402,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9706456,"byte_end":9706463,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9706468,"byte_end":9706475,"line_start":404,"line_end":404,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9706480,"byte_end":9706483,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ [`poll_expired`]: method@Self::poll_expired","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9706488,"byte_end":9706535,"line_start":406,"line_end":406,"column_start":5,"column_end":52}},{"value":"/ [`remove`]: method@Self::remove","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9706540,"byte_end":9706575,"line_start":407,"line_end":407,"column_start":5,"column_end":40}},{"value":"/ [`reset`]: method@Self::reset","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9706580,"byte_end":9706613,"line_start":408,"line_end":408,"column_start":5,"column_end":38}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9706618,"byte_end":9706641,"line_start":409,"line_end":409,"column_start":5,"column_end":28}},{"value":"/ [type]: #","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9706646,"byte_end":9706659,"line_start":410,"line_end":410,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":8892},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9708754,"byte_end":9708760,"line_start":474,"line_end":474,"column_start":12,"column_end":18},"name":"remove","qualname":"<DelayQueue<T>>::remove","value":"pub fn remove(&mut Self, &Key) -> Expired<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes the item associated with `key` from the queue.","sig":null,"attributes":[{"value":"/ Removes the item associated with `key` from the queue.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9707900,"byte_end":9707958,"line_start":446,"line_end":446,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9707963,"byte_end":9707966,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ There must be an item associated with `key`. The function returns the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9707971,"byte_end":9708044,"line_start":448,"line_end":448,"column_start":5,"column_end":78}},{"value":"/ removed item as well as the `Instant` at which it will the delay will","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9708049,"byte_end":9708122,"line_start":449,"line_end":449,"column_start":5,"column_end":78}},{"value":"/ have expired.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9708127,"byte_end":9708144,"line_start":450,"line_end":450,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9708149,"byte_end":9708152,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9708157,"byte_end":9708169,"line_start":452,"line_end":452,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9708174,"byte_end":9708177,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ The function panics if `key` is not contained by the queue.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9708182,"byte_end":9708245,"line_start":454,"line_end":454,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9708250,"byte_end":9708253,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9708258,"byte_end":9708272,"line_start":456,"line_end":456,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9708277,"byte_end":9708280,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9708285,"byte_end":9708300,"line_start":458,"line_end":458,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9708305,"byte_end":9708308,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9708313,"byte_end":9708324,"line_start":460,"line_end":460,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9708329,"byte_end":9708361,"line_start":461,"line_end":461,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9708366,"byte_end":9708394,"line_start":462,"line_end":462,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9708399,"byte_end":9708402,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9708407,"byte_end":9708427,"line_start":464,"line_end":464,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9708432,"byte_end":9708455,"line_start":465,"line_end":465,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9708460,"byte_end":9708508,"line_start":466,"line_end":466,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9708513,"byte_end":9708581,"line_start":467,"line_end":467,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9708586,"byte_end":9708589,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9708594,"byte_end":9708621,"line_start":469,"line_end":469,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9708626,"byte_end":9708670,"line_start":470,"line_end":470,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9708675,"byte_end":9708718,"line_start":471,"line_end":471,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9708723,"byte_end":9708730,"line_start":472,"line_end":472,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9708735,"byte_end":9708742,"line_start":473,"line_end":473,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8893},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9710168,"byte_end":9710176,"line_start":518,"line_end":518,"column_start":12,"column_end":20},"name":"reset_at","qualname":"<DelayQueue<T>>::reset_at","value":"pub fn reset_at(&mut Self, &Key, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Sets the delay of the item associated with `key` to expire at `when`.","sig":null,"attributes":[{"value":"/ Sets the delay of the item associated with `key` to expire at `when`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9709054,"byte_end":9709127,"line_start":485,"line_end":485,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9709132,"byte_end":9709135,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `reset` but takes an `Instant` instead of","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9709140,"byte_end":9709215,"line_start":487,"line_end":487,"column_start":5,"column_end":80}},{"value":"/ a `Duration`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9709220,"byte_end":9709237,"line_start":488,"line_end":488,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9709242,"byte_end":9709245,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ The item remains in the queue but the delay is set to expire at `when`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9709250,"byte_end":9709325,"line_start":490,"line_end":490,"column_start":5,"column_end":80}},{"value":"/ If `when` is in the past, then the item is immediately made available to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9709330,"byte_end":9709406,"line_start":491,"line_end":491,"column_start":5,"column_end":81}},{"value":"/ the caller.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9709411,"byte_end":9709426,"line_start":492,"line_end":492,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9709431,"byte_end":9709434,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9709439,"byte_end":9709451,"line_start":494,"line_end":494,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9709456,"byte_end":9709459,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ This function panics if `when` is too far in the future or if `key` is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9709464,"byte_end":9709538,"line_start":496,"line_end":496,"column_start":5,"column_end":79}},{"value":"/ not contained by the queue.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9709543,"byte_end":9709574,"line_start":497,"line_end":497,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9709579,"byte_end":9709582,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9709587,"byte_end":9709601,"line_start":499,"line_end":499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9709606,"byte_end":9709609,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9709614,"byte_end":9709629,"line_start":501,"line_end":501,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9709634,"byte_end":9709637,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9709642,"byte_end":9709653,"line_start":503,"line_end":503,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::{DelayQueue, Duration, Instant};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9709658,"byte_end":9709711,"line_start":504,"line_end":504,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9709716,"byte_end":9709719,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9709724,"byte_end":9709744,"line_start":506,"line_end":506,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9709749,"byte_end":9709772,"line_start":507,"line_end":507,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9709777,"byte_end":9709825,"line_start":508,"line_end":508,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9709830,"byte_end":9709898,"line_start":509,"line_end":509,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9709903,"byte_end":9709906,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/     // \"foo\" is scheduled to be returned in 5 seconds","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9709911,"byte_end":9709968,"line_start":511,"line_end":511,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9709973,"byte_end":9709976,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/     delay_queue.reset_at(&key, Instant::now() + Duration::from_secs(10));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9709981,"byte_end":9710058,"line_start":513,"line_end":513,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9710063,"byte_end":9710066,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/     // \"foo\"is now scheduled to be returned in 10 seconds","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9710071,"byte_end":9710132,"line_start":515,"line_end":515,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9710137,"byte_end":9710144,"line_start":516,"line_end":516,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9710149,"byte_end":9710156,"line_start":517,"line_end":517,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8896},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9712044,"byte_end":9712049,"line_start":575,"line_end":575,"column_start":12,"column_end":17},"name":"reset","qualname":"<DelayQueue<T>>::reset","value":"pub fn reset(&mut Self, &Key, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Sets the delay of the item associated with `key` to expire after\n `timeout`.","sig":null,"attributes":[{"value":"/ Sets the delay of the item associated with `key` to expire after","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9710894,"byte_end":9710962,"line_start":540,"line_end":540,"column_start":5,"column_end":73}},{"value":"/ `timeout`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9710967,"byte_end":9710981,"line_start":541,"line_end":541,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9710986,"byte_end":9710989,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `reset_at` but takes a `Duration` instead","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9710994,"byte_end":9711069,"line_start":543,"line_end":543,"column_start":5,"column_end":80}},{"value":"/ of an `Instant`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9711074,"byte_end":9711094,"line_start":544,"line_end":544,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9711099,"byte_end":9711102,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ The item remains in the queue but the delay is set to expire after","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9711107,"byte_end":9711177,"line_start":546,"line_end":546,"column_start":5,"column_end":75}},{"value":"/ `timeout`. If `timeout` is zero, then the item is immediately made","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9711182,"byte_end":9711252,"line_start":547,"line_end":547,"column_start":5,"column_end":75}},{"value":"/ available to the caller.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9711257,"byte_end":9711285,"line_start":548,"line_end":548,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9711290,"byte_end":9711293,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9711298,"byte_end":9711310,"line_start":550,"line_end":550,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9711315,"byte_end":9711318,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ This function panics if `timeout` is greater than the maximum supported","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9711323,"byte_end":9711398,"line_start":552,"line_end":552,"column_start":5,"column_end":80}},{"value":"/ duration or if `key` is not contained by the queue.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9711403,"byte_end":9711458,"line_start":553,"line_end":553,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9711463,"byte_end":9711466,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9711471,"byte_end":9711485,"line_start":555,"line_end":555,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9711490,"byte_end":9711493,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9711498,"byte_end":9711513,"line_start":557,"line_end":557,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9711518,"byte_end":9711521,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9711526,"byte_end":9711537,"line_start":559,"line_end":559,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9711542,"byte_end":9711574,"line_start":560,"line_end":560,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9711579,"byte_end":9711607,"line_start":561,"line_end":561,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9711612,"byte_end":9711615,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9711620,"byte_end":9711640,"line_start":563,"line_end":563,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9711645,"byte_end":9711668,"line_start":564,"line_end":564,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9711673,"byte_end":9711721,"line_start":565,"line_end":565,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9711726,"byte_end":9711794,"line_start":566,"line_end":566,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9711799,"byte_end":9711802,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/     // \"foo\" is scheduled to be returned in 5 seconds","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9711807,"byte_end":9711864,"line_start":568,"line_end":568,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9711869,"byte_end":9711872,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/     delay_queue.reset(&key, Duration::from_secs(10));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9711877,"byte_end":9711934,"line_start":570,"line_end":570,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9711939,"byte_end":9711942,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/     // \"foo\"is now scheduled to be returned in 10 seconds","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9711947,"byte_end":9712008,"line_start":572,"line_end":572,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9712013,"byte_end":9712020,"line_start":573,"line_end":573,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9712025,"byte_end":9712032,"line_start":574,"line_end":574,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8897},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9712915,"byte_end":9712920,"line_start":606,"line_end":606,"column_start":12,"column_end":17},"name":"clear","qualname":"<DelayQueue<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the queue, removing all items.","sig":null,"attributes":[{"value":"/ Clears the queue, removing all items.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9712158,"byte_end":9712199,"line_start":579,"line_end":579,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9712204,"byte_end":9712207,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ After calling `clear`, [`poll_expired`] will return `Ok(Ready(None))`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9712212,"byte_end":9712286,"line_start":581,"line_end":581,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9712291,"byte_end":9712294,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ Note that this method has no effect on the allocated capacity.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9712299,"byte_end":9712365,"line_start":583,"line_end":583,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9712370,"byte_end":9712373,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ [`poll_expired`]: method@Self::poll_expired","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9712378,"byte_end":9712425,"line_start":585,"line_end":585,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9712430,"byte_end":9712433,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9712438,"byte_end":9712452,"line_start":587,"line_end":587,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9712457,"byte_end":9712460,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9712465,"byte_end":9712476,"line_start":589,"line_end":589,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9712481,"byte_end":9712513,"line_start":590,"line_end":590,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9712518,"byte_end":9712546,"line_start":591,"line_end":591,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9712551,"byte_end":9712554,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9712559,"byte_end":9712579,"line_start":593,"line_end":593,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9712584,"byte_end":9712607,"line_start":594,"line_end":594,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9712612,"byte_end":9712660,"line_start":595,"line_end":595,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9712665,"byte_end":9712668,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9712673,"byte_end":9712731,"line_start":597,"line_end":597,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9712736,"byte_end":9712739,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/     assert!(!delay_queue.is_empty());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9712744,"byte_end":9712785,"line_start":599,"line_end":599,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9712790,"byte_end":9712793,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/     delay_queue.clear();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9712798,"byte_end":9712826,"line_start":601,"line_end":601,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9712831,"byte_end":9712834,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/     assert!(delay_queue.is_empty());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9712839,"byte_end":9712879,"line_start":603,"line_end":603,"column_start":5,"column_end":45}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9712884,"byte_end":9712891,"line_start":604,"line_end":604,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9712896,"byte_end":9712903,"line_start":605,"line_end":605,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8898},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9713392,"byte_end":9713400,"line_start":623,"line_end":623,"column_start":12,"column_end":20},"name":"capacity","qualname":"<DelayQueue<T>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the queue can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of elements the queue can hold without reallocating.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9713075,"byte_end":9713150,"line_start":613,"line_end":613,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9713155,"byte_end":9713158,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9713163,"byte_end":9713177,"line_start":615,"line_end":615,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9713182,"byte_end":9713185,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9713190,"byte_end":9713201,"line_start":617,"line_end":617,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9713206,"byte_end":9713238,"line_start":618,"line_end":618,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9713243,"byte_end":9713246,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ let delay_queue: DelayQueue<i32> = DelayQueue::with_capacity(10);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9713251,"byte_end":9713320,"line_start":620,"line_end":620,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(delay_queue.capacity(), 10);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9713325,"byte_end":9713368,"line_start":621,"line_end":621,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9713373,"byte_end":9713380,"line_start":622,"line_end":622,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8899},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9713968,"byte_end":9713971,"line_start":643,"line_end":643,"column_start":12,"column_end":15},"name":"len","qualname":"<DelayQueue<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements currently in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of elements currently in the queue.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9713459,"byte_end":9713517,"line_start":627,"line_end":627,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9713522,"byte_end":9713525,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9713530,"byte_end":9713544,"line_start":629,"line_end":629,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9713549,"byte_end":9713552,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9713557,"byte_end":9713568,"line_start":631,"line_end":631,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9713573,"byte_end":9713605,"line_start":632,"line_end":632,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9713610,"byte_end":9713638,"line_start":633,"line_end":633,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9713643,"byte_end":9713646,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9713651,"byte_end":9713671,"line_start":635,"line_end":635,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9713676,"byte_end":9713699,"line_start":636,"line_end":636,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue: DelayQueue<i32> = DelayQueue::with_capacity(10);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9713704,"byte_end":9713781,"line_start":637,"line_end":637,"column_start":5,"column_end":82}},{"value":"/     assert_eq!(delay_queue.len(), 0);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9713786,"byte_end":9713827,"line_start":638,"line_end":638,"column_start":5,"column_end":46}},{"value":"/     delay_queue.insert(3, Duration::from_secs(5));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9713832,"byte_end":9713886,"line_start":639,"line_end":639,"column_start":5,"column_end":59}},{"value":"/     assert_eq!(delay_queue.len(), 1);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9713891,"byte_end":9713932,"line_start":640,"line_end":640,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9713937,"byte_end":9713944,"line_start":641,"line_end":641,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9713949,"byte_end":9713956,"line_start":642,"line_end":642,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8900},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9715180,"byte_end":9715187,"line_start":680,"line_end":680,"column_start":12,"column_end":19},"name":"reserve","qualname":"<DelayQueue<T>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more items to be queued\n without allocating.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more items to be queued","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9714025,"byte_end":9714096,"line_start":647,"line_end":647,"column_start":5,"column_end":76}},{"value":"/ without allocating.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9714101,"byte_end":9714124,"line_start":648,"line_end":648,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9714129,"byte_end":9714132,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ `reserve` does nothing if the queue already has sufficient capacity for","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9714137,"byte_end":9714212,"line_start":650,"line_end":650,"column_start":5,"column_end":80}},{"value":"/ `additional` more values. If more capacity is required, a new segment of","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9714217,"byte_end":9714293,"line_start":651,"line_end":651,"column_start":5,"column_end":81}},{"value":"/ memory will be allocated and all existing values will be copied into it.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9714298,"byte_end":9714374,"line_start":652,"line_end":652,"column_start":5,"column_end":81}},{"value":"/ As such, if the queue is already very large, a call to `reserve` can end","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9714379,"byte_end":9714455,"line_start":653,"line_end":653,"column_start":5,"column_end":81}},{"value":"/ up being expensive.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9714460,"byte_end":9714483,"line_start":654,"line_end":654,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9714488,"byte_end":9714491,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ The queue may reserve more than `additional` extra space in order to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9714496,"byte_end":9714568,"line_start":656,"line_end":656,"column_start":5,"column_end":77}},{"value":"/ avoid frequent reallocations.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9714573,"byte_end":9714606,"line_start":657,"line_end":657,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9714611,"byte_end":9714614,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9714619,"byte_end":9714631,"line_start":659,"line_end":659,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9714636,"byte_end":9714639,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ Panics if the new capacity exceeds the maximum number of entries the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9714644,"byte_end":9714716,"line_start":661,"line_end":661,"column_start":5,"column_end":77}},{"value":"/ queue can contain.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9714721,"byte_end":9714743,"line_start":662,"line_end":662,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9714748,"byte_end":9714751,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9714756,"byte_end":9714770,"line_start":664,"line_end":664,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9714775,"byte_end":9714778,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9714783,"byte_end":9714790,"line_start":666,"line_end":666,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9714795,"byte_end":9714827,"line_start":667,"line_end":667,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9714832,"byte_end":9714860,"line_start":668,"line_end":668,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9714865,"byte_end":9714868,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9714873,"byte_end":9714893,"line_start":670,"line_end":670,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9714898,"byte_end":9714921,"line_start":671,"line_end":671,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9714926,"byte_end":9714974,"line_start":672,"line_end":672,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9714979,"byte_end":9714982,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"hello\", Duration::from_secs(10));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9714987,"byte_end":9715048,"line_start":674,"line_end":674,"column_start":5,"column_end":66}},{"value":"/     delay_queue.reserve(10);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9715053,"byte_end":9715085,"line_start":675,"line_end":675,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9715090,"byte_end":9715093,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/     assert!(delay_queue.capacity() >= 11);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9715098,"byte_end":9715144,"line_start":677,"line_end":677,"column_start":5,"column_end":51}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9715149,"byte_end":9715156,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9715161,"byte_end":9715168,"line_start":679,"line_end":679,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8901},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9715903,"byte_end":9715911,"line_start":704,"line_end":704,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<DelayQueue<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if there are no items in the queue.","sig":null,"attributes":[{"value":"/ Returns `true` if there are no items in the queue.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9715270,"byte_end":9715324,"line_start":684,"line_end":684,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9715329,"byte_end":9715332,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ Note that this function returns `false` even if all items have not yet","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9715337,"byte_end":9715411,"line_start":686,"line_end":686,"column_start":5,"column_end":79}},{"value":"/ expired and a call to `poll` will return `NotReady`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9715416,"byte_end":9715472,"line_start":687,"line_end":687,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9715477,"byte_end":9715480,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9715485,"byte_end":9715499,"line_start":689,"line_end":689,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9715504,"byte_end":9715507,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9715512,"byte_end":9715519,"line_start":691,"line_end":691,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9715524,"byte_end":9715556,"line_start":692,"line_end":692,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9715561,"byte_end":9715589,"line_start":693,"line_end":693,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9715594,"byte_end":9715597,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9715602,"byte_end":9715622,"line_start":695,"line_end":695,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9715627,"byte_end":9715650,"line_start":696,"line_end":696,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9715655,"byte_end":9715703,"line_start":697,"line_end":697,"column_start":5,"column_end":53}},{"value":"/     assert!(delay_queue.is_empty());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9715708,"byte_end":9715748,"line_start":698,"line_end":698,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9715753,"byte_end":9715756,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"hello\", Duration::from_secs(5));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9715761,"byte_end":9715821,"line_start":700,"line_end":700,"column_start":5,"column_end":65}},{"value":"/     assert!(!delay_queue.is_empty());","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9715826,"byte_end":9715867,"line_start":701,"line_end":701,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9715872,"byte_end":9715879,"line_start":702,"line_end":702,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9715884,"byte_end":9715891,"line_start":703,"line_end":703,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8931},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9720574,"byte_end":9720581,"line_start":877,"line_end":877,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Expired<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the inner value.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9720519,"byte_end":9720562,"line_start":876,"line_end":876,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":8932},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9720690,"byte_end":9720697,"line_start":882,"line_end":882,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Expired<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner value.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the inner value.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9720627,"byte_end":9720678,"line_start":881,"line_end":881,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":8933},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9720815,"byte_end":9720825,"line_start":887,"line_end":887,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Expired<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and returns the inner value.\n","sig":null,"attributes":[{"value":"/ Consumes `self` and returns the inner value.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9720755,"byte_end":9720803,"line_start":886,"line_end":886,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":8934},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9720936,"byte_end":9720944,"line_start":892,"line_end":892,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Expired<T>>::deadline","value":"pub fn deadline(&Self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the deadline that the expiration was set to.\n","sig":null,"attributes":[{"value":"/ Returns the deadline that the expiration was set to.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9720868,"byte_end":9720924,"line_start":891,"line_end":891,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":8946},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9721522,"byte_end":9721533,"line_start":18,"line_end":18,"column_start":8,"column_end":19},"name":"delay_until","qualname":"::time::delay::delay_until","value":"pub fn delay_until(Instant) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Waits until `deadline` is reached.","sig":null,"attributes":[{"value":"/ Waits until `deadline` is reached.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9721148,"byte_end":9721186,"line_start":8,"line_end":8,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9721187,"byte_end":9721190,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the delay to complete. The delay","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9721191,"byte_end":9721266,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9721267,"byte_end":9721344,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9721345,"byte_end":9721380,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9721381,"byte_end":9721384,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9721385,"byte_end":9721403,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9721404,"byte_end":9721407,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Canceling a delay is done by dropping the returned future. No additional","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9721408,"byte_end":9721484,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ cleanup work is required.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9721485,"byte_end":9721514,"line_start":17,"line_end":17,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":8947},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9722599,"byte_end":9722608,"line_start":55,"line_end":55,"column_start":8,"column_end":17},"name":"delay_for","qualname":"::time::delay::delay_for","value":"pub fn delay_for(Duration) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Waits until `duration` has elapsed.","sig":null,"attributes":[{"value":"/ Waits until `duration` has elapsed.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9721672,"byte_end":9721711,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9721712,"byte_end":9721715,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Equivalent to `delay_until(Instant::now() + duration)`. An asynchronous","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9721716,"byte_end":9721791,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/ analog to `std::thread::sleep`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9721792,"byte_end":9721827,"line_start":26,"line_end":26,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9721828,"byte_end":9721831,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the delay to complete. The delay","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9721832,"byte_end":9721907,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9721908,"byte_end":9721985,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9721986,"byte_end":9722021,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9722022,"byte_end":9722025,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ To run something regularly on a schedule, see [`interval`].","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9722026,"byte_end":9722089,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9722090,"byte_end":9722093,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9722094,"byte_end":9722112,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9722113,"byte_end":9722116,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Canceling a delay is done by dropping the returned future. No additional","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9722117,"byte_end":9722193,"line_start":36,"line_end":36,"column_start":1,"column_end":77}},{"value":"/ cleanup work is required.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9722194,"byte_end":9722223,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9722224,"byte_end":9722227,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9722228,"byte_end":9722242,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9722243,"byte_end":9722246,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"100 ms have elapsed\".","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9722247,"byte_end":9722294,"line_start":41,"line_end":41,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9722295,"byte_end":9722298,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9722299,"byte_end":9722306,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{delay_for, Duration};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9722307,"byte_end":9722350,"line_start":44,"line_end":44,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9722351,"byte_end":9722354,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9722355,"byte_end":9722373,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9722374,"byte_end":9722395,"line_start":47,"line_end":47,"column_start":1,"column_end":22}},{"value":"/     delay_for(Duration::from_millis(100)).await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9722396,"byte_end":9722448,"line_start":48,"line_end":48,"column_start":1,"column_end":53}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9722449,"byte_end":9722489,"line_start":49,"line_end":49,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9722490,"byte_end":9722495,"line_start":50,"line_end":50,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9722496,"byte_end":9722503,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9722504,"byte_end":9722507,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ [`interval`]: crate::time::interval()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9722508,"byte_end":9722549,"line_start":53,"line_end":53,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":9390},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9722868,"byte_end":9722873,"line_start":63,"line_end":63,"column_start":12,"column_end":17},"name":"Delay","qualname":"::time::delay::Delay","value":"Delay {  }","parent":null,"children":[{"krate":0,"index":9391}],"decl_id":null,"docs":" Future returned by [`delay_until`](delay_until) and\n [`delay_for`](delay_for).\n","sig":null,"attributes":[{"value":"/ Future returned by [`delay_until`](delay_until) and","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9722686,"byte_end":9722741,"line_start":59,"line_end":59,"column_start":1,"column_end":56}},{"value":"/ [`delay_for`](delay_for).","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9722742,"byte_end":9722771,"line_start":60,"line_end":60,"column_start":1,"column_end":30}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9722789,"byte_end":9722856,"line_start":62,"line_end":62,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":8950},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9723313,"byte_end":9723321,"line_start":77,"line_end":77,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Delay>::deadline","value":"pub fn deadline(&Self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the instant at which the future will complete.\n","sig":null,"attributes":[{"value":"/ Returns the instant at which the future will complete.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9723243,"byte_end":9723301,"line_start":76,"line_end":76,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":8951},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9723525,"byte_end":9723535,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"is_elapsed","qualname":"<Delay>::is_elapsed","value":"pub fn is_elapsed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Delay` has elapsed","sig":null,"attributes":[{"value":"/ Returns `true` if the `Delay` has elapsed","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9723390,"byte_end":9723435,"line_start":81,"line_end":81,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9723440,"byte_end":9723443,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ A `Delay` is elapsed when the requested duration has elapsed.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9723448,"byte_end":9723513,"line_start":83,"line_end":83,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":8952},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9723924,"byte_end":9723929,"line_start":95,"line_end":95,"column_start":12,"column_end":17},"name":"reset","qualname":"<Delay>::reset","value":"pub fn reset(&mut Self, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Resets the `Delay` instance to a new deadline.","sig":null,"attributes":[{"value":"/ Resets the `Delay` instance to a new deadline.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9723603,"byte_end":9723653,"line_start":88,"line_end":88,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9723658,"byte_end":9723661,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Calling this function allows changing the instant at which the `Delay`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9723666,"byte_end":9723740,"line_start":90,"line_end":90,"column_start":5,"column_end":79}},{"value":"/ future completes without having to create new associated state.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9723745,"byte_end":9723812,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9723817,"byte_end":9723820,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This function can be called both before and after the future has","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9723825,"byte_end":9723893,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/ completed.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9723898,"byte_end":9723912,"line_start":94,"line_end":94,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":9449},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/error.rs","byte_start":9758474,"byte_end":9758479,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"name":"Error","qualname":"::time::error::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" Errors encountered by the timer implementation.","sig":null,"attributes":[{"value":"/ Errors encountered by the timer implementation.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/error.rs","byte_start":9757361,"byte_end":9757412,"line_start":5,"line_end":5,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/error.rs","byte_start":9757413,"byte_end":9757416,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Currently, there are two different errors that can occur:","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/error.rs","byte_start":9757417,"byte_end":9757478,"line_start":7,"line_end":7,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/error.rs","byte_start":9757479,"byte_end":9757482,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * `shutdown` occurs when a timer operation is attempted, but the timer","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/error.rs","byte_start":9757483,"byte_end":9757557,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/   instance has been dropped. In this case, the operation will never be able","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/error.rs","byte_start":9757558,"byte_end":9757637,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/   to complete and the `shutdown` error is returned. This is a permanent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/error.rs","byte_start":9757638,"byte_end":9757713,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/   error, i.e., once this error is observed, timer operations will never","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/error.rs","byte_start":9757714,"byte_end":9757789,"line_start":12,"line_end":12,"column_start":1,"column_end":76}},{"value":"/   succeed in the future.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/error.rs","byte_start":9757790,"byte_end":9757818,"line_start":13,"line_end":13,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/error.rs","byte_start":9757819,"byte_end":9757822,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ * `at_capacity` occurs when a timer operation is attempted, but the timer","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/error.rs","byte_start":9757823,"byte_end":9757900,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/   instance is currently handling its maximum number of outstanding delays.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/error.rs","byte_start":9757901,"byte_end":9757979,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/   In this case, the operation is not able to be performed at the current","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/error.rs","byte_start":9757980,"byte_end":9758056,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/   moment, and `at_capacity` is returned. This is a transient error, i.e., at","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/error.rs","byte_start":9758057,"byte_end":9758137,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/   some point in the future, if the operation is attempted again, it might","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/error.rs","byte_start":9758138,"byte_end":9758215,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/   succeed. Callers that observe this error should attempt to [shed load]. One","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/error.rs","byte_start":9758216,"byte_end":9758297,"line_start":20,"line_end":20,"column_start":1,"column_end":82}},{"value":"/   way to do this would be dropping the future that issued the timer operation.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/error.rs","byte_start":9758298,"byte_end":9758380,"line_start":21,"line_end":21,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/error.rs","byte_start":9758381,"byte_end":9758384,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [shed load]: https://en.wikipedia.org/wiki/Load_Shedding","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/error.rs","byte_start":9758385,"byte_end":9758445,"line_start":23,"line_end":23,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":9145},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/error.rs","byte_start":9758680,"byte_end":9758688,"line_start":37,"line_end":37,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<Error>::shutdown","value":"pub fn shutdown() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a shutdown timer.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a shutdown timer.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/error.rs","byte_start":9758617,"byte_end":9758668,"line_start":36,"line_end":36,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":9146},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/error.rs","byte_start":9758820,"byte_end":9758831,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"name":"is_shutdown","qualname":"<Error>::is_shutdown","value":"pub fn is_shutdown(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being shutdown.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being shutdown.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/error.rs","byte_start":9758737,"byte_end":9758808,"line_start":41,"line_end":41,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":9147},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/error.rs","byte_start":9759019,"byte_end":9759030,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"at_capacity","qualname":"<Error>::at_capacity","value":"pub fn at_capacity() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a timer at capacity.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a timer at capacity.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/error.rs","byte_start":9758953,"byte_end":9759007,"line_start":49,"line_end":49,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":9148},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/error.rs","byte_start":9759167,"byte_end":9759181,"line_start":55,"line_end":55,"column_start":12,"column_end":26},"name":"is_at_capacity","qualname":"<Error>::is_at_capacity","value":"pub fn is_at_capacity(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being at capacity.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being at capacity.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/error.rs","byte_start":9759081,"byte_end":9759155,"line_start":54,"line_end":54,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":9149},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/error.rs","byte_start":9759372,"byte_end":9759379,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"invalid","qualname":"<Error>::invalid","value":"pub fn invalid() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Create an error representing a misconfigured timer.\n","sig":null,"attributes":[{"value":"/ Create an error representing a misconfigured timer.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/error.rs","byte_start":9759305,"byte_end":9759360,"line_start":62,"line_end":62,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":9150},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/error.rs","byte_start":9759515,"byte_end":9759525,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"is_invalid","qualname":"<Error>::is_invalid","value":"pub fn is_invalid(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being misconfigured.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being misconfigured.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/error.rs","byte_start":9759427,"byte_end":9759503,"line_start":67,"line_end":67,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":9469},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9760739,"byte_end":9760746,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Instant","qualname":"::time::instant::Instant","value":"Instant {  }","parent":null,"children":[{"krate":0,"index":9470}],"decl_id":null,"docs":" A measurement of the system clock, useful for talking to\n external entities like the file system or other processes.\n","sig":null,"attributes":[{"value":"/ A measurement of the system clock, useful for talking to","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9760543,"byte_end":9760603,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/ external entities like the file system or other processes.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9760604,"byte_end":9760666,"line_start":8,"line_end":8,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":9163},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9760993,"byte_end":9760996,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"now","qualname":"<Instant>::now","value":"pub fn now() -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns an instant corresponding to \"now\".","sig":null,"attributes":[{"value":"/ Returns an instant corresponding to \"now\".","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9760800,"byte_end":9760846,"line_start":15,"line_end":15,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9760851,"byte_end":9760854,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9760859,"byte_end":9760873,"line_start":17,"line_end":17,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9760878,"byte_end":9760881,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9760886,"byte_end":9760893,"line_start":19,"line_end":19,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::Instant;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9760898,"byte_end":9760927,"line_start":20,"line_end":20,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9760932,"byte_end":9760935,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ let now = Instant::now();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9760940,"byte_end":9760969,"line_start":22,"line_end":22,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9760974,"byte_end":9760981,"line_start":23,"line_end":23,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9164},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9761122,"byte_end":9761130,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"from_std","qualname":"<Instant>::from_std","value":"pub fn from_std(std::time::Instant) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Create a `tokio::time::Instant` from a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Create a `tokio::time::Instant` from a `std::time::Instant`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9761046,"byte_end":9761110,"line_start":28,"line_end":28,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":9165},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9761266,"byte_end":9761274,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"into_std","qualname":"<Instant>::into_std","value":"pub fn into_std(Self) -> std::time::Instant","parent":null,"children":[],"decl_id":null,"docs":" Convert the value into a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Convert the value into a `std::time::Instant`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9761204,"byte_end":9761254,"line_start":33,"line_end":33,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":9166},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9761518,"byte_end":9761532,"line_start":43,"line_end":43,"column_start":12,"column_end":26},"name":"duration_since","qualname":"<Instant>::duration_since","value":"pub fn duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9761333,"byte_end":9761405,"line_start":38,"line_end":38,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9761410,"byte_end":9761413,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9761418,"byte_end":9761430,"line_start":40,"line_end":40,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9761435,"byte_end":9761438,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ This function will panic if `earlier` is later than `self`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9761443,"byte_end":9761506,"line_start":42,"line_end":42,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":9167},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9762223,"byte_end":9762245,"line_start":64,"line_end":64,"column_start":12,"column_end":34},"name":"checked_duration_since","qualname":"<Instant>::checked_duration_since","value":"pub fn checked_duration_since(&Self, Instant) -> Option<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n None if that instant is later than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9761628,"byte_end":9761703,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ None if that instant is later than this one.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9761708,"byte_end":9761756,"line_start":48,"line_end":48,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9761761,"byte_end":9761764,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9761769,"byte_end":9761783,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9761788,"byte_end":9761791,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9761796,"byte_end":9761803,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9761808,"byte_end":9761860,"line_start":53,"line_end":53,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9761865,"byte_end":9761868,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9761873,"byte_end":9761891,"line_start":55,"line_end":55,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9761896,"byte_end":9761917,"line_start":56,"line_end":56,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9761922,"byte_end":9761955,"line_start":57,"line_end":57,"column_start":5,"column_end":38}},{"value":"/     delay_for(Duration::new(1, 0)).await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9761960,"byte_end":9762005,"line_start":58,"line_end":58,"column_start":5,"column_end":50}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9762010,"byte_end":9762047,"line_start":59,"line_end":59,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.checked_duration_since(now));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9762052,"byte_end":9762114,"line_start":60,"line_end":60,"column_start":5,"column_end":67}},{"value":"/     println!(\"{:?}\", now.checked_duration_since(new_now)); // None","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9762119,"byte_end":9762189,"line_start":61,"line_end":61,"column_start":5,"column_end":75}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9762194,"byte_end":9762199,"line_start":62,"line_end":62,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9762204,"byte_end":9762211,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9168},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9762968,"byte_end":9762993,"line_start":85,"line_end":85,"column_start":12,"column_end":37},"name":"saturating_duration_since","qualname":"<Instant>::saturating_duration_since","value":"pub fn saturating_duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n zero duration if that instant is earlier than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9762357,"byte_end":9762432,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/ zero duration if that instant is earlier than this one.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9762437,"byte_end":9762496,"line_start":69,"line_end":69,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9762501,"byte_end":9762504,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9762509,"byte_end":9762523,"line_start":71,"line_end":71,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9762528,"byte_end":9762531,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9762536,"byte_end":9762543,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9762548,"byte_end":9762600,"line_start":74,"line_end":74,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9762605,"byte_end":9762608,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9762613,"byte_end":9762631,"line_start":76,"line_end":76,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9762636,"byte_end":9762657,"line_start":77,"line_end":77,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9762662,"byte_end":9762695,"line_start":78,"line_end":78,"column_start":5,"column_end":38}},{"value":"/     delay_for(Duration::new(1, 0)).await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9762700,"byte_end":9762745,"line_start":79,"line_end":79,"column_start":5,"column_end":50}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9762750,"byte_end":9762787,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.saturating_duration_since(now));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9762792,"byte_end":9762857,"line_start":81,"line_end":81,"column_start":5,"column_end":70}},{"value":"/     println!(\"{:?}\", now.saturating_duration_since(new_now)); // 0ns","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9762862,"byte_end":9762934,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9762939,"byte_end":9762944,"line_start":83,"line_end":83,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9762949,"byte_end":9762956,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9169},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9763764,"byte_end":9763771,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Instant>::elapsed","value":"pub fn elapsed(&Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed since this instant was created.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed since this instant was created.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9763100,"byte_end":9763170,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9763175,"byte_end":9763178,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9763183,"byte_end":9763195,"line_start":91,"line_end":91,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9763200,"byte_end":9763203,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This function may panic if the current time is earlier than this","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9763208,"byte_end":9763276,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/ instant, which is something that can happen if an `Instant` is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9763281,"byte_end":9763347,"line_start":94,"line_end":94,"column_start":5,"column_end":71}},{"value":"/ produced synthetically.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9763352,"byte_end":9763379,"line_start":95,"line_end":95,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9763384,"byte_end":9763387,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9763392,"byte_end":9763406,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9763411,"byte_end":9763414,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9763419,"byte_end":9763426,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9763431,"byte_end":9763483,"line_start":100,"line_end":100,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9763488,"byte_end":9763491,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9763496,"byte_end":9763514,"line_start":102,"line_end":102,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9763519,"byte_end":9763540,"line_start":103,"line_end":103,"column_start":5,"column_end":26}},{"value":"/     let instant = Instant::now();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9763545,"byte_end":9763582,"line_start":104,"line_end":104,"column_start":5,"column_end":42}},{"value":"/     let three_secs = Duration::from_secs(3);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9763587,"byte_end":9763635,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"/     delay_for(three_secs).await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9763640,"byte_end":9763676,"line_start":106,"line_end":106,"column_start":5,"column_end":41}},{"value":"/     assert!(instant.elapsed() >= three_secs);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9763681,"byte_end":9763730,"line_start":107,"line_end":107,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9763735,"byte_end":9763740,"line_start":108,"line_end":108,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9763745,"byte_end":9763752,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9170},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9764052,"byte_end":9764063,"line_start":117,"line_end":117,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Instant>::checked_add","value":"pub fn checked_add(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self + duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self + duration` if `t` can be","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9763835,"byte_end":9763910,"line_start":114,"line_end":114,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9763915,"byte_end":9763986,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9763991,"byte_end":9764040,"line_start":116,"line_end":116,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":9171},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9764402,"byte_end":9764413,"line_start":124,"line_end":124,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Instant>::checked_sub","value":"pub fn checked_sub(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self - duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self - duration` if `t` can be","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9764185,"byte_end":9764260,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9764265,"byte_end":9764336,"line_start":122,"line_end":122,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9764341,"byte_end":9764390,"line_start":123,"line_end":123,"column_start":5,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":9207},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9767877,"byte_end":9767885,"line_start":67,"line_end":67,"column_start":8,"column_end":16},"name":"interval","qualname":"::time::interval::interval","value":"pub fn interval(Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `duration`. The first\n tick completes immediately.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `duration`. The first","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9766135,"byte_end":9766212,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ tick completes immediately.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9766213,"byte_end":9766244,"line_start":9,"line_end":9,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9766245,"byte_end":9766248,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9766249,"byte_end":9766329,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9766330,"byte_end":9766369,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9766370,"byte_end":9766373,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is equivalent to `interval_at(Instant::now(), period)`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9766374,"byte_end":9766447,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9766448,"byte_end":9766451,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9766452,"byte_end":9766464,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9766465,"byte_end":9766468,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9766469,"byte_end":9766514,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9766515,"byte_end":9766518,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9766519,"byte_end":9766533,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9766534,"byte_end":9766537,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9766538,"byte_end":9766545,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9766546,"byte_end":9766584,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9766585,"byte_end":9766588,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9766589,"byte_end":9766607,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9766608,"byte_end":9766629,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9766630,"byte_end":9766699,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9766700,"byte_end":9766703,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9766704,"byte_end":9766734,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9766735,"byte_end":9766765,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9766766,"byte_end":9766796,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9766797,"byte_end":9766800,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9766801,"byte_end":9766844,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9766845,"byte_end":9766850,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9766851,"byte_end":9766858,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9766859,"byte_end":9766862,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ A simple example using `interval` to execute a task every two seconds.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9766863,"byte_end":9766937,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9766938,"byte_end":9766941,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The difference between `interval` and [`delay_for`] is that an `interval`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9766942,"byte_end":9767019,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ measures the time since the last tick, which means that `.tick().await`","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9767020,"byte_end":9767095,"line_start":40,"line_end":40,"column_start":1,"column_end":76}},{"value":"/ may wait for a shorter time than the duration specified for the interval","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9767096,"byte_end":9767172,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ if some time has passed between calls to `.tick().await`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9767173,"byte_end":9767234,"line_start":42,"line_end":42,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9767235,"byte_end":9767238,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ If the tick in the example below was replaced with [`delay_for`], the task","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9767239,"byte_end":9767317,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ would only be executed once every three seconds, and not every two","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9767318,"byte_end":9767388,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/ seconds.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9767389,"byte_end":9767401,"line_start":46,"line_end":46,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9767402,"byte_end":9767405,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9767406,"byte_end":9767413,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ use tokio::time;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9767414,"byte_end":9767434,"line_start":49,"line_end":49,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9767435,"byte_end":9767438,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ async fn task_that_takes_a_second() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9767439,"byte_end":9767480,"line_start":51,"line_end":51,"column_start":1,"column_end":42}},{"value":"/     println!(\"hello\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9767481,"byte_end":9767507,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/     time::delay_for(time::Duration::from_secs(1)).await","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9767508,"byte_end":9767567,"line_start":53,"line_end":53,"column_start":1,"column_end":60}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9767568,"byte_end":9767573,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9767574,"byte_end":9767577,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9767578,"byte_end":9767596,"line_start":56,"line_end":56,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9767597,"byte_end":9767618,"line_start":57,"line_end":57,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9767619,"byte_end":9767691,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/     for _i in 0..5 {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9767692,"byte_end":9767716,"line_start":59,"line_end":59,"column_start":1,"column_end":25}},{"value":"/         interval.tick().await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9767717,"byte_end":9767751,"line_start":60,"line_end":60,"column_start":1,"column_end":35}},{"value":"/         task_that_takes_a_second().await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9767752,"byte_end":9767797,"line_start":61,"line_end":61,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9767798,"byte_end":9767807,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9767808,"byte_end":9767813,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9767814,"byte_end":9767821,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9767822,"byte_end":9767825,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ [`delay_for`]: crate::time::delay_for()","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9767826,"byte_end":9767869,"line_start":66,"line_end":66,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":9208},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9768774,"byte_end":9768785,"line_start":100,"line_end":100,"column_start":8,"column_end":19},"name":"interval_at","qualname":"::time::interval::interval_at","value":"pub fn interval_at(Instant, Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `period` with the\n first tick completing at `start`.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `period` with the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9768035,"byte_end":9768108,"line_start":73,"line_end":73,"column_start":1,"column_end":74}},{"value":"/ first tick completing at `start`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9768109,"byte_end":9768146,"line_start":74,"line_end":74,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9768147,"byte_end":9768150,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9768151,"byte_end":9768231,"line_start":76,"line_end":76,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9768232,"byte_end":9768271,"line_start":77,"line_end":77,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9768272,"byte_end":9768275,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9768276,"byte_end":9768288,"line_start":79,"line_end":79,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9768289,"byte_end":9768292,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9768293,"byte_end":9768338,"line_start":81,"line_end":81,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9768339,"byte_end":9768342,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9768343,"byte_end":9768357,"line_start":83,"line_end":83,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9768358,"byte_end":9768361,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9768362,"byte_end":9768369,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{interval_at, Duration, Instant};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9768370,"byte_end":9768424,"line_start":86,"line_end":86,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9768425,"byte_end":9768428,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9768429,"byte_end":9768447,"line_start":88,"line_end":88,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9768448,"byte_end":9768469,"line_start":89,"line_end":89,"column_start":1,"column_end":22}},{"value":"/     let start = Instant::now() + Duration::from_millis(50);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9768470,"byte_end":9768533,"line_start":90,"line_end":90,"column_start":1,"column_end":64}},{"value":"/     let mut interval = interval_at(start, Duration::from_millis(10));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9768534,"byte_end":9768607,"line_start":91,"line_end":91,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9768608,"byte_end":9768611,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9768612,"byte_end":9768642,"line_start":93,"line_end":93,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9768643,"byte_end":9768673,"line_start":94,"line_end":94,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9768674,"byte_end":9768704,"line_start":95,"line_end":95,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9768705,"byte_end":9768708,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     // approximately 70ms have elapsed.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9768709,"byte_end":9768752,"line_start":97,"line_end":97,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9768753,"byte_end":9768758,"line_start":98,"line_end":98,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9768759,"byte_end":9768766,"line_start":99,"line_end":99,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9492},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9769234,"byte_end":9769242,"line_start":116,"line_end":116,"column_start":12,"column_end":20},"name":"Interval","qualname":"::time::interval::Interval","value":"Interval {  }","parent":null,"children":[{"krate":0,"index":9493},{"krate":0,"index":9494}],"decl_id":null,"docs":" Stream returned by [`interval`](interval) and [`interval_at`](interval_at).","sig":null,"attributes":[{"value":"/ Stream returned by [`interval`](interval) and [`interval_at`](interval_at).","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9768983,"byte_end":9769062,"line_start":109,"line_end":109,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9769063,"byte_end":9769066,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ This type only implements the [`Stream`] trait if the \"stream\" feature is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9769067,"byte_end":9769144,"line_start":111,"line_end":111,"column_start":1,"column_end":78}},{"value":"/ enabled.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9769145,"byte_end":9769157,"line_start":112,"line_end":112,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9769158,"byte_end":9769161,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ [`Stream`]: trait@crate::stream::Stream","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9769162,"byte_end":9769205,"line_start":114,"line_end":114,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":9210},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9769487,"byte_end":9769496,"line_start":126,"line_end":126,"column_start":12,"column_end":21},"name":"poll_tick","qualname":"<Interval>::poll_tick","value":"pub fn poll_tick(&mut Self, &mut Context) -> Poll<Instant>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9211},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9770588,"byte_end":9770592,"line_start":163,"line_end":163,"column_start":18,"column_end":22},"name":"tick","qualname":"<Interval>::tick","value":"pub async fn tick<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the next instant in the interval has been reached.","sig":null,"attributes":[{"value":"/ Completes when the next instant in the interval has been reached.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9769983,"byte_end":9770052,"line_start":142,"line_end":142,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9770057,"byte_end":9770060,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9770065,"byte_end":9770079,"line_start":144,"line_end":144,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9770084,"byte_end":9770087,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9770092,"byte_end":9770099,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ use tokio::time;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9770104,"byte_end":9770124,"line_start":147,"line_end":147,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9770129,"byte_end":9770132,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9770137,"byte_end":9770165,"line_start":149,"line_end":149,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9770170,"byte_end":9770173,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9770178,"byte_end":9770196,"line_start":151,"line_end":151,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9770201,"byte_end":9770222,"line_start":152,"line_end":152,"column_start":5,"column_end":26}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9770227,"byte_end":9770296,"line_start":153,"line_end":153,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9770301,"byte_end":9770304,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9770309,"byte_end":9770339,"line_start":155,"line_end":155,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9770344,"byte_end":9770374,"line_start":156,"line_end":156,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9770379,"byte_end":9770409,"line_start":157,"line_end":157,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9770414,"byte_end":9770417,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9770422,"byte_end":9770465,"line_start":159,"line_end":159,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9770470,"byte_end":9770475,"line_start":160,"line_end":160,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9770480,"byte_end":9770487,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9770492,"byte_end":9770532,"line_start":162,"line_end":162,"column_start":5,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":9235},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9772274,"byte_end":9772281,"line_start":49,"line_end":49,"column_start":8,"column_end":15},"name":"timeout","qualname":"::time::timeout::timeout","value":"pub fn timeout<T>(Duration, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified duration has elapsed.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified duration has elapsed.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9771259,"byte_end":9771336,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9771337,"byte_end":9771340,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the duration has elapsed, then the completed","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9771341,"byte_end":9771420,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ value is returned. Otherwise, an error is returned and the future is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9771421,"byte_end":9771493,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ canceled.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9771494,"byte_end":9771507,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9771508,"byte_end":9771511,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9771512,"byte_end":9771529,"line_start":21,"line_end":21,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9771530,"byte_end":9771533,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9771534,"byte_end":9771612,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9771613,"byte_end":9771643,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9771644,"byte_end":9771647,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9771648,"byte_end":9771728,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9771729,"byte_end":9771756,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9771757,"byte_end":9771760,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9771761,"byte_end":9771775,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9771776,"byte_end":9771779,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9771780,"byte_end":9771840,"line_start":31,"line_end":31,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9771841,"byte_end":9771844,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9771845,"byte_end":9771856,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::timeout;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9771857,"byte_end":9771886,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9771887,"byte_end":9771916,"line_start":35,"line_end":35,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9771917,"byte_end":9771920,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9771921,"byte_end":9771949,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9771950,"byte_end":9771953,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9771954,"byte_end":9771976,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9771977,"byte_end":9772015,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9772016,"byte_end":9772043,"line_start":41,"line_end":41,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9772044,"byte_end":9772047,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9772048,"byte_end":9772121,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/ if let Err(_) = timeout(Duration::from_millis(10), rx).await {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9772122,"byte_end":9772188,"line_start":44,"line_end":44,"column_start":1,"column_end":67}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9772189,"byte_end":9772244,"line_start":45,"line_end":45,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9772245,"byte_end":9772250,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9772251,"byte_end":9772258,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9772259,"byte_end":9772266,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":9237},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9773503,"byte_end":9773513,"line_start":91,"line_end":91,"column_start":8,"column_end":18},"name":"timeout_at","qualname":"::time::timeout::timeout_at","value":"pub fn timeout_at<T>(Instant, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified instant in time.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified instant in time.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9772472,"byte_end":9772544,"line_start":57,"line_end":57,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9772545,"byte_end":9772548,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the instant is reached, then the completed","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9772549,"byte_end":9772626,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"/ value is returned. Otherwise, an error is returned.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9772627,"byte_end":9772682,"line_start":60,"line_end":60,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9772683,"byte_end":9772686,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9772687,"byte_end":9772704,"line_start":62,"line_end":62,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9772705,"byte_end":9772708,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9772709,"byte_end":9772787,"line_start":64,"line_end":64,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9772788,"byte_end":9772818,"line_start":65,"line_end":65,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9772819,"byte_end":9772822,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9772823,"byte_end":9772903,"line_start":67,"line_end":67,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9772904,"byte_end":9772931,"line_start":68,"line_end":68,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9772932,"byte_end":9772935,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9772936,"byte_end":9772950,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9772951,"byte_end":9772954,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9772955,"byte_end":9773015,"line_start":72,"line_end":72,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9773016,"byte_end":9773019,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9773020,"byte_end":9773031,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::{Instant, timeout_at};","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9773032,"byte_end":9773075,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9773076,"byte_end":9773105,"line_start":76,"line_end":76,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9773106,"byte_end":9773109,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9773110,"byte_end":9773138,"line_start":78,"line_end":78,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9773139,"byte_end":9773142,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9773143,"byte_end":9773165,"line_start":80,"line_end":80,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9773166,"byte_end":9773204,"line_start":81,"line_end":81,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9773205,"byte_end":9773232,"line_start":82,"line_end":82,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9773233,"byte_end":9773236,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire 10 milliseconds into the","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9773237,"byte_end":9773315,"line_start":84,"line_end":84,"column_start":1,"column_end":79}},{"value":"/ // future.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9773316,"byte_end":9773330,"line_start":85,"line_end":85,"column_start":1,"column_end":15}},{"value":"/ if let Err(_) = timeout_at(Instant::now() + Duration::from_millis(10), rx).await {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9773331,"byte_end":9773417,"line_start":86,"line_end":86,"column_start":1,"column_end":87}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9773418,"byte_end":9773473,"line_start":87,"line_end":87,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9773474,"byte_end":9773479,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9773480,"byte_end":9773487,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9773488,"byte_end":9773495,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9943},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9773888,"byte_end":9773895,"line_start":107,"line_end":107,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::time::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":9945},{"krate":0,"index":9946}],"decl_id":null,"docs":" Future returned by [`timeout`](timeout) and [`timeout_at`](timeout_at).\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.11/src/lib.rs","byte_start":8332164,"byte_end":8332173,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9497},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9774052,"byte_end":9774059,"line_start":117,"line_end":117,"column_start":12,"column_end":19},"name":"Elapsed","qualname":"::time::timeout::Elapsed","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Timeout`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Timeout`.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9773980,"byte_end":9774012,"line_start":115,"line_end":115,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":9244},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9774410,"byte_end":9774417,"line_start":133,"line_end":133,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Timeout<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this timeout.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9774337,"byte_end":9774398,"line_start":132,"line_end":132,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":9245},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9774545,"byte_end":9774552,"line_start":138,"line_end":138,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Timeout<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this timeout.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9774464,"byte_end":9774533,"line_start":137,"line_end":137,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":9246},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9774681,"byte_end":9774691,"line_start":143,"line_end":143,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Timeout<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this timeout, returning the underlying value.\n","sig":null,"attributes":[{"value":"/ Consumes this timeout, returning the underlying value.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9774611,"byte_end":9774669,"line_start":142,"line_end":142,"column_start":5,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":9519},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/throttle.rs","byte_start":9792824,"byte_end":9792832,"line_start":33,"line_end":33,"column_start":8,"column_end":16},"name":"throttle","qualname":"::time::throttle::throttle","value":"pub fn throttle<T>(Duration, T) -> Throttle<T> where T: Stream","parent":null,"children":[],"decl_id":null,"docs":" Slows down a stream by enforcing a delay between items.\n They will be produced not more often than the specified interval.","sig":null,"attributes":[{"value":"/ Slows down a stream by enforcing a delay between items.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/throttle.rs","byte_start":9792250,"byte_end":9792309,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/ They will be produced not more often than the specified interval.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/throttle.rs","byte_start":9792310,"byte_end":9792379,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/throttle.rs","byte_start":9792380,"byte_end":9792383,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/throttle.rs","byte_start":9792384,"byte_end":9792397,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/throttle.rs","byte_start":9792398,"byte_end":9792401,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Create a throttled stream.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/throttle.rs","byte_start":9792402,"byte_end":9792432,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/throttle.rs","byte_start":9792433,"byte_end":9792451,"line_start":19,"line_end":19,"column_start":1,"column_end":19}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/throttle.rs","byte_start":9792452,"byte_end":9792480,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/throttle.rs","byte_start":9792481,"byte_end":9792514,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/ use tokio::time::throttle;","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/throttle.rs","byte_start":9792515,"byte_end":9792545,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/throttle.rs","byte_start":9792546,"byte_end":9792549,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/throttle.rs","byte_start":9792550,"byte_end":9792572,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"/ let mut item_stream = throttle(Duration::from_secs(2), futures::stream::repeat(\"one\"));","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/throttle.rs","byte_start":9792573,"byte_end":9792664,"line_start":25,"line_end":25,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/throttle.rs","byte_start":9792665,"byte_end":9792668,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/throttle.rs","byte_start":9792669,"byte_end":9792679,"line_start":27,"line_end":27,"column_start":1,"column_end":11}},{"value":"/     // The string will be produced at most every 2 seconds","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/throttle.rs","byte_start":9792680,"byte_end":9792742,"line_start":28,"line_end":28,"column_start":1,"column_end":63}},{"value":"/     println!(\"{:?}\", item_stream.next().await);","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/throttle.rs","byte_start":9792743,"byte_end":9792794,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/throttle.rs","byte_start":9792795,"byte_end":9792800,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/throttle.rs","byte_start":9792801,"byte_end":9792808,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/throttle.rs","byte_start":9792809,"byte_end":9792816,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9895},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/throttle.rs","byte_start":9793327,"byte_end":9793335,"line_start":55,"line_end":55,"column_start":16,"column_end":24},"name":"Throttle","qualname":"::time::throttle::Throttle","value":"Throttle {  }","parent":null,"children":[{"krate":0,"index":9897},{"krate":0,"index":9898},{"krate":0,"index":9899},{"krate":0,"index":9900}],"decl_id":null,"docs":" Stream for the [`throttle`](throttle) function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.11/src/lib.rs","byte_start":8332164,"byte_end":8332173,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":9523},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/throttle.rs","byte_start":9793802,"byte_end":9793809,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Throttle<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/throttle.rs","byte_start":9793695,"byte_end":9793768,"line_start":71,"line_end":71,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/throttle.rs","byte_start":9793773,"byte_end":9793790,"line_start":72,"line_end":72,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":9524},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/throttle.rs","byte_start":9794118,"byte_end":9794125,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Throttle<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this combinator\n is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this combinator","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/throttle.rs","byte_start":9793857,"byte_end":9793935,"line_start":77,"line_end":77,"column_start":5,"column_end":83}},{"value":"/ is pulling from.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/throttle.rs","byte_start":9793940,"byte_end":9793960,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/throttle.rs","byte_start":9793965,"byte_end":9793968,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the stream","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/throttle.rs","byte_start":9793973,"byte_end":9794053,"line_start":80,"line_end":80,"column_start":5,"column_end":85}},{"value":"/ which may otherwise confuse this combinator.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/throttle.rs","byte_start":9794058,"byte_end":9794106,"line_start":81,"line_end":81,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":9525},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/throttle.rs","byte_start":9794420,"byte_end":9794430,"line_start":90,"line_end":90,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Throttle<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/throttle.rs","byte_start":9794185,"byte_end":9794247,"line_start":86,"line_end":86,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/throttle.rs","byte_start":9794252,"byte_end":9794255,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so care","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/throttle.rs","byte_start":9794260,"byte_end":9794337,"line_start":88,"line_end":88,"column_start":5,"column_end":82}},{"value":"/ should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/throttle.rs","byte_start":9794342,"byte_end":9794408,"line_start":89,"line_end":89,"column_start":5,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":9293},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/wheel/stack.rs","byte_start":9791383,"byte_end":9791388,"line_start":6,"line_end":6,"column_start":10,"column_end":15},"name":"Owned","qualname":"::time::wheel::stack::Stack::Owned","value":"type Owned: Borrow<Self::Borrowed>;","parent":{"krate":0,"index":9292},"children":[],"decl_id":null,"docs":" Type of the item stored in the stack\n","sig":null,"attributes":[{"value":"/ Type of the item stored in the stack","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/wheel/stack.rs","byte_start":9791333,"byte_end":9791373,"line_start":5,"line_end":5,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":9294},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/wheel/stack.rs","byte_start":9791446,"byte_end":9791454,"line_start":9,"line_end":9,"column_start":10,"column_end":18},"name":"Borrowed","qualname":"::time::wheel::stack::Stack::Borrowed","value":"type Borrowed;","parent":{"krate":0,"index":9292},"children":[],"decl_id":null,"docs":" Borrowed item\n","sig":null,"attributes":[{"value":"/ Borrowed item","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/wheel/stack.rs","byte_start":9791419,"byte_end":9791436,"line_start":8,"line_end":8,"column_start":5,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":9295},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/wheel/stack.rs","byte_start":9791543,"byte_end":9791548,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Store","qualname":"::time::wheel::stack::Stack::Store","value":"type Store;","parent":{"krate":0,"index":9292},"children":[],"decl_id":null,"docs":" Item storage, this allows a slab to be used instead of just the heap\n","sig":null,"attributes":[{"value":"/ Item storage, this allows a slab to be used instead of just the heap","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/wheel/stack.rs","byte_start":9791461,"byte_end":9791533,"line_start":11,"line_end":11,"column_start":5,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":789},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/linked_list.rs","byte_start":182190,"byte_end":182196,"line_start":40,"line_end":40,"column_start":10,"column_end":16},"name":"Handle","qualname":"::util::linked_list::Link::Handle","value":"type Handle;","parent":{"krate":0,"index":788},"children":[],"decl_id":null,"docs":" Handle to the list entry.","sig":null,"attributes":[{"value":"/ Handle to the list entry.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/linked_list.rs","byte_start":182099,"byte_end":182128,"line_start":37,"line_end":37,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/linked_list.rs","byte_start":182133,"byte_end":182136,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ This is usually a pointer-ish type.","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/linked_list.rs","byte_start":182141,"byte_end":182180,"line_start":39,"line_end":39,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":790},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/linked_list.rs","byte_start":182226,"byte_end":182232,"line_start":43,"line_end":43,"column_start":10,"column_end":16},"name":"Target","qualname":"::util::linked_list::Link::Target","value":"type Target;","parent":{"krate":0,"index":788},"children":[],"decl_id":null,"docs":" Node type\n","sig":null,"attributes":[{"value":"/ Node type","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/linked_list.rs","byte_start":182203,"byte_end":182216,"line_start":42,"line_end":42,"column_start":5,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":824},"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/rand.rs","byte_start":198817,"byte_end":198829,"line_start":58,"line_end":58,"column_start":8,"column_end":20},"name":"thread_rng_n","qualname":"::util::rand::thread_rng_n","value":"pub fn thread_rng_n(u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"macros\", feature = \"stream\"))","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/rand.rs","byte_start":198682,"byte_end":198733,"line_start":55,"line_end":55,"column_start":1,"column_end":52}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/scoped_tls.rs","byte_start":29760,"byte_end":29769,"line_start":32,"line_end":32,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/scoped_tls.rs","byte_start":29785,"byte_end":29794,"line_start":34,"line_end":34,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/scoped_tls.rs","byte_start":30144,"byte_end":30149,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8557851,"byte_end":8557861,"line_start":26,"line_end":26,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8563632,"byte_end":8563636,"line_start":104,"line_end":104,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":982},{"krate":0,"index":987},{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":997},{"krate":0,"index":1001},{"krate":0,"index":1005},{"krate":0,"index":1012},{"krate":0,"index":1016},{"krate":0,"index":1020},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1028}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8576861,"byte_end":8576865,"line_start":539,"line_end":539,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1034},{"krate":0,"index":1035}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8579349,"byte_end":8579353,"line_start":606,"line_end":606,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1038},{"krate":0,"index":1040}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8581778,"byte_end":8581782,"line_start":676,"line_end":676,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1042},{"krate":0,"index":1045},{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8584753,"byte_end":8584757,"line_start":764,"line_end":764,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1048}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8584855,"byte_end":8584859,"line_start":770,"line_end":770,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8585088,"byte_end":8585092,"line_start":779,"line_end":779,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1052}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8590017,"byte_end":8590028,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":1095}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8600497,"byte_end":8600508,"line_start":393,"line_end":393,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1097}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8600626,"byte_end":8600637,"line_start":399,"line_end":399,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1099}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8603911,"byte_end":8603922,"line_start":69,"line_end":69,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1121},{"krate":0,"index":1122}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/dir_builder_ext.rs","byte_start":8604751,"byte_end":8604761,"line_start":24,"line_end":24,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1129}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8607833,"byte_end":8607840,"line_start":51,"line_end":51,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1166},{"krate":0,"index":1171}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8609075,"byte_end":8609082,"line_start":88,"line_end":88,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1174},{"krate":0,"index":1175}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8609909,"byte_end":8609917,"line_start":113,"line_end":113,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1177},{"krate":0,"index":1178},{"krate":0,"index":1179},{"krate":0,"index":1183}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8613699,"byte_end":8613707,"line_start":240,"line_end":240,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1188}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/maybe_done.rs","byte_start":31905,"byte_end":31914,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/maybe_done.rs","byte_start":32077,"byte_end":32086,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/maybe_done.rs","byte_start":33273,"byte_end":33282,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/poll_fn.rs","byte_start":34036,"byte_end":34042,"line_start":13,"line_end":13,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/poll_fn.rs","byte_start":34256,"byte_end":34262,"line_start":23,"line_end":23,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/poll_fn.rs","byte_start":34404,"byte_end":34410,"line_start":29,"line_end":29,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/ready.rs","byte_start":34941,"byte_end":34946,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/ready.rs","byte_start":34973,"byte_end":34978,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/try_join.rs","byte_start":36175,"byte_end":36183,"line_start":41,"line_end":41,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/blocking.rs","byte_start":8619682,"byte_end":8619690,"line_start":38,"line_end":38,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1510}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/blocking.rs","byte_start":8619963,"byte_end":8619971,"line_start":49,"line_end":49,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1460}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/blocking.rs","byte_start":8621576,"byte_end":8621584,"line_start":100,"line_end":100,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1464},{"krate":0,"index":1467},{"krate":0,"index":1470}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/blocking.rs","byte_start":8624309,"byte_end":8624312,"line_start":190,"line_end":190,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":1473},{"krate":0,"index":1474},{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1479},{"krate":0,"index":1480},{"krate":0,"index":1482}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/blocking.rs","byte_start":8626127,"byte_end":8626130,"line_start":271,"line_end":271,"column_start":10,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1512}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":50006,"byte_end":50009,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1513},{"krate":0,"index":1514}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":50169,"byte_end":50172,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":50801,"byte_end":50807,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":56771,"byte_end":56774,"line_start":153,"line_end":153,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1517},{"krate":0,"index":1518}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":56917,"byte_end":56920,"line_start":161,"line_end":161,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":57716,"byte_end":57722,"line_start":193,"line_end":193,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_seek.rs","byte_start":60148,"byte_end":60151,"line_start":64,"line_end":64,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1521},{"krate":0,"index":1522}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_seek.rs","byte_start":60294,"byte_end":60297,"line_start":72,"line_end":72,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_seek.rs","byte_start":60751,"byte_end":60757,"line_start":90,"line_end":90,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":68662,"byte_end":68665,"line_start":174,"line_end":174,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1525},{"krate":0,"index":1526},{"krate":0,"index":1527}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":68813,"byte_end":68816,"line_start":182,"line_end":182,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":69385,"byte_end":69388,"line_start":204,"line_end":204,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":69896,"byte_end":69902,"line_start":223,"line_end":223,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":70415,"byte_end":70421,"line_start":241,"line_end":241,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":70937,"byte_end":70943,"line_start":259,"line_end":259,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":71454,"byte_end":71460,"line_start":277,"line_end":277,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/driver/scheduled_io.rs","byte_start":8638434,"byte_end":8638445,"line_start":17,"line_end":17,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1555},{"krate":0,"index":1556}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/driver/scheduled_io.rs","byte_start":8639204,"byte_end":8639215,"line_start":48,"line_end":48,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1558}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/driver/scheduled_io.rs","byte_start":8639422,"byte_end":8639433,"line_start":58,"line_end":58,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1560}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/driver/scheduled_io.rs","byte_start":8642055,"byte_end":8642066,"line_start":132,"line_end":132,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1563}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/driver/mod.rs","byte_start":8627772,"byte_end":8627778,"line_start":66,"line_end":66,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1597},{"krate":0,"index":1598},{"krate":0,"index":1599},{"krate":0,"index":1600}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/driver/mod.rs","byte_start":8630639,"byte_end":8630645,"line_start":167,"line_end":167,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1603},{"krate":0,"index":1604},{"krate":0,"index":1605},{"krate":0,"index":1606},{"krate":0,"index":1607},{"krate":0,"index":1608}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/driver/mod.rs","byte_start":8631044,"byte_end":8631050,"line_start":188,"line_end":188,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1610}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/driver/mod.rs","byte_start":8631186,"byte_end":8631192,"line_start":196,"line_end":196,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1612},{"krate":0,"index":1613},{"krate":0,"index":1614}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/driver/mod.rs","byte_start":8632335,"byte_end":8632341,"line_start":227,"line_end":227,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1616}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/driver/mod.rs","byte_start":8632419,"byte_end":8632425,"line_start":233,"line_end":233,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1618}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/driver/mod.rs","byte_start":8632560,"byte_end":8632565,"line_start":241,"line_end":241,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1620},{"krate":0,"index":1622},{"krate":0,"index":1623},{"krate":0,"index":1624}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/driver/mod.rs","byte_start":8634109,"byte_end":8634118,"line_start":295,"line_end":295,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1627}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8648624,"byte_end":8648635,"line_start":164,"line_end":164,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1654},{"krate":0,"index":1655},{"krate":0,"index":1656},{"krate":0,"index":1657},{"krate":0,"index":1658},{"krate":0,"index":1659},{"krate":0,"index":1660},{"krate":0,"index":1661},{"krate":0,"index":1662}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8656426,"byte_end":8656437,"line_start":380,"line_end":380,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1665}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8656930,"byte_end":8656941,"line_start":402,"line_end":402,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1668},{"krate":0,"index":1669},{"krate":0,"index":1670}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8658022,"byte_end":8658033,"line_start":448,"line_end":448,"column_start":46,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1675}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8658206,"byte_end":8658217,"line_start":454,"line_end":454,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1678}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8660365,"byte_end":8660377,"line_start":49,"line_end":49,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1694},{"krate":0,"index":1696},{"krate":0,"index":1698},{"krate":0,"index":1700},{"krate":0,"index":1702},{"krate":0,"index":1703},{"krate":0,"index":1705},{"krate":0,"index":1706}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8671247,"byte_end":8671259,"line_start":329,"line_end":329,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8671284,"byte_end":8671296,"line_start":330,"line_end":330,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8671315,"byte_end":8671327,"line_start":332,"line_end":332,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1714}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/stderr.rs","byte_start":8673886,"byte_end":8673892,"line_start":76,"line_end":76,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1759}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/stderr.rs","byte_start":8674200,"byte_end":8674206,"line_start":89,"line_end":89,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1761},{"krate":0,"index":1762},{"krate":0,"index":1763}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/stdin.rs","byte_start":8676614,"byte_end":8676619,"line_start":52,"line_end":52,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1775}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/stdin.rs","byte_start":8676923,"byte_end":8676928,"line_start":65,"line_end":65,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1777},{"krate":0,"index":1778}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/stdout.rs","byte_start":8679711,"byte_end":8679717,"line_start":76,"line_end":76,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1790}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/stdout.rs","byte_start":8680025,"byte_end":8680031,"line_start":89,"line_end":89,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1792},{"krate":0,"index":1793},{"krate":0,"index":1794}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/split.rs","byte_start":8682151,"byte_end":8682159,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1842},{"krate":0,"index":1843}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/split.rs","byte_start":8683076,"byte_end":8683085,"line_start":93,"line_end":93,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1846}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/split.rs","byte_start":8683335,"byte_end":8683343,"line_start":101,"line_end":101,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1849},{"krate":0,"index":1850}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/split.rs","byte_start":8683898,"byte_end":8683907,"line_start":121,"line_end":121,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1854},{"krate":0,"index":1855},{"krate":0,"index":1856},{"krate":0,"index":1857}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/split.rs","byte_start":8684856,"byte_end":8684861,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1861}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/split.rs","byte_start":8685254,"byte_end":8685259,"line_start":166,"line_end":166,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1864}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/split.rs","byte_start":8685512,"byte_end":8685517,"line_start":174,"line_end":174,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1867}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/split.rs","byte_start":8685640,"byte_end":8685648,"line_start":180,"line_end":180,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/split.rs","byte_start":8685685,"byte_end":8685694,"line_start":181,"line_end":181,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/split.rs","byte_start":8685731,"byte_end":8685739,"line_start":182,"line_end":182,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/split.rs","byte_start":8685776,"byte_end":8685785,"line_start":183,"line_end":183,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/split.rs","byte_start":8685828,"byte_end":8685836,"line_start":185,"line_end":185,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1878}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/split.rs","byte_start":8686004,"byte_end":8686013,"line_start":191,"line_end":191,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1881}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/seek.rs","byte_start":8686703,"byte_end":8686707,"line_start":25,"line_end":25,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1900},{"krate":0,"index":1901}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_buf_read_ext.rs","byte_start":8698802,"byte_end":8698803,"line_start":258,"line_end":258,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_read_ext.rs","byte_start":8738235,"byte_end":8738236,"line_start":1118,"line_end":1118,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8739994,"byte_end":8739995,"line_start":67,"line_end":67,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_write_ext.rs","byte_start":8775342,"byte_end":8775343,"line_start":1006,"line_end":1006,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_reader.rs","byte_start":8776759,"byte_end":8776768,"line_start":38,"line_end":38,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2079},{"krate":0,"index":2080},{"krate":0,"index":2081},{"krate":0,"index":2082},{"krate":0,"index":2083},{"krate":0,"index":2084},{"krate":0,"index":2085},{"krate":0,"index":2086}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_reader.rs","byte_start":8778947,"byte_end":8778956,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2089},{"krate":0,"index":2090}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_reader.rs","byte_start":8779932,"byte_end":8779941,"line_start":135,"line_end":135,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2093},{"krate":0,"index":2094}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_reader.rs","byte_start":8780772,"byte_end":8780781,"line_start":157,"line_end":157,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2097},{"krate":0,"index":2098},{"krate":0,"index":2100},{"krate":0,"index":2101}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_reader.rs","byte_start":8781497,"byte_end":8781506,"line_start":183,"line_end":183,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2104}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_stream.rs","byte_start":8783013,"byte_end":8783022,"line_start":26,"line_end":26,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2123},{"krate":0,"index":2124},{"krate":0,"index":2125},{"krate":0,"index":2126},{"krate":0,"index":2127},{"krate":0,"index":2128}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_stream.rs","byte_start":8784859,"byte_end":8784868,"line_start":82,"line_end":82,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2131}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_stream.rs","byte_start":8785010,"byte_end":8785019,"line_start":88,"line_end":88,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2134}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_stream.rs","byte_start":8785731,"byte_end":8785740,"line_start":118,"line_end":118,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2137},{"krate":0,"index":2138},{"krate":0,"index":2139}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_stream.rs","byte_start":8786270,"byte_end":8786279,"line_start":136,"line_end":136,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2142},{"krate":0,"index":2143}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_stream.rs","byte_start":8786758,"byte_end":8786767,"line_start":151,"line_end":151,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2146},{"krate":0,"index":2147}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_writer.rs","byte_start":8788721,"byte_end":8788730,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2167},{"krate":0,"index":2168},{"krate":0,"index":2169},{"krate":0,"index":2170},{"krate":0,"index":2171},{"krate":0,"index":2172},{"krate":0,"index":2173},{"krate":0,"index":2174}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_writer.rs","byte_start":8791008,"byte_end":8791017,"line_start":117,"line_end":117,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2177},{"krate":0,"index":2178},{"krate":0,"index":2179}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_writer.rs","byte_start":8791907,"byte_end":8791916,"line_start":146,"line_end":146,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2182},{"krate":0,"index":2183}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_writer.rs","byte_start":8792398,"byte_end":8792407,"line_start":161,"line_end":161,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2186},{"krate":0,"index":2187}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_writer.rs","byte_start":8792694,"byte_end":8792703,"line_start":171,"line_end":171,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2190}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/chain.rs","byte_start":8793872,"byte_end":8793877,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2209},{"krate":0,"index":2210},{"krate":0,"index":2211},{"krate":0,"index":2212}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/chain.rs","byte_start":8795017,"byte_end":8795022,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2216}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/chain.rs","byte_start":8795301,"byte_end":8795306,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2220},{"krate":0,"index":2221}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/chain.rs","byte_start":8796129,"byte_end":8796134,"line_start":113,"line_end":113,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2225},{"krate":0,"index":2226}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/copy.rs","byte_start":8799177,"byte_end":8799181,"line_start":78,"line_end":78,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2240},{"krate":0,"index":2241}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/empty.rs","byte_start":8802291,"byte_end":8802296,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2256},{"krate":0,"index":2257}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/empty.rs","byte_start":8802625,"byte_end":8802630,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2259},{"krate":0,"index":2260}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/empty.rs","byte_start":8802863,"byte_end":8802868,"line_start":73,"line_end":73,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2262}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/flush.rs","byte_start":8803689,"byte_end":8803694,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2278},{"krate":0,"index":2279}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/lines.rs","byte_start":8804874,"byte_end":8804879,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2294},{"krate":0,"index":2299},{"krate":0,"index":2300},{"krate":0,"index":2301}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/lines.rs","byte_start":8806131,"byte_end":8806136,"line_start":82,"line_end":82,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2304}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/lines.rs","byte_start":8806883,"byte_end":8806888,"line_start":113,"line_end":113,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2307},{"krate":0,"index":2308}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/mem.rs","byte_start":8810048,"byte_end":8810060,"line_start":91,"line_end":91,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2327}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/mem.rs","byte_start":8810609,"byte_end":8810621,"line_start":107,"line_end":107,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2329},{"krate":0,"index":2330},{"krate":0,"index":2331}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/mem.rs","byte_start":8811346,"byte_end":8811358,"line_start":134,"line_end":134,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2333}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/mem.rs","byte_start":8811518,"byte_end":8811522,"line_start":143,"line_end":143,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2335},{"krate":0,"index":2336}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/mem.rs","byte_start":8811928,"byte_end":8811932,"line_start":162,"line_end":162,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2338}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/mem.rs","byte_start":8812758,"byte_end":8812762,"line_start":188,"line_end":188,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2340},{"krate":0,"index":2341},{"krate":0,"index":2342}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/read.rs","byte_start":8814690,"byte_end":8814694,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2360},{"krate":0,"index":2361}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/read_buf.rs","byte_start":8815755,"byte_end":8815762,"line_start":27,"line_end":27,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2378},{"krate":0,"index":2379}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/read_exact.rs","byte_start":8817127,"byte_end":8817136,"line_start":43,"line_end":43,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2395},{"krate":0,"index":2396}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/read_line.rs","byte_start":8825414,"byte_end":8825422,"line_start":105,"line_end":105,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2431},{"krate":0,"index":2432}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/read_to_end.rs","byte_start":8831342,"byte_end":8831351,"line_start":147,"line_end":147,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2458},{"krate":0,"index":2459}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/read_to_string.rs","byte_start":8834090,"byte_end":8834102,"line_start":66,"line_end":66,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2481},{"krate":0,"index":2482}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/read_until.rs","byte_start":8836542,"byte_end":8836551,"line_start":66,"line_end":66,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2499},{"krate":0,"index":2500}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/repeat.rs","byte_start":8838385,"byte_end":8838391,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2509},{"krate":0,"index":2510}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/shutdown.rs","byte_start":8839513,"byte_end":8839521,"line_start":27,"line_end":27,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2526},{"krate":0,"index":2527}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/sink.rs","byte_start":8841354,"byte_end":8841358,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2537},{"krate":0,"index":2538},{"krate":0,"index":2539}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/sink.rs","byte_start":8841868,"byte_end":8841872,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2541}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/split.rs","byte_start":8842837,"byte_end":8842842,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2559}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/split.rs","byte_start":8843581,"byte_end":8843586,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2566}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/split.rs","byte_start":8844365,"byte_end":8844370,"line_start":94,"line_end":94,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2569},{"krate":0,"index":2570}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/stream_reader.rs","byte_start":8857909,"byte_end":8857921,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3072},{"krate":0,"index":3073}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/stream_reader.rs","byte_start":8858426,"byte_end":8858438,"line_start":98,"line_end":98,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3077},{"krate":0,"index":3078},{"krate":0,"index":3080}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/stream_reader.rs","byte_start":8859977,"byte_end":8859989,"line_start":151,"line_end":151,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3084},{"krate":0,"index":3085}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/reader_stream.rs","byte_start":8863518,"byte_end":8863530,"line_start":75,"line_end":75,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3105},{"krate":0,"index":3106}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/take.rs","byte_start":8845538,"byte_end":8845542,"line_start":29,"line_end":29,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2589},{"krate":0,"index":2590},{"krate":0,"index":2591},{"krate":0,"index":2592},{"krate":0,"index":2593},{"krate":0,"index":2594}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/take.rs","byte_start":8847170,"byte_end":8847174,"line_start":78,"line_end":78,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2597},{"krate":0,"index":2598}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/take.rs","byte_start":8847831,"byte_end":8847835,"line_start":100,"line_end":100,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2601},{"krate":0,"index":2602}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/write.rs","byte_start":8849392,"byte_end":8849397,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2617},{"krate":0,"index":2618}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/write_all.rs","byte_start":8850190,"byte_end":8850198,"line_start":25,"line_end":25,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2633},{"krate":0,"index":2634}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/write_buf.rs","byte_start":8851706,"byte_end":8851714,"line_start":29,"line_end":29,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2651},{"krate":0,"index":2652}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":74569,"byte_end":74579,"line_start":44,"line_end":44,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":74619,"byte_end":74629,"line_start":46,"line_end":46,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":74910,"byte_end":74922,"line_start":58,"line_end":58,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":74962,"byte_end":74974,"line_start":60,"line_end":60,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":75234,"byte_end":75246,"line_start":71,"line_end":71,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":75286,"byte_end":75298,"line_start":73,"line_end":73,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":79320,"byte_end":79326,"line_start":219,"line_end":219,"column_start":28,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":79370,"byte_end":79376,"line_start":221,"line_end":221,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3313},{"krate":0,"index":3314},{"krate":0,"index":3315}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":80742,"byte_end":80752,"line_start":272,"line_end":272,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3324},{"krate":0,"index":3325}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":81400,"byte_end":81409,"line_start":290,"line_end":290,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3327},{"krate":0,"index":3328},{"krate":0,"index":3329}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8868214,"byte_end":8868225,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3376},{"krate":0,"index":3381},{"krate":0,"index":3382},{"krate":0,"index":3386},{"krate":0,"index":3387},{"krate":0,"index":3388},{"krate":0,"index":3389},{"krate":0,"index":3390},{"krate":0,"index":3391},{"krate":0,"index":3392},{"krate":0,"index":3393}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8878920,"byte_end":8878931,"line_start":398,"line_end":398,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3395},{"krate":0,"index":3396}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8879246,"byte_end":8879257,"line_start":410,"line_end":410,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3398},{"krate":0,"index":3399}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8879697,"byte_end":8879708,"line_start":424,"line_end":424,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3401},{"krate":0,"index":3402}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8880034,"byte_end":8880045,"line_start":436,"line_end":436,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3404}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8880261,"byte_end":8880272,"line_start":447,"line_end":447,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3409}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/incoming.rs","byte_start":8881104,"byte_end":8881112,"line_start":15,"line_end":15,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3421},{"krate":0,"index":3422}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/incoming.rs","byte_start":8881750,"byte_end":8881758,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3424},{"krate":0,"index":3425}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8883921,"byte_end":8883929,"line_start":55,"line_end":55,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3443},{"krate":0,"index":3444}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8886384,"byte_end":8886392,"line_start":133,"line_end":133,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3449},{"krate":0,"index":3450}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8886712,"byte_end":8886721,"line_start":147,"line_end":147,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3452},{"krate":0,"index":3453},{"krate":0,"index":3455},{"krate":0,"index":3456}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8887534,"byte_end":8887542,"line_start":176,"line_end":176,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3458}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8887636,"byte_end":8887645,"line_start":182,"line_end":182,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3460}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8890733,"byte_end":8890745,"line_start":90,"line_end":90,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3485}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8890948,"byte_end":8890960,"line_start":99,"line_end":99,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8890970,"byte_end":8890983,"line_start":101,"line_end":101,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3488},{"krate":0,"index":3489},{"krate":0,"index":3490}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8893817,"byte_end":8893830,"line_start":188,"line_end":188,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3495},{"krate":0,"index":3496}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8894135,"byte_end":8894149,"line_start":202,"line_end":202,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3498},{"krate":0,"index":3499}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8894832,"byte_end":8894846,"line_start":221,"line_end":221,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3501}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8895006,"byte_end":8895020,"line_start":229,"line_end":229,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3503},{"krate":0,"index":3504},{"krate":0,"index":3506},{"krate":0,"index":3507}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8895959,"byte_end":8895972,"line_start":262,"line_end":262,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3509}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8896068,"byte_end":8896082,"line_start":268,"line_end":268,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3511}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8898217,"byte_end":8898226,"line_start":63,"line_end":63,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3550},{"krate":0,"index":3555},{"krate":0,"index":3559},{"krate":0,"index":3560},{"krate":0,"index":3561},{"krate":0,"index":3565},{"krate":0,"index":3566},{"krate":0,"index":3567},{"krate":0,"index":3568},{"krate":0,"index":3569},{"krate":0,"index":3573},{"krate":0,"index":3574},{"krate":0,"index":3575},{"krate":0,"index":3576},{"krate":0,"index":3577},{"krate":0,"index":3578},{"krate":0,"index":3579},{"krate":0,"index":3580},{"krate":0,"index":3581},{"krate":0,"index":3582},{"krate":0,"index":3583},{"krate":0,"index":3584},{"krate":0,"index":3585},{"krate":0,"index":3586},{"krate":0,"index":3588},{"krate":0,"index":3589},{"krate":0,"index":3590},{"krate":0,"index":3591}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8923283,"byte_end":8923292,"line_start":838,"line_end":838,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3599},{"krate":0,"index":3600}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8923728,"byte_end":8923737,"line_start":852,"line_end":852,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3602},{"krate":0,"index":3603}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8924090,"byte_end":8924099,"line_start":866,"line_end":866,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3605},{"krate":0,"index":3606}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8924413,"byte_end":8924422,"line_start":880,"line_end":880,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3608},{"krate":0,"index":3609},{"krate":0,"index":3611},{"krate":0,"index":3612}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8925166,"byte_end":8925175,"line_start":909,"line_end":909,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3614}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8925389,"byte_end":8925398,"line_start":920,"line_end":920,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3619}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8926404,"byte_end":8926413,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3683},{"krate":0,"index":3688},{"krate":0,"index":3689},{"krate":0,"index":3690},{"krate":0,"index":3691},{"krate":0,"index":3692},{"krate":0,"index":3693},{"krate":0,"index":3698},{"krate":0,"index":3702},{"krate":0,"index":3703},{"krate":0,"index":3704},{"krate":0,"index":3708},{"krate":0,"index":3709},{"krate":0,"index":3714},{"krate":0,"index":3715},{"krate":0,"index":3716},{"krate":0,"index":3720},{"krate":0,"index":3721},{"krate":0,"index":3722},{"krate":0,"index":3723},{"krate":0,"index":3724},{"krate":0,"index":3725},{"krate":0,"index":3726},{"krate":0,"index":3727},{"krate":0,"index":3728},{"krate":0,"index":3729},{"krate":0,"index":3730},{"krate":0,"index":3731},{"krate":0,"index":3732},{"krate":0,"index":3733},{"krate":0,"index":3734}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8941074,"byte_end":8941083,"line_start":398,"line_end":398,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3736},{"krate":0,"index":3737}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8941519,"byte_end":8941528,"line_start":412,"line_end":412,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3739},{"krate":0,"index":3740}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8941848,"byte_end":8941857,"line_start":424,"line_end":424,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3742}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8942076,"byte_end":8942085,"line_start":435,"line_end":435,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3747}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8944171,"byte_end":8944183,"line_start":50,"line_end":50,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3759}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8944386,"byte_end":8944398,"line_start":59,"line_end":59,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8944925,"byte_end":8944933,"line_start":74,"line_end":74,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3763},{"krate":0,"index":3764},{"krate":0,"index":3768}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8946565,"byte_end":8946573,"line_start":109,"line_end":109,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3773},{"krate":0,"index":3774},{"krate":0,"index":3778}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8947893,"byte_end":8947901,"line_start":138,"line_end":138,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3783}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8947992,"byte_end":8948000,"line_start":144,"line_end":144,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3785}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8949258,"byte_end":8949270,"line_start":22,"line_end":22,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3837},{"krate":0,"index":3839},{"krate":0,"index":3840},{"krate":0,"index":3841},{"krate":0,"index":3842},{"krate":0,"index":3843},{"krate":0,"index":3845},{"krate":0,"index":3849},{"krate":0,"index":3850},{"krate":0,"index":3852},{"krate":0,"index":3853},{"krate":0,"index":3857},{"krate":0,"index":3858},{"krate":0,"index":3859},{"krate":0,"index":3864},{"krate":0,"index":3865},{"krate":0,"index":3869},{"krate":0,"index":3870},{"krate":0,"index":3871},{"krate":0,"index":3872},{"krate":0,"index":3873},{"krate":0,"index":3874},{"krate":0,"index":3875},{"krate":0,"index":3877}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8959691,"byte_end":8959703,"line_start":314,"line_end":314,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3879},{"krate":0,"index":3880}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8960145,"byte_end":8960157,"line_start":328,"line_end":328,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3882},{"krate":0,"index":3883}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8960486,"byte_end":8960498,"line_start":340,"line_end":340,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3885}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8960623,"byte_end":8960635,"line_start":346,"line_end":346,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3887}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split.rs","byte_start":8961572,"byte_end":8961580,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3896},{"krate":0,"index":3900}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split.rs","byte_start":8961972,"byte_end":8961980,"line_start":43,"line_end":43,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3905},{"krate":0,"index":3910}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split.rs","byte_start":8962483,"byte_end":8962491,"line_start":58,"line_end":58,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3915}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split.rs","byte_start":8962591,"byte_end":8962599,"line_start":64,"line_end":64,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3917}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8964076,"byte_end":8964088,"line_start":53,"line_end":53,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3931}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8964291,"byte_end":8964303,"line_start":62,"line_end":62,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8964867,"byte_end":8964880,"line_start":77,"line_end":77,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3935},{"krate":0,"index":3936},{"krate":0,"index":3940}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8965665,"byte_end":8965678,"line_start":98,"line_end":98,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3945},{"krate":0,"index":3946},{"krate":0,"index":3951},{"krate":0,"index":3955}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8966848,"byte_end":8966861,"line_start":130,"line_end":130,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3957}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8967030,"byte_end":8967043,"line_start":138,"line_end":138,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3959}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8967144,"byte_end":8967157,"line_start":144,"line_end":144,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3961}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/incoming.rs","byte_start":8967502,"byte_end":8967510,"line_start":14,"line_end":14,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3979},{"krate":0,"index":3980}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/incoming.rs","byte_start":8968242,"byte_end":8968250,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3982},{"krate":0,"index":3983}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8970377,"byte_end":8970389,"line_start":54,"line_end":54,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4006},{"krate":0,"index":4008},{"krate":0,"index":4009},{"krate":0,"index":4010},{"krate":0,"index":4011},{"krate":0,"index":4015},{"krate":0,"index":4016},{"krate":0,"index":4017}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8975093,"byte_end":8975105,"line_start":184,"line_end":184,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4019},{"krate":0,"index":4020}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8975421,"byte_end":8975433,"line_start":196,"line_end":196,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4022},{"krate":0,"index":4023}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8975875,"byte_end":8975887,"line_start":210,"line_end":210,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4025},{"krate":0,"index":4026}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8976207,"byte_end":8976219,"line_start":222,"line_end":222,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4028}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8976344,"byte_end":8976356,"line_start":228,"line_end":228,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4030}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split.rs","byte_start":8978333,"byte_end":8978341,"line_start":53,"line_end":53,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4046},{"krate":0,"index":4047}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split.rs","byte_start":8978661,"byte_end":8978670,"line_start":67,"line_end":67,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4049},{"krate":0,"index":4050},{"krate":0,"index":4051}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split.rs","byte_start":8979154,"byte_end":8979162,"line_start":85,"line_end":85,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4053}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split.rs","byte_start":8979258,"byte_end":8979267,"line_start":91,"line_end":91,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4055}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8982372,"byte_end":8982384,"line_start":89,"line_end":89,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4078}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8982587,"byte_end":8982599,"line_start":98,"line_end":98,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8982609,"byte_end":8982622,"line_start":100,"line_end":100,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4081}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8983038,"byte_end":8983051,"line_start":111,"line_end":111,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4083},{"krate":0,"index":4084}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8983356,"byte_end":8983370,"line_start":125,"line_end":125,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4086},{"krate":0,"index":4087}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8984068,"byte_end":8984082,"line_start":144,"line_end":144,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4089}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8984242,"byte_end":8984256,"line_start":152,"line_end":152,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4091},{"krate":0,"index":4092},{"krate":0,"index":4093}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8984990,"byte_end":8985003,"line_start":177,"line_end":177,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4095}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8985101,"byte_end":8985115,"line_start":183,"line_end":183,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4097}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8986136,"byte_end":8986146,"line_start":29,"line_end":29,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4139},{"krate":0,"index":4144},{"krate":0,"index":4145},{"krate":0,"index":4146},{"krate":0,"index":4147},{"krate":0,"index":4148},{"krate":0,"index":4149},{"krate":0,"index":4150},{"krate":0,"index":4151},{"krate":0,"index":4152},{"krate":0,"index":4154}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8990493,"byte_end":8990503,"line_start":143,"line_end":143,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4156},{"krate":0,"index":4157}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8990941,"byte_end":8990951,"line_start":157,"line_end":157,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4159},{"krate":0,"index":4160}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8991264,"byte_end":8991274,"line_start":169,"line_end":169,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4162},{"krate":0,"index":4163}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8991588,"byte_end":8991598,"line_start":183,"line_end":183,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4165},{"krate":0,"index":4166},{"krate":0,"index":4167}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8992085,"byte_end":8992095,"line_start":202,"line_end":202,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4169},{"krate":0,"index":4170}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8993612,"byte_end":8993622,"line_start":247,"line_end":247,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4172}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8993747,"byte_end":8993757,"line_start":253,"line_end":253,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4174}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_ptr.rs","byte_start":84816,"byte_end":84825,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_ptr.rs","byte_start":84999,"byte_end":85008,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_ptr.rs","byte_start":85157,"byte_end":85166,"line_start":24,"line_end":24,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_u16.rs","byte_start":85510,"byte_end":85519,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_u16.rs","byte_start":85544,"byte_end":85553,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_u16.rs","byte_start":85563,"byte_end":85572,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":405},{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_u16.rs","byte_start":86058,"byte_end":86067,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":408},{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_u16.rs","byte_start":86352,"byte_end":86361,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_u32.rs","byte_start":86702,"byte_end":86711,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_u32.rs","byte_start":86736,"byte_end":86745,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_u32.rs","byte_start":86755,"byte_end":86764,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_u32.rs","byte_start":86943,"byte_end":86952,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":423},{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_u32.rs","byte_start":87237,"byte_end":87246,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_u8.rs","byte_start":89361,"byte_end":89369,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_u8.rs","byte_start":89394,"byte_end":89402,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_u8.rs","byte_start":89412,"byte_end":89420,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_u8.rs","byte_start":89595,"byte_end":89603,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":442},{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_u8.rs","byte_start":89887,"byte_end":89895,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_usize.rs","byte_start":90235,"byte_end":90246,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_usize.rs","byte_start":90271,"byte_end":90282,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_usize.rs","byte_start":90292,"byte_end":90303,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_usize.rs","byte_start":90986,"byte_end":90997,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":461},{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_usize.rs","byte_start":91287,"byte_end":91298,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_usize.rs","byte_start":91462,"byte_end":91473,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/unsafe_cell.rs","byte_start":91661,"byte_end":91671,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/park/either.rs","byte_start":8998114,"byte_end":8998120,"line_start":11,"line_end":11,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4305},{"krate":0,"index":4306},{"krate":0,"index":4307},{"krate":0,"index":4308},{"krate":0,"index":4309},{"krate":0,"index":4310}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/park/either.rs","byte_start":8999077,"byte_end":8999083,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4314}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/park/either.rs","byte_start":8999297,"byte_end":8999303,"line_start":61,"line_end":61,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4318}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/park/thread.rs","byte_start":96885,"byte_end":96895,"line_start":38,"line_end":38,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/park/thread.rs","byte_start":97160,"byte_end":97170,"line_start":50,"line_end":50,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/park/thread.rs","byte_start":97696,"byte_end":97701,"line_start":76,"line_end":76,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/park/thread.rs","byte_start":102493,"byte_end":102503,"line_start":201,"line_end":201,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/park/thread.rs","byte_start":102612,"byte_end":102624,"line_start":209,"line_end":209,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/park/thread.rs","byte_start":103011,"byte_end":103027,"line_start":228,"line_end":228,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4348},{"krate":0,"index":4349},{"krate":0,"index":4351}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/park/thread.rs","byte_start":103874,"byte_end":103890,"line_start":253,"line_end":253,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4357},{"krate":0,"index":4358},{"krate":0,"index":4359},{"krate":0,"index":4360},{"krate":0,"index":4362},{"krate":0,"index":4364}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/park/thread.rs","byte_start":104558,"byte_end":104570,"line_start":277,"line_end":277,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4367}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/park/thread.rs","byte_start":104782,"byte_end":104787,"line_start":286,"line_end":286,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4369},{"krate":0,"index":4370}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/park/mod.rs","byte_start":95987,"byte_end":95990,"line_start":111,"line_end":111,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/park/mod.rs","byte_start":96079,"byte_end":96082,"line_start":117,"line_end":117,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/unix/orphan.rs","byte_start":9041214,"byte_end":9041229,"line_start":48,"line_end":48,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4412}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/unix/orphan.rs","byte_start":9041473,"byte_end":9041488,"line_start":61,"line_end":61,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4415},{"krate":0,"index":4416}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/unix/reap.rs","byte_start":9046069,"byte_end":9046075,"line_start":31,"line_end":31,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4437}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/unix/reap.rs","byte_start":9046219,"byte_end":9046225,"line_start":37,"line_end":37,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4442},{"krate":0,"index":4443}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/unix/reap.rs","byte_start":9046392,"byte_end":9046398,"line_start":49,"line_end":49,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4448},{"krate":0,"index":4449},{"krate":0,"index":4450}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/unix/reap.rs","byte_start":9046865,"byte_end":9046871,"line_start":71,"line_end":71,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4455},{"krate":0,"index":4456}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/unix/reap.rs","byte_start":9049166,"byte_end":9049172,"line_start":121,"line_end":121,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4461}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/unix/reap.rs","byte_start":9049348,"byte_end":9049354,"line_start":131,"line_end":131,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4466}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/unix/mod.rs","byte_start":9035830,"byte_end":9035835,"line_start":47,"line_end":47,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4495},{"krate":0,"index":4496}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/unix/mod.rs","byte_start":9036013,"byte_end":9036018,"line_start":57,"line_end":57,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4498}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/unix/mod.rs","byte_start":9036263,"byte_end":9036280,"line_start":69,"line_end":69,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4502}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/unix/mod.rs","byte_start":9036429,"byte_end":9036446,"line_start":75,"line_end":75,"column_start":43,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4504},{"krate":0,"index":4505}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/unix/mod.rs","byte_start":9036793,"byte_end":9036798,"line_start":90,"line_end":90,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4509}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/unix/mod.rs","byte_start":9037467,"byte_end":9037472,"line_start":116,"line_end":116,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4512}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/unix/mod.rs","byte_start":9037559,"byte_end":9037564,"line_start":122,"line_end":122,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4514}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/unix/mod.rs","byte_start":9037661,"byte_end":9037666,"line_start":128,"line_end":128,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4516},{"krate":0,"index":4517}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/unix/mod.rs","byte_start":9037929,"byte_end":9037931,"line_start":141,"line_end":141,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4520}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/unix/mod.rs","byte_start":9038086,"byte_end":9038088,"line_start":150,"line_end":150,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4523},{"krate":0,"index":4524}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/unix/mod.rs","byte_start":9038318,"byte_end":9038320,"line_start":163,"line_end":163,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4527}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/unix/mod.rs","byte_start":9038443,"byte_end":9038445,"line_start":172,"line_end":172,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4530},{"krate":0,"index":4531},{"krate":0,"index":4532}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9004841,"byte_end":9004848,"line_start":161,"line_end":161,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4568},{"krate":0,"index":4570},{"krate":0,"index":4572},{"krate":0,"index":4575},{"krate":0,"index":4578},{"krate":0,"index":4582},{"krate":0,"index":4584},{"krate":0,"index":4585},{"krate":0,"index":4587},{"krate":0,"index":4589},{"krate":0,"index":4591},{"krate":0,"index":4593},{"krate":0,"index":4594},{"krate":0,"index":4595},{"krate":0,"index":4596},{"krate":0,"index":4598},{"krate":0,"index":4603},{"krate":0,"index":4606}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9021098,"byte_end":9021105,"line_start":667,"line_end":667,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4610}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9021435,"byte_end":9021449,"line_start":683,"line_end":683,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4613}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9021655,"byte_end":9021669,"line_start":695,"line_end":695,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4616}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9021806,"byte_end":9021820,"line_start":703,"line_end":703,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4621},{"krate":0,"index":4622}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9023669,"byte_end":9023674,"line_start":760,"line_end":760,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4624},{"krate":0,"index":4625},{"krate":0,"index":4626},{"krate":0,"index":4627},{"krate":0,"index":4628},{"krate":0,"index":4629}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9027207,"byte_end":9027212,"line_start":858,"line_end":858,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4638},{"krate":0,"index":4639}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9028177,"byte_end":9028187,"line_start":893,"line_end":893,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4641},{"krate":0,"index":4642},{"krate":0,"index":4643}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9028712,"byte_end":9028723,"line_start":911,"line_end":911,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4645},{"krate":0,"index":4646}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9029187,"byte_end":9029198,"line_start":926,"line_end":926,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4648},{"krate":0,"index":4649}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9029789,"byte_end":9029799,"line_start":947,"line_end":947,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4659}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9029924,"byte_end":9029935,"line_start":953,"line_end":953,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4661}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9030060,"byte_end":9030071,"line_start":959,"line_end":959,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4663}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/context.rs","byte_start":127466,"byte_end":127475,"line_start":59,"line_end":59,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/basic_scheduler.rs","byte_start":9065283,"byte_end":9065297,"line_start":83,"line_end":83,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4783},{"krate":0,"index":4784},{"krate":0,"index":4785},{"krate":0,"index":4787}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/basic_scheduler.rs","byte_start":9068836,"byte_end":9068841,"line_start":192,"line_end":192,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4805}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/basic_scheduler.rs","byte_start":9069528,"byte_end":9069542,"line_start":216,"line_end":216,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4809}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/basic_scheduler.rs","byte_start":9070429,"byte_end":9070443,"line_start":248,"line_end":248,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4813}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/basic_scheduler.rs","byte_start":9070609,"byte_end":9070616,"line_start":256,"line_end":256,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4815},{"krate":0,"index":4817}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/basic_scheduler.rs","byte_start":9071074,"byte_end":9071081,"line_start":273,"line_end":273,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4819}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/basic_scheduler.rs","byte_start":9071249,"byte_end":9071252,"line_start":281,"line_end":281,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4821},{"krate":0,"index":4823},{"krate":0,"index":4826}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/basic_scheduler.rs","byte_start":9072350,"byte_end":9072356,"line_start":317,"line_end":317,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4829},{"krate":0,"index":4830}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/core.rs","byte_start":9080039,"byte_end":9080045,"line_start":69,"line_end":69,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/core.rs","byte_start":9080070,"byte_end":9080076,"line_start":70,"line_end":70,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/core.rs","byte_start":9080435,"byte_end":9080439,"line_start":85,"line_end":85,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4886}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/core.rs","byte_start":9081217,"byte_end":9081221,"line_start":108,"line_end":108,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4890},{"krate":0,"index":4892},{"krate":0,"index":4894},{"krate":0,"index":4896},{"krate":0,"index":4898},{"krate":0,"index":4900},{"krate":0,"index":4903},{"krate":0,"index":4905},{"krate":0,"index":4907}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/core.rs","byte_start":9086972,"byte_end":9086978,"line_start":273,"line_end":273,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5279}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9087603,"byte_end":9087612,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4924},{"krate":0,"index":4925},{"krate":0,"index":4926},{"krate":0,"index":4927},{"krate":0,"index":4928},{"krate":0,"index":4929},{"krate":0,"index":4930},{"krate":0,"index":4931}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9090691,"byte_end":9090700,"line_start":133,"line_end":133,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4933}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9090943,"byte_end":9090952,"line_start":142,"line_end":142,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4935}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9091229,"byte_end":9091238,"line_start":151,"line_end":151,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9091272,"byte_end":9091277,"line_start":153,"line_end":153,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4938}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/harness.rs","byte_start":9091955,"byte_end":9091962,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4966},{"krate":0,"index":4967},{"krate":0,"index":4968},{"krate":0,"index":4969}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/harness.rs","byte_start":9092439,"byte_end":9092446,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4973},{"krate":0,"index":4984},{"krate":0,"index":4988},{"krate":0,"index":4991},{"krate":0,"index":4994},{"krate":0,"index":4995},{"krate":0,"index":4996},{"krate":0,"index":4997},{"krate":0,"index":4998},{"krate":0,"index":4999},{"krate":0,"index":5001},{"krate":0,"index":5002},{"krate":0,"index":5003},{"krate":0,"index":5005}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/harness.rs","byte_start":9094617,"byte_end":9094622,"line_start":94,"line_end":94,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4983}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/join.rs","byte_start":9106926,"byte_end":9106936,"line_start":84,"line_end":84,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/join.rs","byte_start":9106973,"byte_end":9106983,"line_start":85,"line_end":85,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/join.rs","byte_start":9106999,"byte_end":9107009,"line_start":87,"line_end":87,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5022}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/join.rs","byte_start":9107185,"byte_end":9107195,"line_start":96,"line_end":96,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/join.rs","byte_start":9107222,"byte_end":9107232,"line_start":98,"line_end":98,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5027},{"krate":0,"index":5028}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/join.rs","byte_start":9108458,"byte_end":9108468,"line_start":137,"line_end":137,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5031}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/join.rs","byte_start":9108734,"byte_end":9108744,"line_start":149,"line_end":149,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5034}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/raw.rs","byte_start":9109991,"byte_end":9109998,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5060},{"krate":0,"index":5063},{"krate":0,"index":5064},{"krate":0,"index":5065},{"krate":0,"index":5066},{"krate":0,"index":5067},{"krate":0,"index":5068},{"krate":0,"index":5069}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/raw.rs","byte_start":9111529,"byte_end":9111536,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5071}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/raw.rs","byte_start":9111626,"byte_end":9111633,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/state.rs","byte_start":9114315,"byte_end":9114320,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5113},{"krate":0,"index":5114},{"krate":0,"index":5115},{"krate":0,"index":5117},{"krate":0,"index":5119},{"krate":0,"index":5121},{"krate":0,"index":5123},{"krate":0,"index":5124},{"krate":0,"index":5126},{"krate":0,"index":5130},{"krate":0,"index":5132},{"krate":0,"index":5134},{"krate":0,"index":5136},{"krate":0,"index":5139},{"krate":0,"index":5140}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/state.rs","byte_start":9123176,"byte_end":9123184,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5143},{"krate":0,"index":5144},{"krate":0,"index":5145},{"krate":0,"index":5146},{"krate":0,"index":5147},{"krate":0,"index":5148},{"krate":0,"index":5149},{"krate":0,"index":5150},{"krate":0,"index":5151},{"krate":0,"index":5152},{"krate":0,"index":5153},{"krate":0,"index":5154},{"krate":0,"index":5155},{"krate":0,"index":5156},{"krate":0,"index":5157},{"krate":0,"index":5158},{"krate":0,"index":5159},{"krate":0,"index":5160},{"krate":0,"index":5161}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/state.rs","byte_start":9125061,"byte_end":9125066,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5163}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/state.rs","byte_start":9125225,"byte_end":9125233,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5165}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/waker.rs","byte_start":9127051,"byte_end":9127059,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5191},{"krate":0,"index":5192}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/stack.rs","byte_start":9128807,"byte_end":9128820,"line_start":15,"line_end":15,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5312},{"krate":0,"index":5313},{"krate":0,"index":5315}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/stack.rs","byte_start":9129978,"byte_end":9129982,"line_start":55,"line_end":55,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5324},{"krate":0,"index":5325}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/stack.rs","byte_start":9130382,"byte_end":9130386,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5329}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/mod.rs","byte_start":9073369,"byte_end":9073373,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/mod.rs","byte_start":9073404,"byte_end":9073408,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/mod.rs","byte_start":9073545,"byte_end":9073553,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/mod.rs","byte_start":9073594,"byte_end":9073602,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/mod.rs","byte_start":9075526,"byte_end":9075530,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5243},{"krate":0,"index":5244}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/mod.rs","byte_start":9075827,"byte_end":9075835,"line_start":134,"line_end":134,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5337},{"krate":0,"index":5338}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/mod.rs","byte_start":9076086,"byte_end":9076090,"line_start":144,"line_end":144,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5341}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/mod.rs","byte_start":9076283,"byte_end":9076291,"line_start":152,"line_end":152,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5344}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/mod.rs","byte_start":9076422,"byte_end":9076426,"line_start":159,"line_end":159,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5247}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/mod.rs","byte_start":9076595,"byte_end":9076603,"line_start":166,"line_end":166,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5250},{"krate":0,"index":5251}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/mod.rs","byte_start":9076889,"byte_end":9076893,"line_start":179,"line_end":179,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5254}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/mod.rs","byte_start":9077133,"byte_end":9077137,"line_start":189,"line_end":189,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5257}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/mod.rs","byte_start":9077289,"byte_end":9077297,"line_start":195,"line_end":195,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5260}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/mod.rs","byte_start":9077513,"byte_end":9077517,"line_start":204,"line_end":204,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5263},{"krate":0,"index":5264},{"krate":0,"index":5265},{"krate":0,"index":5266},{"krate":0,"index":5267}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/blocking/pool.rs","byte_start":9132794,"byte_end":9132806,"line_start":89,"line_end":89,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5393},{"krate":0,"index":5394},{"krate":0,"index":5395}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/blocking/pool.rs","byte_start":9134692,"byte_end":9134704,"line_start":146,"line_end":146,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5397}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/blocking/pool.rs","byte_start":9134790,"byte_end":9134802,"line_start":152,"line_end":152,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5399}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/blocking/pool.rs","byte_start":9134963,"byte_end":9134970,"line_start":160,"line_end":160,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5401},{"krate":0,"index":5402}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/blocking/pool.rs","byte_start":9137413,"byte_end":9137418,"line_start":238,"line_end":238,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5406}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/blocking/pool.rs","byte_start":9140167,"byte_end":9140174,"line_start":325,"line_end":325,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5408}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/blocking/schedule.rs","byte_start":9140677,"byte_end":9140689,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5421},{"krate":0,"index":5422},{"krate":0,"index":5423}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/blocking/shutdown.rs","byte_start":9141562,"byte_end":9141570,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5430}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/blocking/task.rs","byte_start":9143318,"byte_end":9143330,"line_start":10,"line_end":10,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5443}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/blocking/task.rs","byte_start":9143556,"byte_end":9143568,"line_start":18,"line_end":18,"column_start":19,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/blocking/task.rs","byte_start":9143598,"byte_end":9143610,"line_start":20,"line_end":20,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5449},{"krate":0,"index":5450}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":130892,"byte_end":130899,"line_start":80,"line_end":80,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":621},{"krate":0,"index":623},{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":138819,"byte_end":138826,"line_start":351,"line_end":351,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5483}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":139375,"byte_end":139382,"line_start":375,"line_end":375,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5485}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":139902,"byte_end":139909,"line_start":398,"line_end":398,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5487},{"krate":0,"index":5488}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":141852,"byte_end":141859,"line_start":451,"line_end":451,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5493},{"krate":0,"index":5494}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":143805,"byte_end":143812,"line_start":504,"line_end":504,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":627}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":143891,"byte_end":143898,"line_start":510,"line_end":510,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/enter.rs","byte_start":144693,"byte_end":144705,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/enter.rs","byte_start":146358,"byte_end":146363,"line_start":70,"line_end":70,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/enter.rs","byte_start":147583,"byte_end":147604,"line_start":112,"line_end":112,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5523}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/enter.rs","byte_start":148434,"byte_end":148439,"line_start":142,"line_end":142,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5528}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/enter.rs","byte_start":149349,"byte_end":149354,"line_start":174,"line_end":174,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5539}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/enter.rs","byte_start":150547,"byte_end":150552,"line_start":212,"line_end":212,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/enter.rs","byte_start":150682,"byte_end":150687,"line_start":218,"line_end":218,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":151745,"byte_end":151751,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":673},{"krate":0,"index":676},{"krate":0,"index":677}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":154847,"byte_end":154853,"line_start":132,"line_end":132,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5563},{"krate":0,"index":5565}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":160643,"byte_end":160649,"line_start":284,"line_end":284,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5569}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":164213,"byte_end":164228,"line_start":359,"line_end":359,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":164376,"byte_end":164391,"line_start":365,"line_end":365,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":164549,"byte_end":164564,"line_start":371,"line_end":371,"column_start":23,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/park.rs","byte_start":9145581,"byte_end":9145587,"line_start":51,"line_end":51,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5603}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/park.rs","byte_start":9146056,"byte_end":9146062,"line_start":69,"line_end":69,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5605}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/park.rs","byte_start":9146378,"byte_end":9146384,"line_start":82,"line_end":82,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5607},{"krate":0,"index":5608},{"krate":0,"index":5609},{"krate":0,"index":5610},{"krate":0,"index":5611},{"krate":0,"index":5613}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/park.rs","byte_start":9147103,"byte_end":9147111,"line_start":113,"line_end":113,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5615}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/park.rs","byte_start":9147180,"byte_end":9147185,"line_start":119,"line_end":119,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5617},{"krate":0,"index":5618},{"krate":0,"index":5619},{"krate":0,"index":5620},{"krate":0,"index":5621},{"krate":0,"index":5622},{"krate":0,"index":5623}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/shell.rs","byte_start":166853,"byte_end":166858,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":715},{"krate":0,"index":716}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/shell.rs","byte_start":167464,"byte_end":167470,"line_start":52,"line_end":52,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":720},{"krate":0,"index":721}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/spawner.rs","byte_start":168067,"byte_end":168074,"line_start":21,"line_end":21,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/spawner.rs","byte_start":168317,"byte_end":168324,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5653}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/queue.rs","byte_start":9154408,"byte_end":9154413,"line_start":66,"line_end":66,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/queue.rs","byte_start":9154444,"byte_end":9154449,"line_start":67,"line_end":67,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/queue.rs","byte_start":9154480,"byte_end":9154486,"line_start":68,"line_end":68,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/queue.rs","byte_start":9154517,"byte_end":9154523,"line_start":69,"line_end":69,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/queue.rs","byte_start":9155382,"byte_end":9155387,"line_start":105,"line_end":105,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5709},{"krate":0,"index":5710},{"krate":0,"index":5712},{"krate":0,"index":5718}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/queue.rs","byte_start":9161921,"byte_end":9161926,"line_start":291,"line_end":291,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5722},{"krate":0,"index":5723},{"krate":0,"index":5725}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/queue.rs","byte_start":9167094,"byte_end":9167099,"line_start":441,"line_end":441,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5730}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/queue.rs","byte_start":9167195,"byte_end":9167200,"line_start":447,"line_end":447,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5733}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/queue.rs","byte_start":9167359,"byte_end":9167364,"line_start":455,"line_end":455,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5736}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/queue.rs","byte_start":9167552,"byte_end":9167558,"line_start":464,"line_end":464,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5739},{"krate":0,"index":5740},{"krate":0,"index":5741},{"krate":0,"index":5742},{"krate":0,"index":5743},{"krate":0,"index":5744},{"krate":0,"index":5745},{"krate":0,"index":5746}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/queue.rs","byte_start":9171063,"byte_end":9171069,"line_start":595,"line_end":595,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5749}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/thread_pool/atomic_cell.rs","byte_start":9175295,"byte_end":9175305,"line_start":10,"line_end":10,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/thread_pool/atomic_cell.rs","byte_start":9175342,"byte_end":9175352,"line_start":11,"line_end":11,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/thread_pool/atomic_cell.rs","byte_start":9175368,"byte_end":9175378,"line_start":13,"line_end":13,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5770},{"krate":0,"index":5771},{"krate":0,"index":5772},{"krate":0,"index":5773}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/thread_pool/atomic_cell.rs","byte_start":9176165,"byte_end":9176175,"line_start":47,"line_end":47,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5780}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/thread_pool/idle.rs","byte_start":9176981,"byte_end":9176985,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":5797},{"krate":0,"index":5798},{"krate":0,"index":5799},{"krate":0,"index":5800},{"krate":0,"index":5801},{"krate":0,"index":5802},{"krate":0,"index":5803},{"krate":0,"index":5804}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/thread_pool/idle.rs","byte_start":9180858,"byte_end":9180863,"line_start":141,"line_end":141,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5806},{"krate":0,"index":5807},{"krate":0,"index":5808},{"krate":0,"index":5809},{"krate":0,"index":5810},{"krate":0,"index":5811},{"krate":0,"index":5812},{"krate":0,"index":5813}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/thread_pool/idle.rs","byte_start":9182341,"byte_end":9182346,"line_start":193,"line_end":193,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5815}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/thread_pool/idle.rs","byte_start":9182519,"byte_end":9182524,"line_start":205,"line_end":205,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5819}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/thread_pool/worker.rs","byte_start":9188288,"byte_end":9188293,"line_start":185,"line_end":185,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5975}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/thread_pool/worker.rs","byte_start":9191923,"byte_end":9191929,"line_start":278,"line_end":278,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5878}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/thread_pool/worker.rs","byte_start":9192704,"byte_end":9192711,"line_start":309,"line_end":309,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5883},{"krate":0,"index":5884},{"krate":0,"index":5886},{"krate":0,"index":5887},{"krate":0,"index":5888}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/thread_pool/worker.rs","byte_start":9196977,"byte_end":9196981,"line_start":440,"line_end":440,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":5890},{"krate":0,"index":5891},{"krate":0,"index":5894},{"krate":0,"index":5896},{"krate":0,"index":5897},{"krate":0,"index":5898},{"krate":0,"index":5899},{"krate":0,"index":5900},{"krate":0,"index":5901},{"krate":0,"index":5902},{"krate":0,"index":5903}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/thread_pool/worker.rs","byte_start":9201793,"byte_end":9201799,"line_start":598,"line_end":598,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5906},{"krate":0,"index":5907},{"krate":0,"index":5908}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/thread_pool/worker.rs","byte_start":9202239,"byte_end":9202242,"line_start":614,"line_end":614,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5910},{"krate":0,"index":5912},{"krate":0,"index":5915},{"krate":0,"index":5916}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/thread_pool/worker.rs","byte_start":9204813,"byte_end":9204819,"line_start":692,"line_end":692,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5918},{"krate":0,"index":5920},{"krate":0,"index":5921},{"krate":0,"index":5922},{"krate":0,"index":5923},{"krate":0,"index":5924},{"krate":0,"index":5925},{"krate":0,"index":5926},{"krate":0,"index":5927}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/thread_pool/mod.rs","byte_start":9173121,"byte_end":9173131,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5939},{"krate":0,"index":5940},{"krate":0,"index":5941},{"krate":0,"index":5943}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/thread_pool/mod.rs","byte_start":9174286,"byte_end":9174296,"line_start":86,"line_end":86,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5946}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/thread_pool/mod.rs","byte_start":9174435,"byte_end":9174445,"line_start":92,"line_end":92,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5948}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/thread_pool/mod.rs","byte_start":9174548,"byte_end":9174555,"line_start":100,"line_end":100,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5950},{"krate":0,"index":5952}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/thread_pool/mod.rs","byte_start":9174976,"byte_end":9174983,"line_start":117,"line_end":117,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5954}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":116406,"byte_end":116413,"line_start":305,"line_end":305,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":747},{"krate":0,"index":750},{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/coop.rs","byte_start":172927,"byte_end":172933,"line_start":63,"line_end":63,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":759},{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/coop.rs","byte_start":173701,"byte_end":173707,"line_start":85,"line_end":85,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6016}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/coop.rs","byte_start":174474,"byte_end":174484,"line_start":114,"line_end":114,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/coop.rs","byte_start":175331,"byte_end":175347,"line_start":157,"line_end":157,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6031}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/coop.rs","byte_start":175479,"byte_end":175495,"line_start":163,"line_end":163,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6033}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/coop.rs","byte_start":177235,"byte_end":177241,"line_start":204,"line_end":204,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6038},{"krate":0,"index":6039}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/registry.rs","byte_start":9212666,"byte_end":9212669,"line_start":34,"line_end":34,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6068},{"krate":0,"index":6069}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/registry.rs","byte_start":9213391,"byte_end":9213399,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6076}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/registry.rs","byte_start":9213489,"byte_end":9213497,"line_start":68,"line_end":68,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6079},{"krate":0,"index":6081},{"krate":0,"index":6082}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/registry.rs","byte_start":9215650,"byte_end":9215657,"line_start":130,"line_end":130,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6089},{"krate":0,"index":6090}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/registry.rs","byte_start":9215765,"byte_end":9215772,"line_start":138,"line_end":138,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6092},{"krate":0,"index":6093},{"krate":0,"index":6094},{"krate":0,"index":6095}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9221844,"byte_end":9221853,"line_start":26,"line_end":26,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6133}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9221967,"byte_end":9221976,"line_start":32,"line_end":32,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6136},{"krate":0,"index":6138}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9222364,"byte_end":9222375,"line_start":51,"line_end":51,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6143}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9222661,"byte_end":9222671,"line_start":63,"line_end":63,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6145},{"krate":0,"index":6146},{"krate":0,"index":6147},{"krate":0,"index":6148},{"krate":0,"index":6149},{"krate":0,"index":6150},{"krate":0,"index":6151},{"krate":0,"index":6152},{"krate":0,"index":6153},{"krate":0,"index":6154},{"krate":0,"index":6155},{"krate":0,"index":6156},{"krate":0,"index":6157}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9226467,"byte_end":9226477,"line_start":190,"line_end":190,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6163}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9228826,"byte_end":9228832,"line_start":262,"line_end":262,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6170}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9229117,"byte_end":9229123,"line_start":273,"line_end":273,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6172},{"krate":0,"index":6173}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9235312,"byte_end":9235318,"line_start":423,"line_end":423,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6177},{"krate":0,"index":6182}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9237176,"byte_end":9237182,"line_start":487,"line_end":487,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6220},{"krate":0,"index":6221}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/all.rs","byte_start":9272174,"byte_end":9272183,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6234}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/all.rs","byte_start":9272329,"byte_end":9272338,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/all.rs","byte_start":9272377,"byte_end":9272386,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6241},{"krate":0,"index":6242}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/any.rs","byte_start":9273337,"byte_end":9273346,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6255}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/any.rs","byte_start":9273492,"byte_end":9273501,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/any.rs","byte_start":9273540,"byte_end":9273549,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6262},{"krate":0,"index":6263}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/chain.rs","byte_start":9274472,"byte_end":9274477,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6277}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/chain.rs","byte_start":9274657,"byte_end":9274662,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6281},{"krate":0,"index":6282},{"krate":0,"index":6284}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9276240,"byte_end":9276247,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6305}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9276531,"byte_end":9276538,"line_start":51,"line_end":51,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6309},{"krate":0,"index":6310}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9277514,"byte_end":9277520,"line_start":94,"line_end":94,"column_start":39,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9277575,"byte_end":9277581,"line_start":96,"line_end":96,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":6322},{"krate":0,"index":6323},{"krate":0,"index":6324},{"krate":0,"index":6325}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9277970,"byte_end":9277973,"line_start":113,"line_end":113,"column_start":27,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9278019,"byte_end":9278022,"line_start":115,"line_end":115,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6330},{"krate":0,"index":6331},{"krate":0,"index":6332},{"krate":0,"index":6333}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9278405,"byte_end":9278408,"line_start":132,"line_end":132,"column_start":27,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9278456,"byte_end":9278459,"line_start":134,"line_end":134,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6338},{"krate":0,"index":6339},{"krate":0,"index":6340},{"krate":0,"index":6341}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9278974,"byte_end":9278980,"line_start":150,"line_end":150,"column_start":44,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9279069,"byte_end":9279075,"line_start":152,"line_end":152,"column_start":56,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":6350},{"krate":0,"index":6351},{"krate":0,"index":6352},{"krate":0,"index":6353}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9280153,"byte_end":9280158,"line_start":191,"line_end":191,"column_start":32,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9280206,"byte_end":9280211,"line_start":193,"line_end":193,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6358},{"krate":0,"index":6359},{"krate":0,"index":6360},{"krate":0,"index":6361}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9280611,"byte_end":9280619,"line_start":210,"line_end":210,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9280667,"byte_end":9280675,"line_start":212,"line_end":212,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":6366},{"krate":0,"index":6367},{"krate":0,"index":6368},{"krate":0,"index":6369}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/empty.rs","byte_start":9281946,"byte_end":9281951,"line_start":12,"line_end":12,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/empty.rs","byte_start":9281982,"byte_end":9281987,"line_start":13,"line_end":13,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/empty.rs","byte_start":9282018,"byte_end":9282023,"line_start":14,"line_end":14,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/empty.rs","byte_start":9282566,"byte_end":9282571,"line_start":40,"line_end":40,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6396},{"krate":0,"index":6397},{"krate":0,"index":6398}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/filter.rs","byte_start":9283185,"byte_end":9283191,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6413}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/filter.rs","byte_start":9283409,"byte_end":9283415,"line_start":29,"line_end":29,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6417}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/filter.rs","byte_start":9283534,"byte_end":9283540,"line_start":35,"line_end":35,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6421},{"krate":0,"index":6422},{"krate":0,"index":6423}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/filter_map.rs","byte_start":9284626,"byte_end":9284635,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6436}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/filter_map.rs","byte_start":9284856,"byte_end":9284865,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6440}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/filter_map.rs","byte_start":9284987,"byte_end":9284996,"line_start":35,"line_end":35,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6445},{"krate":0,"index":6446},{"krate":0,"index":6447}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/fold.rs","byte_start":9286068,"byte_end":9286078,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6461}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/fold.rs","byte_start":9286274,"byte_end":9286284,"line_start":29,"line_end":29,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6466},{"krate":0,"index":6467}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/fuse.rs","byte_start":9287183,"byte_end":9287187,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6478}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/fuse.rs","byte_start":9287347,"byte_end":9287351,"line_start":27,"line_end":27,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6481},{"krate":0,"index":6482},{"krate":0,"index":6483}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/iter.rs","byte_start":9288294,"byte_end":9288298,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/iter.rs","byte_start":9288960,"byte_end":9288964,"line_start":41,"line_end":41,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6497},{"krate":0,"index":6498},{"krate":0,"index":6499}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/map.rs","byte_start":9289710,"byte_end":9289713,"line_start":18,"line_end":18,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6514}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/map.rs","byte_start":9289902,"byte_end":9289905,"line_start":27,"line_end":27,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6518}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/map.rs","byte_start":9290026,"byte_end":9290029,"line_start":33,"line_end":33,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6523},{"krate":0,"index":6524},{"krate":0,"index":6527}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/merge.rs","byte_start":9290874,"byte_end":9290879,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6541}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/merge.rs","byte_start":9291133,"byte_end":9291138,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6545},{"krate":0,"index":6546},{"krate":0,"index":6547}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/next.rs","byte_start":9292650,"byte_end":9292654,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/next.rs","byte_start":9292688,"byte_end":9292692,"line_start":16,"line_end":16,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6565}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/next.rs","byte_start":9292833,"byte_end":9292837,"line_start":22,"line_end":22,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":6568},{"krate":0,"index":6569}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/once.rs","byte_start":9293333,"byte_end":9293337,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/once.rs","byte_start":9293964,"byte_end":9293968,"line_start":42,"line_end":42,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6587},{"krate":0,"index":6588},{"krate":0,"index":6589}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/pending.rs","byte_start":9294515,"byte_end":9294522,"line_start":12,"line_end":12,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/pending.rs","byte_start":9294553,"byte_end":9294560,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/pending.rs","byte_start":9294591,"byte_end":9294598,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/pending.rs","byte_start":9295291,"byte_end":9295298,"line_start":44,"line_end":44,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6610},{"krate":0,"index":6611},{"krate":0,"index":6612}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9300963,"byte_end":9300972,"line_start":165,"line_end":165,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6627},{"krate":0,"index":6628},{"krate":0,"index":6629},{"krate":0,"index":6632},{"krate":0,"index":6635},{"krate":0,"index":6638},{"krate":0,"index":6639},{"krate":0,"index":6640},{"krate":0,"index":6641},{"krate":0,"index":6642},{"krate":0,"index":6643},{"krate":0,"index":6645}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9307973,"byte_end":9307982,"line_start":424,"line_end":424,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6650}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9309521,"byte_end":9309530,"line_start":470,"line_end":470,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6655},{"krate":0,"index":6656},{"krate":0,"index":6657}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/skip.rs","byte_start":9310746,"byte_end":9310750,"line_start":18,"line_end":18,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6669}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/skip.rs","byte_start":9310960,"byte_end":9310964,"line_start":29,"line_end":29,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6672}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/skip.rs","byte_start":9311097,"byte_end":9311101,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6675},{"krate":0,"index":6676},{"krate":0,"index":6677}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/skip_while.rs","byte_start":9312327,"byte_end":9312336,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6691}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/skip_while.rs","byte_start":9312557,"byte_end":9312566,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6695}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/skip_while.rs","byte_start":9312751,"byte_end":9312760,"line_start":38,"line_end":38,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6699},{"krate":0,"index":6700},{"krate":0,"index":6701}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/try_next.rs","byte_start":9314109,"byte_end":9314116,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/try_next.rs","byte_start":9314150,"byte_end":9314157,"line_start":16,"line_end":16,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6717}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/try_next.rs","byte_start":9314364,"byte_end":9314371,"line_start":24,"line_end":24,"column_start":73,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":6722},{"krate":0,"index":6723}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/take.rs","byte_start":9314981,"byte_end":9314985,"line_start":19,"line_end":19,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6736}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/take.rs","byte_start":9315195,"byte_end":9315199,"line_start":30,"line_end":30,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6739}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/take.rs","byte_start":9315332,"byte_end":9315336,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6742},{"krate":0,"index":6743},{"krate":0,"index":6745}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/take_while.rs","byte_start":9316855,"byte_end":9316864,"line_start":19,"line_end":19,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6758}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/take_while.rs","byte_start":9317124,"byte_end":9317133,"line_start":31,"line_end":31,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6762}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/take_while.rs","byte_start":9317326,"byte_end":9317335,"line_start":41,"line_end":41,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6766},{"krate":0,"index":6767},{"krate":0,"index":6770}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/timeout.rs","byte_start":9349001,"byte_end":9349008,"line_start":23,"line_end":23,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6903}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/timeout.rs","byte_start":9349363,"byte_end":9349370,"line_start":37,"line_end":37,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6906},{"krate":0,"index":6907},{"krate":0,"index":6908}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9271404,"byte_end":9271406,"line_start":824,"line_end":824,"column_start":32,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9367846,"byte_end":9367853,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6916},{"krate":0,"index":6917}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9371133,"byte_end":9371150,"line_start":128,"line_end":128,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6921}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9381717,"byte_end":9381723,"line_start":340,"line_end":340,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6993}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9381850,"byte_end":9381856,"line_start":346,"line_end":346,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6997}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9382017,"byte_end":9382021,"line_start":352,"line_end":352,"column_start":61,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9382091,"byte_end":9382095,"line_start":353,"line_end":353,"column_start":61,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9384869,"byte_end":9384875,"line_start":444,"line_end":444,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9384912,"byte_end":9384918,"line_start":445,"line_end":445,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9384956,"byte_end":9384964,"line_start":447,"line_end":447,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9385001,"byte_end":9385009,"line_start":448,"line_end":448,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9385025,"byte_end":9385031,"line_start":450,"line_end":450,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7017},{"krate":0,"index":7019},{"krate":0,"index":7020},{"krate":0,"index":7021}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9390667,"byte_end":9390671,"line_start":637,"line_end":637,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":7025}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9391063,"byte_end":9391069,"line_start":652,"line_end":652,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7028}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9391249,"byte_end":9391255,"line_start":661,"line_end":661,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7031}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9391409,"byte_end":9391417,"line_start":669,"line_end":669,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7034}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9396282,"byte_end":9396290,"line_start":787,"line_end":787,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7038},{"krate":0,"index":7039},{"krate":0,"index":7053}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9399108,"byte_end":9399113,"line_start":857,"line_end":857,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7051}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9402527,"byte_end":9402535,"line_start":961,"line_end":961,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":7058},{"krate":0,"index":7059}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9402985,"byte_end":9402993,"line_start":980,"line_end":980,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7063}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9404177,"byte_end":9404181,"line_start":1020,"line_end":1020,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":7069},{"krate":0,"index":7070}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9405023,"byte_end":9405027,"line_start":1050,"line_end":1050,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7074},{"krate":0,"index":7075}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9405757,"byte_end":9405765,"line_start":1074,"line_end":1074,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8355}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9407077,"byte_end":9407081,"line_start":1116,"line_end":1116,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":8360},{"krate":0,"index":8361}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9407805,"byte_end":9407809,"line_start":1138,"line_end":1138,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7079}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9408607,"byte_end":9408613,"line_start":1167,"line_end":1167,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7083},{"krate":0,"index":7084},{"krate":0,"index":7085},{"krate":0,"index":7086},{"krate":0,"index":7087}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9409028,"byte_end":9409034,"line_start":1184,"line_end":1184,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7090}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9409178,"byte_end":9409186,"line_start":1190,"line_end":1190,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7093}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9409321,"byte_end":9409330,"line_start":1196,"line_end":1196,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7097}],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9409503,"byte_end":9409512,"line_start":1205,"line_end":1205,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7102}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9409803,"byte_end":9409812,"line_start":1215,"line_end":1215,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7105}],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9410085,"byte_end":9410094,"line_start":1224,"line_end":1224,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9410121,"byte_end":9410133,"line_start":1226,"line_end":1226,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7108}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9410475,"byte_end":9410487,"line_start":1236,"line_end":1236,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/block.rs","byte_start":9416796,"byte_end":9416801,"line_start":77,"line_end":77,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7159},{"krate":0,"index":7160},{"krate":0,"index":7161},{"krate":0,"index":7162},{"krate":0,"index":7164},{"krate":0,"index":7166},{"krate":0,"index":7167},{"krate":0,"index":7168},{"krate":0,"index":7170},{"krate":0,"index":7171},{"krate":0,"index":7172},{"krate":0,"index":7174},{"krate":0,"index":7175},{"krate":0,"index":7176}],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/block.rs","byte_start":9426783,"byte_end":9426789,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7181}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/block.rs","byte_start":9427271,"byte_end":9427277,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7184},{"krate":0,"index":7185}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9427915,"byte_end":9427921,"line_start":20,"line_end":20,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7203}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9428053,"byte_end":9428059,"line_start":28,"line_end":28,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7206}],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9428466,"byte_end":9428474,"line_start":44,"line_end":44,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7212}],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9430246,"byte_end":9430254,"line_start":103,"line_end":103,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7218},{"krate":0,"index":7219},{"krate":0,"index":7224},{"krate":0,"index":7225},{"krate":0,"index":7226}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9432682,"byte_end":9432690,"line_start":182,"line_end":182,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9432750,"byte_end":9432758,"line_start":185,"line_end":185,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8368},{"krate":0,"index":8369}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9432946,"byte_end":9432952,"line_start":194,"line_end":194,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7231},{"krate":0,"index":7232},{"krate":0,"index":7237},{"krate":0,"index":7238},{"krate":0,"index":7243},{"krate":0,"index":7245}],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/chan.rs","byte_start":9444342,"byte_end":9444344,"line_start":20,"line_end":20,"column_start":38,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":7280}],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/chan.rs","byte_start":9444745,"byte_end":9444747,"line_start":38,"line_end":38,"column_start":38,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":7288}],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/chan.rs","byte_start":9445054,"byte_end":9445063,"line_start":53,"line_end":53,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":7291}],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/chan.rs","byte_start":9445325,"byte_end":9445337,"line_start":62,"line_end":62,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":7294}],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/chan.rs","byte_start":9447122,"byte_end":9447126,"line_start":124,"line_end":124,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7316}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/chan.rs","byte_start":9447759,"byte_end":9447767,"line_start":148,"line_end":148,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7323}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/chan.rs","byte_start":9448033,"byte_end":9448037,"line_start":157,"line_end":157,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/chan.rs","byte_start":9448086,"byte_end":9448090,"line_start":158,"line_end":158,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/chan.rs","byte_start":9448569,"byte_end":9448571,"line_start":182,"line_end":182,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7336},{"krate":0,"index":7337},{"krate":0,"index":7338},{"krate":0,"index":7339}],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/chan.rs","byte_start":9449270,"byte_end":9449272,"line_start":208,"line_end":208,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7342}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/chan.rs","byte_start":9449420,"byte_end":9449422,"line_start":214,"line_end":214,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7345}],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/chan.rs","byte_start":9449600,"byte_end":9449602,"line_start":220,"line_end":220,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7349}],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/chan.rs","byte_start":9450002,"byte_end":9450004,"line_start":236,"line_end":236,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7353}],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/chan.rs","byte_start":9450531,"byte_end":9450533,"line_start":261,"line_end":261,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7357},{"krate":0,"index":7358},{"krate":0,"index":7360},{"krate":0,"index":7364}],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/chan.rs","byte_start":9453653,"byte_end":9453655,"line_start":352,"line_end":352,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7370}],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/chan.rs","byte_start":9454091,"byte_end":9454095,"line_start":373,"line_end":373,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":7376}],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/chan.rs","byte_start":9454559,"byte_end":9454563,"line_start":395,"line_end":395,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7380}],"docs":"","sig":null,"attributes":[]},{"id":602,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/chan.rs","byte_start":9455112,"byte_end":9455124,"line_start":412,"line_end":412,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":7385}],"docs":"","sig":null,"attributes":[]},{"id":603,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/chan.rs","byte_start":9456784,"byte_end":9456795,"line_start":485,"line_end":485,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7404},{"krate":0,"index":7405},{"krate":0,"index":7406},{"krate":0,"index":7407},{"krate":0,"index":7408},{"krate":0,"index":7409},{"krate":0,"index":7411},{"krate":0,"index":7412},{"krate":0,"index":7413}],"docs":"","sig":null,"attributes":[]},{"id":604,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/list.rs","byte_start":9459539,"byte_end":9459541,"line_start":56,"line_end":56,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7443},{"krate":0,"index":7444},{"krate":0,"index":7445},{"krate":0,"index":7447}],"docs":"","sig":null,"attributes":[]},{"id":605,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/list.rs","byte_start":9465245,"byte_end":9465247,"line_start":213,"line_end":213,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7450}],"docs":"","sig":null,"attributes":[]},{"id":606,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/list.rs","byte_start":9465524,"byte_end":9465526,"line_start":222,"line_end":222,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7453},{"krate":0,"index":7454},{"krate":0,"index":7455},{"krate":0,"index":7456}],"docs":"","sig":null,"attributes":[]},{"id":607,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/list.rs","byte_start":9468925,"byte_end":9468927,"line_start":333,"line_end":333,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7459}],"docs":"","sig":null,"attributes":[]},{"id":608,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9469601,"byte_end":9469616,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7475}],"docs":"","sig":null,"attributes":[]},{"id":609,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9469757,"byte_end":9469772,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":7478}],"docs":"","sig":null,"attributes":[]},{"id":610,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9470230,"byte_end":9470247,"line_start":41,"line_end":41,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7484}],"docs":"","sig":null,"attributes":[]},{"id":611,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9471225,"byte_end":9471242,"line_start":71,"line_end":71,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7490},{"krate":0,"index":7491},{"krate":0,"index":7492},{"krate":0,"index":7497},{"krate":0,"index":7498}],"docs":"","sig":null,"attributes":[]},{"id":612,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9473714,"byte_end":9473731,"line_start":151,"line_end":151,"column_start":35,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":7501},{"krate":0,"index":7502}],"docs":"","sig":null,"attributes":[]},{"id":613,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9473897,"byte_end":9473912,"line_start":159,"line_end":159,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7505},{"krate":0,"index":7506}],"docs":"","sig":null,"attributes":[]},{"id":614,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9475022,"byte_end":9475031,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7516}],"docs":"","sig":null,"attributes":[]},{"id":615,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9475191,"byte_end":9475200,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":616,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9475686,"byte_end":9475698,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":617,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9475731,"byte_end":9475743,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7523}],"docs":"","sig":null,"attributes":[]},{"id":618,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9476083,"byte_end":9476095,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":7526}],"docs":"","sig":null,"attributes":[]},{"id":619,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9476324,"byte_end":9476333,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7528}],"docs":"","sig":null,"attributes":[]},{"id":620,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9476463,"byte_end":9476472,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":621,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9476958,"byte_end":9476970,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7531}],"docs":"","sig":null,"attributes":[]},{"id":622,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9477276,"byte_end":9477288,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":623,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9477445,"byte_end":9477456,"line_start":103,"line_end":103,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7534}],"docs":"","sig":null,"attributes":[]},{"id":624,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9477555,"byte_end":9477566,"line_start":109,"line_end":109,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7536}],"docs":"","sig":null,"attributes":[]},{"id":625,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9477696,"byte_end":9477707,"line_start":115,"line_end":115,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":626,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9478211,"byte_end":9478227,"line_start":132,"line_end":132,"column_start":35,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":627,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9478264,"byte_end":9478280,"line_start":134,"line_end":134,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":8425}],"docs":"","sig":null,"attributes":[]},{"id":628,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9484579,"byte_end":9484584,"line_start":157,"line_end":157,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":629,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9484638,"byte_end":9484643,"line_start":158,"line_end":158,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":630,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9484697,"byte_end":9484707,"line_start":159,"line_end":159,"column_start":25,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":631,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9484772,"byte_end":9484787,"line_start":160,"line_end":160,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":632,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9485074,"byte_end":9485086,"line_start":170,"line_end":170,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7568}],"docs":"","sig":null,"attributes":[]},{"id":633,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9485223,"byte_end":9485235,"line_start":176,"line_end":176,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":634,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9486043,"byte_end":9486048,"line_start":202,"line_end":202,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7572},{"krate":0,"index":7573},{"krate":0,"index":7576},{"krate":0,"index":7579},{"krate":0,"index":7583},{"krate":0,"index":7584},{"krate":0,"index":7585}],"docs":"","sig":null,"attributes":[]},{"id":635,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9490621,"byte_end":9490626,"line_start":360,"line_end":360,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7588}],"docs":"","sig":null,"attributes":[]},{"id":636,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9490710,"byte_end":9490715,"line_start":366,"line_end":366,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7591}],"docs":"","sig":null,"attributes":[]},{"id":637,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9490839,"byte_end":9490844,"line_start":375,"line_end":375,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7594}],"docs":"","sig":null,"attributes":[]},{"id":638,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9491239,"byte_end":9491249,"line_start":391,"line_end":391,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7597}],"docs":"","sig":null,"attributes":[]},{"id":639,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9491350,"byte_end":9491360,"line_start":397,"line_end":397,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7600},{"krate":0,"index":7601}],"docs":"","sig":null,"attributes":[]},{"id":640,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9491507,"byte_end":9491517,"line_start":404,"line_end":404,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":7604}],"docs":"","sig":null,"attributes":[]},{"id":641,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9491674,"byte_end":9491684,"line_start":410,"line_end":410,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":7607}],"docs":"","sig":null,"attributes":[]},{"id":642,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9491850,"byte_end":9491860,"line_start":416,"line_end":416,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":7610}],"docs":"","sig":null,"attributes":[]},{"id":643,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9492038,"byte_end":9492053,"line_start":424,"line_end":424,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7613}],"docs":"","sig":null,"attributes":[]},{"id":644,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9492150,"byte_end":9492165,"line_start":430,"line_end":430,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7616},{"krate":0,"index":7617}],"docs":"","sig":null,"attributes":[]},{"id":645,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9492308,"byte_end":9492323,"line_start":437,"line_end":437,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7620}],"docs":"","sig":null,"attributes":[]},{"id":646,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9492476,"byte_end":9492491,"line_start":443,"line_end":443,"column_start":45,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":7623}],"docs":"","sig":null,"attributes":[]},{"id":647,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9492653,"byte_end":9492668,"line_start":449,"line_end":449,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":7626}],"docs":"","sig":null,"attributes":[]},{"id":648,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9496632,"byte_end":9496640,"line_start":135,"line_end":135,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":649,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9496673,"byte_end":9496681,"line_start":136,"line_end":136,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":650,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9496944,"byte_end":9496950,"line_start":154,"line_end":154,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7656},{"krate":0,"index":7657},{"krate":0,"index":7660}],"docs":"","sig":null,"attributes":[]},{"id":651,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9500958,"byte_end":9500964,"line_start":282,"line_end":282,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7662}],"docs":"","sig":null,"attributes":[]},{"id":652,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9502702,"byte_end":9502710,"line_start":336,"line_end":336,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7665}],"docs":"","sig":null,"attributes":[]},{"id":653,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9503220,"byte_end":9503228,"line_start":352,"line_end":352,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7667},{"krate":0,"index":7668}],"docs":"","sig":null,"attributes":[]},{"id":654,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9508058,"byte_end":9508066,"line_start":474,"line_end":474,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7671}],"docs":"","sig":null,"attributes":[]},{"id":655,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9511024,"byte_end":9511030,"line_start":539,"line_end":539,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7674},{"krate":0,"index":7675},{"krate":0,"index":7676},{"krate":0,"index":7677},{"krate":0,"index":7678}],"docs":"","sig":null,"attributes":[]},{"id":656,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9512906,"byte_end":9512915,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7704}],"docs":"","sig":null,"attributes":[]},{"id":657,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9513077,"byte_end":9513086,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":658,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9513155,"byte_end":9513167,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":7707}],"docs":"","sig":null,"attributes":[]},{"id":659,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9513466,"byte_end":9513478,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":660,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9515289,"byte_end":9515295,"line_start":143,"line_end":143,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7720},{"krate":0,"index":7723},{"krate":0,"index":7725},{"krate":0,"index":7730}],"docs":"","sig":null,"attributes":[]},{"id":661,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9521596,"byte_end":9521602,"line_start":357,"line_end":357,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7733}],"docs":"","sig":null,"attributes":[]},{"id":662,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9521741,"byte_end":9521749,"line_start":365,"line_end":365,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7736},{"krate":0,"index":7737}],"docs":"","sig":null,"attributes":[]},{"id":663,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9526140,"byte_end":9526148,"line_start":514,"line_end":514,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7740}],"docs":"","sig":null,"attributes":[]},{"id":664,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9526295,"byte_end":9526303,"line_start":522,"line_end":522,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7743},{"krate":0,"index":7744}],"docs":"","sig":null,"attributes":[]},{"id":665,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9526766,"byte_end":9526771,"line_start":538,"line_end":538,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7747},{"krate":0,"index":7748},{"krate":0,"index":7750},{"krate":0,"index":7751},{"krate":0,"index":7753},{"krate":0,"index":7757},{"krate":0,"index":7761},{"krate":0,"index":7763},{"krate":0,"index":7765},{"krate":0,"index":7767}],"docs":"","sig":null,"attributes":[]},{"id":666,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9531143,"byte_end":9531148,"line_start":684,"line_end":684,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":667,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9531185,"byte_end":9531190,"line_start":685,"line_end":685,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":668,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9531215,"byte_end":9531220,"line_start":687,"line_end":687,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7775}],"docs":"","sig":null,"attributes":[]},{"id":669,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9531589,"byte_end":9531594,"line_start":705,"line_end":705,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7779}],"docs":"","sig":null,"attributes":[]},{"id":670,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9531989,"byte_end":9531994,"line_start":720,"line_end":720,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7786},{"krate":0,"index":7787},{"krate":0,"index":7788},{"krate":0,"index":7789},{"krate":0,"index":7790},{"krate":0,"index":7791},{"krate":0,"index":7792},{"krate":0,"index":7793},{"krate":0,"index":7794},{"krate":0,"index":7795},{"krate":0,"index":7796},{"krate":0,"index":7797},{"krate":0,"index":7798}],"docs":"","sig":null,"attributes":[]},{"id":671,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9533707,"byte_end":9533712,"line_start":786,"line_end":786,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7800}],"docs":"","sig":null,"attributes":[]},{"id":672,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/batch_semaphore.rs","byte_start":9537190,"byte_end":9537199,"line_start":93,"line_end":93,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7841},{"krate":0,"index":7842},{"krate":0,"index":7843},{"krate":0,"index":7844},{"krate":0,"index":7845},{"krate":0,"index":7846},{"krate":0,"index":7847},{"krate":0,"index":7849},{"krate":0,"index":7850},{"krate":0,"index":7851},{"krate":0,"index":7855}],"docs":"","sig":null,"attributes":[]},{"id":673,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/batch_semaphore.rs","byte_start":9547120,"byte_end":9547129,"line_start":357,"line_end":357,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7859}],"docs":"","sig":null,"attributes":[]},{"id":674,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/batch_semaphore.rs","byte_start":9547330,"byte_end":9547336,"line_start":365,"line_end":365,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7861},{"krate":0,"index":7862}],"docs":"","sig":null,"attributes":[]},{"id":675,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/batch_semaphore.rs","byte_start":9548202,"byte_end":9548209,"line_start":394,"line_end":394,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7864},{"krate":0,"index":7865}],"docs":"","sig":null,"attributes":[]},{"id":676,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/batch_semaphore.rs","byte_start":9548887,"byte_end":9548894,"line_start":418,"line_end":418,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7868},{"krate":0,"index":7869}],"docs":"","sig":null,"attributes":[]},{"id":677,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/batch_semaphore.rs","byte_start":9549693,"byte_end":9549700,"line_start":448,"line_end":448,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7873}],"docs":"","sig":null,"attributes":[]},{"id":678,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/batch_semaphore.rs","byte_start":9551342,"byte_end":9551349,"line_start":485,"line_end":485,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":679,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/batch_semaphore.rs","byte_start":9551396,"byte_end":9551408,"line_start":489,"line_end":489,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":7876}],"docs":"","sig":null,"attributes":[]},{"id":680,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/batch_semaphore.rs","byte_start":9551501,"byte_end":9551513,"line_start":495,"line_end":495,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7878}],"docs":"","sig":null,"attributes":[]},{"id":681,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/batch_semaphore.rs","byte_start":9551657,"byte_end":9551669,"line_start":501,"line_end":501,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":682,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/batch_semaphore.rs","byte_start":9551716,"byte_end":9551731,"line_start":505,"line_end":505,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":7881},{"krate":0,"index":7882}],"docs":"","sig":null,"attributes":[]},{"id":683,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/batch_semaphore.rs","byte_start":9552353,"byte_end":9552368,"line_start":526,"line_end":526,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7884}],"docs":"","sig":null,"attributes":[]},{"id":684,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/batch_semaphore.rs","byte_start":9552654,"byte_end":9552669,"line_start":535,"line_end":535,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":685,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/batch_semaphore.rs","byte_start":9552762,"byte_end":9552768,"line_start":540,"line_end":540,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7887},{"krate":0,"index":7888},{"krate":0,"index":7889},{"krate":0,"index":7890},{"krate":0,"index":7891}],"docs":"","sig":null,"attributes":[]},{"id":686,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore_ll.rs","byte_start":9558037,"byte_end":9558046,"line_start":151,"line_end":151,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7933},{"krate":0,"index":7934},{"krate":0,"index":7935},{"krate":0,"index":7938},{"krate":0,"index":7940},{"krate":0,"index":7944},{"krate":0,"index":7945},{"krate":0,"index":7946},{"krate":0,"index":7947},{"krate":0,"index":7952},{"krate":0,"index":7953},{"krate":0,"index":7954},{"krate":0,"index":7955}],"docs":"","sig":null,"attributes":[]},{"id":687,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore_ll.rs","byte_start":9574240,"byte_end":9574249,"line_start":578,"line_end":578,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7957}],"docs":"","sig":null,"attributes":[]},{"id":688,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore_ll.rs","byte_start":9574328,"byte_end":9574337,"line_start":584,"line_end":584,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7959}],"docs":"","sig":null,"attributes":[]},{"id":689,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore_ll.rs","byte_start":9574715,"byte_end":9574724,"line_start":595,"line_end":595,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":690,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore_ll.rs","byte_start":9574749,"byte_end":9574758,"line_start":596,"line_end":596,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":691,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore_ll.rs","byte_start":9574796,"byte_end":9574802,"line_start":600,"line_end":600,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7964},{"krate":0,"index":7966},{"krate":0,"index":7967},{"krate":0,"index":7971},{"krate":0,"index":7973},{"krate":0,"index":7974}],"docs":"","sig":null,"attributes":[]},{"id":692,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore_ll.rs","byte_start":9581208,"byte_end":9581214,"line_start":793,"line_end":793,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7977}],"docs":"","sig":null,"attributes":[]},{"id":693,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore_ll.rs","byte_start":9581287,"byte_end":9581293,"line_start":799,"line_end":799,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":7979}],"docs":"","sig":null,"attributes":[]},{"id":694,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore_ll.rs","byte_start":9581715,"byte_end":9581727,"line_start":815,"line_end":815,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":7981}],"docs":"","sig":null,"attributes":[]},{"id":695,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore_ll.rs","byte_start":9581907,"byte_end":9581919,"line_start":825,"line_end":825,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7984}],"docs":"","sig":null,"attributes":[]},{"id":696,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore_ll.rs","byte_start":9582063,"byte_end":9582075,"line_start":831,"line_end":831,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":697,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore_ll.rs","byte_start":9582122,"byte_end":9582137,"line_start":835,"line_end":835,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":7987},{"krate":0,"index":7988}],"docs":"","sig":null,"attributes":[]},{"id":698,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore_ll.rs","byte_start":9582667,"byte_end":9582682,"line_start":854,"line_end":854,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7990}],"docs":"","sig":null,"attributes":[]},{"id":699,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore_ll.rs","byte_start":9582968,"byte_end":9582983,"line_start":863,"line_end":863,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":700,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore_ll.rs","byte_start":9583021,"byte_end":9583027,"line_start":867,"line_end":867,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7993},{"krate":0,"index":7994},{"krate":0,"index":7995},{"krate":0,"index":7996},{"krate":0,"index":7997},{"krate":0,"index":7998},{"krate":0,"index":7999},{"krate":0,"index":8000},{"krate":0,"index":8001}],"docs":"","sig":null,"attributes":[]},{"id":701,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore_ll.rs","byte_start":9588514,"byte_end":9588522,"line_start":1038,"line_end":1038,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":8003},{"krate":0,"index":8004},{"krate":0,"index":8005},{"krate":0,"index":8006},{"krate":0,"index":8007},{"krate":0,"index":8008},{"krate":0,"index":8009},{"krate":0,"index":8010},{"krate":0,"index":8011},{"krate":0,"index":8012},{"krate":0,"index":8013},{"krate":0,"index":8014},{"krate":0,"index":8015},{"krate":0,"index":8016},{"krate":0,"index":8017},{"krate":0,"index":8018}],"docs":"","sig":null,"attributes":[]},{"id":702,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore_ll.rs","byte_start":9592185,"byte_end":9592193,"line_start":1176,"line_end":1176,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8020}],"docs":"","sig":null,"attributes":[]},{"id":703,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore_ll.rs","byte_start":9592546,"byte_end":9592557,"line_start":1192,"line_end":1192,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8022},{"krate":0,"index":8023},{"krate":0,"index":8024},{"krate":0,"index":8025},{"krate":0,"index":8026},{"krate":0,"index":8027},{"krate":0,"index":8028},{"krate":0,"index":8029}],"docs":"","sig":null,"attributes":[]},{"id":704,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9595286,"byte_end":9595295,"line_start":69,"line_end":69,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":8034},{"krate":0,"index":8035},{"krate":0,"index":8036},{"krate":0,"index":8037},{"krate":0,"index":8040},{"krate":0,"index":8041},{"krate":0,"index":8044}],"docs":"","sig":null,"attributes":[]},{"id":705,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9597390,"byte_end":9597405,"line_start":138,"line_end":138,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8047}],"docs":"","sig":null,"attributes":[]},{"id":706,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9597650,"byte_end":9597670,"line_start":147,"line_end":147,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8049}],"docs":"","sig":null,"attributes":[]},{"id":707,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9597924,"byte_end":9597939,"line_start":156,"line_end":156,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":8052}],"docs":"","sig":null,"attributes":[]},{"id":708,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9598047,"byte_end":9598067,"line_start":162,"line_end":162,"column_start":15,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8054}],"docs":"","sig":null,"attributes":[]},{"id":709,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9601421,"byte_end":9601436,"line_start":96,"line_end":96,"column_start":13,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8076},{"krate":0,"index":8079}],"docs":"","sig":null,"attributes":[]},{"id":710,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9604854,"byte_end":9604869,"line_start":201,"line_end":201,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":8085}],"docs":"","sig":null,"attributes":[]},{"id":711,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9605049,"byte_end":9605064,"line_start":210,"line_end":210,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":8089}],"docs":"","sig":null,"attributes":[]},{"id":712,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9605240,"byte_end":9605255,"line_start":219,"line_end":219,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8093}],"docs":"","sig":null,"attributes":[]},{"id":713,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9605719,"byte_end":9605735,"line_start":239,"line_end":239,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":8103},{"krate":0,"index":8106}],"docs":"","sig":null,"attributes":[]},{"id":714,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9609329,"byte_end":9609345,"line_start":349,"line_end":349,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":8112}],"docs":"","sig":null,"attributes":[]},{"id":715,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9609525,"byte_end":9609541,"line_start":358,"line_end":358,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":8116}],"docs":"","sig":null,"attributes":[]},{"id":716,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9609717,"byte_end":9609733,"line_start":367,"line_end":367,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":8120}],"docs":"","sig":null,"attributes":[]},{"id":717,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9610809,"byte_end":9610815,"line_start":402,"line_end":402,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":718,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9610869,"byte_end":9610875,"line_start":403,"line_end":403,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":719,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9611109,"byte_end":9611124,"line_start":407,"line_end":407,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":720,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9611182,"byte_end":9611197,"line_start":408,"line_end":408,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":721,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9611262,"byte_end":9611278,"line_start":409,"line_end":409,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":722,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9611591,"byte_end":9611607,"line_start":414,"line_end":414,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":723,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9611665,"byte_end":9611671,"line_start":416,"line_end":416,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":8135},{"krate":0,"index":8136},{"krate":0,"index":8140},{"krate":0,"index":8144}],"docs":"","sig":null,"attributes":[]},{"id":724,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9614859,"byte_end":9614874,"line_start":524,"line_end":524,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8147},{"krate":0,"index":8148}],"docs":"","sig":null,"attributes":[]},{"id":725,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9615005,"byte_end":9615021,"line_start":532,"line_end":532,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8151},{"krate":0,"index":8152}],"docs":"","sig":null,"attributes":[]},{"id":726,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9615155,"byte_end":9615171,"line_start":540,"line_end":540,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":8155}],"docs":"","sig":null,"attributes":[]},{"id":727,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9615285,"byte_end":9615291,"line_start":546,"line_end":546,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8158}],"docs":"","sig":null,"attributes":[]},{"id":728,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9615383,"byte_end":9615389,"line_start":552,"line_end":552,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8161}],"docs":"","sig":null,"attributes":[]},{"id":729,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/task/atomic_waker.rs","byte_start":9621664,"byte_end":9621675,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8185},{"krate":0,"index":8186},{"krate":0,"index":8187},{"krate":0,"index":8188},{"krate":0,"index":8192},{"krate":0,"index":8193}],"docs":"","sig":null,"attributes":[]},{"id":730,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/task/atomic_waker.rs","byte_start":9627602,"byte_end":9627613,"line_start":280,"line_end":280,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8196}],"docs":"","sig":null,"attributes":[]},{"id":731,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/task/atomic_waker.rs","byte_start":9627699,"byte_end":9627710,"line_start":286,"line_end":286,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":8198}],"docs":"","sig":null,"attributes":[]},{"id":732,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/task/atomic_waker.rs","byte_start":9627843,"byte_end":9627854,"line_start":292,"line_end":292,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":733,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/task/atomic_waker.rs","byte_start":9627879,"byte_end":9627890,"line_start":293,"line_end":293,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":734,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/task/atomic_waker.rs","byte_start":9627986,"byte_end":9627991,"line_start":300,"line_end":300,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":8205},{"krate":0,"index":8206}],"docs":"","sig":null,"attributes":[]},{"id":735,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9631532,"byte_end":9631541,"line_start":108,"line_end":108,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":8237}],"docs":"","sig":null,"attributes":[]},{"id":736,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9631721,"byte_end":9631730,"line_start":114,"line_end":114,"column_start":47,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":737,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9633889,"byte_end":9633897,"line_start":204,"line_end":204,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8248},{"krate":0,"index":8249}],"docs":"","sig":null,"attributes":[]},{"id":738,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9635169,"byte_end":9635177,"line_start":248,"line_end":248,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":8253}],"docs":"","sig":null,"attributes":[]},{"id":739,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9636543,"byte_end":9636551,"line_start":292,"line_end":292,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":8260},{"krate":0,"index":8261}],"docs":"","sig":null,"attributes":[]},{"id":740,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9636810,"byte_end":9636818,"line_start":302,"line_end":302,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8265}],"docs":"","sig":null,"attributes":[]},{"id":741,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9637121,"byte_end":9637129,"line_start":314,"line_end":314,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8268}],"docs":"","sig":null,"attributes":[]},{"id":742,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9637243,"byte_end":9637249,"line_start":320,"line_end":320,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":8271},{"krate":0,"index":8272},{"krate":0,"index":8276}],"docs":"","sig":null,"attributes":[]},{"id":743,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9638784,"byte_end":9638790,"line_start":373,"line_end":373,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":8281}],"docs":"","sig":null,"attributes":[]},{"id":744,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9639029,"byte_end":9639032,"line_start":384,"line_end":384,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8284},{"krate":0,"index":8285}],"docs":"","sig":null,"attributes":[]},{"id":745,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9639173,"byte_end":9639179,"line_start":394,"line_end":394,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":8288}],"docs":"","sig":null,"attributes":[]},{"id":746,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9639281,"byte_end":9639288,"line_start":402,"line_end":402,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":8290}],"docs":"","sig":null,"attributes":[]},{"id":747,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9639511,"byte_end":9639518,"line_start":411,"line_end":411,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":8292}],"docs":"","sig":null,"attributes":[]},{"id":748,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9639635,"byte_end":9639642,"line_start":417,"line_end":417,"column_start":23,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":749,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9639672,"byte_end":9639679,"line_start":419,"line_end":419,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8295}],"docs":"","sig":null,"attributes":[]},{"id":750,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9639826,"byte_end":9639833,"line_start":425,"line_end":425,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8298},{"krate":0,"index":8299}],"docs":"","sig":null,"attributes":[]},{"id":751,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/yield_now.rs","byte_start":9658644,"byte_end":9658652,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8686},{"krate":0,"index":8687}],"docs":"","sig":null,"attributes":[]},{"id":752,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9665784,"byte_end":9665792,"line_start":221,"line_end":221,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":8721},{"krate":0,"index":8722},{"krate":0,"index":8724},{"krate":0,"index":8726},{"krate":0,"index":8730},{"krate":0,"index":8732},{"krate":0,"index":8735}],"docs":"","sig":null,"attributes":[]},{"id":753,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9673634,"byte_end":9673642,"line_start":446,"line_end":446,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8739}],"docs":"","sig":null,"attributes":[]},{"id":754,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9673781,"byte_end":9673789,"line_start":452,"line_end":452,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8741},{"krate":0,"index":8742}],"docs":"","sig":null,"attributes":[]},{"id":755,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9674754,"byte_end":9674762,"line_start":476,"line_end":476,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8745}],"docs":"","sig":null,"attributes":[]},{"id":756,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9674843,"byte_end":9674851,"line_start":482,"line_end":482,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":8747}],"docs":"","sig":null,"attributes":[]},{"id":757,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9675718,"byte_end":9675726,"line_start":512,"line_end":512,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8751},{"krate":0,"index":8752}],"docs":"","sig":null,"attributes":[]},{"id":758,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9676611,"byte_end":9676617,"line_start":543,"line_end":543,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":8756},{"krate":0,"index":8758}],"docs":"","sig":null,"attributes":[]},{"id":759,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9677180,"byte_end":9677183,"line_start":562,"line_end":562,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8760},{"krate":0,"index":8762},{"krate":0,"index":8765}],"docs":"","sig":null,"attributes":[]},{"id":760,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9680598,"byte_end":9680606,"line_start":98,"line_end":98,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8788},{"krate":0,"index":8792},{"krate":0,"index":8795}],"docs":"","sig":null,"attributes":[]},{"id":761,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9682382,"byte_end":9682390,"line_start":163,"line_end":163,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8801}],"docs":"","sig":null,"attributes":[]},{"id":762,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9682598,"byte_end":9682606,"line_start":171,"line_end":171,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8805}],"docs":"","sig":null,"attributes":[]},{"id":763,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9682927,"byte_end":9682942,"line_start":186,"line_end":186,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":8809},{"krate":0,"index":8810}],"docs":"","sig":null,"attributes":[]},{"id":764,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9683243,"byte_end":9683248,"line_start":196,"line_end":196,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8819}],"docs":"","sig":null,"attributes":[]},{"id":765,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9683866,"byte_end":9683867,"line_start":220,"line_end":220,"column_start":37,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":766,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9684052,"byte_end":9684063,"line_start":228,"line_end":228,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":8826}],"docs":"","sig":null,"attributes":[]},{"id":767,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9684207,"byte_end":9684218,"line_start":234,"line_end":234,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":8828}],"docs":"","sig":null,"attributes":[]},{"id":768,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9684365,"byte_end":9684376,"line_start":240,"line_end":240,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":769,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/clock.rs","byte_start":9688961,"byte_end":9688966,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":9339},{"krate":0,"index":9340},{"krate":0,"index":9341},{"krate":0,"index":9342}],"docs":"","sig":null,"attributes":[]},{"id":770,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9699564,"byte_end":9699574,"line_start":205,"line_end":205,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":8879},{"krate":0,"index":8880},{"krate":0,"index":8881},{"krate":0,"index":8882},{"krate":0,"index":8885},{"krate":0,"index":8886},{"krate":0,"index":8890},{"krate":0,"index":8892},{"krate":0,"index":8893},{"krate":0,"index":8894},{"krate":0,"index":8896},{"krate":0,"index":8897},{"krate":0,"index":8898},{"krate":0,"index":8899},{"krate":0,"index":8900},{"krate":0,"index":8901},{"krate":0,"index":8902},{"krate":0,"index":8904}],"docs":"","sig":null,"attributes":[]},{"id":771,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9717568,"byte_end":9717578,"line_start":759,"line_end":759,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":772,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9717606,"byte_end":9717616,"line_start":761,"line_end":761,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8909}],"docs":"","sig":null,"attributes":[]},{"id":773,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9717753,"byte_end":9717763,"line_start":768,"line_end":768,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":8912},{"krate":0,"index":8913}],"docs":"","sig":null,"attributes":[]},{"id":774,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9718145,"byte_end":9718150,"line_start":778,"line_end":778,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8916},{"krate":0,"index":8917},{"krate":0,"index":8918},{"krate":0,"index":8919},{"krate":0,"index":8920},{"krate":0,"index":8921},{"krate":0,"index":8922},{"krate":0,"index":8923}],"docs":"","sig":null,"attributes":[]},{"id":775,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9720277,"byte_end":9720282,"line_start":860,"line_end":860,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8926}],"docs":"","sig":null,"attributes":[]},{"id":776,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9720412,"byte_end":9720415,"line_start":869,"line_end":869,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":8928}],"docs":"","sig":null,"attributes":[]},{"id":777,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9720502,"byte_end":9720509,"line_start":875,"line_end":875,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":8931},{"krate":0,"index":8932},{"krate":0,"index":8933},{"krate":0,"index":8934}],"docs":"","sig":null,"attributes":[]},{"id":778,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9723047,"byte_end":9723052,"line_start":70,"line_end":70,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":8949},{"krate":0,"index":8950},{"krate":0,"index":8951},{"krate":0,"index":8952}],"docs":"","sig":null,"attributes":[]},{"id":779,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9724030,"byte_end":9724035,"line_start":100,"line_end":100,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":8954},{"krate":0,"index":8955}],"docs":"","sig":null,"attributes":[]},{"id":780,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/driver/atomic_stack.rs","byte_start":9737705,"byte_end":9737716,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8970},{"krate":0,"index":8971},{"krate":0,"index":8972},{"krate":0,"index":8973}],"docs":"","sig":null,"attributes":[]},{"id":781,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/driver/atomic_stack.rs","byte_start":9739694,"byte_end":9739712,"line_start":94,"line_end":94,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":8975},{"krate":0,"index":8976}],"docs":"","sig":null,"attributes":[]},{"id":782,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/driver/atomic_stack.rs","byte_start":9740308,"byte_end":9740326,"line_start":117,"line_end":117,"column_start":15,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8978}],"docs":"","sig":null,"attributes":[]},{"id":783,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/driver/entry.rs","byte_start":9744564,"byte_end":9744569,"line_start":112,"line_end":112,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":9006},{"krate":0,"index":9007},{"krate":0,"index":9008},{"krate":0,"index":9009},{"krate":0,"index":9010},{"krate":0,"index":9011},{"krate":0,"index":9012},{"krate":0,"index":9013},{"krate":0,"index":9014},{"krate":0,"index":9015},{"krate":0,"index":9016},{"krate":0,"index":9017},{"krate":0,"index":9018},{"krate":0,"index":9019}],"docs":"","sig":null,"attributes":[]},{"id":784,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/driver/entry.rs","byte_start":9751237,"byte_end":9751242,"line_start":341,"line_end":341,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":9022}],"docs":"","sig":null,"attributes":[]},{"id":785,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/driver/entry.rs","byte_start":9751450,"byte_end":9751455,"line_start":352,"line_end":352,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":786,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/driver/entry.rs","byte_start":9751480,"byte_end":9751485,"line_start":353,"line_end":353,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":787,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/driver/handle.rs","byte_start":9751862,"byte_end":9751868,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":9034},{"krate":0,"index":9035},{"krate":0,"index":9036}],"docs":"","sig":null,"attributes":[]},{"id":788,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/driver/handle.rs","byte_start":9752513,"byte_end":9752519,"line_start":34,"line_end":34,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":9038}],"docs":"","sig":null,"attributes":[]},{"id":789,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/driver/registration.rs","byte_start":9752964,"byte_end":9752976,"line_start":16,"line_end":16,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":9053},{"krate":0,"index":9054},{"krate":0,"index":9055},{"krate":0,"index":9056},{"krate":0,"index":9057}],"docs":"","sig":null,"attributes":[]},{"id":790,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/driver/registration.rs","byte_start":9753886,"byte_end":9753898,"line_start":52,"line_end":52,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":9060}],"docs":"","sig":null,"attributes":[]},{"id":791,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/driver/stack.rs","byte_start":9754182,"byte_end":9754187,"line_start":13,"line_end":13,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":9068}],"docs":"","sig":null,"attributes":[]},{"id":792,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/driver/stack.rs","byte_start":9754278,"byte_end":9754283,"line_start":19,"line_end":19,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":9070},{"krate":0,"index":9071},{"krate":0,"index":9072},{"krate":0,"index":9073},{"krate":0,"index":9074},{"krate":0,"index":9075},{"krate":0,"index":9076},{"krate":0,"index":9077}],"docs":"","sig":null,"attributes":[]},{"id":793,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/driver/mod.rs","byte_start":9729000,"byte_end":9729006,"line_start":125,"line_end":125,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":9111},{"krate":0,"index":9112},{"krate":0,"index":9113},{"krate":0,"index":9114},{"krate":0,"index":9115},{"krate":0,"index":9116},{"krate":0,"index":9117}],"docs":"","sig":null,"attributes":[]},{"id":794,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/driver/mod.rs","byte_start":9732703,"byte_end":9732709,"line_start":238,"line_end":238,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":9121},{"krate":0,"index":9122},{"krate":0,"index":9123},{"krate":0,"index":9124},{"krate":0,"index":9125},{"krate":0,"index":9126}],"docs":"","sig":null,"attributes":[]},{"id":795,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/driver/mod.rs","byte_start":9735282,"byte_end":9735288,"line_start":335,"line_end":335,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":9130}],"docs":"","sig":null,"attributes":[]},{"id":796,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/driver/mod.rs","byte_start":9735404,"byte_end":9735409,"line_start":346,"line_end":346,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":9132},{"krate":0,"index":9133},{"krate":0,"index":9134},{"krate":0,"index":9135},{"krate":0,"index":9136},{"krate":0,"index":9137}],"docs":"","sig":null,"attributes":[]},{"id":797,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/driver/mod.rs","byte_start":9737026,"byte_end":9737031,"line_start":408,"line_end":408,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":9139}],"docs":"","sig":null,"attributes":[]},{"id":798,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/error.rs","byte_start":9758605,"byte_end":9758610,"line_start":35,"line_end":35,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":9145},{"krate":0,"index":9146},{"krate":0,"index":9147},{"krate":0,"index":9148},{"krate":0,"index":9149},{"krate":0,"index":9150},{"krate":0,"index":9151},{"krate":0,"index":9152}],"docs":"","sig":null,"attributes":[]},{"id":799,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/error.rs","byte_start":9759977,"byte_end":9759982,"line_start":89,"line_end":89,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":800,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/error.rs","byte_start":9760009,"byte_end":9760014,"line_start":91,"line_end":91,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":9155}],"docs":"","sig":null,"attributes":[]},{"id":801,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9760786,"byte_end":9760793,"line_start":14,"line_end":14,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":9163},{"krate":0,"index":9164},{"krate":0,"index":9165},{"krate":0,"index":9166},{"krate":0,"index":9167},{"krate":0,"index":9168},{"krate":0,"index":9169},{"krate":0,"index":9170},{"krate":0,"index":9171}],"docs":"","sig":null,"attributes":[]},{"id":802,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9764567,"byte_end":9764574,"line_start":129,"line_end":129,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":9173}],"docs":"","sig":null,"attributes":[]},{"id":803,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9764703,"byte_end":9764710,"line_start":135,"line_end":135,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":9175}],"docs":"","sig":null,"attributes":[]},{"id":804,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9764825,"byte_end":9764832,"line_start":141,"line_end":141,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":9177},{"krate":0,"index":9178}],"docs":"","sig":null,"attributes":[]},{"id":805,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9764997,"byte_end":9765004,"line_start":149,"line_end":149,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":9180}],"docs":"","sig":null,"attributes":[]},{"id":806,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9765109,"byte_end":9765116,"line_start":155,"line_end":155,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":9182},{"krate":0,"index":9183}],"docs":"","sig":null,"attributes":[]},{"id":807,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9765257,"byte_end":9765264,"line_start":163,"line_end":163,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":9185},{"krate":0,"index":9186}],"docs":"","sig":null,"attributes":[]},{"id":808,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9765425,"byte_end":9765432,"line_start":171,"line_end":171,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":9188}],"docs":"","sig":null,"attributes":[]},{"id":809,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9765539,"byte_end":9765546,"line_start":177,"line_end":177,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":9190}],"docs":"","sig":null,"attributes":[]},{"id":810,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9769428,"byte_end":9769436,"line_start":124,"line_end":124,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":9210},{"krate":0,"index":9211}],"docs":"","sig":null,"attributes":[]},{"id":811,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9770731,"byte_end":9770739,"line_start":169,"line_end":169,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":9216},{"krate":0,"index":9217}],"docs":"","sig":null,"attributes":[]},{"id":812,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9774071,"byte_end":9774078,"line_start":119,"line_end":119,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":9240}],"docs":"","sig":null,"attributes":[]},{"id":813,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9774207,"byte_end":9774214,"line_start":127,"line_end":127,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":9243},{"krate":0,"index":9244},{"krate":0,"index":9245},{"krate":0,"index":9246}],"docs":"","sig":null,"attributes":[]},{"id":814,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9774752,"byte_end":9774759,"line_start":148,"line_end":148,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":9249},{"krate":0,"index":9250}],"docs":"","sig":null,"attributes":[]},{"id":815,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9775337,"byte_end":9775344,"line_start":172,"line_end":172,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":9252}],"docs":"","sig":null,"attributes":[]},{"id":816,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9775488,"byte_end":9775495,"line_start":178,"line_end":178,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":817,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9775532,"byte_end":9775537,"line_start":180,"line_end":180,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":9255}],"docs":"","sig":null,"attributes":[]},{"id":818,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/throttle.rs","byte_start":9793677,"byte_end":9793685,"line_start":70,"line_end":70,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":9523},{"krate":0,"index":9524},{"krate":0,"index":9525}],"docs":"","sig":null,"attributes":[]},{"id":819,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/throttle.rs","byte_start":9794500,"byte_end":9794508,"line_start":95,"line_end":95,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":9528},{"krate":0,"index":9529}],"docs":"","sig":null,"attributes":[]},{"id":820,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/wheel/level.rs","byte_start":9785441,"byte_end":9785446,"line_start":40,"line_end":40,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":9274},{"krate":0,"index":9276},{"krate":0,"index":9277},{"krate":0,"index":9278},{"krate":0,"index":9279},{"krate":0,"index":9280}],"docs":"","sig":null,"attributes":[]},{"id":821,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/wheel/level.rs","byte_start":9790198,"byte_end":9790203,"line_start":211,"line_end":211,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":9283}],"docs":"","sig":null,"attributes":[]},{"id":822,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/wheel/mod.rs","byte_start":9777262,"byte_end":9777267,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":9308},{"krate":0,"index":9309},{"krate":0,"index":9310},{"krate":0,"index":9311},{"krate":0,"index":9312},{"krate":0,"index":9314},{"krate":0,"index":9316},{"krate":0,"index":9317},{"krate":0,"index":9318},{"krate":0,"index":9319},{"krate":0,"index":9320},{"krate":0,"index":9321}],"docs":"","sig":null,"attributes":[]},{"id":823,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/wheel/mod.rs","byte_start":9782975,"byte_end":9782979,"line_start":254,"line_end":254,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":9324}],"docs":"","sig":null,"attributes":[]},{"id":824,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/bit.rs","byte_start":9795341,"byte_end":9795345,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":9564},{"krate":0,"index":9565},{"krate":0,"index":9566},{"krate":0,"index":9567},{"krate":0,"index":9568},{"krate":0,"index":9569},{"krate":0,"index":9570}],"docs":"","sig":null,"attributes":[]},{"id":825,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/bit.rs","byte_start":9796819,"byte_end":9796823,"line_start":61,"line_end":61,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":9572}],"docs":"","sig":null,"attributes":[]},{"id":826,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/slab/addr.rs","byte_start":9804042,"byte_end":9804049,"line_start":76,"line_end":76,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":9591},{"krate":0,"index":9592},{"krate":0,"index":9593},{"krate":0,"index":9594},{"krate":0,"index":9595},{"krate":0,"index":9596},{"krate":0,"index":9597},{"krate":0,"index":9598}],"docs":"","sig":null,"attributes":[]},{"id":827,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/slab/generation.rs","byte_start":9807078,"byte_end":9807088,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":9610},{"krate":0,"index":9611},{"krate":0,"index":9612},{"krate":0,"index":9613},{"krate":0,"index":9614}],"docs":"","sig":null,"attributes":[]},{"id":828,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/slab/page.rs","byte_start":9808227,"byte_end":9808232,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":9635},{"krate":0,"index":9636},{"krate":0,"index":9638}],"docs":"","sig":null,"attributes":[]},{"id":829,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/slab/page.rs","byte_start":9808574,"byte_end":9808580,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":9642},{"krate":0,"index":9643},{"krate":0,"index":9645},{"krate":0,"index":9648},{"krate":0,"index":9651},{"krate":0,"index":9654}],"docs":"","sig":null,"attributes":[]},{"id":830,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/slab/page.rs","byte_start":9812532,"byte_end":9812537,"line_start":167,"line_end":167,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":9659}],"docs":"","sig":null,"attributes":[]},{"id":831,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/slab/page.rs","byte_start":9812843,"byte_end":9812849,"line_start":178,"line_end":178,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":9663}],"docs":"","sig":null,"attributes":[]},{"id":832,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/slab/shard.rs","byte_start":9814992,"byte_end":9814997,"line_start":38,"line_end":38,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":9677},{"krate":0,"index":9680},{"krate":0,"index":9681},{"krate":0,"index":9682},{"krate":0,"index":9683},{"krate":0,"index":9684}],"docs":"","sig":null,"attributes":[]},{"id":833,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/slab/shard.rs","byte_start":9816676,"byte_end":9816681,"line_start":99,"line_end":99,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":9687}],"docs":"","sig":null,"attributes":[]},{"id":834,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/slab/slot.rs","byte_start":9817058,"byte_end":9817062,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":9700},{"krate":0,"index":9701},{"krate":0,"index":9702},{"krate":0,"index":9703},{"krate":0,"index":9704},{"krate":0,"index":9706}],"docs":"","sig":null,"attributes":[]},{"id":835,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/slab/stack.rs","byte_start":9818033,"byte_end":9818046,"line_start":12,"line_end":12,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":9718},{"krate":0,"index":9719},{"krate":0,"index":9720}],"docs":"","sig":null,"attributes":[]},{"id":836,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/slab/stack.rs","byte_start":9818874,"byte_end":9818887,"line_start":47,"line_end":47,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":9723}],"docs":"","sig":null,"attributes":[]},{"id":837,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/slab/mod.rs","byte_start":9798421,"byte_end":9798425,"line_start":56,"line_end":56,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":838,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/slab/mod.rs","byte_start":9798462,"byte_end":9798466,"line_start":57,"line_end":57,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":839,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/slab/mod.rs","byte_start":9798489,"byte_end":9798493,"line_start":59,"line_end":59,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":9740},{"krate":0,"index":9741},{"krate":0,"index":9742},{"krate":0,"index":9743}],"docs":"","sig":null,"attributes":[]},{"id":840,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/slab/mod.rs","byte_start":9800008,"byte_end":9800012,"line_start":103,"line_end":103,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":9746}],"docs":"","sig":null,"attributes":[]},{"id":841,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/linked_list.rs","byte_start":181548,"byte_end":181558,"line_start":23,"line_end":23,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":842,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/linked_list.rs","byte_start":181617,"byte_end":181627,"line_start":24,"line_end":24,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":843,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/linked_list.rs","byte_start":182916,"byte_end":182924,"line_start":64,"line_end":64,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":844,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/linked_list.rs","byte_start":182961,"byte_end":182969,"line_start":65,"line_end":65,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":845,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/linked_list.rs","byte_start":183023,"byte_end":183033,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":846,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/linked_list.rs","byte_start":186037,"byte_end":186047,"line_start":167,"line_end":167,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":847,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/linked_list.rs","byte_start":186292,"byte_end":186302,"line_start":177,"line_end":177,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":9795}],"docs":"","sig":null,"attributes":[]},{"id":848,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/linked_list.rs","byte_start":186702,"byte_end":186712,"line_start":195,"line_end":195,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":9803}],"docs":"","sig":null,"attributes":[]},{"id":849,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/linked_list.rs","byte_start":186934,"byte_end":186938,"line_start":204,"line_end":204,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":9807},{"krate":0,"index":9808}],"docs":"","sig":null,"attributes":[]},{"id":850,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/linked_list.rs","byte_start":187385,"byte_end":187393,"line_start":220,"line_end":220,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":851,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/linked_list.rs","byte_start":187592,"byte_end":187600,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":852,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/rand.rs","byte_start":197672,"byte_end":197680,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823}],"docs":"","sig":null,"attributes":[]},{"id":853,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/wake.rs","byte_start":199542,"byte_end":199550,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":839},{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":854,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/try_lock.rs","byte_start":9819699,"byte_end":9819706,"line_start":18,"line_end":18,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":855,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/try_lock.rs","byte_start":9819743,"byte_end":9819750,"line_start":19,"line_end":19,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":856,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/try_lock.rs","byte_start":9819788,"byte_end":9819797,"line_start":21,"line_end":21,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":857,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/try_lock.rs","byte_start":9819983,"byte_end":9819990,"line_start":32,"line_end":32,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":9852},{"krate":0,"index":9853}],"docs":"","sig":null,"attributes":[]},{"id":858,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/try_lock.rs","byte_start":9820624,"byte_end":9820633,"line_start":62,"line_end":62,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":9856},{"krate":0,"index":9857}],"docs":"","sig":null,"attributes":[]},{"id":859,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/try_lock.rs","byte_start":9820765,"byte_end":9820774,"line_start":70,"line_end":70,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":9860}],"docs":"","sig":null,"attributes":[]},{"id":860,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/try_lock.rs","byte_start":9820896,"byte_end":9820905,"line_start":76,"line_end":76,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":9863}],"docs":"","sig":null,"attributes":[]},{"id":861,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/intrusive_double_linked_list.rs","byte_start":203516,"byte_end":203524,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":869}],"docs":"","sig":null,"attributes":[]},{"id":862,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/intrusive_double_linked_list.rs","byte_start":203774,"byte_end":203782,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":872},{"krate":0,"index":873}],"docs":"","sig":null,"attributes":[]},{"id":863,"kind":"Direct","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/intrusive_double_linked_list.rs","byte_start":203887,"byte_end":203895,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":876}],"docs":"","sig":null,"attributes":[]},{"id":864,"kind":"Inherent","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/intrusive_double_linked_list.rs","byte_start":204204,"byte_end":204214,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":884},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":14197,"byte_end":14203,"line_start":348,"line_end":348,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/mod.rs","byte_start":16314,"byte_end":16321,"line_start":35,"line_end":35,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":79}},{"kind":"Mod","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":14228,"byte_end":14230,"line_start":351,"line_end":351,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":906}},{"kind":"Mod","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/mod.rs","byte_start":8550830,"byte_end":8550832,"line_start":51,"line_end":51,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":1101}},{"kind":"Mod","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/mod.rs","byte_start":8600749,"byte_end":8600753,"line_start":4,"line_end":4,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1102}},{"kind":"Mod","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":14258,"byte_end":14264,"line_start":355,"line_end":355,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":83}},{"kind":"Mod","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":14275,"byte_end":14277,"line_start":357,"line_end":357,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":177}},{"kind":"Mod","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":14287,"byte_end":14290,"line_start":358,"line_end":358,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":313}},{"kind":"Mod","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/mod.rs","byte_start":72960,"byte_end":72963,"line_start":34,"line_end":34,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":3358}},{"kind":"Mod","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/mod.rs","byte_start":73067,"byte_end":73070,"line_start":40,"line_end":40,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":3662}},{"kind":"Mod","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/mod.rs","byte_start":73134,"byte_end":73138,"line_start":45,"line_end":45,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":3809}},{"kind":"Mod","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/mod.rs","byte_start":8948111,"byte_end":8948119,"line_start":3,"line_end":3,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":3810}},{"kind":"Mod","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":14322,"byte_end":14329,"line_start":363,"line_end":363,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":564}},{"kind":"Mod","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":14359,"byte_end":14366,"line_start":366,"line_end":366,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":4388}},{"kind":"Mod","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":14379,"byte_end":14386,"line_start":369,"line_end":369,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":570}},{"kind":"Mod","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":14437,"byte_end":14443,"line_start":374,"line_end":374,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":6040}},{"kind":"Mod","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/mod.rs","byte_start":9209836,"byte_end":9209840,"line_start":59,"line_end":59,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":6101}},{"kind":"Mod","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":14474,"byte_end":14480,"line_start":378,"line_end":378,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":6222}},{"kind":"Mod","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":14509,"byte_end":14513,"line_start":382,"line_end":382,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":6911}},{"kind":"Mod","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9365591,"byte_end":9365600,"line_start":435,"line_end":435,"column_start":13,"column_end":22},"ref_id":{"krate":0,"index":6925}},{"kind":"Mod","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9365758,"byte_end":9365762,"line_start":442,"line_end":442,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":7112}},{"kind":"Mod","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/mod.rs","byte_start":9414213,"byte_end":9414218,"line_start":79,"line_end":79,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":7511}},{"kind":"Mod","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9365909,"byte_end":9365916,"line_start":450,"line_end":450,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":7682}},{"kind":"Mod","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mod.rs","byte_start":9366230,"byte_end":9366235,"line_start":463,"line_end":463,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":8212}},{"kind":"Mod","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":14577,"byte_end":14581,"line_start":389,"line_end":389,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":8651}},{"kind":"Mod","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/lib.rs","byte_start":14635,"byte_end":14639,"line_start":394,"line_end":394,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":8855}},{"kind":"Mod","span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/mod.rs","byte_start":9687250,"byte_end":9687261,"line_start":99,"line_end":99,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":8858}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/scoped_tls.rs","byte_start":29760,"byte_end":29769,"line_start":32,"line_end":32,"column_start":25,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":57},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/scoped_tls.rs","byte_start":29785,"byte_end":29794,"line_start":34,"line_end":34,"column_start":9,"column_end":18},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":57},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/macros/scoped_tls.rs","byte_start":30144,"byte_end":30149,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":68},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/dir_builder.rs","byte_start":8557851,"byte_end":8557861,"line_start":26,"line_end":26,"column_start":6,"column_end":16},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1311},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8563632,"byte_end":8563636,"line_start":104,"line_end":104,"column_start":6,"column_end":10},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":977},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8576861,"byte_end":8576865,"line_start":539,"line_end":539,"column_start":20,"column_end":24},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":977},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8579349,"byte_end":8579353,"line_start":606,"line_end":606,"column_start":20,"column_end":24},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":977},"to":{"krate":0,"index":246}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8581778,"byte_end":8581782,"line_start":676,"line_end":676,"column_start":21,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":977},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8584753,"byte_end":8584757,"line_start":764,"line_end":764,"column_start":26,"column_end":30},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":977},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8584855,"byte_end":8584859,"line_start":770,"line_end":770,"column_start":21,"column_end":25},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":977},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/file.rs","byte_start":8585088,"byte_end":8585092,"line_start":779,"line_end":779,"column_start":37,"column_end":41},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":977},"to":{"krate":1,"index":8746}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8590017,"byte_end":8590028,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1339},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8600497,"byte_end":8600508,"line_start":393,"line_end":393,"column_start":37,"column_end":48},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1339},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/open_options.rs","byte_start":8600626,"byte_end":8600637,"line_start":399,"line_end":399,"column_start":18,"column_end":29},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1339},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/open_options_ext.rs","byte_start":8603911,"byte_end":8603922,"line_start":69,"line_end":69,"column_start":25,"column_end":36},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1339},"to":{"krate":0,"index":1117}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/os/unix/dir_builder_ext.rs","byte_start":8604751,"byte_end":8604761,"line_start":24,"line_end":24,"column_start":24,"column_end":34},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1311},"to":{"krate":0,"index":1126}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8607833,"byte_end":8607840,"line_start":51,"line_end":51,"column_start":6,"column_end":13},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8609075,"byte_end":8609082,"line_start":88,"line_end":88,"column_start":32,"column_end":39},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1346},"to":{"krate":19,"index":68}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8609909,"byte_end":8609917,"line_start":113,"line_end":113,"column_start":6,"column_end":14},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/fs/read_dir.rs","byte_start":8613699,"byte_end":8613707,"line_start":240,"line_end":240,"column_start":22,"column_end":30},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1360},"to":{"krate":1,"index":8725}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/maybe_done.rs","byte_start":31905,"byte_end":31914,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1365},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/maybe_done.rs","byte_start":32077,"byte_end":32086,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1365},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/maybe_done.rs","byte_start":33273,"byte_end":33282,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1365},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/poll_fn.rs","byte_start":34036,"byte_end":34042,"line_start":13,"line_end":13,"column_start":19,"column_end":25},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/poll_fn.rs","byte_start":34256,"byte_end":34262,"line_start":23,"line_end":23,"column_start":24,"column_end":30},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/poll_fn.rs","byte_start":34404,"byte_end":34410,"line_start":29,"line_end":29,"column_start":23,"column_end":29},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/ready.rs","byte_start":34941,"byte_end":34946,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1378},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/ready.rs","byte_start":34973,"byte_end":34978,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1378},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/future/try_join.rs","byte_start":36175,"byte_end":36183,"line_start":41,"line_end":41,"column_start":44,"column_end":52},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1385},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/blocking.rs","byte_start":8619682,"byte_end":8619690,"line_start":38,"line_end":38,"column_start":13,"column_end":21},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1484},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/blocking.rs","byte_start":8619963,"byte_end":8619971,"line_start":49,"line_end":49,"column_start":23,"column_end":31},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1484},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/blocking.rs","byte_start":8621576,"byte_end":8621584,"line_start":100,"line_end":100,"column_start":24,"column_end":32},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1484},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/blocking.rs","byte_start":8624309,"byte_end":8624312,"line_start":190,"line_end":190,"column_start":6,"column_end":9},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1492},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/blocking.rs","byte_start":8626127,"byte_end":8626130,"line_start":271,"line_end":271,"column_start":10,"column_end":13},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1492},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":47547,"byte_end":47556,"line_start":23,"line_end":23,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":215},"to":{"krate":0,"index":186}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":50006,"byte_end":50009,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"kind":{"Impl":{"id":34}},"from":{"krate":5,"index":85},"to":{"krate":0,"index":186}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":50169,"byte_end":50172,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"kind":{"Impl":{"id":35}},"from":{"krate":2,"index":31876},"to":{"krate":0,"index":186}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_buf_read.rs","byte_start":50801,"byte_end":50807,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"kind":{"Impl":{"id":36}},"from":{"krate":1,"index":7086},"to":{"krate":0,"index":186}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":56771,"byte_end":56774,"line_start":153,"line_end":153,"column_start":51,"column_end":54},"kind":{"Impl":{"id":37}},"from":{"krate":5,"index":85},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":56917,"byte_end":56920,"line_start":161,"line_end":161,"column_start":23,"column_end":26},"kind":{"Impl":{"id":38}},"from":{"krate":2,"index":31876},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_read.rs","byte_start":57716,"byte_end":57722,"line_start":193,"line_end":193,"column_start":48,"column_end":54},"kind":{"Impl":{"id":39}},"from":{"krate":1,"index":7086},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_seek.rs","byte_start":60148,"byte_end":60151,"line_start":64,"line_end":64,"column_start":51,"column_end":54},"kind":{"Impl":{"id":40}},"from":{"krate":5,"index":85},"to":{"krate":0,"index":246}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_seek.rs","byte_start":60294,"byte_end":60297,"line_start":72,"line_end":72,"column_start":23,"column_end":26},"kind":{"Impl":{"id":41}},"from":{"krate":2,"index":31876},"to":{"krate":0,"index":246}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_seek.rs","byte_start":60751,"byte_end":60757,"line_start":90,"line_end":90,"column_start":48,"column_end":54},"kind":{"Impl":{"id":42}},"from":{"krate":1,"index":7086},"to":{"krate":0,"index":246}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":68662,"byte_end":68665,"line_start":174,"line_end":174,"column_start":53,"column_end":56},"kind":{"Impl":{"id":43}},"from":{"krate":5,"index":85},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":68813,"byte_end":68816,"line_start":182,"line_end":182,"column_start":24,"column_end":27},"kind":{"Impl":{"id":44}},"from":{"krate":2,"index":31876},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":69385,"byte_end":69388,"line_start":204,"line_end":204,"column_start":21,"column_end":24},"kind":{"Impl":{"id":45}},"from":{"krate":5,"index":4551},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":69896,"byte_end":69902,"line_start":223,"line_end":223,"column_start":25,"column_end":31},"kind":{"Impl":{"id":46}},"from":{"krate":1,"index":7086},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":70415,"byte_end":70421,"line_start":241,"line_end":241,"column_start":25,"column_end":31},"kind":{"Impl":{"id":47}},"from":{"krate":1,"index":7086},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":70937,"byte_end":70943,"line_start":259,"line_end":259,"column_start":25,"column_end":31},"kind":{"Impl":{"id":48}},"from":{"krate":1,"index":7086},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/async_write.rs","byte_start":71454,"byte_end":71460,"line_start":277,"line_end":277,"column_start":25,"column_end":31},"kind":{"Impl":{"id":49}},"from":{"krate":1,"index":7086},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/driver/scheduled_io.rs","byte_start":8638434,"byte_end":8638445,"line_start":17,"line_end":17,"column_start":16,"column_end":27},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1716},"to":{"krate":0,"index":9602}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/driver/scheduled_io.rs","byte_start":8639204,"byte_end":8639215,"line_start":48,"line_end":48,"column_start":18,"column_end":29},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1716},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/driver/scheduled_io.rs","byte_start":8639422,"byte_end":8639433,"line_start":58,"line_end":58,"column_start":6,"column_end":17},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1716},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/driver/scheduled_io.rs","byte_start":8642055,"byte_end":8642066,"line_start":132,"line_end":132,"column_start":15,"column_end":26},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1716},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/driver/mod.rs","byte_start":8627772,"byte_end":8627778,"line_start":66,"line_end":66,"column_start":6,"column_end":12},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1583},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/driver/mod.rs","byte_start":8630639,"byte_end":8630645,"line_start":167,"line_end":167,"column_start":15,"column_end":21},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1583},"to":{"krate":0,"index":551}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/driver/mod.rs","byte_start":8631044,"byte_end":8631050,"line_start":188,"line_end":188,"column_start":21,"column_end":27},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1583},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/driver/mod.rs","byte_start":8631186,"byte_end":8631192,"line_start":196,"line_end":196,"column_start":6,"column_end":12},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1722},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/driver/mod.rs","byte_start":8632335,"byte_end":8632341,"line_start":227,"line_end":227,"column_start":17,"column_end":23},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1722},"to":{"krate":0,"index":558}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/driver/mod.rs","byte_start":8632419,"byte_end":8632425,"line_start":233,"line_end":233,"column_start":21,"column_end":27},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1722},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/driver/mod.rs","byte_start":8632560,"byte_end":8632565,"line_start":241,"line_end":241,"column_start":6,"column_end":11},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1587},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/driver/mod.rs","byte_start":8634109,"byte_end":8634118,"line_start":295,"line_end":295,"column_start":6,"column_end":15},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1726},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8648624,"byte_end":8648635,"line_start":164,"line_end":164,"column_start":9,"column_end":20},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1742},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8656426,"byte_end":8656437,"line_start":380,"line_end":380,"column_start":23,"column_end":34},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1742},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8656930,"byte_end":8656941,"line_start":402,"line_end":402,"column_start":24,"column_end":35},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1742},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8658022,"byte_end":8658033,"line_start":448,"line_end":448,"column_start":46,"column_end":57},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1742},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/poll_evented.rs","byte_start":8658206,"byte_end":8658217,"line_start":454,"line_end":454,"column_start":27,"column_end":38},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1742},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8660365,"byte_end":8660377,"line_start":49,"line_end":49,"column_start":6,"column_end":18},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1746},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8671247,"byte_end":8671259,"line_start":329,"line_end":329,"column_start":22,"column_end":34},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1746},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8671284,"byte_end":8671296,"line_start":330,"line_end":330,"column_start":22,"column_end":34},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1746},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/registration.rs","byte_start":8671315,"byte_end":8671327,"line_start":332,"line_end":332,"column_start":15,"column_end":27},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1746},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/stderr.rs","byte_start":8673886,"byte_end":8673892,"line_start":76,"line_end":76,"column_start":37,"column_end":43},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1799},"to":{"krate":1,"index":8746}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/stderr.rs","byte_start":8674200,"byte_end":8674206,"line_start":89,"line_end":89,"column_start":21,"column_end":27},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1799},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/stdin.rs","byte_start":8676614,"byte_end":8676619,"line_start":52,"line_end":52,"column_start":37,"column_end":42},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1804},"to":{"krate":1,"index":8746}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/stdin.rs","byte_start":8676923,"byte_end":8676928,"line_start":65,"line_end":65,"column_start":20,"column_end":25},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1804},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/stdout.rs","byte_start":8679711,"byte_end":8679717,"line_start":76,"line_end":76,"column_start":37,"column_end":43},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1809},"to":{"krate":1,"index":8746}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/stdout.rs","byte_start":8680025,"byte_end":8680031,"line_start":89,"line_end":89,"column_start":21,"column_end":27},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1809},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/split.rs","byte_start":8682151,"byte_end":8682159,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1925},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/split.rs","byte_start":8683076,"byte_end":8683085,"line_start":93,"line_end":93,"column_start":9,"column_end":18},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1928},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/split.rs","byte_start":8683335,"byte_end":8683343,"line_start":101,"line_end":101,"column_start":34,"column_end":42},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1925},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/split.rs","byte_start":8683898,"byte_end":8683907,"line_start":121,"line_end":121,"column_start":36,"column_end":45},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1928},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/split.rs","byte_start":8684856,"byte_end":8684861,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1832},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/split.rs","byte_start":8685254,"byte_end":8685259,"line_start":166,"line_end":166,"column_start":9,"column_end":14},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1836},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/split.rs","byte_start":8685512,"byte_end":8685517,"line_start":174,"line_end":174,"column_start":18,"column_end":23},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1836},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/split.rs","byte_start":8685640,"byte_end":8685648,"line_start":180,"line_end":180,"column_start":31,"column_end":39},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1925},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/split.rs","byte_start":8685685,"byte_end":8685694,"line_start":181,"line_end":181,"column_start":31,"column_end":40},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1928},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/split.rs","byte_start":8685731,"byte_end":8685739,"line_start":182,"line_end":182,"column_start":31,"column_end":39},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1925},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/split.rs","byte_start":8685776,"byte_end":8685785,"line_start":183,"line_end":183,"column_start":31,"column_end":40},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1928},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/split.rs","byte_start":8685828,"byte_end":8685836,"line_start":185,"line_end":185,"column_start":36,"column_end":44},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1925},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/split.rs","byte_start":8686004,"byte_end":8686013,"line_start":191,"line_end":191,"column_start":36,"column_end":45},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1928},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/seek.rs","byte_start":8686703,"byte_end":8686707,"line_start":25,"line_end":25,"column_start":20,"column_end":24},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1933},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_buf_read_ext.rs","byte_start":8689769,"byte_end":8689781,"line_start":11,"line_end":11,"column_start":32,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":186},"to":{"krate":0,"index":2667}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_buf_read_ext.rs","byte_start":8698802,"byte_end":8698803,"line_start":258,"line_end":258,"column_start":52,"column_end":53},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1957},"to":{"krate":0,"index":2667}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_read_ext.rs","byte_start":8700830,"byte_end":8700839,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":215},"to":{"krate":0,"index":2675}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_read_ext.rs","byte_start":8738235,"byte_end":8738236,"line_start":1118,"line_end":1118,"column_start":46,"column_end":47},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2004},"to":{"krate":0,"index":2675}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8739115,"byte_end":8739124,"line_start":35,"line_end":35,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":246},"to":{"krate":0,"index":2012}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_seek_ext.rs","byte_start":8739994,"byte_end":8739995,"line_start":67,"line_end":67,"column_start":46,"column_end":47},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2015},"to":{"krate":0,"index":2012}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_write_ext.rs","byte_start":8742052,"byte_end":8742062,"line_start":68,"line_end":68,"column_start":30,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":271},"to":{"krate":0,"index":2727}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/async_write_ext.rs","byte_start":8775342,"byte_end":8775343,"line_start":1006,"line_end":1006,"column_start":48,"column_end":49},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2056},"to":{"krate":0,"index":2727}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_reader.rs","byte_start":8776759,"byte_end":8776768,"line_start":38,"line_end":38,"column_start":20,"column_end":29},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":12606},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_reader.rs","byte_start":8778947,"byte_end":8778956,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":12606},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_reader.rs","byte_start":8779932,"byte_end":8779941,"line_start":135,"line_end":135,"column_start":37,"column_end":46},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":12606},"to":{"krate":0,"index":186}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_reader.rs","byte_start":8780772,"byte_end":8780781,"line_start":157,"line_end":157,"column_start":48,"column_end":57},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":12606},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_reader.rs","byte_start":8781497,"byte_end":8781506,"line_start":183,"line_end":183,"column_start":36,"column_end":45},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":12606},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_stream.rs","byte_start":8783013,"byte_end":8783022,"line_start":26,"line_end":26,"column_start":34,"column_end":43},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":12579},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_stream.rs","byte_start":8784859,"byte_end":8784868,"line_start":82,"line_end":82,"column_start":45,"column_end":54},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":12579},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_stream.rs","byte_start":8785010,"byte_end":8785019,"line_start":88,"line_end":88,"column_start":45,"column_end":54},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":12579},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_stream.rs","byte_start":8785731,"byte_end":8785740,"line_start":118,"line_end":118,"column_start":49,"column_end":58},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":12579},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_stream.rs","byte_start":8786270,"byte_end":8786279,"line_start":136,"line_end":136,"column_start":48,"column_end":57},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":12579},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_stream.rs","byte_start":8786758,"byte_end":8786767,"line_start":151,"line_end":151,"column_start":51,"column_end":60},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":12579},"to":{"krate":0,"index":186}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_writer.rs","byte_start":8788721,"byte_end":8788730,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":12529},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_writer.rs","byte_start":8791008,"byte_end":8791017,"line_start":117,"line_end":117,"column_start":36,"column_end":45},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":12529},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_writer.rs","byte_start":8791907,"byte_end":8791916,"line_start":146,"line_end":146,"column_start":47,"column_end":56},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":12529},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_writer.rs","byte_start":8792398,"byte_end":8792407,"line_start":161,"line_end":161,"column_start":53,"column_end":62},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":12529},"to":{"krate":0,"index":186}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/buf_writer.rs","byte_start":8792694,"byte_end":8792703,"line_start":171,"line_end":171,"column_start":36,"column_end":45},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":12529},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/chain.rs","byte_start":8793872,"byte_end":8793877,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":12480},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/chain.rs","byte_start":8795017,"byte_end":8795022,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":12480},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/chain.rs","byte_start":8795301,"byte_end":8795306,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":12480},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/chain.rs","byte_start":8796129,"byte_end":8796134,"line_start":113,"line_end":113,"column_start":29,"column_end":34},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":12480},"to":{"krate":0,"index":186}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/copy.rs","byte_start":8799177,"byte_end":8799181,"line_start":78,"line_end":78,"column_start":23,"column_end":27},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2777},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/empty.rs","byte_start":8802291,"byte_end":8802296,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2793},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/empty.rs","byte_start":8802625,"byte_end":8802630,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2793},"to":{"krate":0,"index":186}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/empty.rs","byte_start":8802863,"byte_end":8802868,"line_start":73,"line_end":73,"column_start":21,"column_end":26},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2793},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/flush.rs","byte_start":8803689,"byte_end":8803694,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2796},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/lines.rs","byte_start":8804874,"byte_end":8804879,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":12441},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/lines.rs","byte_start":8806131,"byte_end":8806136,"line_start":82,"line_end":82,"column_start":9,"column_end":14},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":12441},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/lines.rs","byte_start":8806883,"byte_end":8806888,"line_start":113,"line_end":113,"column_start":49,"column_end":54},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":12441},"to":{"krate":19,"index":68}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/mem.rs","byte_start":8810048,"byte_end":8810060,"line_start":91,"line_end":91,"column_start":20,"column_end":32},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2804},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/mem.rs","byte_start":8810609,"byte_end":8810621,"line_start":107,"line_end":107,"column_start":21,"column_end":33},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2804},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/mem.rs","byte_start":8811346,"byte_end":8811358,"line_start":134,"line_end":134,"column_start":15,"column_end":27},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2804},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/mem.rs","byte_start":8811518,"byte_end":8811522,"line_start":143,"line_end":143,"column_start":6,"column_end":10},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/mem.rs","byte_start":8811928,"byte_end":8811932,"line_start":162,"line_end":162,"column_start":20,"column_end":24},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2809},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/mem.rs","byte_start":8812758,"byte_end":8812762,"line_start":188,"line_end":188,"column_start":21,"column_end":25},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2809},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/read.rs","byte_start":8814690,"byte_end":8814694,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2817},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/read_buf.rs","byte_start":8815755,"byte_end":8815762,"line_start":27,"line_end":27,"column_start":23,"column_end":30},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2826},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/read_exact.rs","byte_start":8817127,"byte_end":8817136,"line_start":43,"line_end":43,"column_start":20,"column_end":29},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2837},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/read_line.rs","byte_start":8825414,"byte_end":8825422,"line_start":105,"line_end":105,"column_start":51,"column_end":59},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2991},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/read_to_end.rs","byte_start":8831342,"byte_end":8831351,"line_start":147,"line_end":147,"column_start":20,"column_end":29},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":3002},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/read_to_string.rs","byte_start":8834090,"byte_end":8834102,"line_start":66,"line_end":66,"column_start":20,"column_end":32},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":3013},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/read_until.rs","byte_start":8836542,"byte_end":8836551,"line_start":66,"line_end":66,"column_start":51,"column_end":60},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":3024},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/repeat.rs","byte_start":8838385,"byte_end":8838391,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":3036},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/shutdown.rs","byte_start":8839513,"byte_end":8839521,"line_start":27,"line_end":27,"column_start":20,"column_end":28},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":3040},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/sink.rs","byte_start":8841354,"byte_end":8841358,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":3048},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/sink.rs","byte_start":8841868,"byte_end":8841872,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":3048},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/split.rs","byte_start":8842837,"byte_end":8842842,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":11607},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/split.rs","byte_start":8843581,"byte_end":8843586,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":11607},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/split.rs","byte_start":8844365,"byte_end":8844370,"line_start":94,"line_end":94,"column_start":49,"column_end":54},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":11607},"to":{"krate":19,"index":68}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/stream_reader.rs","byte_start":8857909,"byte_end":8857921,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":11560},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/stream_reader.rs","byte_start":8858426,"byte_end":8858438,"line_start":98,"line_end":98,"column_start":26,"column_end":38},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":11560},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/stream_reader.rs","byte_start":8859977,"byte_end":8859989,"line_start":151,"line_end":151,"column_start":29,"column_end":41},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":11560},"to":{"krate":0,"index":186}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/reader_stream.rs","byte_start":8863518,"byte_end":8863530,"line_start":75,"line_end":75,"column_start":20,"column_end":32},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":11518},"to":{"krate":19,"index":68}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/take.rs","byte_start":8845538,"byte_end":8845542,"line_start":29,"line_end":29,"column_start":20,"column_end":24},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":11478},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/take.rs","byte_start":8847170,"byte_end":8847174,"line_start":78,"line_end":78,"column_start":34,"column_end":38},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":11478},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/take.rs","byte_start":8847831,"byte_end":8847835,"line_start":100,"line_end":100,"column_start":40,"column_end":44},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":11478},"to":{"krate":0,"index":186}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/write.rs","byte_start":8849392,"byte_end":8849397,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":3110},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/write_all.rs","byte_start":8850190,"byte_end":8850198,"line_start":25,"line_end":25,"column_start":20,"column_end":28},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":3119},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/io/util/write_buf.rs","byte_start":8851706,"byte_end":8851714,"line_start":29,"line_end":29,"column_start":23,"column_end":31},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":3128},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":74102,"byte_end":74119,"line_start":22,"line_end":22,"column_start":34,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":373},"to":{"krate":0,"index":324}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":74569,"byte_end":74579,"line_start":44,"line_end":44,"column_start":24,"column_end":34},"kind":{"Impl":{"id":153}},"from":{"krate":1,"index":7240},"to":{"krate":0,"index":324}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":74619,"byte_end":74629,"line_start":46,"line_end":46,"column_start":36,"column_end":46},"kind":{"Impl":{"id":154}},"from":{"krate":1,"index":7240},"to":{"krate":0,"index":373}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":74910,"byte_end":74922,"line_start":58,"line_end":58,"column_start":24,"column_end":36},"kind":{"Impl":{"id":155}},"from":{"krate":1,"index":7268},"to":{"krate":0,"index":324}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":74962,"byte_end":74974,"line_start":60,"line_end":60,"column_start":36,"column_end":48},"kind":{"Impl":{"id":156}},"from":{"krate":1,"index":7268},"to":{"krate":0,"index":373}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":75234,"byte_end":75246,"line_start":71,"line_end":71,"column_start":24,"column_end":36},"kind":{"Impl":{"id":157}},"from":{"krate":1,"index":7271},"to":{"krate":0,"index":324}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":75286,"byte_end":75298,"line_start":73,"line_end":73,"column_start":36,"column_end":48},"kind":{"Impl":{"id":158}},"from":{"krate":1,"index":7271},"to":{"krate":0,"index":373}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":79320,"byte_end":79326,"line_start":219,"line_end":219,"column_start":28,"column_end":34},"kind":{"Impl":{"id":161}},"from":{"krate":5,"index":5311},"to":{"krate":0,"index":324}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":79370,"byte_end":79376,"line_start":221,"line_end":221,"column_start":40,"column_end":46},"kind":{"Impl":{"id":162}},"from":{"krate":5,"index":5311},"to":{"krate":0,"index":373}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":80742,"byte_end":80752,"line_start":272,"line_end":272,"column_start":25,"column_end":35},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":3330},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/addr.rs","byte_start":81400,"byte_end":81409,"line_start":290,"line_end":290,"column_start":27,"column_end":36},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":3339},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8868214,"byte_end":8868225,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":3623},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8878920,"byte_end":8878931,"line_start":398,"line_end":398,"column_start":32,"column_end":43},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":3623},"to":{"krate":19,"index":68}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8879246,"byte_end":8879257,"line_start":410,"line_end":410,"column_start":41,"column_end":52},"kind":{"Impl":{"id":167}},"from":{"krate":20,"index":1044},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8879697,"byte_end":8879708,"line_start":424,"line_end":424,"column_start":36,"column_end":47},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3623},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8880034,"byte_end":8880045,"line_start":436,"line_end":436,"column_start":21,"column_end":32},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":3623},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/listener.rs","byte_start":8880261,"byte_end":8880272,"line_start":447,"line_end":447,"column_start":22,"column_end":33},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":3623},"to":{"krate":1,"index":8746}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/incoming.rs","byte_start":8881104,"byte_end":8881112,"line_start":15,"line_end":15,"column_start":6,"column_end":14},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":3625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/incoming.rs","byte_start":8881750,"byte_end":8881758,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":3625},"to":{"krate":19,"index":68}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8883921,"byte_end":8883929,"line_start":55,"line_end":55,"column_start":6,"column_end":14},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":3631},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8886384,"byte_end":8886392,"line_start":133,"line_end":133,"column_start":20,"column_end":28},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":3631},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8886712,"byte_end":8886721,"line_start":147,"line_end":147,"column_start":21,"column_end":30},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":3638},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8887534,"byte_end":8887542,"line_start":176,"line_end":176,"column_start":27,"column_end":35},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":3631},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split.rs","byte_start":8887636,"byte_end":8887645,"line_start":182,"line_end":182,"column_start":27,"column_end":36},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":3638},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8890733,"byte_end":8890745,"line_start":90,"line_end":90,"column_start":23,"column_end":35},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3654},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8890948,"byte_end":8890960,"line_start":99,"line_end":99,"column_start":16,"column_end":28},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":3654},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8890970,"byte_end":8890983,"line_start":101,"line_end":101,"column_start":6,"column_end":19},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3645},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8893817,"byte_end":8893830,"line_start":188,"line_end":188,"column_start":20,"column_end":33},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3645},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8894135,"byte_end":8894149,"line_start":202,"line_end":202,"column_start":6,"column_end":20},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":3649},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8894832,"byte_end":8894846,"line_start":221,"line_end":221,"column_start":15,"column_end":29},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":3649},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8895006,"byte_end":8895020,"line_start":229,"line_end":229,"column_start":21,"column_end":35},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":3649},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8895959,"byte_end":8895972,"line_start":262,"line_end":262,"column_start":27,"column_end":40},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":3645},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/split_owned.rs","byte_start":8896068,"byte_end":8896082,"line_start":268,"line_end":268,"column_start":27,"column_end":41},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":3649},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8898217,"byte_end":8898226,"line_start":63,"line_end":63,"column_start":6,"column_end":15},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":3660},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8923283,"byte_end":8923292,"line_start":838,"line_end":838,"column_start":39,"column_end":48},"kind":{"Impl":{"id":188}},"from":{"krate":20,"index":988},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8923728,"byte_end":8923737,"line_start":852,"line_end":852,"column_start":34,"column_end":43},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":3660},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8924090,"byte_end":8924099,"line_start":866,"line_end":866,"column_start":20,"column_end":29},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":3660},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8924413,"byte_end":8924422,"line_start":880,"line_end":880,"column_start":21,"column_end":30},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":3660},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8925166,"byte_end":8925175,"line_start":909,"line_end":909,"column_start":21,"column_end":30},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":3660},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/tcp/stream.rs","byte_start":8925389,"byte_end":8925398,"line_start":920,"line_end":920,"column_start":22,"column_end":31},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":3660},"to":{"krate":1,"index":8746}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8926404,"byte_end":8926413,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":3791},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8941074,"byte_end":8941083,"line_start":398,"line_end":398,"column_start":39,"column_end":48},"kind":{"Impl":{"id":195}},"from":{"krate":20,"index":1102},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8941519,"byte_end":8941528,"line_start":412,"line_end":412,"column_start":34,"column_end":43},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":3791},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8941848,"byte_end":8941857,"line_start":424,"line_end":424,"column_start":21,"column_end":30},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":3791},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/socket.rs","byte_start":8942076,"byte_end":8942085,"line_start":435,"line_end":435,"column_start":22,"column_end":31},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":3791},"to":{"krate":1,"index":8746}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8944171,"byte_end":8944183,"line_start":50,"line_end":50,"column_start":23,"column_end":35},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":3803},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8944386,"byte_end":8944398,"line_start":59,"line_end":59,"column_start":16,"column_end":28},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":3803},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8944925,"byte_end":8944933,"line_start":74,"line_end":74,"column_start":6,"column_end":14},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":3798},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8946565,"byte_end":8946573,"line_start":109,"line_end":109,"column_start":6,"column_end":14},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":3793},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8947893,"byte_end":8947901,"line_start":138,"line_end":138,"column_start":27,"column_end":35},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":3793},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/udp/split.rs","byte_start":8947992,"byte_end":8948000,"line_start":144,"line_end":144,"column_start":27,"column_end":35},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":3798},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8949258,"byte_end":8949270,"line_start":22,"line_end":22,"column_start":6,"column_end":18},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":4192},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8959691,"byte_end":8959703,"line_start":314,"line_end":314,"column_start":41,"column_end":53},"kind":{"Impl":{"id":206}},"from":{"krate":27,"index":181},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8960145,"byte_end":8960157,"line_start":328,"line_end":328,"column_start":37,"column_end":49},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":4192},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8960486,"byte_end":8960498,"line_start":340,"line_end":340,"column_start":21,"column_end":33},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":4192},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/socket.rs","byte_start":8960623,"byte_end":8960635,"line_start":346,"line_end":346,"column_start":18,"column_end":30},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":4192},"to":{"krate":1,"index":8746}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split.rs","byte_start":8961572,"byte_end":8961580,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":4194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split.rs","byte_start":8961972,"byte_end":8961980,"line_start":43,"line_end":43,"column_start":6,"column_end":14},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":4201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split.rs","byte_start":8962483,"byte_end":8962491,"line_start":58,"line_end":58,"column_start":30,"column_end":38},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":4194},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split.rs","byte_start":8962591,"byte_end":8962599,"line_start":64,"line_end":64,"column_start":30,"column_end":38},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":4201},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8964076,"byte_end":8964088,"line_start":53,"line_end":53,"column_start":23,"column_end":35},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":4217},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8964291,"byte_end":8964303,"line_start":62,"line_end":62,"column_start":16,"column_end":28},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":4217},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8964867,"byte_end":8964880,"line_start":77,"line_end":77,"column_start":6,"column_end":19},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":4213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8965665,"byte_end":8965678,"line_start":98,"line_end":98,"column_start":6,"column_end":19},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":4208},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8966848,"byte_end":8966861,"line_start":130,"line_end":130,"column_start":15,"column_end":28},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":4208},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8967030,"byte_end":8967043,"line_start":138,"line_end":138,"column_start":30,"column_end":43},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":4208},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/datagram/split_owned.rs","byte_start":8967144,"byte_end":8967157,"line_start":144,"line_end":144,"column_start":30,"column_end":43},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":4213},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/incoming.rs","byte_start":8967502,"byte_end":8967510,"line_start":14,"line_end":14,"column_start":6,"column_end":14},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":4223},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/incoming.rs","byte_start":8968242,"byte_end":8968250,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":4223},"to":{"krate":19,"index":68}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8970377,"byte_end":8970389,"line_start":54,"line_end":54,"column_start":6,"column_end":18},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":4229},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8975093,"byte_end":8975105,"line_start":184,"line_end":184,"column_start":32,"column_end":44},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":4229},"to":{"krate":19,"index":68}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8975421,"byte_end":8975433,"line_start":196,"line_end":196,"column_start":41,"column_end":53},"kind":{"Impl":{"id":225}},"from":{"krate":27,"index":185},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8975875,"byte_end":8975887,"line_start":210,"line_end":210,"column_start":37,"column_end":49},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":4229},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8976207,"byte_end":8976219,"line_start":222,"line_end":222,"column_start":21,"column_end":33},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":4229},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/listener.rs","byte_start":8976344,"byte_end":8976356,"line_start":228,"line_end":228,"column_start":18,"column_end":30},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":4229},"to":{"krate":1,"index":8746}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split.rs","byte_start":8978333,"byte_end":8978341,"line_start":53,"line_end":53,"column_start":20,"column_end":28},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":4231},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split.rs","byte_start":8978661,"byte_end":8978670,"line_start":67,"line_end":67,"column_start":21,"column_end":30},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":4238},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split.rs","byte_start":8979154,"byte_end":8979162,"line_start":85,"line_end":85,"column_start":28,"column_end":36},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":4231},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split.rs","byte_start":8979258,"byte_end":8979267,"line_start":91,"line_end":91,"column_start":28,"column_end":37},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":4238},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8982372,"byte_end":8982384,"line_start":89,"line_end":89,"column_start":23,"column_end":35},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":4254},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8982587,"byte_end":8982599,"line_start":98,"line_end":98,"column_start":16,"column_end":28},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":4254},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8982609,"byte_end":8982622,"line_start":100,"line_end":100,"column_start":6,"column_end":19},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":4245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8983038,"byte_end":8983051,"line_start":111,"line_end":111,"column_start":20,"column_end":33},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":4245},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8983356,"byte_end":8983370,"line_start":125,"line_end":125,"column_start":6,"column_end":20},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":4249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8984068,"byte_end":8984082,"line_start":144,"line_end":144,"column_start":15,"column_end":29},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":4249},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8984242,"byte_end":8984256,"line_start":152,"line_end":152,"column_start":21,"column_end":35},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":4249},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8984990,"byte_end":8985003,"line_start":177,"line_end":177,"column_start":28,"column_end":41},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":4245},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/split_owned.rs","byte_start":8985101,"byte_end":8985115,"line_start":183,"line_end":183,"column_start":28,"column_end":42},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":4249},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8986136,"byte_end":8986146,"line_start":29,"line_end":29,"column_start":6,"column_end":16},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":4260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8990493,"byte_end":8990503,"line_start":143,"line_end":143,"column_start":39,"column_end":49},"kind":{"Impl":{"id":243}},"from":{"krate":27,"index":189},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8990941,"byte_end":8990951,"line_start":157,"line_end":157,"column_start":35,"column_end":45},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":4260},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8991264,"byte_end":8991274,"line_start":169,"line_end":169,"column_start":20,"column_end":30},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":4260},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8991588,"byte_end":8991598,"line_start":183,"line_end":183,"column_start":21,"column_end":31},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":4260},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8992085,"byte_end":8992095,"line_start":202,"line_end":202,"column_start":6,"column_end":16},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":4260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8993612,"byte_end":8993622,"line_start":247,"line_end":247,"column_start":21,"column_end":31},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":4260},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/net/unix/stream.rs","byte_start":8993747,"byte_end":8993757,"line_start":253,"line_end":253,"column_start":18,"column_end":28},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":4260},"to":{"krate":1,"index":8746}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_ptr.rs","byte_start":84816,"byte_end":84825,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_ptr.rs","byte_start":84999,"byte_end":85008,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":383},"to":{"krate":2,"index":2231}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_ptr.rs","byte_start":85157,"byte_end":85166,"line_start":24,"line_end":24,"column_start":24,"column_end":33},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":383},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_u16.rs","byte_start":85510,"byte_end":85519,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":400},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_u16.rs","byte_start":85544,"byte_end":85553,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":400},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_u16.rs","byte_start":85563,"byte_end":85572,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_u16.rs","byte_start":86058,"byte_end":86067,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":400},"to":{"krate":2,"index":2231}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_u16.rs","byte_start":86352,"byte_end":86361,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":400},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_u32.rs","byte_start":86702,"byte_end":86711,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":416},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_u32.rs","byte_start":86736,"byte_end":86745,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":416},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_u32.rs","byte_start":86755,"byte_end":86764,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":416},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_u32.rs","byte_start":86943,"byte_end":86952,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":416},"to":{"krate":2,"index":2231}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_u32.rs","byte_start":87237,"byte_end":87246,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":416},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_u8.rs","byte_start":89361,"byte_end":89369,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":435},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_u8.rs","byte_start":89394,"byte_end":89402,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":435},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_u8.rs","byte_start":89412,"byte_end":89420,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":435},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_u8.rs","byte_start":89595,"byte_end":89603,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":435},"to":{"krate":2,"index":2231}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_u8.rs","byte_start":89887,"byte_end":89895,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":435},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_usize.rs","byte_start":90235,"byte_end":90246,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":450},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_usize.rs","byte_start":90271,"byte_end":90282,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":450},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_usize.rs","byte_start":90292,"byte_end":90303,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":450},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_usize.rs","byte_start":90986,"byte_end":90997,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":450},"to":{"krate":2,"index":2231}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_usize.rs","byte_start":91287,"byte_end":91298,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":450},"to":{"krate":2,"index":2244}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/atomic_usize.rs","byte_start":91462,"byte_end":91473,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":450},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/loom/std/unsafe_cell.rs","byte_start":91661,"byte_end":91671,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":4280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/park/either.rs","byte_start":8998114,"byte_end":8998120,"line_start":11,"line_end":11,"column_start":21,"column_end":27},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":4293},"to":{"krate":0,"index":551}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/park/either.rs","byte_start":8999077,"byte_end":8999083,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":4293},"to":{"krate":0,"index":558}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/park/either.rs","byte_start":8999297,"byte_end":8999303,"line_start":61,"line_end":61,"column_start":27,"column_end":33},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":4293},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/park/thread.rs","byte_start":96885,"byte_end":96895,"line_start":38,"line_end":38,"column_start":6,"column_end":16},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":4320},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/park/thread.rs","byte_start":97160,"byte_end":97170,"line_start":50,"line_end":50,"column_start":15,"column_end":25},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":4320},"to":{"krate":0,"index":551}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/park/thread.rs","byte_start":97696,"byte_end":97701,"line_start":76,"line_end":76,"column_start":6,"column_end":11},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":4330},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/park/thread.rs","byte_start":102493,"byte_end":102503,"line_start":201,"line_end":201,"column_start":18,"column_end":28},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":4320},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/park/thread.rs","byte_start":102612,"byte_end":102624,"line_start":209,"line_end":209,"column_start":17,"column_end":29},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":4324},"to":{"krate":0,"index":558}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/park/thread.rs","byte_start":103011,"byte_end":103027,"line_start":228,"line_end":228,"column_start":10,"column_end":26},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":4376},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/park/thread.rs","byte_start":103874,"byte_end":103890,"line_start":253,"line_end":253,"column_start":19,"column_end":35},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":4376},"to":{"krate":0,"index":551}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/park/thread.rs","byte_start":104558,"byte_end":104570,"line_start":277,"line_end":277,"column_start":10,"column_end":22},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":4324},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/park/thread.rs","byte_start":104782,"byte_end":104787,"line_start":286,"line_end":286,"column_start":10,"column_end":15},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":4330},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/park/mod.rs","byte_start":95507,"byte_end":95511,"line_start":97,"line_end":97,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2046},"to":{"krate":0,"index":558}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/park/mod.rs","byte_start":95514,"byte_end":95518,"line_start":97,"line_end":97,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2034},"to":{"krate":0,"index":558}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/park/mod.rs","byte_start":95987,"byte_end":95990,"line_start":111,"line_end":111,"column_start":17,"column_end":20},"kind":{"Impl":{"id":287}},"from":{"krate":5,"index":85},"to":{"krate":0,"index":558}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/park/mod.rs","byte_start":96079,"byte_end":96082,"line_start":117,"line_end":117,"column_start":17,"column_end":20},"kind":{"Impl":{"id":288}},"from":{"krate":5,"index":4214},"to":{"krate":0,"index":558}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/unix/orphan.rs","byte_start":9041214,"byte_end":9041229,"line_start":48,"line_end":48,"column_start":9,"column_end":24},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":4664},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/unix/orphan.rs","byte_start":9041473,"byte_end":9041488,"line_start":61,"line_end":61,"column_start":34,"column_end":49},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":4664},"to":{"krate":0,"index":4401}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/unix/reap.rs","byte_start":9045971,"byte_end":9045976,"line_start":27,"line_end":27,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2075},"to":{"krate":0,"index":4434}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/unix/reap.rs","byte_start":9046069,"byte_end":9046075,"line_start":31,"line_end":31,"column_start":17,"column_end":23},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":6214},"to":{"krate":0,"index":4434}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/unix/reap.rs","byte_start":9046219,"byte_end":9046225,"line_start":37,"line_end":37,"column_start":25,"column_end":31},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":4670},"to":{"krate":2,"index":2231}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/unix/reap.rs","byte_start":9046392,"byte_end":9046398,"line_start":49,"line_end":49,"column_start":15,"column_end":21},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":4670},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/unix/reap.rs","byte_start":9046865,"byte_end":9046871,"line_start":71,"line_end":71,"column_start":26,"column_end":32},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":4670},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/unix/reap.rs","byte_start":9049166,"byte_end":9049172,"line_start":121,"line_end":121,"column_start":24,"column_end":30},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":4670},"to":{"krate":0,"index":4540}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/unix/reap.rs","byte_start":9049348,"byte_end":9049354,"line_start":131,"line_end":131,"column_start":24,"column_end":30},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":4670},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/unix/mod.rs","byte_start":9035830,"byte_end":9035835,"line_start":47,"line_end":47,"column_start":29,"column_end":34},"kind":{"Impl":{"id":297}},"from":{"krate":1,"index":4402},"to":{"krate":0,"index":4394}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/unix/mod.rs","byte_start":9036013,"byte_end":9036018,"line_start":57,"line_end":57,"column_start":29,"column_end":34},"kind":{"Impl":{"id":298}},"from":{"krate":1,"index":4402},"to":{"krate":0,"index":4540}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/unix/mod.rs","byte_start":9036263,"byte_end":9036280,"line_start":69,"line_end":69,"column_start":21,"column_end":38},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":4499},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/unix/mod.rs","byte_start":9036429,"byte_end":9036446,"line_start":75,"line_end":75,"column_start":43,"column_end":60},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":4499},"to":{"krate":0,"index":4401}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/unix/mod.rs","byte_start":9036793,"byte_end":9036798,"line_start":90,"line_end":90,"column_start":21,"column_end":26},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":4506},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/unix/mod.rs","byte_start":9037467,"byte_end":9037472,"line_start":116,"line_end":116,"column_start":6,"column_end":11},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":4506},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/unix/mod.rs","byte_start":9037559,"byte_end":9037564,"line_start":122,"line_end":122,"column_start":15,"column_end":20},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":4506},"to":{"krate":0,"index":4540}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/unix/mod.rs","byte_start":9037661,"byte_end":9037666,"line_start":128,"line_end":128,"column_start":17,"column_end":22},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":4506},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/unix/mod.rs","byte_start":9037929,"byte_end":9037931,"line_start":141,"line_end":141,"column_start":22,"column_end":24},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":4693},"to":{"krate":1,"index":3068}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/unix/mod.rs","byte_start":9038086,"byte_end":9038088,"line_start":150,"line_end":150,"column_start":23,"column_end":25},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":4693},"to":{"krate":1,"index":3127}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/unix/mod.rs","byte_start":9038318,"byte_end":9038320,"line_start":163,"line_end":163,"column_start":21,"column_end":23},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":4693},"to":{"krate":1,"index":8746}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/unix/mod.rs","byte_start":9038443,"byte_end":9038445,"line_start":172,"line_end":172,"column_start":21,"column_end":23},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":4693},"to":{"krate":20,"index":16}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9004841,"byte_end":9004848,"line_start":161,"line_end":161,"column_start":6,"column_end":13},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":4699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9021098,"byte_end":9021105,"line_start":667,"line_end":667,"column_start":27,"column_end":34},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":4699},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9021435,"byte_end":9021449,"line_start":683,"line_end":683,"column_start":24,"column_end":38},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":4704},"to":{"krate":0,"index":4540}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9021655,"byte_end":9021669,"line_start":695,"line_end":695,"column_start":24,"column_end":38},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":4704},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9021806,"byte_end":9021820,"line_start":703,"line_end":703,"column_start":26,"column_end":40},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":4704},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9023669,"byte_end":9023674,"line_start":760,"line_end":760,"column_start":6,"column_end":11},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":4711},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9027207,"byte_end":9027212,"line_start":858,"line_end":858,"column_start":17,"column_end":22},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":4711},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9028177,"byte_end":9028187,"line_start":893,"line_end":893,"column_start":21,"column_end":31},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":4718},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9028712,"byte_end":9028723,"line_start":911,"line_end":911,"column_start":20,"column_end":31},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":4722},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9029187,"byte_end":9029198,"line_start":926,"line_end":926,"column_start":20,"column_end":31},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":4726},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9029789,"byte_end":9029799,"line_start":947,"line_end":947,"column_start":22,"column_end":32},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":4718},"to":{"krate":1,"index":8746}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9029924,"byte_end":9029935,"line_start":953,"line_end":953,"column_start":22,"column_end":33},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":4722},"to":{"krate":1,"index":8746}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/process/mod.rs","byte_start":9030060,"byte_end":9030071,"line_start":959,"line_end":959,"column_start":22,"column_end":33},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":4726},"to":{"krate":1,"index":8746}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/context.rs","byte_start":127466,"byte_end":127475,"line_start":59,"line_end":59,"column_start":19,"column_end":28},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":579},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/basic_scheduler.rs","byte_start":9065283,"byte_end":9065297,"line_start":83,"line_end":83,"column_start":9,"column_end":23},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":4763},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/basic_scheduler.rs","byte_start":9068836,"byte_end":9068841,"line_start":192,"line_end":192,"column_start":28,"column_end":33},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":4798},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/basic_scheduler.rs","byte_start":9069528,"byte_end":9069542,"line_start":216,"line_end":216,"column_start":18,"column_end":32},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":4763},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/basic_scheduler.rs","byte_start":9070429,"byte_end":9070443,"line_start":248,"line_end":248,"column_start":30,"column_end":44},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":4763},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/basic_scheduler.rs","byte_start":9070609,"byte_end":9070616,"line_start":256,"line_end":256,"column_start":6,"column_end":13},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":5269},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/basic_scheduler.rs","byte_start":9071074,"byte_end":9071081,"line_start":273,"line_end":273,"column_start":21,"column_end":28},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":5269},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/basic_scheduler.rs","byte_start":9071249,"byte_end":9071252,"line_start":281,"line_end":281,"column_start":19,"column_end":22},"kind":{"Impl":{"id":329}},"from":{"krate":5,"index":4214},"to":{"krate":0,"index":5233}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/basic_scheduler.rs","byte_start":9072350,"byte_end":9072356,"line_start":317,"line_end":317,"column_start":15,"column_end":21},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":4772},"to":{"krate":0,"index":835}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/core.rs","byte_start":9080039,"byte_end":9080045,"line_start":69,"line_end":69,"column_start":22,"column_end":28},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":4863},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/core.rs","byte_start":9080070,"byte_end":9080076,"line_start":70,"line_end":70,"column_start":22,"column_end":28},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":4863},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/core.rs","byte_start":9080435,"byte_end":9080439,"line_start":85,"line_end":85,"column_start":30,"column_end":34},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":4852},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/core.rs","byte_start":9081217,"byte_end":9081221,"line_start":108,"line_end":108,"column_start":30,"column_end":34},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":4858},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/core.rs","byte_start":9086972,"byte_end":9086978,"line_start":273,"line_end":273,"column_start":10,"column_end":16},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":4863},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9087603,"byte_end":9087612,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":5281},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9090691,"byte_end":9090700,"line_start":133,"line_end":133,"column_start":23,"column_end":32},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":5281},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9090943,"byte_end":9090952,"line_start":142,"line_end":142,"column_start":21,"column_end":30},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":5281},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9091229,"byte_end":9091238,"line_start":151,"line_end":151,"column_start":28,"column_end":37},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":5281},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/error.rs","byte_start":9091272,"byte_end":9091277,"line_start":153,"line_end":153,"column_start":30,"column_end":35},"kind":{"Impl":{"id":340}},"from":{"krate":1,"index":2659},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/harness.rs","byte_start":9091955,"byte_end":9091962,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":4959},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/harness.rs","byte_start":9092439,"byte_end":9092446,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":4959},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/harness.rs","byte_start":9094617,"byte_end":9094622,"line_start":94,"line_end":94,"column_start":51,"column_end":56},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":4975},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/join.rs","byte_start":9106926,"byte_end":9106936,"line_start":84,"line_end":84,"column_start":31,"column_end":41},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":5283},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/join.rs","byte_start":9106973,"byte_end":9106983,"line_start":85,"line_end":85,"column_start":31,"column_end":41},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":5283},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/join.rs","byte_start":9106999,"byte_end":9107009,"line_start":87,"line_end":87,"column_start":9,"column_end":19},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":5283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/join.rs","byte_start":9107185,"byte_end":9107195,"line_start":96,"line_end":96,"column_start":19,"column_end":29},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":5283},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/join.rs","byte_start":9107222,"byte_end":9107232,"line_start":98,"line_end":98,"column_start":20,"column_end":30},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":5283},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/join.rs","byte_start":9108458,"byte_end":9108468,"line_start":137,"line_end":137,"column_start":18,"column_end":28},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":5283},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/join.rs","byte_start":9108734,"byte_end":9108744,"line_start":149,"line_end":149,"column_start":24,"column_end":34},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":5283},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/raw.rs","byte_start":9109991,"byte_end":9109998,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":5048},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/raw.rs","byte_start":9111529,"byte_end":9111536,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":5048},"to":{"krate":2,"index":1732}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/raw.rs","byte_start":9111626,"byte_end":9111633,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":5048},"to":{"krate":2,"index":2044}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/state.rs","byte_start":9114315,"byte_end":9114320,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":5097},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/state.rs","byte_start":9123176,"byte_end":9123184,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":5287},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/state.rs","byte_start":9125061,"byte_end":9125066,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":5097},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/state.rs","byte_start":9125225,"byte_end":9125233,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":5287},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/waker.rs","byte_start":9127051,"byte_end":9127059,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":5181},"to":{"krate":2,"index":2231}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/stack.rs","byte_start":9128807,"byte_end":9128820,"line_start":15,"line_end":15,"column_start":18,"column_end":31},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":5306},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/stack.rs","byte_start":9129978,"byte_end":9129982,"line_start":55,"line_end":55,"column_start":39,"column_end":43},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":5317},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/stack.rs","byte_start":9130382,"byte_end":9130386,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":5317},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/mod.rs","byte_start":9073369,"byte_end":9073373,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":5215},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/mod.rs","byte_start":9073404,"byte_end":9073408,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":5215},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/mod.rs","byte_start":9073545,"byte_end":9073553,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":5223},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/mod.rs","byte_start":9073594,"byte_end":9073602,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":5223},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/mod.rs","byte_start":9073727,"byte_end":9073731,"line_start":56,"line_end":56,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2046},"to":{"krate":0,"index":5233}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/mod.rs","byte_start":9073734,"byte_end":9073739,"line_start":56,"line_end":56,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":2039},"to":{"krate":0,"index":5233}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/mod.rs","byte_start":9075526,"byte_end":9075530,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":5215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/mod.rs","byte_start":9075827,"byte_end":9075835,"line_start":134,"line_end":134,"column_start":22,"column_end":30},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":5223},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/mod.rs","byte_start":9076086,"byte_end":9076090,"line_start":144,"line_end":144,"column_start":22,"column_end":26},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":5215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/mod.rs","byte_start":9076283,"byte_end":9076291,"line_start":152,"line_end":152,"column_start":22,"column_end":30},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":5223},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/mod.rs","byte_start":9076422,"byte_end":9076426,"line_start":159,"line_end":159,"column_start":19,"column_end":23},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":5215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/mod.rs","byte_start":9076595,"byte_end":9076603,"line_start":166,"line_end":166,"column_start":19,"column_end":27},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":5223},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/mod.rs","byte_start":9076889,"byte_end":9076893,"line_start":179,"line_end":179,"column_start":27,"column_end":31},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":5215},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/mod.rs","byte_start":9077133,"byte_end":9077137,"line_start":189,"line_end":189,"column_start":24,"column_end":28},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":5215},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/mod.rs","byte_start":9077289,"byte_end":9077297,"line_start":195,"line_end":195,"column_start":24,"column_end":32},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":5223},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/task/mod.rs","byte_start":9077513,"byte_end":9077517,"line_start":204,"line_end":204,"column_start":38,"column_end":42},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":5215},"to":{"krate":0,"index":788}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/blocking/pool.rs","byte_start":9132794,"byte_end":9132806,"line_start":89,"line_end":89,"column_start":6,"column_end":18},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":5365},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/blocking/pool.rs","byte_start":9134692,"byte_end":9134704,"line_start":146,"line_end":146,"column_start":15,"column_end":27},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":5365},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/blocking/pool.rs","byte_start":9134790,"byte_end":9134802,"line_start":152,"line_end":152,"column_start":21,"column_end":33},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":5365},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/blocking/pool.rs","byte_start":9134963,"byte_end":9134970,"line_start":160,"line_end":160,"column_start":6,"column_end":13},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":5453},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/blocking/pool.rs","byte_start":9137413,"byte_end":9137418,"line_start":238,"line_end":238,"column_start":6,"column_end":11},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":5368},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/blocking/pool.rs","byte_start":9140167,"byte_end":9140174,"line_start":325,"line_end":325,"column_start":21,"column_end":28},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":5453},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/blocking/schedule.rs","byte_start":9140677,"byte_end":9140689,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":5418},"to":{"krate":0,"index":5233}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/blocking/shutdown.rs","byte_start":9141562,"byte_end":9141570,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":5463},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/blocking/task.rs","byte_start":9143318,"byte_end":9143330,"line_start":10,"line_end":10,"column_start":9,"column_end":21},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":5438},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/blocking/task.rs","byte_start":9143556,"byte_end":9143568,"line_start":18,"line_end":18,"column_start":19,"column_end":31},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":5438},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/blocking/task.rs","byte_start":9143598,"byte_end":9143610,"line_start":20,"line_end":20,"column_start":23,"column_end":35},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":5438},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":130892,"byte_end":130899,"line_start":80,"line_end":80,"column_start":6,"column_end":13},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":138819,"byte_end":138826,"line_start":351,"line_end":351,"column_start":10,"column_end":17},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":139375,"byte_end":139382,"line_start":375,"line_end":375,"column_start":10,"column_end":17},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":139902,"byte_end":139909,"line_start":398,"line_end":398,"column_start":10,"column_end":17},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":141852,"byte_end":141859,"line_start":451,"line_end":451,"column_start":10,"column_end":17},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":143805,"byte_end":143812,"line_start":504,"line_end":504,"column_start":18,"column_end":25},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":600},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/builder.rs","byte_start":143891,"byte_end":143898,"line_start":510,"line_end":510,"column_start":21,"column_end":28},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":600},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/enter.rs","byte_start":144693,"byte_end":144705,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":5503},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/enter.rs","byte_start":146358,"byte_end":146363,"line_start":70,"line_end":70,"column_start":19,"column_end":24},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":649},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/enter.rs","byte_start":147583,"byte_end":147604,"line_start":112,"line_end":112,"column_start":23,"column_end":44},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":5519},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/enter.rs","byte_start":148434,"byte_end":148439,"line_start":142,"line_end":142,"column_start":10,"column_end":15},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":641},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/enter.rs","byte_start":149349,"byte_end":149354,"line_start":174,"line_end":174,"column_start":10,"column_end":15},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":641},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/enter.rs","byte_start":150547,"byte_end":150552,"line_start":212,"line_end":212,"column_start":21,"column_end":26},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":641},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/enter.rs","byte_start":150682,"byte_end":150687,"line_start":218,"line_end":218,"column_start":15,"column_end":20},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":641},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":151745,"byte_end":151751,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":5552},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":154847,"byte_end":154853,"line_start":132,"line_end":132,"column_start":10,"column_end":16},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":5552},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":160643,"byte_end":160649,"line_start":284,"line_end":284,"column_start":10,"column_end":16},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":5552},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":164213,"byte_end":164228,"line_start":359,"line_end":359,"column_start":21,"column_end":36},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":678},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":164376,"byte_end":164391,"line_start":365,"line_end":365,"column_start":23,"column_end":38},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":678},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/handle.rs","byte_start":164549,"byte_end":164564,"line_start":371,"line_end":371,"column_start":23,"column_end":38},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":678},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/park.rs","byte_start":9145581,"byte_end":9145587,"line_start":51,"line_end":51,"column_start":6,"column_end":12},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":5586},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/park.rs","byte_start":9146056,"byte_end":9146062,"line_start":69,"line_end":69,"column_start":16,"column_end":22},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":5586},"to":{"krate":2,"index":1732}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/park.rs","byte_start":9146378,"byte_end":9146384,"line_start":82,"line_end":82,"column_start":15,"column_end":21},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":5586},"to":{"krate":0,"index":551}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/park.rs","byte_start":9147103,"byte_end":9147111,"line_start":113,"line_end":113,"column_start":17,"column_end":25},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":5588},"to":{"krate":0,"index":558}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/park.rs","byte_start":9147180,"byte_end":9147185,"line_start":119,"line_end":119,"column_start":6,"column_end":11},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":5590},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/shell.rs","byte_start":166853,"byte_end":166858,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":5625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/shell.rs","byte_start":167464,"byte_end":167470,"line_start":52,"line_end":52,"column_start":15,"column_end":21},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":5630},"to":{"krate":0,"index":835}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/spawner.rs","byte_start":168067,"byte_end":168074,"line_start":21,"line_end":21,"column_start":6,"column_end":13},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":5639},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/spawner.rs","byte_start":168317,"byte_end":168324,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":5639},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/queue.rs","byte_start":9154408,"byte_end":9154413,"line_start":66,"line_end":66,"column_start":25,"column_end":30},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":5686},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/queue.rs","byte_start":9154444,"byte_end":9154449,"line_start":67,"line_end":67,"column_start":25,"column_end":30},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":5686},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/queue.rs","byte_start":9154480,"byte_end":9154486,"line_start":68,"line_end":68,"column_start":25,"column_end":31},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":5681},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/queue.rs","byte_start":9154517,"byte_end":9154523,"line_start":69,"line_end":69,"column_start":25,"column_end":31},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":5681},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/queue.rs","byte_start":9155382,"byte_end":9155387,"line_start":105,"line_end":105,"column_start":9,"column_end":14},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":5674},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/queue.rs","byte_start":9161921,"byte_end":9161926,"line_start":291,"line_end":291,"column_start":9,"column_end":14},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":5677},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/queue.rs","byte_start":9167094,"byte_end":9167099,"line_start":441,"line_end":441,"column_start":19,"column_end":24},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":5677},"to":{"krate":2,"index":1732}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/queue.rs","byte_start":9167195,"byte_end":9167200,"line_start":447,"line_end":447,"column_start":18,"column_end":23},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":5674},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/queue.rs","byte_start":9167359,"byte_end":9167364,"line_start":455,"line_end":455,"column_start":9,"column_end":14},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":5686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/queue.rs","byte_start":9167552,"byte_end":9167558,"line_start":464,"line_end":464,"column_start":18,"column_end":24},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":5681},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/queue.rs","byte_start":9171063,"byte_end":9171069,"line_start":595,"line_end":595,"column_start":27,"column_end":33},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":5681},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/thread_pool/atomic_cell.rs","byte_start":9175295,"byte_end":9175305,"line_start":10,"line_end":10,"column_start":31,"column_end":41},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":5761},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/thread_pool/atomic_cell.rs","byte_start":9175342,"byte_end":9175352,"line_start":11,"line_end":11,"column_start":31,"column_end":41},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":5761},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/thread_pool/atomic_cell.rs","byte_start":9175368,"byte_end":9175378,"line_start":13,"line_end":13,"column_start":9,"column_end":19},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":5761},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/thread_pool/atomic_cell.rs","byte_start":9176165,"byte_end":9176175,"line_start":47,"line_end":47,"column_start":18,"column_end":28},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":5761},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/thread_pool/idle.rs","byte_start":9176981,"byte_end":9176985,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":5789},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/thread_pool/idle.rs","byte_start":9180858,"byte_end":9180863,"line_start":141,"line_end":141,"column_start":6,"column_end":11},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":5956},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/thread_pool/idle.rs","byte_start":9182341,"byte_end":9182346,"line_start":193,"line_end":193,"column_start":22,"column_end":27},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":5956},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/thread_pool/idle.rs","byte_start":9182519,"byte_end":9182524,"line_start":205,"line_end":205,"column_start":21,"column_end":26},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":5956},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/thread_pool/worker.rs","byte_start":9188288,"byte_end":9188293,"line_start":185,"line_end":185,"column_start":23,"column_end":28},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":5971},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/thread_pool/worker.rs","byte_start":9191923,"byte_end":9191929,"line_start":278,"line_end":278,"column_start":6,"column_end":12},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":5869},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/thread_pool/worker.rs","byte_start":9192704,"byte_end":9192711,"line_start":309,"line_end":309,"column_start":6,"column_end":13},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":5866},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/thread_pool/worker.rs","byte_start":9196977,"byte_end":9196981,"line_start":440,"line_end":440,"column_start":6,"column_end":10},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":5848},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/thread_pool/worker.rs","byte_start":9201793,"byte_end":9201799,"line_start":598,"line_end":598,"column_start":6,"column_end":12},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":5844},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/thread_pool/worker.rs","byte_start":9202239,"byte_end":9202242,"line_start":614,"line_end":614,"column_start":25,"column_end":28},"kind":{"Impl":{"id":441}},"from":{"krate":5,"index":4214},"to":{"krate":0,"index":5233}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/thread_pool/worker.rs","byte_start":9204813,"byte_end":9204819,"line_start":692,"line_end":692,"column_start":6,"column_end":12},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":5857},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/thread_pool/mod.rs","byte_start":9173121,"byte_end":9173131,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":5936},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/thread_pool/mod.rs","byte_start":9174286,"byte_end":9174296,"line_start":86,"line_end":86,"column_start":21,"column_end":31},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":5936},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/thread_pool/mod.rs","byte_start":9174435,"byte_end":9174445,"line_start":92,"line_end":92,"column_start":15,"column_end":25},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":5936},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/thread_pool/mod.rs","byte_start":9174548,"byte_end":9174555,"line_start":100,"line_end":100,"column_start":6,"column_end":13},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":5980},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/thread_pool/mod.rs","byte_start":9174976,"byte_end":9174983,"line_start":117,"line_end":117,"column_start":21,"column_end":28},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":5980},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/runtime/mod.rs","byte_start":116406,"byte_end":116413,"line_start":305,"line_end":305,"column_start":6,"column_end":13},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":5985},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/coop.rs","byte_start":172927,"byte_end":172933,"line_start":63,"line_end":63,"column_start":6,"column_end":12},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":6007},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/coop.rs","byte_start":173701,"byte_end":173707,"line_start":85,"line_end":85,"column_start":10,"column_end":16},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":6007},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/coop.rs","byte_start":174474,"byte_end":174484,"line_start":114,"line_end":114,"column_start":23,"column_end":33},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":767},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/coop.rs","byte_start":175331,"byte_end":175347,"line_start":157,"line_end":157,"column_start":10,"column_end":26},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":6027},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/coop.rs","byte_start":175479,"byte_end":175495,"line_start":163,"line_end":163,"column_start":19,"column_end":35},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":6027},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/coop.rs","byte_start":177235,"byte_end":177241,"line_start":204,"line_end":204,"column_start":10,"column_end":16},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":6007},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/registry.rs","byte_start":9212666,"byte_end":9212669,"line_start":34,"line_end":34,"column_start":18,"column_end":21},"kind":{"Impl":{"id":455}},"from":{"krate":5,"index":4551},"to":{"krate":0,"index":6062}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/registry.rs","byte_start":9213391,"byte_end":9213399,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":6191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/registry.rs","byte_start":9213489,"byte_end":9213497,"line_start":68,"line_end":68,"column_start":18,"column_end":26},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":6191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/registry.rs","byte_start":9215650,"byte_end":9215657,"line_start":130,"line_end":130,"column_start":21,"column_end":28},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":6085},"to":{"krate":2,"index":2231}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/registry.rs","byte_start":9215765,"byte_end":9215772,"line_start":138,"line_end":138,"column_start":6,"column_end":13},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":6085},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9221844,"byte_end":9221853,"line_start":26,"line_end":26,"column_start":15,"column_end":24},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":6130},"to":{"krate":0,"index":6072}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9221967,"byte_end":9221976,"line_start":32,"line_end":32,"column_start":18,"column_end":27},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":6130},"to":{"krate":0,"index":6062}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9222364,"byte_end":9222375,"line_start":51,"line_end":51,"column_start":15,"column_end":26},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":6197},"to":{"krate":0,"index":6072}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9222661,"byte_end":9222671,"line_start":63,"line_end":63,"column_start":6,"column_end":16},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":6202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9226467,"byte_end":9226477,"line_start":190,"line_end":190,"column_start":18,"column_end":28},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":6158},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9228826,"byte_end":9228832,"line_start":262,"line_end":262,"column_start":6,"column_end":12},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":6210},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9229117,"byte_end":9229123,"line_start":273,"line_end":273,"column_start":6,"column_end":12},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":6210},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9235312,"byte_end":9235318,"line_start":423,"line_end":423,"column_start":6,"column_end":12},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":6214},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/signal/unix.rs","byte_start":9237176,"byte_end":9237182,"line_start":487,"line_end":487,"column_start":36,"column_end":42},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":6214},"to":{"krate":19,"index":68}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/all.rs","byte_start":9272174,"byte_end":9272183,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":6810},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/all.rs","byte_start":9272329,"byte_end":9272338,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":6810},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/all.rs","byte_start":9272377,"byte_end":9272386,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":6810},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/any.rs","byte_start":9273337,"byte_end":9273346,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":6821},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/any.rs","byte_start":9273492,"byte_end":9273501,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":6821},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/any.rs","byte_start":9273540,"byte_end":9273549,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":6821},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/chain.rs","byte_start":9274472,"byte_end":9274477,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":10619},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/chain.rs","byte_start":9274657,"byte_end":9274662,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":10619},"to":{"krate":19,"index":68}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9276207,"byte_end":9276221,"line_start":36,"line_end":36,"column_start":34,"column_end":48},"kind":"SuperTrait","from":{"krate":0,"index":6371},"to":{"krate":0,"index":6300}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9276240,"byte_end":9276247,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":10581},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9276531,"byte_end":9276538,"line_start":51,"line_end":51,"column_start":23,"column_end":30},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":10581},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9277514,"byte_end":9277520,"line_start":94,"line_end":94,"column_start":39,"column_end":45},"kind":{"Impl":{"id":479}},"from":{"krate":5,"index":5311},"to":{"krate":0,"index":6300}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9277575,"byte_end":9277581,"line_start":96,"line_end":96,"column_start":51,"column_end":57},"kind":{"Impl":{"id":480}},"from":{"krate":5,"index":5311},"to":{"krate":0,"index":6371}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9277970,"byte_end":9277973,"line_start":113,"line_end":113,"column_start":27,"column_end":30},"kind":{"Impl":{"id":481}},"from":{"krate":5,"index":4551},"to":{"krate":0,"index":6300}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9278019,"byte_end":9278022,"line_start":115,"line_end":115,"column_start":39,"column_end":42},"kind":{"Impl":{"id":482}},"from":{"krate":5,"index":4551},"to":{"krate":0,"index":6371}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9278405,"byte_end":9278408,"line_start":132,"line_end":132,"column_start":27,"column_end":30},"kind":{"Impl":{"id":483}},"from":{"krate":5,"index":85},"to":{"krate":0,"index":6300}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9278456,"byte_end":9278459,"line_start":134,"line_end":134,"column_start":39,"column_end":42},"kind":{"Impl":{"id":484}},"from":{"krate":5,"index":85},"to":{"krate":0,"index":6371}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9278974,"byte_end":9278980,"line_start":150,"line_end":150,"column_start":44,"column_end":50},"kind":{"Impl":{"id":485}},"from":{"krate":2,"index":31890},"to":{"krate":0,"index":6300}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9279069,"byte_end":9279075,"line_start":152,"line_end":152,"column_start":56,"column_end":62},"kind":{"Impl":{"id":486}},"from":{"krate":2,"index":31890},"to":{"krate":0,"index":6371}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9280153,"byte_end":9280158,"line_start":191,"line_end":191,"column_start":32,"column_end":37},"kind":{"Impl":{"id":487}},"from":{"krate":17,"index":341},"to":{"krate":0,"index":6300}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9280206,"byte_end":9280211,"line_start":193,"line_end":193,"column_start":44,"column_end":49},"kind":{"Impl":{"id":488}},"from":{"krate":17,"index":341},"to":{"krate":0,"index":6371}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9280611,"byte_end":9280619,"line_start":210,"line_end":210,"column_start":32,"column_end":40},"kind":{"Impl":{"id":489}},"from":{"krate":17,"index":535},"to":{"krate":0,"index":6300}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/collect.rs","byte_start":9280667,"byte_end":9280675,"line_start":212,"line_end":212,"column_start":44,"column_end":52},"kind":{"Impl":{"id":490}},"from":{"krate":17,"index":535},"to":{"krate":0,"index":6371}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/empty.rs","byte_start":9281946,"byte_end":9281951,"line_start":12,"line_end":12,"column_start":19,"column_end":24},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":6832},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/empty.rs","byte_start":9281982,"byte_end":9281987,"line_start":13,"line_end":13,"column_start":25,"column_end":30},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":6832},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/empty.rs","byte_start":9282018,"byte_end":9282023,"line_start":14,"line_end":14,"column_start":25,"column_end":30},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":6832},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/empty.rs","byte_start":9282566,"byte_end":9282571,"line_start":40,"line_end":40,"column_start":20,"column_end":25},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":6832},"to":{"krate":19,"index":68}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/filter.rs","byte_start":9283185,"byte_end":9283191,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":10525},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/filter.rs","byte_start":9283409,"byte_end":9283415,"line_start":29,"line_end":29,"column_start":13,"column_end":19},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":10525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/filter.rs","byte_start":9283534,"byte_end":9283540,"line_start":35,"line_end":35,"column_start":24,"column_end":30},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":10525},"to":{"krate":19,"index":68}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/filter_map.rs","byte_start":9284626,"byte_end":9284635,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":10480},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/filter_map.rs","byte_start":9284856,"byte_end":9284865,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":10480},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/filter_map.rs","byte_start":9284987,"byte_end":9284996,"line_start":35,"line_end":35,"column_start":27,"column_end":36},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":10480},"to":{"krate":19,"index":68}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/fold.rs","byte_start":9286068,"byte_end":9286078,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":10431},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/fold.rs","byte_start":9286274,"byte_end":9286284,"line_start":29,"line_end":29,"column_start":27,"column_end":37},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":10431},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/fuse.rs","byte_start":9287183,"byte_end":9287187,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":10391},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/fuse.rs","byte_start":9287347,"byte_end":9287351,"line_start":27,"line_end":27,"column_start":20,"column_end":24},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":10391},"to":{"krate":19,"index":68}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/iter.rs","byte_start":9288294,"byte_end":9288298,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":6839},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/iter.rs","byte_start":9288960,"byte_end":9288964,"line_start":41,"line_end":41,"column_start":20,"column_end":24},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":6839},"to":{"krate":19,"index":68}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/map.rs","byte_start":9289710,"byte_end":9289713,"line_start":18,"line_end":18,"column_start":28,"column_end":31},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":10337},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/map.rs","byte_start":9289902,"byte_end":9289905,"line_start":27,"line_end":27,"column_start":13,"column_end":16},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":10337},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/map.rs","byte_start":9290026,"byte_end":9290029,"line_start":33,"line_end":33,"column_start":27,"column_end":30},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":10337},"to":{"krate":19,"index":68}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/merge.rs","byte_start":9290874,"byte_end":9290879,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":10288},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/merge.rs","byte_start":9291133,"byte_end":9291138,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":10288},"to":{"krate":19,"index":68}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/next.rs","byte_start":9292650,"byte_end":9292654,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":6845},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/next.rs","byte_start":9292688,"byte_end":9292692,"line_start":16,"line_end":16,"column_start":22,"column_end":26},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":6845},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/next.rs","byte_start":9292833,"byte_end":9292837,"line_start":22,"line_end":22,"column_start":46,"column_end":50},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":6845},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/once.rs","byte_start":9293333,"byte_end":9293337,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":6853},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/once.rs","byte_start":9293964,"byte_end":9293968,"line_start":42,"line_end":42,"column_start":20,"column_end":24},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":6853},"to":{"krate":19,"index":68}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/pending.rs","byte_start":9294515,"byte_end":9294522,"line_start":12,"line_end":12,"column_start":19,"column_end":26},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":6859},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/pending.rs","byte_start":9294553,"byte_end":9294560,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":6859},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/pending.rs","byte_start":9294591,"byte_end":9294598,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":6859},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/pending.rs","byte_start":9295291,"byte_end":9295298,"line_start":44,"line_end":44,"column_start":20,"column_end":27},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":6859},"to":{"krate":19,"index":68}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9300963,"byte_end":9300972,"line_start":165,"line_end":165,"column_start":12,"column_end":21},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":6866},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9307973,"byte_end":9307982,"line_start":424,"line_end":424,"column_start":12,"column_end":21},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":6866},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/stream_map.rs","byte_start":9309521,"byte_end":9309530,"line_start":470,"line_end":470,"column_start":23,"column_end":32},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":6866},"to":{"krate":19,"index":68}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/skip.rs","byte_start":9310746,"byte_end":9310750,"line_start":18,"line_end":18,"column_start":25,"column_end":29},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":10251},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/skip.rs","byte_start":9310960,"byte_end":9310964,"line_start":29,"line_end":29,"column_start":10,"column_end":14},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":10251},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/skip.rs","byte_start":9311097,"byte_end":9311101,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":10251},"to":{"krate":19,"index":68}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/skip_while.rs","byte_start":9312327,"byte_end":9312336,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":10206},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/skip_while.rs","byte_start":9312557,"byte_end":9312566,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":10206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/skip_while.rs","byte_start":9312751,"byte_end":9312760,"line_start":38,"line_end":38,"column_start":24,"column_end":33},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":10206},"to":{"krate":19,"index":68}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/try_next.rs","byte_start":9314109,"byte_end":9314116,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":6878},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/try_next.rs","byte_start":9314150,"byte_end":9314157,"line_start":16,"line_end":16,"column_start":22,"column_end":29},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":6878},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/try_next.rs","byte_start":9314364,"byte_end":9314371,"line_start":24,"line_end":24,"column_start":73,"column_end":80},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":6878},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/take.rs","byte_start":9314981,"byte_end":9314985,"line_start":19,"line_end":19,"column_start":25,"column_end":29},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":10169},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/take.rs","byte_start":9315195,"byte_end":9315199,"line_start":30,"line_end":30,"column_start":10,"column_end":14},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":10169},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/take.rs","byte_start":9315332,"byte_end":9315336,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":10169},"to":{"krate":19,"index":68}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/take_while.rs","byte_start":9316855,"byte_end":9316864,"line_start":19,"line_end":19,"column_start":28,"column_end":37},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":10120},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/take_while.rs","byte_start":9317124,"byte_end":9317133,"line_start":31,"line_end":31,"column_start":13,"column_end":22},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":10120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/take_while.rs","byte_start":9317326,"byte_end":9317335,"line_start":41,"line_end":41,"column_start":24,"column_end":33},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":10120},"to":{"krate":19,"index":68}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/timeout.rs","byte_start":9349001,"byte_end":9349008,"line_start":23,"line_end":23,"column_start":17,"column_end":24},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":10081},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/timeout.rs","byte_start":9349363,"byte_end":9349370,"line_start":37,"line_end":37,"column_start":28,"column_end":35},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":10081},"to":{"krate":19,"index":68}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9247416,"byte_end":9247422,"line_start":81,"line_end":81,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":19,"index":68},"to":{"krate":0,"index":6773}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/stream/mod.rs","byte_start":9271404,"byte_end":9271406,"line_start":824,"line_end":824,"column_start":32,"column_end":34},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":6808},"to":{"krate":0,"index":6773}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9367846,"byte_end":9367853,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":8300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/barrier.rs","byte_start":9371133,"byte_end":9371150,"line_start":128,"line_end":128,"column_start":6,"column_end":23},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":8312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9381717,"byte_end":9381723,"line_start":340,"line_end":340,"column_start":32,"column_end":38},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":6987},"to":{"krate":2,"index":1946}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9381850,"byte_end":9381856,"line_start":346,"line_end":346,"column_start":36,"column_end":42},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":6987},"to":{"krate":2,"index":1946}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9382017,"byte_end":9382021,"line_start":352,"line_end":352,"column_start":61,"column_end":65},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":6981},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9382091,"byte_end":9382095,"line_start":353,"line_end":353,"column_start":61,"column_end":65},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":6981},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9384869,"byte_end":9384875,"line_start":444,"line_end":444,"column_start":31,"column_end":37},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":6947},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9384912,"byte_end":9384918,"line_start":445,"line_end":445,"column_start":31,"column_end":37},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":6947},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9384956,"byte_end":9384964,"line_start":447,"line_end":447,"column_start":31,"column_end":39},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":6950},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9385001,"byte_end":9385009,"line_start":448,"line_end":448,"column_start":31,"column_end":39},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":6950},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9385025,"byte_end":9385031,"line_start":450,"line_end":450,"column_start":9,"column_end":15},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":6947},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9390667,"byte_end":9390671,"line_start":637,"line_end":637,"column_start":6,"column_end":10},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":6961},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9391063,"byte_end":9391069,"line_start":652,"line_end":652,"column_start":19,"column_end":25},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":6947},"to":{"krate":2,"index":1732}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9391249,"byte_end":9391255,"line_start":661,"line_end":661,"column_start":18,"column_end":24},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":6947},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9391409,"byte_end":9391417,"line_start":669,"line_end":669,"column_start":9,"column_end":17},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":6950},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9396282,"byte_end":9396290,"line_start":787,"line_end":787,"column_start":9,"column_end":17},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":6950},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9399108,"byte_end":9399113,"line_start":857,"line_end":857,"column_start":30,"column_end":35},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":7043},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9402527,"byte_end":9402535,"line_start":961,"line_end":961,"column_start":35,"column_end":43},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":6950},"to":{"krate":19,"index":68}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9402985,"byte_end":9402993,"line_start":980,"line_end":980,"column_start":18,"column_end":26},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":6950},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9404177,"byte_end":9404181,"line_start":1020,"line_end":1020,"column_start":12,"column_end":16},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":6981},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9405023,"byte_end":9405027,"line_start":1050,"line_end":1050,"column_start":23,"column_end":27},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":6981},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9405757,"byte_end":9405765,"line_start":1074,"line_end":1074,"column_start":20,"column_end":28},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":6950},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9407077,"byte_end":9407081,"line_start":1116,"line_end":1116,"column_start":34,"column_end":38},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":6981},"to":{"krate":19,"index":68}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9407805,"byte_end":9407809,"line_start":1138,"line_end":1138,"column_start":21,"column_end":25},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":6981},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9408607,"byte_end":9408613,"line_start":1167,"line_end":1167,"column_start":35,"column_end":41},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":6972},"to":{"krate":0,"index":788}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9409028,"byte_end":9409034,"line_start":1184,"line_end":1184,"column_start":24,"column_end":30},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":6947},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9409178,"byte_end":9409186,"line_start":1190,"line_end":1190,"column_start":24,"column_end":32},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":6950},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9409321,"byte_end":9409330,"line_start":1196,"line_end":1196,"column_start":13,"column_end":22},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":6977},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9409503,"byte_end":9409512,"line_start":1205,"line_end":1205,"column_start":22,"column_end":31},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":6977},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9409803,"byte_end":9409812,"line_start":1215,"line_end":1215,"column_start":23,"column_end":32},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":8326},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9410085,"byte_end":9410094,"line_start":1224,"line_end":1224,"column_start":28,"column_end":37},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":8326},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9410121,"byte_end":9410133,"line_start":1226,"line_end":1226,"column_start":23,"column_end":35},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":8338},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/broadcast.rs","byte_start":9410475,"byte_end":9410487,"line_start":1236,"line_end":1236,"column_start":28,"column_end":40},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":8338},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/block.rs","byte_start":9416796,"byte_end":9416801,"line_start":77,"line_end":77,"column_start":9,"column_end":14},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":7130},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/block.rs","byte_start":9426783,"byte_end":9426789,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":7144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/block.rs","byte_start":9427271,"byte_end":9427277,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":7144},"to":{"krate":2,"index":2312}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9427915,"byte_end":9427921,"line_start":20,"line_end":20,"column_start":19,"column_end":25},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":7198},"to":{"krate":2,"index":1732}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9428053,"byte_end":9428059,"line_start":28,"line_end":28,"column_start":24,"column_end":30},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":7198},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9428466,"byte_end":9428474,"line_start":44,"line_end":44,"column_start":24,"column_end":32},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":7207},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9430246,"byte_end":9430254,"line_start":103,"line_end":103,"column_start":9,"column_end":17},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":7207},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9432682,"byte_end":9432690,"line_start":182,"line_end":182,"column_start":19,"column_end":27},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":7207},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9432750,"byte_end":9432758,"line_start":185,"line_end":185,"column_start":39,"column_end":47},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":7207},"to":{"krate":19,"index":68}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/bounded.rs","byte_start":9432946,"byte_end":9432952,"line_start":194,"line_end":194,"column_start":9,"column_end":15},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":7198},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/chan.rs","byte_start":9444342,"byte_end":9444344,"line_start":20,"line_end":20,"column_start":38,"column_end":40},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":7272},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/chan.rs","byte_start":9444745,"byte_end":9444747,"line_start":38,"line_end":38,"column_start":38,"column_end":40},"kind":{"Impl":{"id":586}},"from":{"krate":0,"index":7281},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/chan.rs","byte_start":9445054,"byte_end":9445063,"line_start":53,"line_end":53,"column_start":44,"column_end":53},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":8383},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/chan.rs","byte_start":9445325,"byte_end":9445337,"line_start":62,"line_end":62,"column_start":44,"column_end":56},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":8390},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/chan.rs","byte_start":9447122,"byte_end":9447126,"line_start":124,"line_end":124,"column_start":27,"column_end":31},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":7305},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/chan.rs","byte_start":9447759,"byte_end":9447767,"line_start":148,"line_end":148,"column_start":24,"column_end":32},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":7317},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/chan.rs","byte_start":9448033,"byte_end":9448037,"line_start":157,"line_end":157,"column_start":40,"column_end":44},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":7305},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/chan.rs","byte_start":9448086,"byte_end":9448090,"line_start":158,"line_end":158,"column_start":40,"column_end":44},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":7305},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/chan.rs","byte_start":9448569,"byte_end":9448571,"line_start":182,"line_end":182,"column_start":12,"column_end":14},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":7272},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/chan.rs","byte_start":9449270,"byte_end":9449272,"line_start":208,"line_end":208,"column_start":9,"column_end":11},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":7272},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/chan.rs","byte_start":9449420,"byte_end":9449422,"line_start":214,"line_end":214,"column_start":9,"column_end":11},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":7272},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/chan.rs","byte_start":9449600,"byte_end":9449602,"line_start":220,"line_end":220,"column_start":22,"column_end":24},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":7272},"to":{"krate":2,"index":1732}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/chan.rs","byte_start":9450002,"byte_end":9450004,"line_start":236,"line_end":236,"column_start":21,"column_end":23},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":7272},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/chan.rs","byte_start":9450531,"byte_end":9450533,"line_start":261,"line_end":261,"column_start":12,"column_end":14},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":7281},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/chan.rs","byte_start":9453653,"byte_end":9453655,"line_start":352,"line_end":352,"column_start":21,"column_end":23},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":7281},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/chan.rs","byte_start":9454091,"byte_end":9454095,"line_start":373,"line_end":373,"column_start":12,"column_end":16},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":7305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/chan.rs","byte_start":9454559,"byte_end":9454563,"line_start":395,"line_end":395,"column_start":21,"column_end":25},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":7305},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/chan.rs","byte_start":9455112,"byte_end":9455124,"line_start":412,"line_end":412,"column_start":32,"column_end":44},"kind":{"Impl":{"id":602}},"from":{"krate":0,"index":8370},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/chan.rs","byte_start":9456784,"byte_end":9456795,"line_start":485,"line_end":485,"column_start":20,"column_end":31},"kind":{"Impl":{"id":603}},"from":{"krate":0,"index":450},"to":{"krate":0,"index":7295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/list.rs","byte_start":9459539,"byte_end":9459541,"line_start":56,"line_end":56,"column_start":9,"column_end":11},"kind":{"Impl":{"id":604}},"from":{"krate":0,"index":7430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/list.rs","byte_start":9465245,"byte_end":9465247,"line_start":213,"line_end":213,"column_start":24,"column_end":26},"kind":{"Impl":{"id":605}},"from":{"krate":0,"index":7430},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/list.rs","byte_start":9465524,"byte_end":9465526,"line_start":222,"line_end":222,"column_start":9,"column_end":11},"kind":{"Impl":{"id":606}},"from":{"krate":0,"index":7434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/list.rs","byte_start":9468925,"byte_end":9468927,"line_start":333,"line_end":333,"column_start":24,"column_end":26},"kind":{"Impl":{"id":607}},"from":{"krate":0,"index":7434},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9469601,"byte_end":9469616,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"kind":{"Impl":{"id":608}},"from":{"krate":0,"index":7470},"to":{"krate":2,"index":1732}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9469757,"byte_end":9469772,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"kind":{"Impl":{"id":609}},"from":{"krate":0,"index":7470},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9470230,"byte_end":9470247,"line_start":41,"line_end":41,"column_start":24,"column_end":41},"kind":{"Impl":{"id":610}},"from":{"krate":0,"index":7479},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9471225,"byte_end":9471242,"line_start":71,"line_end":71,"column_start":9,"column_end":26},"kind":{"Impl":{"id":611}},"from":{"krate":0,"index":7479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9473714,"byte_end":9473731,"line_start":151,"line_end":151,"column_start":35,"column_end":52},"kind":{"Impl":{"id":612}},"from":{"krate":0,"index":7479},"to":{"krate":19,"index":68}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/unbounded.rs","byte_start":9473897,"byte_end":9473912,"line_start":159,"line_end":159,"column_start":9,"column_end":24},"kind":{"Impl":{"id":613}},"from":{"krate":0,"index":7470},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9475022,"byte_end":9475031,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"kind":{"Impl":{"id":614}},"from":{"krate":0,"index":8383},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9475191,"byte_end":9475200,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"kind":{"Impl":{"id":615}},"from":{"krate":0,"index":8383},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9475686,"byte_end":9475698,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"kind":{"Impl":{"id":616}},"from":{"krate":0,"index":8390},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9475731,"byte_end":9475743,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"kind":{"Impl":{"id":617}},"from":{"krate":0,"index":8390},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9476083,"byte_end":9476095,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"kind":{"Impl":{"id":618}},"from":{"krate":0,"index":8390},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9476324,"byte_end":9476333,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"kind":{"Impl":{"id":619}},"from":{"krate":0,"index":8401},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9476463,"byte_end":9476472,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"kind":{"Impl":{"id":620}},"from":{"krate":0,"index":8401},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9476958,"byte_end":9476970,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"kind":{"Impl":{"id":621}},"from":{"krate":0,"index":8406},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9477276,"byte_end":9477288,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"kind":{"Impl":{"id":622}},"from":{"krate":0,"index":8406},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9477445,"byte_end":9477456,"line_start":103,"line_end":103,"column_start":6,"column_end":17},"kind":{"Impl":{"id":623}},"from":{"krate":0,"index":8416},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9477555,"byte_end":9477566,"line_start":109,"line_end":109,"column_start":23,"column_end":34},"kind":{"Impl":{"id":624}},"from":{"krate":0,"index":8416},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9477696,"byte_end":9477707,"line_start":115,"line_end":115,"column_start":16,"column_end":27},"kind":{"Impl":{"id":625}},"from":{"krate":0,"index":8416},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9478211,"byte_end":9478227,"line_start":132,"line_end":132,"column_start":35,"column_end":51},"kind":{"Impl":{"id":626}},"from":{"krate":0,"index":8426},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mpsc/error.rs","byte_start":9478264,"byte_end":9478280,"line_start":134,"line_end":134,"column_start":30,"column_end":46},"kind":{"Impl":{"id":627}},"from":{"krate":0,"index":8426},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9484579,"byte_end":9484584,"line_start":157,"line_end":157,"column_start":25,"column_end":30},"kind":{"Impl":{"id":628}},"from":{"krate":0,"index":7548},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9484638,"byte_end":9484643,"line_start":158,"line_end":158,"column_start":25,"column_end":30},"kind":{"Impl":{"id":629}},"from":{"krate":0,"index":7548},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9484697,"byte_end":9484707,"line_start":159,"line_end":159,"column_start":25,"column_end":35},"kind":{"Impl":{"id":630}},"from":{"krate":0,"index":7552},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9484772,"byte_end":9484787,"line_start":160,"line_end":160,"column_start":25,"column_end":40},"kind":{"Impl":{"id":631}},"from":{"krate":0,"index":7556},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9485074,"byte_end":9485086,"line_start":170,"line_end":170,"column_start":23,"column_end":35},"kind":{"Impl":{"id":632}},"from":{"krate":0,"index":8437},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9485223,"byte_end":9485235,"line_start":176,"line_end":176,"column_start":16,"column_end":28},"kind":{"Impl":{"id":633}},"from":{"krate":0,"index":8437},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9486043,"byte_end":9486048,"line_start":202,"line_end":202,"column_start":17,"column_end":22},"kind":{"Impl":{"id":634}},"from":{"krate":0,"index":7548},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9490621,"byte_end":9490626,"line_start":360,"line_end":360,"column_start":21,"column_end":26},"kind":{"Impl":{"id":635}},"from":{"krate":0,"index":7548},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9490710,"byte_end":9490715,"line_start":366,"line_end":366,"column_start":21,"column_end":26},"kind":{"Impl":{"id":636}},"from":{"krate":0,"index":7548},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9490839,"byte_end":9490844,"line_start":375,"line_end":375,"column_start":29,"column_end":34},"kind":{"Impl":{"id":637}},"from":{"krate":0,"index":7548},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9491239,"byte_end":9491249,"line_start":391,"line_end":391,"column_start":26,"column_end":36},"kind":{"Impl":{"id":638}},"from":{"krate":0,"index":7552},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9491350,"byte_end":9491360,"line_start":397,"line_end":397,"column_start":27,"column_end":37},"kind":{"Impl":{"id":639}},"from":{"krate":0,"index":7552},"to":{"krate":2,"index":2231}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9491507,"byte_end":9491517,"line_start":404,"line_end":404,"column_start":30,"column_end":40},"kind":{"Impl":{"id":640}},"from":{"krate":0,"index":7552},"to":{"krate":2,"index":2244}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9491674,"byte_end":9491684,"line_start":410,"line_end":410,"column_start":45,"column_end":55},"kind":{"Impl":{"id":641}},"from":{"krate":0,"index":7552},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9491850,"byte_end":9491860,"line_start":416,"line_end":416,"column_start":49,"column_end":59},"kind":{"Impl":{"id":642}},"from":{"krate":0,"index":7552},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9492038,"byte_end":9492053,"line_start":424,"line_end":424,"column_start":26,"column_end":41},"kind":{"Impl":{"id":643}},"from":{"krate":0,"index":7556},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9492150,"byte_end":9492165,"line_start":430,"line_end":430,"column_start":27,"column_end":42},"kind":{"Impl":{"id":644}},"from":{"krate":0,"index":7556},"to":{"krate":2,"index":2231}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9492308,"byte_end":9492323,"line_start":437,"line_end":437,"column_start":30,"column_end":45},"kind":{"Impl":{"id":645}},"from":{"krate":0,"index":7556},"to":{"krate":2,"index":2244}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9492476,"byte_end":9492491,"line_start":443,"line_end":443,"column_start":45,"column_end":60},"kind":{"Impl":{"id":646}},"from":{"krate":0,"index":7556},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/mutex.rs","byte_start":9492653,"byte_end":9492668,"line_start":449,"line_end":449,"column_start":49,"column_end":64},"kind":{"Impl":{"id":647}},"from":{"krate":0,"index":7556},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9496632,"byte_end":9496640,"line_start":135,"line_end":135,"column_start":26,"column_end":34},"kind":{"Impl":{"id":648}},"from":{"krate":0,"index":8454},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9496673,"byte_end":9496681,"line_start":136,"line_end":136,"column_start":26,"column_end":34},"kind":{"Impl":{"id":649}},"from":{"krate":0,"index":8454},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9496944,"byte_end":9496950,"line_start":154,"line_end":154,"column_start":6,"column_end":12},"kind":{"Impl":{"id":650}},"from":{"krate":0,"index":8442},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9500958,"byte_end":9500964,"line_start":282,"line_end":282,"column_start":18,"column_end":24},"kind":{"Impl":{"id":651}},"from":{"krate":0,"index":8442},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9502702,"byte_end":9502710,"line_start":336,"line_end":336,"column_start":6,"column_end":14},"kind":{"Impl":{"id":652}},"from":{"krate":0,"index":8454},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9503220,"byte_end":9503228,"line_start":352,"line_end":352,"column_start":17,"column_end":25},"kind":{"Impl":{"id":653}},"from":{"krate":0,"index":8454},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9508058,"byte_end":9508066,"line_start":474,"line_end":474,"column_start":15,"column_end":23},"kind":{"Impl":{"id":654}},"from":{"krate":0,"index":8454},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/notify.rs","byte_start":9511024,"byte_end":9511030,"line_start":539,"line_end":539,"column_start":35,"column_end":41},"kind":{"Impl":{"id":655}},"from":{"krate":0,"index":8447},"to":{"krate":0,"index":788}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9512906,"byte_end":9512915,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"kind":{"Impl":{"id":656}},"from":{"krate":0,"index":8483},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9513077,"byte_end":9513086,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"kind":{"Impl":{"id":657}},"from":{"krate":0,"index":8483},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9513155,"byte_end":9513167,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"kind":{"Impl":{"id":658}},"from":{"krate":0,"index":8495},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9513466,"byte_end":9513478,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"kind":{"Impl":{"id":659}},"from":{"krate":0,"index":8495},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9515289,"byte_end":9515295,"line_start":143,"line_end":143,"column_start":9,"column_end":15},"kind":{"Impl":{"id":660}},"from":{"krate":0,"index":8471},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9521596,"byte_end":9521602,"line_start":357,"line_end":357,"column_start":18,"column_end":24},"kind":{"Impl":{"id":661}},"from":{"krate":0,"index":8471},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9521741,"byte_end":9521749,"line_start":365,"line_end":365,"column_start":9,"column_end":17},"kind":{"Impl":{"id":662}},"from":{"krate":0,"index":8477},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9526140,"byte_end":9526148,"line_start":514,"line_end":514,"column_start":18,"column_end":26},"kind":{"Impl":{"id":663}},"from":{"krate":0,"index":8477},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9526295,"byte_end":9526303,"line_start":522,"line_end":522,"column_start":20,"column_end":28},"kind":{"Impl":{"id":664}},"from":{"krate":0,"index":8477},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9526766,"byte_end":9526771,"line_start":538,"line_end":538,"column_start":9,"column_end":14},"kind":{"Impl":{"id":665}},"from":{"krate":0,"index":7710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9531143,"byte_end":9531148,"line_start":684,"line_end":684,"column_start":31,"column_end":36},"kind":{"Impl":{"id":666}},"from":{"krate":0,"index":7710},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9531185,"byte_end":9531190,"line_start":685,"line_end":685,"column_start":31,"column_end":36},"kind":{"Impl":{"id":667}},"from":{"krate":0,"index":7710},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9531215,"byte_end":9531220,"line_start":687,"line_end":687,"column_start":18,"column_end":23},"kind":{"Impl":{"id":668}},"from":{"krate":0,"index":7710},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9531589,"byte_end":9531594,"line_start":705,"line_end":705,"column_start":36,"column_end":41},"kind":{"Impl":{"id":669}},"from":{"krate":0,"index":7710},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9531989,"byte_end":9531994,"line_start":720,"line_end":720,"column_start":6,"column_end":11},"kind":{"Impl":{"id":670}},"from":{"krate":0,"index":8508},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/oneshot.rs","byte_start":9533707,"byte_end":9533712,"line_start":786,"line_end":786,"column_start":21,"column_end":26},"kind":{"Impl":{"id":671}},"from":{"krate":0,"index":8508},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/batch_semaphore.rs","byte_start":9537190,"byte_end":9537199,"line_start":93,"line_end":93,"column_start":6,"column_end":15},"kind":{"Impl":{"id":672}},"from":{"krate":0,"index":7823},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/batch_semaphore.rs","byte_start":9547120,"byte_end":9547129,"line_start":357,"line_end":357,"column_start":21,"column_end":30},"kind":{"Impl":{"id":673}},"from":{"krate":0,"index":7823},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/batch_semaphore.rs","byte_start":9547330,"byte_end":9547336,"line_start":365,"line_end":365,"column_start":6,"column_end":12},"kind":{"Impl":{"id":674}},"from":{"krate":0,"index":7835},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/batch_semaphore.rs","byte_start":9548202,"byte_end":9548209,"line_start":394,"line_end":394,"column_start":17,"column_end":24},"kind":{"Impl":{"id":675}},"from":{"krate":0,"index":7829},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/batch_semaphore.rs","byte_start":9548887,"byte_end":9548894,"line_start":418,"line_end":418,"column_start":10,"column_end":17},"kind":{"Impl":{"id":676}},"from":{"krate":0,"index":7829},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/batch_semaphore.rs","byte_start":9549693,"byte_end":9549700,"line_start":448,"line_end":448,"column_start":15,"column_end":22},"kind":{"Impl":{"id":677}},"from":{"krate":0,"index":7829},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/batch_semaphore.rs","byte_start":9551342,"byte_end":9551349,"line_start":485,"line_end":485,"column_start":22,"column_end":29},"kind":{"Impl":{"id":678}},"from":{"krate":0,"index":7829},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/batch_semaphore.rs","byte_start":9551396,"byte_end":9551408,"line_start":489,"line_end":489,"column_start":6,"column_end":18},"kind":{"Impl":{"id":679}},"from":{"krate":0,"index":8521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/batch_semaphore.rs","byte_start":9551501,"byte_end":9551513,"line_start":495,"line_end":495,"column_start":23,"column_end":35},"kind":{"Impl":{"id":680}},"from":{"krate":0,"index":8521},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/batch_semaphore.rs","byte_start":9551657,"byte_end":9551669,"line_start":501,"line_end":501,"column_start":28,"column_end":40},"kind":{"Impl":{"id":681}},"from":{"krate":0,"index":8521},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/batch_semaphore.rs","byte_start":9551716,"byte_end":9551731,"line_start":505,"line_end":505,"column_start":6,"column_end":21},"kind":{"Impl":{"id":682}},"from":{"krate":0,"index":8514},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/batch_semaphore.rs","byte_start":9552353,"byte_end":9552368,"line_start":526,"line_end":526,"column_start":23,"column_end":38},"kind":{"Impl":{"id":683}},"from":{"krate":0,"index":8514},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/batch_semaphore.rs","byte_start":9552654,"byte_end":9552669,"line_start":535,"line_end":535,"column_start":28,"column_end":43},"kind":{"Impl":{"id":684}},"from":{"krate":0,"index":8514},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/batch_semaphore.rs","byte_start":9552762,"byte_end":9552768,"line_start":540,"line_end":540,"column_start":35,"column_end":41},"kind":{"Impl":{"id":685}},"from":{"krate":0,"index":7835},"to":{"krate":0,"index":788}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore_ll.rs","byte_start":9558037,"byte_end":9558046,"line_start":151,"line_end":151,"column_start":6,"column_end":15},"kind":{"Impl":{"id":686}},"from":{"krate":0,"index":7917},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore_ll.rs","byte_start":9574240,"byte_end":9574249,"line_start":578,"line_end":578,"column_start":15,"column_end":24},"kind":{"Impl":{"id":687}},"from":{"krate":0,"index":7917},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore_ll.rs","byte_start":9574328,"byte_end":9574337,"line_start":584,"line_end":584,"column_start":21,"column_end":30},"kind":{"Impl":{"id":688}},"from":{"krate":0,"index":7917},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore_ll.rs","byte_start":9574715,"byte_end":9574724,"line_start":595,"line_end":595,"column_start":22,"column_end":31},"kind":{"Impl":{"id":689}},"from":{"krate":0,"index":7917},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore_ll.rs","byte_start":9574749,"byte_end":9574758,"line_start":596,"line_end":596,"column_start":22,"column_end":31},"kind":{"Impl":{"id":690}},"from":{"krate":0,"index":7917},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore_ll.rs","byte_start":9574796,"byte_end":9574802,"line_start":600,"line_end":600,"column_start":6,"column_end":12},"kind":{"Impl":{"id":691}},"from":{"krate":0,"index":8526},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore_ll.rs","byte_start":9581208,"byte_end":9581214,"line_start":793,"line_end":793,"column_start":18,"column_end":24},"kind":{"Impl":{"id":692}},"from":{"krate":0,"index":8526},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore_ll.rs","byte_start":9581287,"byte_end":9581293,"line_start":799,"line_end":799,"column_start":15,"column_end":21},"kind":{"Impl":{"id":693}},"from":{"krate":0,"index":8526},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore_ll.rs","byte_start":9581715,"byte_end":9581727,"line_start":815,"line_end":815,"column_start":6,"column_end":18},"kind":{"Impl":{"id":694}},"from":{"krate":0,"index":8531},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore_ll.rs","byte_start":9581907,"byte_end":9581919,"line_start":825,"line_end":825,"column_start":23,"column_end":35},"kind":{"Impl":{"id":695}},"from":{"krate":0,"index":8531},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore_ll.rs","byte_start":9582063,"byte_end":9582075,"line_start":831,"line_end":831,"column_start":28,"column_end":40},"kind":{"Impl":{"id":696}},"from":{"krate":0,"index":8531},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore_ll.rs","byte_start":9582122,"byte_end":9582137,"line_start":835,"line_end":835,"column_start":6,"column_end":21},"kind":{"Impl":{"id":697}},"from":{"krate":0,"index":8536},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore_ll.rs","byte_start":9582667,"byte_end":9582682,"line_start":854,"line_end":854,"column_start":23,"column_end":38},"kind":{"Impl":{"id":698}},"from":{"krate":0,"index":8536},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore_ll.rs","byte_start":9582968,"byte_end":9582983,"line_start":863,"line_end":863,"column_start":28,"column_end":43},"kind":{"Impl":{"id":699}},"from":{"krate":0,"index":8536},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore_ll.rs","byte_start":9583021,"byte_end":9583027,"line_start":867,"line_end":867,"column_start":6,"column_end":12},"kind":{"Impl":{"id":700}},"from":{"krate":0,"index":8543},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore_ll.rs","byte_start":9588514,"byte_end":9588522,"line_start":1038,"line_end":1038,"column_start":6,"column_end":14},"kind":{"Impl":{"id":701}},"from":{"krate":0,"index":8549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore_ll.rs","byte_start":9592185,"byte_end":9592193,"line_start":1176,"line_end":1176,"column_start":21,"column_end":29},"kind":{"Impl":{"id":702}},"from":{"krate":0,"index":8549},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore_ll.rs","byte_start":9592546,"byte_end":9592557,"line_start":1192,"line_end":1192,"column_start":6,"column_end":17},"kind":{"Impl":{"id":703}},"from":{"krate":0,"index":8567},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9595286,"byte_end":9595295,"line_start":69,"line_end":69,"column_start":6,"column_end":15},"kind":{"Impl":{"id":704}},"from":{"krate":0,"index":8575},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9597390,"byte_end":9597405,"line_start":138,"line_end":138,"column_start":10,"column_end":25},"kind":{"Impl":{"id":705}},"from":{"krate":0,"index":8579},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9597650,"byte_end":9597670,"line_start":147,"line_end":147,"column_start":6,"column_end":26},"kind":{"Impl":{"id":706}},"from":{"krate":0,"index":8586},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9597924,"byte_end":9597939,"line_start":156,"line_end":156,"column_start":19,"column_end":34},"kind":{"Impl":{"id":707}},"from":{"krate":0,"index":8579},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/semaphore.rs","byte_start":9598047,"byte_end":9598067,"line_start":162,"line_end":162,"column_start":15,"column_end":35},"kind":{"Impl":{"id":708}},"from":{"krate":0,"index":8586},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9601421,"byte_end":9601436,"line_start":96,"line_end":96,"column_start":13,"column_end":28},"kind":{"Impl":{"id":709}},"from":{"krate":0,"index":8067},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9604854,"byte_end":9604869,"line_start":201,"line_end":201,"column_start":36,"column_end":51},"kind":{"Impl":{"id":710}},"from":{"krate":0,"index":8067},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9605049,"byte_end":9605064,"line_start":210,"line_end":210,"column_start":38,"column_end":53},"kind":{"Impl":{"id":711}},"from":{"krate":0,"index":8067},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9605240,"byte_end":9605255,"line_start":219,"line_end":219,"column_start":30,"column_end":45},"kind":{"Impl":{"id":712}},"from":{"krate":0,"index":8067},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9605719,"byte_end":9605735,"line_start":239,"line_end":239,"column_start":21,"column_end":37},"kind":{"Impl":{"id":713}},"from":{"krate":0,"index":8094},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9609329,"byte_end":9609345,"line_start":349,"line_end":349,"column_start":36,"column_end":52},"kind":{"Impl":{"id":714}},"from":{"krate":0,"index":8094},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9609525,"byte_end":9609541,"line_start":358,"line_end":358,"column_start":38,"column_end":54},"kind":{"Impl":{"id":715}},"from":{"krate":0,"index":8094},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9609717,"byte_end":9609733,"line_start":367,"line_end":367,"column_start":30,"column_end":46},"kind":{"Impl":{"id":716}},"from":{"krate":0,"index":8094},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9610809,"byte_end":9610815,"line_start":402,"line_end":402,"column_start":25,"column_end":31},"kind":{"Impl":{"id":717}},"from":{"krate":0,"index":8596},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9610869,"byte_end":9610875,"line_start":403,"line_end":403,"column_start":25,"column_end":31},"kind":{"Impl":{"id":718}},"from":{"krate":0,"index":8596},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9611109,"byte_end":9611124,"line_start":407,"line_end":407,"column_start":25,"column_end":40},"kind":{"Impl":{"id":719}},"from":{"krate":0,"index":8067},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9611182,"byte_end":9611197,"line_start":408,"line_end":408,"column_start":25,"column_end":40},"kind":{"Impl":{"id":720}},"from":{"krate":0,"index":8067},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9611262,"byte_end":9611278,"line_start":409,"line_end":409,"column_start":25,"column_end":41},"kind":{"Impl":{"id":721}},"from":{"krate":0,"index":8094},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9611591,"byte_end":9611607,"line_start":414,"line_end":414,"column_start":25,"column_end":41},"kind":{"Impl":{"id":722}},"from":{"krate":0,"index":8094},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9611665,"byte_end":9611671,"line_start":416,"line_end":416,"column_start":17,"column_end":23},"kind":{"Impl":{"id":723}},"from":{"krate":0,"index":8596},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9614859,"byte_end":9614874,"line_start":524,"line_end":524,"column_start":32,"column_end":47},"kind":{"Impl":{"id":724}},"from":{"krate":0,"index":8067},"to":{"krate":2,"index":2231}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9615005,"byte_end":9615021,"line_start":532,"line_end":532,"column_start":32,"column_end":48},"kind":{"Impl":{"id":725}},"from":{"krate":0,"index":8094},"to":{"krate":2,"index":2231}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9615155,"byte_end":9615171,"line_start":540,"line_end":540,"column_start":35,"column_end":51},"kind":{"Impl":{"id":726}},"from":{"krate":0,"index":8094},"to":{"krate":2,"index":2244}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9615285,"byte_end":9615291,"line_start":546,"line_end":546,"column_start":21,"column_end":27},"kind":{"Impl":{"id":727}},"from":{"krate":0,"index":8596},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/rwlock.rs","byte_start":9615383,"byte_end":9615389,"line_start":552,"line_end":552,"column_start":29,"column_end":35},"kind":{"Impl":{"id":728}},"from":{"krate":0,"index":8596},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/task/atomic_waker.rs","byte_start":9621664,"byte_end":9621675,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"kind":{"Impl":{"id":729}},"from":{"krate":0,"index":8178},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/task/atomic_waker.rs","byte_start":9627602,"byte_end":9627613,"line_start":280,"line_end":280,"column_start":18,"column_end":29},"kind":{"Impl":{"id":730}},"from":{"krate":0,"index":8178},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/task/atomic_waker.rs","byte_start":9627699,"byte_end":9627710,"line_start":286,"line_end":286,"column_start":21,"column_end":32},"kind":{"Impl":{"id":731}},"from":{"krate":0,"index":8178},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/task/atomic_waker.rs","byte_start":9627843,"byte_end":9627854,"line_start":292,"line_end":292,"column_start":22,"column_end":33},"kind":{"Impl":{"id":732}},"from":{"krate":0,"index":8178},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/task/atomic_waker.rs","byte_start":9627879,"byte_end":9627890,"line_start":293,"line_end":293,"column_start":22,"column_end":33},"kind":{"Impl":{"id":733}},"from":{"krate":0,"index":8178},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/task/atomic_waker.rs","byte_start":9627986,"byte_end":9627991,"line_start":300,"line_end":300,"column_start":19,"column_end":24},"kind":{"Impl":{"id":734}},"from":{"krate":2,"index":9238},"to":{"krate":0,"index":8201}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9631532,"byte_end":9631541,"line_start":108,"line_end":108,"column_start":42,"column_end":51},"kind":{"Impl":{"id":735}},"from":{"krate":0,"index":8624},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9631721,"byte_end":9631730,"line_start":114,"line_end":114,"column_start":47,"column_end":56},"kind":{"Impl":{"id":736}},"from":{"krate":0,"index":8624},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9633889,"byte_end":9633897,"line_start":204,"line_end":204,"column_start":9,"column_end":17},"kind":{"Impl":{"id":737}},"from":{"krate":0,"index":8603},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9635169,"byte_end":9635177,"line_start":248,"line_end":248,"column_start":16,"column_end":24},"kind":{"Impl":{"id":738}},"from":{"krate":0,"index":8603},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9636543,"byte_end":9636551,"line_start":292,"line_end":292,"column_start":42,"column_end":50},"kind":{"Impl":{"id":739}},"from":{"krate":0,"index":8603},"to":{"krate":19,"index":68}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9636810,"byte_end":9636818,"line_start":302,"line_end":302,"column_start":19,"column_end":27},"kind":{"Impl":{"id":740}},"from":{"krate":0,"index":8603},"to":{"krate":2,"index":1732}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9637121,"byte_end":9637129,"line_start":314,"line_end":314,"column_start":18,"column_end":26},"kind":{"Impl":{"id":741}},"from":{"krate":0,"index":8603},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9637243,"byte_end":9637249,"line_start":320,"line_end":320,"column_start":9,"column_end":15},"kind":{"Impl":{"id":742}},"from":{"krate":0,"index":8610},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9638784,"byte_end":9638790,"line_start":373,"line_end":373,"column_start":18,"column_end":24},"kind":{"Impl":{"id":743}},"from":{"krate":0,"index":8610},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9639029,"byte_end":9639032,"line_start":384,"line_end":384,"column_start":24,"column_end":27},"kind":{"Impl":{"id":744}},"from":{"krate":0,"index":8616},"to":{"krate":2,"index":2231}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9639173,"byte_end":9639179,"line_start":394,"line_end":394,"column_start":18,"column_end":24},"kind":{"Impl":{"id":745}},"from":{"krate":0,"index":8630},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9639281,"byte_end":9639288,"line_start":402,"line_end":402,"column_start":6,"column_end":13},"kind":{"Impl":{"id":746}},"from":{"krate":0,"index":8639},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9639511,"byte_end":9639518,"line_start":411,"line_end":411,"column_start":30,"column_end":37},"kind":{"Impl":{"id":747}},"from":{"krate":0,"index":8639},"to":{"krate":2,"index":1760}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9639635,"byte_end":9639642,"line_start":417,"line_end":417,"column_start":23,"column_end":30},"kind":{"Impl":{"id":748}},"from":{"krate":0,"index":8639},"to":{"krate":2,"index":1765}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9639672,"byte_end":9639679,"line_start":419,"line_end":419,"column_start":26,"column_end":33},"kind":{"Impl":{"id":749}},"from":{"krate":0,"index":8639},"to":{"krate":2,"index":6743}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/sync/watch.rs","byte_start":9639826,"byte_end":9639833,"line_start":425,"line_end":425,"column_start":26,"column_end":33},"kind":{"Impl":{"id":750}},"from":{"krate":0,"index":8639},"to":{"krate":2,"index":2231}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/yield_now.rs","byte_start":9658644,"byte_end":9658652,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"kind":{"Impl":{"id":751}},"from":{"krate":0,"index":8683},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9665784,"byte_end":9665792,"line_start":221,"line_end":221,"column_start":6,"column_end":14},"kind":{"Impl":{"id":752}},"from":{"krate":0,"index":8831},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9673634,"byte_end":9673642,"line_start":446,"line_end":446,"column_start":21,"column_end":29},"kind":{"Impl":{"id":753}},"from":{"krate":0,"index":8831},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9673781,"byte_end":9673789,"line_start":452,"line_end":452,"column_start":17,"column_end":25},"kind":{"Impl":{"id":754}},"from":{"krate":0,"index":8831},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9674754,"byte_end":9674762,"line_start":476,"line_end":476,"column_start":18,"column_end":26},"kind":{"Impl":{"id":755}},"from":{"krate":0,"index":8831},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9674843,"byte_end":9674851,"line_start":482,"line_end":482,"column_start":15,"column_end":23},"kind":{"Impl":{"id":756}},"from":{"krate":0,"index":8831},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9675718,"byte_end":9675726,"line_start":512,"line_end":512,"column_start":28,"column_end":36},"kind":{"Impl":{"id":757}},"from":{"krate":0,"index":10034},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9676611,"byte_end":9676617,"line_start":543,"line_end":543,"column_start":6,"column_end":12},"kind":{"Impl":{"id":758}},"from":{"krate":0,"index":8714},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/local.rs","byte_start":9677180,"byte_end":9677183,"line_start":562,"line_end":562,"column_start":25,"column_end":28},"kind":{"Impl":{"id":759}},"from":{"krate":5,"index":4214},"to":{"krate":0,"index":5233}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9680598,"byte_end":9680606,"line_start":98,"line_end":98,"column_start":18,"column_end":26},"kind":{"Impl":{"id":760}},"from":{"krate":0,"index":8783},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9682382,"byte_end":9682390,"line_start":163,"line_end":163,"column_start":25,"column_end":33},"kind":{"Impl":{"id":761}},"from":{"krate":0,"index":8783},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9682598,"byte_end":9682606,"line_start":171,"line_end":171,"column_start":33,"column_end":41},"kind":{"Impl":{"id":762}},"from":{"krate":0,"index":8783},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9682927,"byte_end":9682942,"line_start":186,"line_end":186,"column_start":40,"column_end":55},"kind":{"Impl":{"id":763}},"from":{"krate":0,"index":9974},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9683243,"byte_end":9683248,"line_start":196,"line_end":196,"column_start":26,"column_end":31},"kind":{"Impl":{"id":764}},"from":{"krate":0,"index":8811},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9683866,"byte_end":9683867,"line_start":220,"line_end":220,"column_start":37,"column_end":38},"kind":{"Impl":{"id":765}},"from":{"krate":0,"index":8824},"to":{"krate":0,"index":8822}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9684052,"byte_end":9684063,"line_start":228,"line_end":228,"column_start":21,"column_end":32},"kind":{"Impl":{"id":766}},"from":{"krate":0,"index":8843},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9684207,"byte_end":9684218,"line_start":234,"line_end":234,"column_start":23,"column_end":34},"kind":{"Impl":{"id":767}},"from":{"krate":0,"index":8843},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/task/task_local.rs","byte_start":9684365,"byte_end":9684376,"line_start":240,"line_end":240,"column_start":16,"column_end":27},"kind":{"Impl":{"id":768}},"from":{"krate":0,"index":8843},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/clock.rs","byte_start":9688961,"byte_end":9688966,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"kind":{"Impl":{"id":769}},"from":{"krate":0,"index":9343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9699564,"byte_end":9699574,"line_start":205,"line_end":205,"column_start":9,"column_end":19},"kind":{"Impl":{"id":770}},"from":{"krate":0,"index":9348},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9717568,"byte_end":9717578,"line_start":759,"line_end":759,"column_start":19,"column_end":29},"kind":{"Impl":{"id":771}},"from":{"krate":0,"index":9348},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9717606,"byte_end":9717616,"line_start":761,"line_end":761,"column_start":21,"column_end":31},"kind":{"Impl":{"id":772}},"from":{"krate":0,"index":9348},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9717753,"byte_end":9717763,"line_start":768,"line_end":768,"column_start":34,"column_end":44},"kind":{"Impl":{"id":773}},"from":{"krate":0,"index":9348},"to":{"krate":19,"index":68}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9718145,"byte_end":9718150,"line_start":778,"line_end":778,"column_start":26,"column_end":31},"kind":{"Impl":{"id":774}},"from":{"krate":0,"index":9373},"to":{"krate":0,"index":9292}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9720277,"byte_end":9720282,"line_start":860,"line_end":860,"column_start":21,"column_end":26},"kind":{"Impl":{"id":775}},"from":{"krate":0,"index":9373},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9720412,"byte_end":9720415,"line_start":869,"line_end":869,"column_start":6,"column_end":9},"kind":{"Impl":{"id":776}},"from":{"krate":0,"index":9367},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay_queue.rs","byte_start":9720502,"byte_end":9720509,"line_start":875,"line_end":875,"column_start":9,"column_end":16},"kind":{"Impl":{"id":777}},"from":{"krate":0,"index":9359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9723047,"byte_end":9723052,"line_start":70,"line_end":70,"column_start":6,"column_end":11},"kind":{"Impl":{"id":778}},"from":{"krate":0,"index":9390},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/delay.rs","byte_start":9724030,"byte_end":9724035,"line_start":100,"line_end":100,"column_start":17,"column_end":22},"kind":{"Impl":{"id":779}},"from":{"krate":0,"index":9390},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/driver/atomic_stack.rs","byte_start":9737705,"byte_end":9737716,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"kind":{"Impl":{"id":780}},"from":{"krate":0,"index":9394},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/driver/atomic_stack.rs","byte_start":9739694,"byte_end":9739712,"line_start":94,"line_end":94,"column_start":19,"column_end":37},"kind":{"Impl":{"id":781}},"from":{"krate":0,"index":9398},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/driver/atomic_stack.rs","byte_start":9740308,"byte_end":9740326,"line_start":117,"line_end":117,"column_start":15,"column_end":33},"kind":{"Impl":{"id":782}},"from":{"krate":0,"index":9398},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/driver/entry.rs","byte_start":9744564,"byte_end":9744569,"line_start":112,"line_end":112,"column_start":6,"column_end":11},"kind":{"Impl":{"id":783}},"from":{"krate":0,"index":9402},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/driver/entry.rs","byte_start":9751237,"byte_end":9751242,"line_start":341,"line_end":341,"column_start":15,"column_end":20},"kind":{"Impl":{"id":784}},"from":{"krate":0,"index":9402},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/driver/entry.rs","byte_start":9751450,"byte_end":9751455,"line_start":352,"line_end":352,"column_start":22,"column_end":27},"kind":{"Impl":{"id":785}},"from":{"krate":0,"index":9402},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/driver/entry.rs","byte_start":9751480,"byte_end":9751485,"line_start":353,"line_end":353,"column_start":22,"column_end":27},"kind":{"Impl":{"id":786}},"from":{"krate":0,"index":9402},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/driver/handle.rs","byte_start":9751862,"byte_end":9751868,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"kind":{"Impl":{"id":787}},"from":{"krate":0,"index":9427},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/driver/handle.rs","byte_start":9752513,"byte_end":9752519,"line_start":34,"line_end":34,"column_start":21,"column_end":27},"kind":{"Impl":{"id":788}},"from":{"krate":0,"index":9427},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/driver/registration.rs","byte_start":9752964,"byte_end":9752976,"line_start":16,"line_end":16,"column_start":6,"column_end":18},"kind":{"Impl":{"id":789}},"from":{"krate":0,"index":9431},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/driver/registration.rs","byte_start":9753886,"byte_end":9753898,"line_start":52,"line_end":52,"column_start":15,"column_end":27},"kind":{"Impl":{"id":790}},"from":{"krate":0,"index":9431},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/driver/stack.rs","byte_start":9754182,"byte_end":9754187,"line_start":13,"line_end":13,"column_start":18,"column_end":23},"kind":{"Impl":{"id":791}},"from":{"krate":0,"index":9435},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/driver/stack.rs","byte_start":9754278,"byte_end":9754283,"line_start":19,"line_end":19,"column_start":23,"column_end":28},"kind":{"Impl":{"id":792}},"from":{"krate":0,"index":9435},"to":{"krate":0,"index":9292}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/driver/mod.rs","byte_start":9729000,"byte_end":9729006,"line_start":125,"line_end":125,"column_start":9,"column_end":15},"kind":{"Impl":{"id":793}},"from":{"krate":0,"index":9439},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/driver/mod.rs","byte_start":9732703,"byte_end":9732709,"line_start":238,"line_end":238,"column_start":18,"column_end":24},"kind":{"Impl":{"id":794}},"from":{"krate":0,"index":9439},"to":{"krate":0,"index":551}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/driver/mod.rs","byte_start":9735282,"byte_end":9735288,"line_start":335,"line_end":335,"column_start":18,"column_end":24},"kind":{"Impl":{"id":795}},"from":{"krate":0,"index":9439},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/driver/mod.rs","byte_start":9735404,"byte_end":9735409,"line_start":346,"line_end":346,"column_start":6,"column_end":11},"kind":{"Impl":{"id":796}},"from":{"krate":0,"index":9102},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/driver/mod.rs","byte_start":9737026,"byte_end":9737031,"line_start":408,"line_end":408,"column_start":21,"column_end":26},"kind":{"Impl":{"id":797}},"from":{"krate":0,"index":9102},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/error.rs","byte_start":9758605,"byte_end":9758610,"line_start":35,"line_end":35,"column_start":6,"column_end":11},"kind":{"Impl":{"id":798}},"from":{"krate":0,"index":9449},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/error.rs","byte_start":9759977,"byte_end":9759982,"line_start":89,"line_end":89,"column_start":23,"column_end":28},"kind":{"Impl":{"id":799}},"from":{"krate":0,"index":9449},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/error.rs","byte_start":9760009,"byte_end":9760014,"line_start":91,"line_end":91,"column_start":23,"column_end":28},"kind":{"Impl":{"id":800}},"from":{"krate":0,"index":9449},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9760786,"byte_end":9760793,"line_start":14,"line_end":14,"column_start":6,"column_end":13},"kind":{"Impl":{"id":801}},"from":{"krate":0,"index":9469},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9764567,"byte_end":9764574,"line_start":129,"line_end":129,"column_start":35,"column_end":42},"kind":{"Impl":{"id":802}},"from":{"krate":0,"index":9469},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9764703,"byte_end":9764710,"line_start":135,"line_end":135,"column_start":35,"column_end":42},"kind":{"Impl":{"id":803}},"from":{"krate":1,"index":8166},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9764825,"byte_end":9764832,"line_start":141,"line_end":141,"column_start":29,"column_end":36},"kind":{"Impl":{"id":804}},"from":{"krate":0,"index":9469},"to":{"krate":2,"index":2099}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9764997,"byte_end":9765004,"line_start":149,"line_end":149,"column_start":35,"column_end":42},"kind":{"Impl":{"id":805}},"from":{"krate":0,"index":9469},"to":{"krate":2,"index":2130}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9765109,"byte_end":9765116,"line_start":155,"line_end":155,"column_start":19,"column_end":26},"kind":{"Impl":{"id":806}},"from":{"krate":0,"index":9469},"to":{"krate":2,"index":2104}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9765257,"byte_end":9765264,"line_start":163,"line_end":163,"column_start":29,"column_end":36},"kind":{"Impl":{"id":807}},"from":{"krate":0,"index":9469},"to":{"krate":2,"index":2104}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9765425,"byte_end":9765432,"line_start":171,"line_end":171,"column_start":35,"column_end":42},"kind":{"Impl":{"id":808}},"from":{"krate":0,"index":9469},"to":{"krate":2,"index":2134}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/instant.rs","byte_start":9765539,"byte_end":9765546,"line_start":177,"line_end":177,"column_start":21,"column_end":28},"kind":{"Impl":{"id":809}},"from":{"krate":0,"index":9469},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9769428,"byte_end":9769436,"line_start":124,"line_end":124,"column_start":6,"column_end":14},"kind":{"Impl":{"id":810}},"from":{"krate":0,"index":9492},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/interval.rs","byte_start":9770731,"byte_end":9770739,"line_start":169,"line_end":169,"column_start":32,"column_end":40},"kind":{"Impl":{"id":811}},"from":{"krate":0,"index":9492},"to":{"krate":19,"index":68}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9774071,"byte_end":9774078,"line_start":119,"line_end":119,"column_start":6,"column_end":13},"kind":{"Impl":{"id":812}},"from":{"krate":0,"index":9497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9774207,"byte_end":9774214,"line_start":127,"line_end":127,"column_start":9,"column_end":16},"kind":{"Impl":{"id":813}},"from":{"krate":0,"index":9943},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9774752,"byte_end":9774759,"line_start":148,"line_end":148,"column_start":20,"column_end":27},"kind":{"Impl":{"id":814}},"from":{"krate":0,"index":9943},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9775337,"byte_end":9775344,"line_start":172,"line_end":172,"column_start":23,"column_end":30},"kind":{"Impl":{"id":815}},"from":{"krate":0,"index":9497},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9775488,"byte_end":9775495,"line_start":178,"line_end":178,"column_start":28,"column_end":35},"kind":{"Impl":{"id":816}},"from":{"krate":0,"index":9497},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/timeout.rs","byte_start":9775532,"byte_end":9775537,"line_start":180,"line_end":180,"column_start":33,"column_end":38},"kind":{"Impl":{"id":817}},"from":{"krate":1,"index":2659},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/throttle.rs","byte_start":9793677,"byte_end":9793685,"line_start":70,"line_end":70,"column_start":16,"column_end":24},"kind":{"Impl":{"id":818}},"from":{"krate":0,"index":9895},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/throttle.rs","byte_start":9794500,"byte_end":9794508,"line_start":95,"line_end":95,"column_start":28,"column_end":36},"kind":{"Impl":{"id":819}},"from":{"krate":0,"index":9895},"to":{"krate":19,"index":68}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/wheel/level.rs","byte_start":9785441,"byte_end":9785446,"line_start":40,"line_end":40,"column_start":16,"column_end":21},"kind":{"Impl":{"id":820}},"from":{"krate":0,"index":9265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/wheel/level.rs","byte_start":9790198,"byte_end":9790203,"line_start":211,"line_end":211,"column_start":24,"column_end":29},"kind":{"Impl":{"id":821}},"from":{"krate":0,"index":9265},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/wheel/stack.rs","byte_start":9791319,"byte_end":9791326,"line_start":4,"line_end":4,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2022},"to":{"krate":0,"index":9292}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/wheel/mod.rs","byte_start":9777262,"byte_end":9777267,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"kind":{"Impl":{"id":822}},"from":{"krate":0,"index":9539},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/time/wheel/mod.rs","byte_start":9782975,"byte_end":9782979,"line_start":254,"line_end":254,"column_start":6,"column_end":10},"kind":{"Impl":{"id":823}},"from":{"krate":0,"index":9553},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/bit.rs","byte_start":9795341,"byte_end":9795345,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"kind":{"Impl":{"id":824}},"from":{"krate":0,"index":9747},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/bit.rs","byte_start":9796819,"byte_end":9796823,"line_start":61,"line_end":61,"column_start":21,"column_end":25},"kind":{"Impl":{"id":825}},"from":{"krate":0,"index":9747},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/slab/addr.rs","byte_start":9804042,"byte_end":9804049,"line_start":76,"line_end":76,"column_start":6,"column_end":13},"kind":{"Impl":{"id":826}},"from":{"krate":0,"index":9753},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/slab/entry.rs","byte_start":9806684,"byte_end":9806691,"line_start":3,"line_end":3,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2022},"to":{"krate":0,"index":9602}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/slab/generation.rs","byte_start":9807078,"byte_end":9807088,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"kind":{"Impl":{"id":827}},"from":{"krate":0,"index":9768},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/slab/page.rs","byte_start":9808227,"byte_end":9808232,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"kind":{"Impl":{"id":828}},"from":{"krate":0,"index":9625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/slab/page.rs","byte_start":9808574,"byte_end":9808580,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"kind":{"Impl":{"id":829}},"from":{"krate":0,"index":9627},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/slab/page.rs","byte_start":9812532,"byte_end":9812537,"line_start":167,"line_end":167,"column_start":21,"column_end":26},"kind":{"Impl":{"id":830}},"from":{"krate":0,"index":9625},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/slab/page.rs","byte_start":9812843,"byte_end":9812849,"line_start":178,"line_end":178,"column_start":24,"column_end":30},"kind":{"Impl":{"id":831}},"from":{"krate":0,"index":9627},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/slab/shard.rs","byte_start":9814992,"byte_end":9814997,"line_start":38,"line_end":38,"column_start":16,"column_end":21},"kind":{"Impl":{"id":832}},"from":{"krate":0,"index":9671},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/slab/shard.rs","byte_start":9816676,"byte_end":9816681,"line_start":99,"line_end":99,"column_start":24,"column_end":29},"kind":{"Impl":{"id":833}},"from":{"krate":0,"index":9671},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/slab/slot.rs","byte_start":9817058,"byte_end":9817062,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"kind":{"Impl":{"id":834}},"from":{"krate":0,"index":9694},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/slab/stack.rs","byte_start":9818033,"byte_end":9818046,"line_start":12,"line_end":12,"column_start":6,"column_end":19},"kind":{"Impl":{"id":835}},"from":{"krate":0,"index":9715},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/slab/stack.rs","byte_start":9818874,"byte_end":9818887,"line_start":47,"line_end":47,"column_start":21,"column_end":34},"kind":{"Impl":{"id":836}},"from":{"krate":0,"index":9715},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/slab/mod.rs","byte_start":9798421,"byte_end":9798425,"line_start":56,"line_end":56,"column_start":31,"column_end":35},"kind":{"Impl":{"id":837}},"from":{"krate":0,"index":9730},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/slab/mod.rs","byte_start":9798462,"byte_end":9798466,"line_start":57,"line_end":57,"column_start":31,"column_end":35},"kind":{"Impl":{"id":838}},"from":{"krate":0,"index":9730},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/slab/mod.rs","byte_start":9798489,"byte_end":9798493,"line_start":59,"line_end":59,"column_start":16,"column_end":20},"kind":{"Impl":{"id":839}},"from":{"krate":0,"index":9730},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/slab/mod.rs","byte_start":9800008,"byte_end":9800012,"line_start":103,"line_end":103,"column_start":24,"column_end":28},"kind":{"Impl":{"id":840}},"from":{"krate":0,"index":9730},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/linked_list.rs","byte_start":181548,"byte_end":181558,"line_start":23,"line_end":23,"column_start":31,"column_end":41},"kind":{"Impl":{"id":841}},"from":{"krate":0,"index":780},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/linked_list.rs","byte_start":181617,"byte_end":181627,"line_start":24,"line_end":24,"column_start":31,"column_end":41},"kind":{"Impl":{"id":842}},"from":{"krate":0,"index":780},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/linked_list.rs","byte_start":182916,"byte_end":182924,"line_start":64,"line_end":64,"column_start":31,"column_end":39},"kind":{"Impl":{"id":843}},"from":{"krate":0,"index":794},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/linked_list.rs","byte_start":182961,"byte_end":182969,"line_start":65,"line_end":65,"column_start":31,"column_end":39},"kind":{"Impl":{"id":844}},"from":{"krate":0,"index":794},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/linked_list.rs","byte_start":183023,"byte_end":183033,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"kind":{"Impl":{"id":845}},"from":{"krate":0,"index":780},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/linked_list.rs","byte_start":186037,"byte_end":186047,"line_start":167,"line_end":167,"column_start":30,"column_end":40},"kind":{"Impl":{"id":846}},"from":{"krate":0,"index":780},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/linked_list.rs","byte_start":186292,"byte_end":186302,"line_start":177,"line_end":177,"column_start":19,"column_end":29},"kind":{"Impl":{"id":847}},"from":{"krate":0,"index":780},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/linked_list.rs","byte_start":186702,"byte_end":186712,"line_start":195,"line_end":195,"column_start":19,"column_end":29},"kind":{"Impl":{"id":848}},"from":{"krate":0,"index":780},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/linked_list.rs","byte_start":186934,"byte_end":186938,"line_start":204,"line_end":204,"column_start":36,"column_end":40},"kind":{"Impl":{"id":849}},"from":{"krate":0,"index":9796},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/linked_list.rs","byte_start":187385,"byte_end":187393,"line_start":220,"line_end":220,"column_start":9,"column_end":17},"kind":{"Impl":{"id":850}},"from":{"krate":0,"index":794},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/linked_list.rs","byte_start":187592,"byte_end":187600,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"kind":{"Impl":{"id":851}},"from":{"krate":0,"index":794},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/rand.rs","byte_start":197672,"byte_end":197680,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"Impl":{"id":852}},"from":{"krate":0,"index":9809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/wake.rs","byte_start":199220,"byte_end":199224,"line_start":8,"line_end":8,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2034},"to":{"krate":0,"index":835}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/wake.rs","byte_start":199227,"byte_end":199231,"line_start":8,"line_end":8,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2046},"to":{"krate":0,"index":835}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/wake.rs","byte_start":199542,"byte_end":199550,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"kind":{"Impl":{"id":853}},"from":{"krate":0,"index":9818},"to":{"krate":2,"index":2231}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/try_lock.rs","byte_start":9819699,"byte_end":9819706,"line_start":18,"line_end":18,"column_start":31,"column_end":38},"kind":{"Impl":{"id":854}},"from":{"krate":0,"index":9834},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/try_lock.rs","byte_start":9819743,"byte_end":9819750,"line_start":19,"line_end":19,"column_start":31,"column_end":38},"kind":{"Impl":{"id":855}},"from":{"krate":0,"index":9834},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/try_lock.rs","byte_start":9819788,"byte_end":9819797,"line_start":21,"line_end":21,"column_start":31,"column_end":40},"kind":{"Impl":{"id":856}},"from":{"krate":0,"index":9838},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/try_lock.rs","byte_start":9819983,"byte_end":9819990,"line_start":32,"line_end":32,"column_start":9,"column_end":16},"kind":{"Impl":{"id":857}},"from":{"krate":0,"index":9834},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/try_lock.rs","byte_start":9820624,"byte_end":9820633,"line_start":62,"line_end":62,"column_start":19,"column_end":28},"kind":{"Impl":{"id":858}},"from":{"krate":0,"index":9838},"to":{"krate":2,"index":2231}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/try_lock.rs","byte_start":9820765,"byte_end":9820774,"line_start":70,"line_end":70,"column_start":22,"column_end":31},"kind":{"Impl":{"id":859}},"from":{"krate":0,"index":9838},"to":{"krate":2,"index":2244}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/try_lock.rs","byte_start":9820896,"byte_end":9820905,"line_start":76,"line_end":76,"column_start":18,"column_end":27},"kind":{"Impl":{"id":860}},"from":{"krate":0,"index":9838},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/intrusive_double_linked_list.rs","byte_start":203516,"byte_end":203524,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"kind":{"Impl":{"id":861}},"from":{"krate":0,"index":9867},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/intrusive_double_linked_list.rs","byte_start":203774,"byte_end":203782,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"kind":{"Impl":{"id":862}},"from":{"krate":0,"index":9867},"to":{"krate":2,"index":2231}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/intrusive_double_linked_list.rs","byte_start":203887,"byte_end":203895,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"kind":{"Impl":{"id":863}},"from":{"krate":0,"index":9867},"to":{"krate":2,"index":2244}},{"span":{"file_name":"/Users/moriokawataru/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.24/src/util/intrusive_double_linked_list.rs","byte_start":204204,"byte_end":204214,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"kind":{"Impl":{"id":864}},"from":{"krate":0,"index":9876},"to":{"krate":4294967295,"index":4294967295}}]}