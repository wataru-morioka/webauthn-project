{"message":"unused imports: `Method`, `StatusCode`, `delete`, `post`, `put`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":31,"byte_end":35,"line_start":2,"line_end":2,"column_start":15,"column_end":19,"is_primary":true,"text":[{"text":"    web, get, post, delete, put, App, HttpRequest, HttpMessage, HttpResponse, HttpServer, Responder","highlight_start":15,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":37,"byte_end":43,"line_start":2,"line_end":2,"column_start":21,"column_end":27,"is_primary":true,"text":[{"text":"    web, get, post, delete, put, App, HttpRequest, HttpMessage, HttpResponse, HttpServer, Responder","highlight_start":21,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":45,"byte_end":48,"line_start":2,"line_end":2,"column_start":29,"column_end":32,"is_primary":true,"text":[{"text":"    web, get, post, delete, put, App, HttpRequest, HttpMessage, HttpResponse, HttpServer, Responder","highlight_start":29,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":130,"byte_end":140,"line_start":3,"line_end":3,"column_start":14,"column_end":24,"is_primary":true,"text":[{"text":"    , http::{StatusCode, Method, header, Cookie}","highlight_start":14,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":142,"byte_end":148,"line_start":3,"line_end":3,"column_start":26,"column_end":32,"is_primary":true,"text":[{"text":"    , http::{StatusCode, Method, header, Cookie}","highlight_start":26,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":29,"byte_end":48,"line_start":2,"line_end":2,"column_start":13,"column_end":32,"is_primary":true,"text":[{"text":"    web, get, post, delete, put, App, HttpRequest, HttpMessage, HttpResponse, HttpServer, Responder","highlight_start":13,"highlight_end":32}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/main.rs","byte_start":130,"byte_end":150,"line_start":3,"line_end":3,"column_start":14,"column_end":34,"is_primary":true,"text":[{"text":"    , http::{StatusCode, Method, header, Cookie}","highlight_start":14,"highlight_end":34}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Method`, `StatusCode`, `delete`, `post`, `put`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:2:15\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    web, get, post, delete, put, App, HttpRequest, HttpMessage, HttpResponse, HttpServer, Responder\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    , http::{StatusCode, Method, header, Cookie}\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unused import: `DeleteItemInput`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":579,"byte_end":594,"line_start":15,"line_end":15,"column_start":77,"column_end":92,"is_primary":true,"text":[{"text":"use rusoto_dynamodb::{DynamoDb, DynamoDbClient, GetItemInput, PutItemInput, DeleteItemInput, AttributeValue};","highlight_start":77,"highlight_end":92}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":577,"byte_end":594,"line_start":15,"line_end":15,"column_start":75,"column_end":92,"is_primary":true,"text":[{"text":"use rusoto_dynamodb::{DynamoDb, DynamoDbClient, GetItemInput, PutItemInput, DeleteItemInput, AttributeValue};","highlight_start":75,"highlight_end":92}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `DeleteItemInput`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:15:77\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse rusoto_dynamodb::{DynamoDb, DynamoDbClient, GetItemInput, PutItemInput, DeleteItemInput, AttributeValue};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"no method named `finalize` found for unit type `()` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1967,"byte_end":1975,"line_start":42,"line_end":42,"column_start":54,"column_end":62,"is_primary":true,"text":[{"text":"    let s256: [u8] = Sha256::new().update(&verifier).finalize();","highlight_start":54,"highlight_end":62}],"label":"method not found in `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the method `finalize` exists but the following trait bounds were not satisfied:\n`(): FixedOutput`\nwhich is required by `(): Digest`\n`(): sha2::digest::Update`\nwhich is required by `(): Digest`\n`(): Reset`\nwhich is required by `(): Digest`\n`&(): FixedOutput`\nwhich is required by `&(): Digest`\n`&(): sha2::digest::Update`\nwhich is required by `&(): Digest`\n`&(): Reset`\nwhich is required by `&(): Digest`\n`&(): Default`\nwhich is required by `&(): Digest`\n`&mut (): FixedOutput`\nwhich is required by `&mut (): Digest`\n`&mut (): sha2::digest::Update`\nwhich is required by `&mut (): Digest`\n`&mut (): Reset`\nwhich is required by `&mut (): Digest`\n`&mut (): Clone`\nwhich is required by `&mut (): Digest`\n`&mut (): Default`\nwhich is required by `&mut (): Digest`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no method named `finalize` found for unit type `()` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:42:54\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let s256: [u8] = Sha256::new().update(&verifier).finalize();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `()`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the method `finalize` exists but the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m           `(): FixedOutput`\u001b[0m\n\u001b[0m           which is required by `(): Digest`\u001b[0m\n\u001b[0m           `(): sha2::digest::Update`\u001b[0m\n\u001b[0m           which is required by `(): Digest`\u001b[0m\n\u001b[0m           `(): Reset`\u001b[0m\n\u001b[0m           which is required by `(): Digest`\u001b[0m\n\u001b[0m           `&(): FixedOutput`\u001b[0m\n\u001b[0m           which is required by `&(): Digest`\u001b[0m\n\u001b[0m           `&(): sha2::digest::Update`\u001b[0m\n\u001b[0m           which is required by `&(): Digest`\u001b[0m\n\u001b[0m           `&(): Reset`\u001b[0m\n\u001b[0m           which is required by `&(): Digest`\u001b[0m\n\u001b[0m           `&(): Default`\u001b[0m\n\u001b[0m           which is required by `&(): Digest`\u001b[0m\n\u001b[0m           `&mut (): FixedOutput`\u001b[0m\n\u001b[0m           which is required by `&mut (): Digest`\u001b[0m\n\u001b[0m           `&mut (): sha2::digest::Update`\u001b[0m\n\u001b[0m           which is required by `&mut (): Digest`\u001b[0m\n\u001b[0m           `&mut (): Reset`\u001b[0m\n\u001b[0m           which is required by `&mut (): Digest`\u001b[0m\n\u001b[0m           `&mut (): Clone`\u001b[0m\n\u001b[0m           which is required by `&mut (): Digest`\u001b[0m\n\u001b[0m           `&mut (): Default`\u001b[0m\n\u001b[0m           which is required by `&mut (): Digest`\u001b[0m\n\n"}
{"message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code example:\n\n```compile_fail,E0308\nlet x: i32 = \"I am not a number!\";\n//     ~~~   ~~~~~~~~~~~~~~~~~~~~\n//      |             |\n//      |    initializing expression;\n//      |    compiler infers type `&str`\n//      |\n//    type `i32` assigned to variable `x`\n```\n\nThis error occurs when the compiler is unable to infer the concrete type of a\nvariable. It can occur in several cases, the most common being a mismatch\nbetween two types: the type the author explicitly assigned, and the type the\ncompiler inferred.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2002,"byte_end":2006,"line_start":43,"line_end":43,"column_start":24,"column_end":28,"is_primary":true,"text":[{"text":"    base64_url::encode(s256)","highlight_start":24,"highlight_end":28}],"label":"expected reference, found slice `[u8]`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected reference `&_`\n       found slice `[u8]`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider borrowing here","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":2002,"byte_end":2006,"line_start":43,"line_end":43,"column_start":24,"column_end":28,"is_primary":true,"text":[{"text":"    base64_url::encode(s256)","highlight_start":24,"highlight_end":28}],"label":null,"suggested_replacement":"&s256","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:43:24\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m43\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    base64_url::encode(s256)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected reference, found slice `[u8]`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: consider borrowing here: `&s256`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected reference `\u001b[0m\u001b[0m\u001b[1m&_\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m                  found slice `\u001b[0m\u001b[0m\u001b[1m[u8]\u001b[0m\u001b[0m`\u001b[0m\n\n"}
{"message":"aborting due to 2 previous errors; 2 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 2 previous errors; 2 warnings emitted\u001b[0m\n\n"}
{"message":"Some errors have detailed explanations: E0308, E0599.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0308, E0599.\u001b[0m\n"}
{"message":"For more information about an error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0308`.\u001b[0m\n"}
